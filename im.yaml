openapi: 3.0.2
info:
  title: iManage Work Universal (REST v2) API Reference Guide
  x-logo:
    url: logo.svg
    backgroundColor: #fafafa
    altText: iManage
  description: |+
    The iManage Work Universal API (REST v2) uses the HTTPS protocol to securely perform operations on documents, containers, trustees, apps and more in iManage Work and related products.

    # iManage DevSupport

    iManage DevSupport provides assistance for inquiries and troubleshooting issues related to the iManage Universal API. This service is available to licensed SDK customers and certified iManage partners. The license holders can submit DevSupport cases through iManage Help Center or by email. iManage DevSupport does not provide consultative or application design services. For more information, visit the [DevSupport](https://help.imanage.com/hc/en-us/categories/115000817007-DevSupport) page in iManage Help Center.
      
    To contact DevSupport, email us at: devsupport@imanage.com

    # Additional resources
    Refer to the following iManage Help Center articles for additional procedures and information about the iManage Work Universal (REST v2) API.

    * [Quick Start with iManage Work API](https://help.imanage.com/hc/en-us/community/posts/4410566013979-Quick-Start-with-the-iManage-Work-API)
    * [App registration – Obtaining client_id and client_secret](https://help.imanage.com/hc/en-us/community/posts/4410596553243-App-registration-Obtaining-client-id-and-client-secret)
    * [My API script doesn't work on iManage Cloud on Azure, help?](https://help.imanage.com/hc/en-us/community/posts/4410606763035-My-API-script-doesn-t-work-on-iManage-Cloud-on-Azure-help-)


    # Key concepts
    This section provides information about the key iManage Work concepts required to understand and to efficiently work on iManage Work API requests.

    ## Differences between GET and POST search
    There are both GET and POST versions of certain searches. Consider the following aspects of each to identify the version to be used:

    GET:
    * GET endpoints are simpler and easier to implement.
    * Some GET endpoints return facets that provide certain criteria to users to refine their search results.
      Facets list the most relevant five properties of iManage Work objects, which provide users with the option to narrow results
      by several dimensions simultaneously.
      For example, a document search can return the `custom1` facet.
      It returns the aggregated result of documents based on the five most logical and relevant custom1 aliases.
      Facets can be used to anticipate user selections, or to present a list of suggestions that the user will likely select.
      For example, frequent custom1 aliases can be added at the top of a selection list, so that users do not have to scroll through the entire list.

    POST:
    * Use POST if you are making a series of searches, or require many search filters. In this scenario, POST is preferred over GET, as it is quicker and less stressful for the iManage Work system.
    * POST allows a greater number of search filters through several available mechanisms:
      * Query parameters 
      * The `filter` parameter
      * A greater number of items for each filter. For example, <a href="#post-/work/api/v2/customers/-customerId-/users/search">POST /work/api/v2/customers/{customerId}/users/search</a> accepts an array with many user IDs. By contrast, <a href="#get-/work/api/v2/customers/-customerId-/users">GET /work/api/v2/customers/{customerId}/users</a> is restricted to the request character limit of the endpoint.
    * Some endpoints support selecting which fields to return using the `profile_fields` request parameter.
      Returning specific fields can make parsing the response easier, and is less stressful for the iManage Work system.

    ## External users
    External users are temporary team members, consultants, or those external to the organization.
    External users do not have default access to any container or document. They must be explicitly granted access
    for each container or document, including those marked as Public or View.

    ## Privileges
    A privilege is a permission to perform a set of tasks.<br>
    In iManage Work, the privileges available to users are classified under two main categories:

    * **Role privileges**<br>
      A role is a named set of privileges that can be assigned to users.
      There are two types of role privileges available:
      * **Global-level** - For more information, see <a href="#tag--Global-Roles">Global Roles</a>.
      * **Library-level** - For more information, see <a href="#tag--Library-Roles">Library Roles</a>.

    * **Object-level privileges**<br>
      Object-level privileges are access levels users and groups have on containers and documents.
      The access levels are set by the owner of the object or a user having full access privileges on the object.

      The available object-level access levels are listed below:

    | Access levels | Description |
    |---------------|-------------|
    | full_access   | Users with full access have the same rights as the owner to control the content and perform the following actions: <br>* Add items <br>* Edit security <br>* Delete a workspace, folder, or document |
    | read_write    | Users can view, create subfolders, add and edit contents of the folders and subfolders, and delete documents.|
    | read          | Users can view contents but not add, edit or remove items.|
    | no_access     | Users can neither view contents nor see the existence of a document.|

    ## Types of groups
    **Global groups**<br>
    Global groups are created and managed independently of any iManage Work library, and changes made to the global group are
    updated at the global level, and not individually within each library. For more information, see  <a href="#tag--Global-Groups">Global Groups</a>.

    **Library groups**<br>
    Library-level groups are created for a specific library and can be assigned to workspaces, containers, and documents within that library.
    For more information, see  <a href="#tag--Library-Groups">Library Groups</a>.

    ## Preferred library
    A preferred library is the user's default library. Each user is required to have one preferred library.
    It stores the user's preferred settings, such as language preference and default search form for iManage Work advanced searches.

    If a user's preferred library is switched to another, the preferences are reset.

    ## Global Settings
    The following settings are defined by the iManage Work system.
    The combination of the presence or absence of the setting itself, and the value of the setting indicates their behavior.

    |Setting name|Data type|Description|
    |:--|:--|:--|
    |im.email.domain|string|The email domain used by the customer for filing inbound and outbound emails.<br><br>If present, uses the value specified.<br>If not present, defaults to `http://mail.cloudimanage.com/`.|
    |im.email.filingFolder.defaultName|string|The default email filing folder for a workspace which is matched by name/pattern per customer. For example: e-mail.<br><br>If present, uses the value specified.<br>If present, it uses the specified value.<br>If not present, defaults to `Email*`.|
    |im.email.types|string|The file types of emails. All file types included in this value will be considered email types. The value uses a comma-separated list. For example, it can be like `MIME`, or `MIME,GW`.<br><br>If present, uses the value specified.<br>If not present, defaults to `MIME,GW,NOTES,EML`.|
    |im.email.useBccForFiling|Boolean|The way an email is to be filed. The owner's email domain is automatically added to the email addresses in the BCC or the CC field.<br><br>If `true`, automatically file the email.<br>If `false`, do not automatically file the email.<br>If not present, defaults to `false`.|
    |im.feature.flexibleFolders|Boolean|Whether users are allowed to use the flexible folder functionality (templates) to create workspaces.<br><br>If `true`, the user is allowed to use templates during workspace creation.<br>If `false`, the user is not allowed to use templates during workspace creation.<br>If not present, defaults to `false`.|
    |im.policy.requireFullAccessToCreateRootLevelFolder|Boolean|The minimum access rights to a workspace that are required for users to create root-level folders, search folders, Share folders, and tabs..<br><br>If `true`, only users with a permissions level of Full Access to a workspace can create root level folders.<br>If `false`, users with a minimum permissions level of Read/Write to a workspace can create root level folders.<br><br> If no existing permissions level setting exists, defaults to `false`.|
    |im.document.versionEditing|string|Whether to allow editing of a document based on its document version. This includes content, properties, default security, and access permissions. Allowed values are `yes`, `no`, and `latestVersionOnly`.<br><br>If `yes`, all versions of the document can be edited.<br>If `no`, none of the versions can be edited.<br>If `latestVersionOnly`, only the latest version of the document can be edited.|
    |im.document.defaultDocumentClass|string|The default document class to be applied to documents when they are uploaded to iManage Work.<br><br> This default document class is applicable to all libraries. Therefore, it must be present on all libraries and it can be set only by the system administrator who is part of the NRTADMIN group on all libraries.|
    |im.diagnostics.enableAnalytics|Boolean|Enables usage analytics to be collected and shared with iManage. This information is used for improving iManage products. No customer information, such as document or workspace names, is collected. The data is in aggregated form. Therefore, users and customers are not directly identifiable.<br><br>If `true`, enables usage analytics to be collected and shared with iManage.<br>If `false`, disables usage analytics to be collected and shared with iManage.<br>If not present, defaults to `true`.

    ## Facets
    Facets are a summary list of the most common occurrences of the specified object property.
    For example, if the facet `custom1` is specified in a search, then occurrences of all possible values
    of `custom1` within the result set are counted. The top five most common values of the `custom1` property are returned.<br>
    Facets provide suggestions for narrowing down search criteria that the user will likely select.

    Multiple facets can be specified using a comma-separated list.
    For example: `facets=senders,types,owners`.
    Possible values are: `senders`, `owners`, `types`, `class`, `subclass`, `custom1`, `custom2`, `custom3`, `custom4`,
    `custom5`, `custom6`, `custom7`, `custom8`, `custom9`, `custom10`, `custom11`, `custom12`, `custom29`, and `custom30`.

    The `facets` parameter is often used along with the `results` parameter.
    If neither of the parameters are specified, only the search results are returned.
    If `results=false`, and a facet value is specified, only the facet's information is returned.
    If both the parameters are specified, both facets and search results are returned.

    <font style="color:black;font-size: 15px;font-weight: bold;">Sample request</font><br>
    In the following example, to search for documents, the facets `senders` and `types` are specified:

    `GET https://www.ajubalaw.com/work/api/v2/customers/100/recent-documents?results=false&facets=senders,types`

    <font style="color:black;font-size: 15px;font-weight: bold;">Sample response</font><br>
    ```
    {
      "data": {
        "facets": {
          "senders": [],
          "types"  : [
            {
              "alias"      : "ANSI",
              "count"      : 132,
              "description": "Windows Ansi Text"
            },
            {
              "alias"      : "EML",
              "count"      : 2,
              "description": "EML"
            },
            {
              "alias"      : "ACROBAT",
              "count"      : 1,
              "description": "Adobe Acrobat Reader"
            }
          ]
        }
      }
    }
    ```

    Notice in the response that no senders were returned. This indicates there were no senders to return even though the search asked for them. The request will succeed even when a requested facet is not there. In this case, the other facet in the request had some hits. Three document `types` are returned, with "ANSI" being the most common at 132 instances.

    ## Pagination
    The iManage REST API uses different pagination schemes to navigate between the pages of requested data, depending on the specific endpoint being used. In this documentation, you will see pagination as a part of many endpoints' functionality. This section describes pagination in detail.

    An endpoint that returns paginated results uses one of the following pagination schemes:

    * *Explicit overflow with optional cursor*: The response always contains the overflow field. When overflow is true, then the cursor field is present.
    * *Explicit overflow with required cursor*: The response always contains both the overflow and cursor fields. That is, the cursor is present regardless of the value of the overflow field.
      * This type of overflow is intended for continuous scrolling of new results.
      * As the cursor is present even when there are no additional records, the client application may use this cursor to periodically poll for the next page.
      * When new records fitting the search criteria are found while using the cursor to poll, they will be present in the response, along with a new cursor.
      * The new cursor can again be used to either retrieve the next page (if overflow is true) or to continue polling.
    * *Cursor with implied overflow*: Some requests result in a response that contains a cursor field that is populated if additional records exist beyond the page returned. In other words, the presence/absence of a cursor implies whether there is an overflow.

    You can identify the pagination type used by a particular endpoint through the individual parameters it uses, as listed on the reference page for that specific endpoint. Refer to the following tables for additional information about the specifics of these schemes as they relate to pagination.

    ### Request parameters for pagination
    |Query parameter| Description                                                                                                                                                                                                                                                                                                                                                                                                            |
    |---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    |`offset`| The number of results to skip in the total result set. For example, a search may find 300 items. Using the default (offset=0) will not skip any items and return items starting with the first item. A value of offset=50 skips the first 50 items and returns items starting with the 51st position. If the offset exceeds the number of items in the list, no items will be returned. <br>The default is `offset=0`. |
    |`limit`| The number of records to be returned in the response. For example, a search may find 300 items, but `limit=10` will only return ten of those 300 items. <br>This parameter always has a default value that is defined by the specific endpoint. A common default is `limit=25`, but can vary depending on the endpoint being used, as stated in the details for the specific endpoint.                                 |
    |`total`| A boolean parameter specifying whether or not the total number of matches should be returned. Specifying `total=true` can be helpful in cases where you need to know the exact number of matches. For example, if you want to display the number in a user interface or determine the number of pages your search will produce.<br>The default value is `total=false`.                                                 |
    |`cursor`| A unique identifier that points to a location in a record set, dataset, and so on, provided by an endpoint's response to the request. Used by the system to find the starting point from which to retrieve data.                                                                                                                                                                                                       |

    ### Response fields for pagination
    | Response field | Description |
    |----------------|-------------|
    | `overflow`     | This field may be returned with the search results for endpoints that use the overflow pagination scheme. If the number of items returned by the search is more than the limit value, `overflow` will be `true`. This flag indicates that you have additional items that can be returned.<br>Requests returning `overflow` do not support the `total` parameter.|
    | `total_count`  | The total number of items found. This field is present in the response if the request specifies `total=true`. If the result set spans multiple pages, the value of this field will be greater than the number of items on one page. For example, if a search request with `limit=10` matched 50 records, then the response will contain `"total_count": 50` with only 10 of the records that matched the search criteria. |
    | `cursor`       | A unique identifier that points to a location in a record set, dataset, and so on, provided by an endpoint's response. <br>The response fills this field with a valid value in two distinct scenarios: <br> 1. When *explicit* overflow is used (when the endpoint response contains the `overflow` field), or <br> 2. When the endpoint uses a cursor-always pagination scheme.|

    ### Example
    The following shows <a href="#post-/work/api/v2/customers/-customerId-/users/search">POST /work/api/v2/customers/{customerId}/users/search</a> using the paging parameters `offset`, `limit`, and `total`.

    `POST https://www.ajubalaw.com/work/api/v2/customers/100/users`
    Request body:
    ```
    {
      "filters": {
          "full_name": "Andrew Case"
      },
      "paging": {
        "limit": 50,
        "total": true
      }
    }
    ```

    The request defines a search based on the full name "Andrew Case", and returns up to 50 items (`limit` parameter). The `offset` value of zero starts the search with the first item in the system. Therefore, the items are displayed starting from the beginning of the list. It also returns the total number of matches in the response, as specified by the parameter `total=true`. This count will be in the response field, also named `total` as described in the table above.

    ## Rate limiting
    Rate limiting is a technique to limit the rate of API requests that are processed by iManage Work. The client applications should
    implement the support to handle rate limits to avoid poor user experience, as requests are continually retried by iManage Work
    until a certain period before they succeed. The iManage Universal API provides the necessary data to support rate limiting algorithms.

    ###  Availability of rate limiting support
    Rate limiting support is currently available for specific environments.<br>
    To check its availability in your environment, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a>.<br>
    If the feature flag `rate_limiting` is `true`, then it is supported in your environment.

    ### What information is provided to support rate limiting?
    During normal operation, applications make API requests and receive responses in a regular way.

    For successful API requests, the response status code 200 - Success is returned along with the following response headers:

    | Response header         | Description |
    |-------------------------|-------------|
    | `x-ratelimit-remaining` | Indicates the number of requests remaining in the current time window.|
    | `x-ratelimit-reset`     | Indicates the number of seconds an application must wait before making any further requests. <br>This header helps you to understand and estimate when future requests might have rate limiting applied.<br>A low value should be interpreted as a warning sign for either the number of requests issued in the time window or the request throughput.<br>As the `x-ratelimit-remaining` value gets smaller, the `x-ratelimit-reset` indicates when the `x-ratelimit-remaining` number will be reset to the full current capacity.|

    Here is a sample response to a successful DELETE request showing rate limiting information:

    ```
    $ curl -i -X DELETE `https://ajubalaw.com/work/web/api/v2/customers/100/libraries/ACTIVE_US/documents/ACTIVE_US!10817.1` 
                         -H "Host: ajubalaw.com" -H "X-Auth-Token: RuVRhrkMeQXQBpWguPVfcnCrvgqFdUaDIEPlVPtpFE"
      HTTP/2 200
      strict-transport-security: max-age=15768000; includeSubDomains
      date: Tue, 23 Nov 2021 13:26:33 GMT
      content-length: 0
      cache-control: no-cache, max-age=0, must-revalidate, no-store
      x-ratelimit-remaining: 9
      x-ratelimit-reset: 10
    ```

    ### What happens when rate limits are exceeded?

    When rate limits are exceeded, a standard HTTP status code response of `429 - Too many requests` message is
    sent to the client application. 

    Additionally, the response header `x-rate-limit-reset` value indicates the
    number of seconds an application must wait before making any further requests.

    ##### **Sample response when rate limit is enforced**

    Here is a sample request and response to delete a document with the rate limit exceeded from previous requests:

    ````
    $ curl -i -X DELETE `https://ajubalaw.com/work/web/api/v2/customers/100/libraries/ACTIVE_US/documents/ACTIVE_US!10817.1`
                        -H "Host: ajubalaw.com" -H "X-Auth-Token: RuVRhrkMeQXQBpWguPVfcnCrvgqFdUaDIEPlVPtpFE"
      HTTP/2 429 Too Many Requests
      strict-transport-security: max-age=15768000; includeSubDomains
      date: Wed, 27 Oct 2021 17:08:00 GMT
      content-length: 0
      x-ratelimit-remaining: 0
      x-ratelimit-reset: 35
    ````

    ### How can you shape your traffic to counter the rate limit?

    When making requests, you should observe the headers returned by iManage Work and adjust your code specifically to the number of remaining requests you can make before rate limiting is triggered.

    * **Monitor**: Make requests and monitor all response headers.
    * **Adjust**: With every request, recalculate the rate based on the headers.
    * **Retry**: If you encounter a `429 Too Many Requests` message, which should not happen if you used the headers correctly, further adjust your code. You can use the `x-ratelimit-reset` header to make sure that you only make requests when the iManage Work services are available.

    ### Best practices for rate limiting

    * **Use the `x-ratelimit-remaining` response header**<br>
      Continuously monitor the `x-ratelimit-remaining` header in your code. If this value drops to a very low number,
      reduce the number of requests being sent.

    * **Check for errors caused by rate limits**<br>
      For responses that generate the `429 - Too Many Requests` response code, rate limits have been exceeded.
      Include logic in your code to detect this response code and then resubmit the request after `x-ratelimit-reset` number of seconds.

    * **Reduce the number of requests**<br>
      Optimize your code to eliminate unnecessary requests by doing the following:
      * Cache frequently used data.
      * Save relatively static information in a database.
      * Serialize the information in a file.

    * **Regulate the request rate**<br>
      If you regularly encounter the `429 - Too Many Requests` error, consider including a process in your code that
      regulates the rate of your requests so that they are distributed more evenly over time.


    # Change Log
    ## [2.1.753] - 2022-09-07

    ### Added
    - Added `activity` parameter to the request schema for:
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-workspaces/admin-import`
    - Added CMEK key store parameters `client_id`, `key_id`, and `secret` to the request schema for:
      - `PATCH /work/api/v2/customers/{customerId}/encryption/master-keys/{keyId}`
    - Added new feature flag `extended_metadata` to the response schema for:
      - `GET /work/api/v2/customers/{customerId}/features`
    - Added endpoints to the documentation:
      - `GET /api`
      - `POST /auth/oauth2/token`
      - `POST /auth/oauth2/revoke/token`

    ### Changed
    - Improved descriptions for various endpoints and parameters.

    ### Fixed
    - No longer listing unused parameters `nvp_name`, `nvp_op`, and `nvp_value` in the request schema for:
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents`


    ## [2.1.725] - 2022-07-19

    ### Changed
    - Improved the documentation for the lock endpoints:
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/lock`
      - `DELETE /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/lock`
    - Removed redundency in schema for:
      - `PATCH /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`
    - Updates to the list of special characters available to alias, description, label and other fields in the following endpoints:
      - `GET /work/api/v2/customers/{customerId}/groups/{groupId}/members`
      - `GET /work/api/v2/customers/{customerId}/groups/{groupId}/non-members`
      - `GET /work/api/v2/customers/{customerId}/groups`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/search`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}/members`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}/non-members`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles/{alias}/users`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/templates`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/type-mappings`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/types`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/admin-search`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/groups/out-of`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/groups`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/users`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/admin-search`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/users/search`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces`
      - `GET /work/api/v2/customers/{customerId}/roles`
      - `GET /work/api/v2/customers/{customerId}/users`
      - `GET /work/api/v2/customers/{customerId}/workspaces`
      - `PATCH /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/{alias}`
      - `PATCH /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      - `PATCH /work/api/v2/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}`
      - `PATCH /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}`
      - `PATCH /work/api/v2/customers/{customerId}/roles/{roleId}`
      - `PATCH /work/api/v2/customers/{customerId}/users/{userId}`
      - `POST /work/api/v2/customers/{customerId}/groups/{groupId}/copy`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/templates`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/type-mappings`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/types`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/users`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
      - `POST /work/api/v2/customers/{customerId}/roles`
      - `POST /work/api/v2/customers/{customerId}/users/admin-import`
      - `POST /work/api/v2/customers/{customerId}/users`
      - `PUT /work/api/v2/customers/{customerId}/groups/{groupId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types/{doctype_alias}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup/{alias}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions/{aliasId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles/{alias}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/templates/{templateId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`

    ### Removed
    - Removed reference to author in workspace description in:
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
    - Removed user filter in:
      - `GET /work/api/v2/customers/{customerId}/recent-documents`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-documents`


    ## [2.1.170] - 2022-06-15

    ### Added
    - Added endpoints for adding, updating, retrieving, and deleting library-level overrides of settings:
      - `PUT /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}/library-overrides/{libraryName}`
      - `GET /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}/library-overrides/{libraryName}`
      - `DELETE /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}/library-overrides/{libraryName}`
    - Added "Additional resources" subsection to the Overview.

    ### Changed
    - The following endpoints now support library-level overrides of settings:
      - `PUT /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}`
      - `GET /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}`
      - `DELETE /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}`
      - `GET /work/api/v2/customers/{customerId}/settings/{appId}`
      - `GET /work/api/v2/customers/{customerId}/apps/{appId}/auth-info`
    - Improved descriptions for various endpoints and parameters.
    - Changed custom field alias regular expression used during custom alias creation. It no longer allows leading or trailing whitespaces.

    ### Fixed
    - The following endpoint now has the correct REST method of POST (was PATCH):
      - `POST /customers/{customerId}/libraries/{libraryId}/documents/shred-async`
    - Removed unsupported request parameter `workspace_name` from the following endpoint:
      - `POST /customers/{customerId}/libraries/{libraryId}/folders/search`


    ## [2.1.678] - 2022-04-28

    ### Added
    - The following endpoints can now be used to set and retrieve the `login_hint_enabled` system setting:
      - `GET /work/api/v2/customers/{customerId}/settings/system/idp`
      - `PATCH /work/api/v2/customers/{customerId}/settings/system/idp`

    ### Changed
    - Improved descriptions for various endpoints and parameters.
    - Extended regular expression for User IDs and Class IDs to include unicode characters.

    ### Fixed
    - Descriptions of the following endpoints now accurately reflect the required privileges:
      - `PUT /work/api/v2/customers/{customerId}/settings/{appId}/users/{userId}/{settingId}`
      - `PUT /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}`


    ## [2.1.665] - 2022-04-05

    ### Added
    - Added rate limiting concept to Key Concepts.
    - Added im.document.defaultDocumentClass to the table of available global settings in Key Concepts.

    ### Removed
    - Removed extraneous and outdated sections from the Overview.

    ### Changed
    - Class ID can no longer be empty when creating a class.
    - Class ID must now fit a regular expression when creating a class.
    - Cleaned up documentation for the following endpoints:
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download/{filename}`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/copy`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/declare`
    - Improved descriptions for various parameters.
    - Changed rendering style of request and response bodies from tree to table.

    ### Fixed:
    - Removed unsupported total_count field from documented response schema of `POST /work/api/v2/customers/{customerId}/users/search`.


    ## [2.1.644] - 2022-02-24

    ### Changed
    - Key Concepts enhancements including Pagination.
    - Cleaned up documentation for the following endpoints:
      - `GET work/api/v2/customers/{customerId}/libraries/{libraryId}/documents{docId}/checkout`
      - `POST work/api/v2/customers/{customerId}/libraries/{libraryId}/documents{docId}/checkout`
      - `PATCH work/api/v2/customers/{customerId}/libraries/{libraryId}/documents{docId}/checkout`
    - The following APIs now return the SSID of the custom alias:
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/{aliasId}`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/search`
      - `POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/search`

    ### Fixed
    - User ID can no longer be empty when creating or updating a user. 
    - User ID must now fit a regular expression when creating or updating a user.
    - Some broken links have been fixed.


    ## [2.1.633] - 2022-02-08

    ### Added
    - New request under IDP Settings: `GET /platform/api/v2/customers/{customerId}/settings/system/idp`
    - New request under IDP Settings: `PATCH /platform/api/v2/customers/{customerId}/settings/system/idp`
    - New request under Asynchronous Task Framework: `GET /platform/api/v2/customers/{customerId}/users/{userId}/tasks`
    - Documentation for missing fields under various endpoints.

    ### Changed
    - Request paths now include the namespace and API version.
    - Improved descriptions for various endpoints and parameters.
    - Documented Canadian French support for updating and retrieving caption details via the following endpoints:
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions`
      - `GET /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions/{aliasId}`
      - `PUT /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions/{aliasId}`
    - Split "Data Sync" collection into "Work Sync" and "Platform Sync" to accurately reflect the namespace.


  version: 2.1.753

paths:
  /api:
    get:
      tags:
      - Discover iManage platform
      summary: Get customer ID and other details
      description: |-
        Gets information about a customer's environment such as customer ID, authentication status, available libraries, 
        API versions, capabilities of the environment, details of current user, and the preferred library.

        The customer ID is used as one of the path parameters in most of the subsequent requests to iManage Work.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The user must be authenticated to the iManage Work platform.

      operationId: GET_api
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - access_token
                type: object
                properties: &id1471
                  data:
                    type: object
                    properties:
                      app:
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the ID of the application authenticating against iManage Work platform.
                      auth_status:
                        type: string
                        description: |-
                          Indicates if the user is authenticated or not.
                      capabilities:
                        type: array
                        items:
                          type: string
                        description: |-
                          Indicates the configurations of your environment that affect its behavior by allowing specific actions.  
                          For example, the capability `oauth` indicates that the OAuth authentication is implemented in your environment.
                      dms_version:
                        type: string
                        description: |-
                          Indicates the version of the document management systemn (DMS).
                      user:
                        type: object
                        properties:
                          customer_id:
                            type: string
                            description: |-
                              Indicates the unique ID assigned to a customer or organization by iManage.

                              * This ID is permanently assigned to a customer and does not change.
                              * It is used as the path parameter in most of the iManage platform endpoints.
                              * It is required to identify resources of only the organization to which the signed-in user is associated with.
                          email:
                            type: string
                            description: |-
                              Indicates the email address of the current user.
                          id:
                            type: string
                            description: |-
                              Indicates the user ID of the current user.
                          name:
                            type: string
                            description: |-
                              Indicates the name of the current user.
                          ssid:
                            type: string
                            description: |-
                              Indicates the numeric system ID of the user.
                          user_type:
                            type: string
                            description: |-
                              Indicates the type of user.
                              * `virtual` -  A user that is created and managed in iManage Work.
                              * `enterprise` - A user that is added to iManage Work from the organization's directory service. <br>
                              For more information, see <a href="#tag--Users">Users</a>.
                      versions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: |-
                                Indicates the name of the iManage Work API.
                            url:
                              type: string
                              description: |-
                                Indicates the URL of iManage Work system.
                            version:
                              type: string
                              description: |-
                                Indicates the version of the iManage Work API.
                      work:
                        description: Indicates information related to the iManage
                          Work product.
                        type: object
                        properties:
                          libraries:
                            type: array
                            description: |-
                              Indicates the list of libraries available to the current user.
                            items:
                              type: object
                              properties:
                                alias:
                                  type: string
                                  description: |-
                                    Indicates the name of the library.
                                type:
                                  type: string
                                  description: |-
                                    Indicates that this library holds iManage Work objects.
                          preferred_library:
                            type: string
                            description: |-
                              Indicates the default library of the current user.<br>
                              For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
        404: &id005
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_NO_RECORD", "NRC_DB_INVALID"]
                        type: string
                        description: |-
                          An error code.
                      code_message:
                        type: string
                        description: |-
                          Description of the error.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_NO_RECORD
                    code_message: No record found
        403: &id001
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_OPERATION_NOT_ALLOWED", "NRC_NO_PRIVILEGE"]
                        type: string
                        description: |-
                          Indicates the error type.<br><br>
                          The requestor does not have proper permissions or privileges.
                          A common reason is that the requestor needs to be an administrator (NRTADMIN, tier 1, or tier 2) for the library, or needs required global privileges.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.
                      dms_version:
                        type: string
                        description: |-
                          Indicates the DMS version.
                      transaction:
                        type: string
                        description: |-
                          Indicates transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_NO_PRIVILEGE
                    code_message: No privilege to perform the operation
        401: &id002
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_ACCESS_DENIED"]
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.
                      dms_version:
                        type: string
                        description: |-
                          Indicates the DMS version.
                      transaction:
                        type: string
                        description: |-
                          Indicates transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_ACCESS_DENIED
                    code_message: Access is denied
        400: &id003
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties: &id567
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_INVALID_PARAM", "NRC_INDEX_PROMISCUOUS", "NRC_INVALID_PROFILE",
                          "NRC_INVALID_DOCUMENT_TYPE", "NRC_INVALID_FOLDER_TYPE"]
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.
                      dms_version:
                        type: string
                        description: |-
                          Indicates the DMS version.
                      transaction:
                        type: string
                        description: |-
                          Indicates transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                        description: |-
                          Indicates additional details about the error for the request or for fields.
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_INVALID_PARAM
                    code_message: Parameter is invalid
                    messages: &id566
                    - field: ID
                      code: NRC_INVALID_PARAM
                      code_message: invalid format
      parameters:
      - &id004
        name: X-Auth-Token
        in: header
        description: |
          This is an access token that represents the user who is making the request.
          This token is available from the `access_token` field in the response from a successful sign in.<br>

          This token must be included in the header of each request.
          If it is missing, invalid, or expired, the request fails with a 401 Unauthenticated response.
        required: true
        schema:
          type: string
          description: needs defining
  /auth/oauth2/token:
    post:
      tags:
      - Access Tokens
      summary: Get access token
      description: |-
        Gets an access token from iManage platform.

        The recieved token is passed as the `X-Auth-Token` header in most of the subsequent requests in order to 
        authenticate the caller's identity and determine their privileges.<br>
        The life span of access tokens is configured by your system administrator. If it expires, you can re-execute
        this endpoint to get the new access token.

        <font style="color:black;font-size: 15px;font-weight: bold;">OAuth2 grant types supported by iManage</font><br>
        iManage supports following OAuth2 grant types (see `grant_type` request parameter) for retrieving access tokens
        per the relevant RFC specifications:

        | Grant Type | Specifications |
        |:---|:---|
        | SAML | RFC 7522 |
        | Authorization Code with PKCE support | RFC 6749, RFC 7636 |
        | Password | RFC 6749 |
        | Refresh Token | RFC 6749 |

        The RFC specifications provide most of the details required for executing token requests. However, some details
        differ in the iManage implementation. Details of some of these differences that are applicable are as follows:

        * **All grant types, except Refresh Token**<br>
          * `client_id` request parameter is required.
          * `client_secret` request parameter is required if the client is a web application.

        * **SAML Grant**<br>
          `customer_id` request parameter is required.

        * **Authorization Code Grant**<br>
          PKCE is required for native client applications and strongly suggested for all other client types.

        * **Password Grant**<br>
          The password grant can only be used for users that are not synchronized with an external IDP,
          or if the IDP uses the OIDC protocol with Direct Grant support.

        * **Refresh Token**<br>
          When exchanging a refresh token for a new access token, the provided refresh token will be revoked.
          A new refresh token will be returned, along with the new access token.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The user must have a valid iManage account, and `allow_logon` must be `true` for this account.<br>
        For more information, see <a href="#tag--Users">Users</a> and <a href="#tag--Library-Users">Library Users</a>

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * All requests in the iManage Work Universal API documentation must be prefixed with `https://{hostname}`
        * The URL for executing this request would be POST `https://{hostname}/auth/oauth2/token` where hostname refers to your iManage environment.
        * All parameters that are listed in the Request Body section of this endpoint are issued by iManage when your application is registered to it. 
          For more information, contact your system administrator.
        * Along with the access token, most of the requests require customer ID and library ID as path parameters. To get these details, 
          see <a href="#get-/api">Get customer ID and other details</a>.

      operationId: POST_auth_oauth2_token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              properties: &id1469
                assertion:
                  type: string
                  description: |-
                    Specifies the SAML assertion used for authenticating via the SAML grant type.
                client_id:
                  type: string
                  description: |-
                    Specifies the client ID of your organization. iManages provides this ID to your organization.
                client_secret:
                  type: string
                  description: |-
                    Specifies the client secret of your organization. iManages provides this key to your organization.
                customer_id:
                  type: string
                  description: |-
                    Specifies the ID of the customer to which the authenticating user belongs.
                grant_type:
                  enum: ["saml2-bearer", "authorization_code", "password", "refresh_token"]
                  type: string
                  description: |-
                    Specifies the grant type for retrieving an access token.<br>
                    For more information, see the overview of this request.
                password:
                  type: string
                  description: |-
                    Specifies the user password.
                username:
                  type: string
                  description: |-
                    Specifies the username of the user requesting authentication.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - access_token
                type: object
                properties: &id1470
                  access_token:
                    type: string
                    description: |-
                      Indicates the access token returned by iManage after successful authentication.
                  expires_in:
                    type: string
                    description: |-
                      Indicates the time in seconds for which the access token is valid.
                  refresh_token:
                    type: string
                    description: |-
                      Indicates the encrypted token that is used to get a new access token when the previous access token expires.
                  token_type:
                    type: string
                    description: |-
                      Indicates the type of token.<br>
                      By default, this endpoint returns a security token type as `bearer` which means the party in possession of the token (a bearer) can use the token.
                additionalProperties: false
                description: |-
                  Response when a user logs into iManage Work Server.
        403: *id001
        401: *id002
        400: *id003
  /auth/oauth2/revoke/token:
    post:
      tags:
      - Access Tokens
      summary: Revoke access token
      description: |-
        Revokes the access token that was provided by iManage Work after successful authentication.

        This request invalidates the access token and it cannot be used to make any more requests.<br>
        If the refresh token is specified in the request body, it is also revoked.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The user must have a valid access token.

      operationId: POST_auth_oauth2_revoke_token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - access_token
              properties: &id1472
                access_token:
                  type: string
                  description: |-
                    Specifies the iManage access token to be revoked.
                refresh_token:
                  type: string
                  description: |-
                    Specifies the refresh token to be revoked.

                    The refresh token is provided by iManage to get a new access token when the previous access token expires.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
  /work/api/v2/customers/{customerId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/workspaces:
    description: |-
      None
    get:
      tags:
      - Multi-library Workspaces
    # - customers-{customerId}-workspaces
      summary: Search for workspaces
      description: |
        Returns all workspaces that match the specified criteria.<br><br>
        If no query parameters are specified, or if no libraries are specified, this request returns workspaces from all libraries available to the user.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        To return a list of the workspaces:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/workspaces`<br>

        To return a list of the workspaces for active_us:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/workspaces?libraries=active_us`

        <font style="color:black;size:5">Text Searches</font><br>
        Text searches have the following characteristics:
        * Case insensitive. The search string *Jennifer* search will find *Jennifer*, *jennifer*, or *jennIFER*.
        * Whole words only. The search string *Jen* search will find *Jen* but not *Jennifer*.
        * Support the wildcard character (&ast;). This character finds any number of contiguous string characters.
        The search string *Jen&ast;* search will find *Jen* and *Jennifer*.<br>
        The search string &ast; (an &ast; by itself) will find that property that has any characters in it, and so leaves out empty properties.<br>
        For example, `custom3=*` will find all custom3 properties that have any value.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        For an alternate workspace search request that allows for more detailed search criteria, see POST `/customers/{customerId}/workspaces/search`<br>
        To list workspaces, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`<br>
        To create a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces`<br>
        To update a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        To delete a workspace, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
      operationId: GET_customers_{customerId}_workspaces
      parameters:
      - *id004
      - &id030
        name: anywhere
        in: query
        description: |
          Specifies the text to be searched anywhere in the profile or contents.<br><br>
          This applies only to workspace and document searches.
          For workspace template searches, this parameter is the same as the parameter `name_or_description`.

          This search is case insensitive and matches whole words. The wildcard character (&ast;) is not supported.
          This parameter searches indexed properties and the user is required to have their role's **Allow Full Text Search** privilege enabled.
        schema:
          type: string
          example: litigation
      - &id031
        name: create_date
        in: query
        description: |
          Specifies a date range to search relative to the current date.<br><br>
          A DateRange function specifies a date/time range expressed in an amount of time before the current date/time, and up through an amount of time before the current date/time.
          For example, this could specify a create date between 30 days prior to the current time and up to the current time.<br><br>
          This parameter has a format of `[begin]:[end][time units]`.
          These values are relative to each other, and do not refer to calendar dates.
          For example, `-30:0d`, indicates a date/time range from 30 days prior to today,
          and up through the user's current date/time, measured in days.<br>

          |Value|Description|
          |:---|:---|
          |begin|The earliest date/time, noted as negative value from today.|
          |end|The latest date/time, noted as negative value from today, or using 0 for today|
          |time units|The time unit to use. This may be `d` for days, `m` for month, or `y` for years.|

          Examples:<br>
          * `create_date=-30:0d` indicates a create date/time range from 30 days prior to the current date/time and through the current date/time.<br>
          * `edit_date=-30:-7d` indicates an edit date/time range from 30 days prior to the current date/time and through seven days prior to the current date/time.<br>
          * `custom21_relative=-15:1d` indicates a custom21 property value date/time range from 15 days prior to the current date/time and through one day after the current date/time (or one day in the future).<br>

          A positive value can be used for [begin] or [end].
          A date/time specifying a future period would generally limit the search up through the user's current date/time.
          However, due to time changes or time zone differences, it may be possible for an item to appear to have a future date/time relative to the user by up to one day.
          In those cases, a value like `-30:1d` may be applicable.
        schema:
          type: string
          example: -30:0d
      - &id032
        name: custom1
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id033
        name: custom10
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id034
        name: custom11
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id035
        name: custom12
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id036
        name: custom13
        in: query
        description: |
          Specifies the text to search for in custom13 property.<br><br>
          For workspaces, the use of this property is customized for your iManage Work installation.
        schema:
          type: string
      - &id037
        name: custom14
        in: query
        description: |
          Specifies the text to search for in custom14 property.<br><br>
          For workspaces, the use of this property is customized for your iManage Work installation.
        schema:
          type: string
      - &id038
        name: custom15
        in: query
        description: |
          Specifies the text to search for in custom15 property.<br><br>
          For workspaces, the use of this property is customized for your iManage Work installation.
        schema:
          type: string
      - &id039
        name: custom16
        in: query
        description: |
          Specifies the text to search for in custom16 property.<br><br>
           For workspaces, the use of this property is customized for your iManage Work installation.
        schema:
          type: string
      - &id040
        name: custom17
        in: query
        description: |+
          Specifies a value for the custom17 property.<br><br>
          The use of this property is customized for your iManage Work installation.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - &id041
        name: custom18
        in: query
        description: |+
          Specifies a value for the custom18 property.<br><br>
          The use of this property is customized for your iManage Work installation.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - &id042
        name: custom19
        in: query
        description: |+
          Specifies a value for the custom19 property.<br><br>
          The use of this property is customized for your iManage Work installation.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - &id043
        name: custom2
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id044
        name: custom20
        in: query
        description: |+
          Specifies a value for the custom20 property.<br><br>
          The use of this property is customized for your iManage Work installation.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - &id045
        name: custom21_from
        in: query
        description: |
          Specifies the lower limit of the custom21 date to search from.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the earliest value to search from.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          created on or after 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id046
        name: custom21_relative
        in: query
        description: |
          Specifies a date/time range to search, relative to the current date/time.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          This parameter has a format of `[begin]:[end][time units]`.
          These values are relative to each other, and do not refer to calendar dates.
          For example, `-30:0d`, indicates a date/time range from 30 days prior to today (that is, within the last 30 days),
          and up through the user's current date/time, measured in days.

          |Value|Description|Example|
          |:---|:---|:---|
          |begin|The earliest date/time, noted as negative value from today.|-30, -7|
          |end|The latest date/time, noted as negative value from today, or using 0 for today|-30, -7, 0, 1|
          |time units|The time unit to use. This may be `d` for days, `m` for month, or `y` for years.|d, m, y|

          Examples:<br>
          * `custom21_relative=-30:0d` indicates a date/time range from 30 days prior to the current date/time and through the current date/time.<br>
          *  `custom21_relative=-30:-7d` indicates a date/time range from 30 days prior to the current date/time and through seven days prior to the current date/time.<br>
          * `custom21_relative=-15:1d` indicates a date/time range from 15 days prior to the current date/time and through one day after the current date/time (or one day in the future).<br>

          A positive value can be used for [begin] or [end].
          A date/time specifying a future period would generally limit the search up through the user's current date/time.
          However, due to time changes or time zone differences, it may be possible for an item to appear to have a future date/time relative to the user.
          In those cases, a value like `-30:1d` may be reasonable.
        schema:
          type: string
          example: -30:0d
      - &id047
        name: custom21_to
        in: query
        description: |
          Specifies the lower limit of the custom21 date to search to.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the latest value to search to.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          with a property value before 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id048
        name: custom22_from
        in: query
        description: |
          Specifies the lower limit of the custom22 date to search from.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the earliest value to search from.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          created on or after 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id049
        name: custom22_relative
        in: query
        description: |
          Specifies a date/time range to search, relative to the current date/time.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          See custom21_relative parameter description earlier for specific format details.
        schema:
          type: string
          example: -30:0d
      - &id050
        name: custom22_to
        in: query
        description: |
          Specifies the lower limit of the custom22 date to search to.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the latest value to search to.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          with a property value before 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id051
        name: custom23_from
        in: query
        description: |
          Specifies the lower limit of the custom23 date to search from.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the earliest value to search from.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          created on or after 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id052
        name: custom23_relative
        in: query
        description: |
          Specifies a date/time range to search, relative to the current date/time.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          See custom21_relative parameter description earlier for specific format details.
        schema:
          type: string
          example: -30:0d
      - &id053
        name: custom23_to
        in: query
        description: |
          Specifies the lower limit of the custom23 date to search to.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the latest value to search to.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          with a property value before 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id054
        name: custom24_from
        in: query
        description: |
          Specifies the lower limit of the custom24 date to search from.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the earliest value to search from.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          created on or after 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id055
        name: custom24_relative
        in: query
        description: |
          Specifies a date/time range to search, relative to the current date/time.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          See `custom21_relative` parameter description earlier for specific format details.
        schema:
          type: string
          example: -30:0d
      - &id056
        name: custom24_to
        in: query
        description: |
          Specifies the lower limit of the custom24 date to search to.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

          When searching, this parameter specifies the latest value to search to.
          For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
          with a property value before 2018-05-24T00:00:00-08:00.
          If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
          You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
          This is applicable for each custom21, custom22, custom23, custom24.
          For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.
        schema:
          type: string
      - &id057
        name: custom25
        in: query
        description: |
          Specifies the custom25 property value to search for.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a boolean value but can also be null.<br>

          Examples:<br>
          * `custom25=true` returns items if the custom25 value is `true`.
          * `custom25=false`, returns items if the custom25 value is `false`.
        schema:
          type: boolean
      - &id058
        name: custom26
        in: query
        description: |
          Specifies the custom26 property value to search for.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a boolean value but can also be null.<br>

          Examples:<br>
          * `custom26=true` returns items if the custom26 value is `true`.
          * `custom26=false`, returns items if the custom26 value is `false`.
        schema:
          type: boolean
      - &id059
        name: custom27
        in: query
        description: |
          Specifies the custom27 property value to search for.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a boolean value but can also be null.<br>

          Examples:<br>
          * `custom27=true` returns items if the custom27 value is `true`.
          * `custom27=false`, returns items if the custom27 value is `false`.
        schema:
          type: boolean
      - &id060
        name: custom28
        in: query
        description: |
          Specifies the custom28 property value to search for.<br><br>
          This property is not reserved by iManage Work and is not a validated value.
          It is intended to be customized for your company's requirements.
          This is a boolean value but can also be null.<br>

          Examples:<br>
          * `custom28=true` returns items if the custom28 value is `true`.
          * `custom28=false`, returns items if the custom28 value is `false`.
        schema:
          type: boolean
      - &id061
        name: custom29
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id062
        name: custom3
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id063
        name: custom30
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id064
        name: custom4
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id065
        name: custom5
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id066
        name: custom6
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id067
        name: custom7
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id068
        name: custom8
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id069
        name: custom9
        in: query
        description: |-
          Specifies an alias to match with this custom property.

          An alias is an entry for that custom property.
          For example, custom1 may be captioned as *Client*.
          Client may have three entries&#58; 001, 001abc, and 001001.
          Each of these is an alias of client.

          This search is case insensitive.
          Partial matches are not supported.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id070
        name: description
        in: query
        description: |+
          Specifies the text to search for in the `description` field of the workspace's profile.<br><br>
          This parameter is case insensitive.
          Matches whole words (partial matches are not supported).
          For example, (`description=litigation Enron`) matches either *litigation* or *Enron* in any of the fields.
          The search with `description=litigation` matches only *litigation*.
          The search with `description=litiga` does not match any variation.
          Exact words may be matched with quotation marks (`name="litigation Enron"`).
          The wildcard character (&ast;) is not supported.
          For example, `file_target=*gation`, or `file_target=litiga*` does not match *litigation*.
          The underscore character is treated as a space.
          The search with `file_target=litigation_Enron` is identical to `file_target=litigation Enron`.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: contract
      - &id071
        name: edit_date
        in: query
        description: |
          Specifies an edit date range relative to the current date.<br>

          This parameter has a format of `[begin]:[end][time units]`.
          These values are relative to each other, and do not refer to calendar dates.
          For example, `-30:0d`, indicates a date/time range from 30 days prior to today (that is, within the last 30 days),
          and up through the user's current date/time, measured in days.<br>

          |Value|Description|Example|
          |:---|:---|:---|
          |begin|The earliest date/time, noted as negative value from today.|-30, -7|
          |end|The latest date/time, noted as negative value from today, or using 0 for today|-30, -7, 0, 1|
          |time units|The time unit to use. This may be `d` for days, `m` for month, or `y` for years.|d, m, y|

          Examples:<br>
          * `custom21_relative=-30:0d` indicates a date/time range from 30 days prior to the current date/time and through the current date/time.
          * `custom21_relative=-30:-7d` indicates a date/time range from 30 days prior to the current date/time and through seven days prior to the current date/time.
          * `custom21_relative=-15:1d` indicates a date/time range from 15 days prior to the current date/time and through one day after the current date/time (or one day in the future).

          A positive value can be used for [begin] or [end].
          A date/time specifying a future period would generally limit the search up through the user's current date/time.
          However, due to time changes or time zone differences, it may be possible for an item to appear to have a future date/time relative to the user.
          In those cases, a value like `-30:1d` may be reasonable.
        schema:
          type: string
          example: -30:0d
      - name: facets
        in: query
        description: |
          Specifies which facets to return.

          Facets are a summary list of the most common occurrences for each facet type listed.
          For example, if `facets` specifies custom1, all items containing any value for custom1 are counted.
          The five items with the highest counts are returned.
          Facets allow users to anticipate selections, or to present a list of suggestions that the user will likely select.

          Multiple facets can be included using a comma-separated list.
          For example: `facets=custom1,custom2,custom9`.
          If this parameter is omitted, which is the default value, no facets are returned.
          Possible values are: custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.

          This parameter is often used along with the `results` parameter.
          If neither of the parameters are included, only the search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, no data of either type is returned. However, an empty response object is returned.<br>

          <font style="color:black;font-size: 15px;font-weight: bold;">Sample request</font><br>
          In this example, the search is GET `https://www.ajubalaw.com/work/api/v2/customers/100/recent-workspaces?results=false&facets=custom1,custom9`.
          The response JSON object does not include any search results.
          The facets section specified returning custom9 but there are no custom9 values to return.
          However, three custom1 values are returned, with *Microsoft* being the most common with 132 instances.

          <pre>
          {
            "data": {
              "facets": {
                "custom1": [
                  {
                    "alias"      : "Microsoft",
                    "count"      : 132,
                    "description": "Microsoft Corporation"
                  },
                  {
                    "alias"      : "Amazon",
                    "count"      : 20,
                    "description": "Amazon.com, Inc"
                  },
                  {
                    "alias"      : "Wallachs",
                    "count"      : 1,
                    "description": "Wallachs"
                  }
                ],
                "custom9": []
              }
            }
          }</pre>
        schema:
          type: string
      - &id072
        name: file_target
        in: query
        description: |
          Specifies  text to find in any of custom1, custom2, custom29, custom30, or the workspace name.<br><br>
          This parameter is case insensitive.<br>
          Matches whole words (partial matches are not supported).<br>
          For example, `file_target=litigation Enron` matches either litigation or Enron in any of the fields.<br>
          The search with `file_target=litigation` matches only *litigation*.<br>
          The search with `file_target=litiga` does not match any variation.<br>
          The wildcard character (&ast;) is not supported.
          For example, `file_target=*gation`, or `file_target=litiga*` does not match *litigation*.<br>
          The underscore character is treated as a space.
          The search with `file_target=litigation_Enron` is identical to `file_target=litigation Enron`.
        schema:
          type: string
          example: contract
      - &id073
        name: language
        in: query
        description: |
          Specifies the language to be used for searching the content.<br><br>
          It is specfied in ISO 639-1 language code and is not case-sensitive.

          Documents do not have a language property. However, specifying a language code along with your
          search terms can help improve the search accuracy and efficiency.
          For example, if iManage Work knows the search term "人身伤害" is Chinese and not English, it performs a better search.

          The following are the allowed values:

          | Language   | Code |
          |------------|------|
          | Chinese    | zh   |
          | English    | en   |
          | German     | de   |
          | French     | fr   |
          | Japanese   | ja   |
          | Spanish    | es   |
          | Portuguese | pt   |
        schema:
          type: string
          example: en
          default: en
      - &id558
        name: libraries
        in: query
        description: |
          Specifies which libraries to limit the query to.<br><br>

          For example, `libraries=archive` only searches the *archive* library.
          Multiple libraries can be specified using a comma-separated list.
          For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
          Library names are case insensitive.<br>
          Neither the wildcard character (&ast;) nor stemming is supported.<br>
          For example, `libraries=acti` and `libraries=act*` are not valid searches.
          Therefore, the complete library name must be provided.<br><br>
          If omitted, all libraries accessible to the user are included.
        schema:
          type: string
          example: libraries=ACTIVE,ARCHIVE
      - name: limit
        in: query
        description: |-
          Specifies the maximum number of items to include in the response.

          The request returns either the actual number of items if there are fewer than or equal to the `limit` value,
          or the `limit` value if there are more items than the `limit` value.
          <br>
          This parameter may be used in conjunction with pagination parameters. For more information, see <a href="#overview--pagination">Pagination</a>.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - &id074
        name: name
        in: query
        description: |+
          Specifies the text to search for in the `name` field of the workspaces.<br><br>
          This parameter is case insensitive.<br>
          Matches whole fields only (partial matches are not supported).<br>
          For workspace or document searches, multiple words can be included using a comma-separated list (`name=litigation,Enron`) or with spaces (`name=litigation Enron`).<br>
          Exact words may be matched with quotation marks (`name="litigation Enron"`).<br>
          The wildcard character (&ast;) is not supported.
          For example, `name=*gation`, or `name=litiga*` does not match `litigation`.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: contract
      - &id075
        name: name_or_description
        in: query
        description: |
          Specifies the text to search for in the `name` or `description` fields of iManage Work object.<br>

          * This parameter is case insensitive.<br>
          * Matches whole fields only and partial matches are not supported.
            For example, for an object named *Enron Completion*, the search `name_or_description=Enron` does not match.
            It must be specified as `name_or_description=Enron Completion`.
          * The wildcard character (&ast;) is supported, and matches any number of contiguous characters, including spaces.<br>
            To match partial fields, include the wildcard character (&ast;) before, after, or at both ends of the term.<br>
            For example, all the following searches match with `litigation`:
            * `name_or_description=litigation`
            * `name_or_description=*gation`
            * `name_or_description=litiga*`.
        schema:
          type: string
          example: contract
      - &id006
        name: offset
        in: query
        description: |
          Specifies the position of the first item to be returned from the result set.

          This value indicates the starting position for the first item to return from among all the possible items.
          By default, this value is zero, meaning items are returned starting from the first item in the list.
          For example, if the offset is ten (`offset=10`), the first item returned will be the 11th item in the list.
          The `offset` is often used in combination with the `limit` parameter.
          For example, if `limit=10&offset=10`, the list returns ten items starting from the 11th item through the 20th.

          If the value is greater than the number of items in the return list, no items are returned but no error occurs.<br>
          For more information, see <a href="#overview--pagination">Pagination</a>. <br>
        schema:
          type: integer
          default: 0
      - &id076
        name: owner
        in: query
        description: |-
          Specifies the owner's user ID.<br>

          The parameter value:
          * Is case insensitive.<br>
          * Matches whole fields only (partial matches are not supported).<br>
          * Supports the wildcard character (&ast;).
          The wildcard character matches any number of contiguous characters.
          To match partial fields, include the wildcard character before, after, or on both ends of the user ID.<br>
          For example, the following all match&#58; `owner=ACASE`, `owner=acase`, `owner=*C*s*`.
        schema:
          type: string
          example: CPIERCE
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - &id007
        name: total
        in: query
        description: |
          Specifies to include the total count of items found in the response.

          If `true`, the total count is included in the response.<br>
          If `false`, the total count is not included in the response.<br>
          The actual number of items returned may be different because of the *limit* parameter that restricts the number of items
          returned for any given search.<br>
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2016-11-04T14:49:24Z'
                      database: Active
                      default_security: private
                      document_number: 104111
                      edit_date: '2016-11-04T14:49:24Z'
                      edit_profile_date: '2016-11-04T14:49:24Z'
                      file_create_date: '2016-11-04T14:49:31Z'
                      file_edit_date: '2016-11-04T14:49:31Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!15267
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=104111&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\ACTIVE\ACASE\34\1\104111.1
                      name: .,-;
                      operator: ACASE
                      owner: ACASE
                      owner_description: Andrew Case
                      retain_days: 365
                      size: 1
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!15267
                      wstype: workspace
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2011-12-22T14:37:07Z'
                      custom1: '1017'
                      custom2: '9002'
                      custom3: ACTIVE
                      database: Active
                      default_security: public
                      description: Apple Computer Inc
                      document_number: 33704
                      edit_date: '2011-12-22T14:37:20Z'
                      edit_profile_date: '2016-10-24T08:46:13Z'
                      file_create_date: '2011-12-22T14:37:19Z'
                      file_edit_date: '2011-12-22T14:37:19Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!10220
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=33704&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\ACTIVE\ACASE\11\1\33704.1
                      name: 0.999.9002 - Apple Computer Inc.APPLE v. LARRY
                      operator: ACASE
                      owner: ACASE
                      owner_description: Andrew Case
                      retain_days: 365
                      size: 549
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!10220
                      wstype: workspace
                    - author: ACASE
                      class: WEBDOC
                      comment: test
                      content_type: P
                      create_date: '2015-04-10T17:02:57Z'
                      custom1: '1086'
                      custom2: '1'
                      custom3: INPROGRESS
                      custom4: IL
                      database: Active
                      default_security: public
                      description: Additional support features for on-going matters.
                      document_number: 50374
                      edit_date: '2015-04-10T17:02:57Z'
                      edit_profile_date: '2017-03-31T18:16:30Z'
                      file_create_date: '2015-04-10T17:01:26Z'
                      file_edit_date: '2015-04-10T17:01:26Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!11429
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: true
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=50374&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\ACTIVE\ACASE\16\1\50374.1
                      name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                      operator: ACASE
                      owner: ACASE
                      owner_description: Andrew Case
                      retain_days: 365
                      size: 1
                      subclass: DMATTER
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!11429
                      wstype: workspace
                  total_count: 2420
                required:
                - data
                type: object
                properties: &id027
                  data: &id077
                    type: object
                    properties:
                      facets:
                        $ref: '#/components/schemas/Projects.searchFilter'
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Projects.workspace'
                    additionalProperties: false
                  total_count: &id078
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/workspaces/search:
    description: |-
      None
    post:
      tags:
      - Multi-library Workspaces
    # - customers-{customerId}-workspaces-search
      summary: Scoped search for workspaces
      description: |
        Returns all workspaces that match the specified criteria.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        To return all workspaces the user has access to, and to return only the two default profile fields `id` and `wstype`:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/workspaces/search`<br>
        The request body is empty:<br>
        ```
        {
        }
        ```

        <br>To return all workspaces in the library active_us that the user has access to, and to return the additional profile fields `edit_dat`, `name`, and `database`:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/workspaces/search`<br>
        Request body:<br>
        ```
        {
          "filters": { "libraries": "active_us" },
          "profile_fields": { "workspace": [ "edit_date", "name", "database"] }
        }
        ```

        <br><font style="color:black;size:5">Search filters</font><br>
        The body parameter `filters` specifies the set of search criteria.
        Each search criterion is a separate field in the filters parameter.
        The following request body specifies to search for a workspace within the specified library:<br>
        ```
        {
          "filters": {
            "libraries": "active"
          }
        }
        ```
        <br><font style="color:black;size:5">Profile Fields Display</font><br>
        The `profile_fields` parameter specifies the set of fields to return in the response object.
        As the number of available fields to return can be large, some of the fields may not be required.
        The `profile_fields` parameter explicitly specifies the fields to return.
        The field does not have to be one of the search criterion.
        For example, the following search filters on the workspace's library but the library name is not returned in the response.
        By default, workspaces automatically return the `id` and `wstype`. For example, the following request body:<br>

        ```
        {
          "filters": {
            "libraries": "active"
          }
        }
        ```

        returns something similar to this:<br>

        ```
        {
            "data": [
                {
                    "id": "active!1331436",
                    "wstype": "workspace"
                }
            ],
            "overflow": true
        }
        ```

        Any additional fields must be specified. Fields are specified by the object type.
        There are five work types: document, folder, workspace, email, and user.
        For each object type, include a list of fields.
        For example, the following request body specifies returning three additional fields for a workspace object:<br>

        ```
        {
          "filters": {
            "libraries": "active"
          },
            "profile_fields" :  {
            "workspace"  :  ["edit_date", "name", "database"]
          }
        }
        ```

        returns something similar to this:<br>

        ```
        {
            "data": [
                {
                    "database": "Active",
                    "name": "Filing Procedures",
                    "id": "active!1331436",
                    "edit_date": "2018-11-07T17:27:11.008Z",
                    "wstype": "workspace"
                }
            ],
            "overflow": true
        }
        ```

        There can be up to five object types for each `profile_fields` parameter.
        For more information, see the description of parameter `profile_fields`.
        Searches that do not return object types from among those specified, are ignored.
        For example, if a search does not return any folder types, no folder profile fields are returned even if they are specified.
        The following request body specifies returning profile fields for two objects types, and for each objects type, which fields to return.
        These are in addition to default fields.<br>

        ```
        {
          "limit": 150,
          "filters": { "libraries": "active"},
          "profile_fields" :
            {
              "workspace"  :  ["edit_date", "name"],
              "folder"  :  ["create_date", "owner"]
            }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        For an alternate workspace search request that allows for more generalized options, see GET `/customers/{customerId}/workspaces`.
      operationId: POST_customers_{customerId}_workspaces_search
      requestBody:
        content:
          application/json:
            schema:
              title: Workspace Search Request
              type: object
              properties: &id079
                limit:
                  maximum: 9999
                  minimum: 1
                  type: integer
                  description: |-
                    Specifies the maximum number of items to include in the response.

                    The request returns either the actual number of items if there are fewer than or equal to the `limit` value,
                    or the `limit` value if there are more items than the `limit` value.
                    <br>
                    This parameter may be used in conjunction with pagination parameters. For more information, see <a href="#overview--pagination">Pagination</a>.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    workspace:
                      type: array
                      items:
                        type: string
                      description: |-
                        Specifies up to 15 workspace profile properties to include in the response.<br><br>This parameter is ignored and not used.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    create_date:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |
                        Specifies to return workspaces created on or after this date (in ISO 8601 format).<br><br>
                        This parameter is ignored and not used.
                      example: "2017-09-18T00:00:00Z"
                    create_date_to:
                      type: string
                      description: |
                        Specifies to return workspaces created on or before this date (in ISO 8601 format).<br><br>
                        This parameter is ignored and not used.
                      example: "2017-09-18T00:00:00Z"
                    edit_date:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |
                        Specifies to return workspaces that were edited on or after this date (in ISO 8601 format).<br><br>
                        This parameter is ignored and not used.<br><br>
                        The two parameters `edit_date_from` and `edit_date_to` can be used in combination to form a range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |
                        Specifies to return workspaces that were edited on or before this date (in ISO 8601 format).<br><br>
                        This parameter is ignored and not used.<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                      example: "2017-09-18T00:00:00Z"
                    owner:
                      type: string
                      description: |-
                        Specifies the user ID of the owner of the workspace.
                      example: CPIERCE
                    anywhere:
                      type: string
                      description: |-
                        Specifies the text to be searched for anywhere in the workspace profile.
                      example: litigation
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |
                        Specifies an alias of the custom2 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom3:
                      type: string
                      description: |
                        Specifies an alias of the custom2 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom4:
                      type: string
                      description: |
                        Specifies an alias of the custom4 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom5:
                      type: string
                      description: |
                        Specifies an alias of the custom5 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom6:
                      type: string
                      description: |
                        Specifies an alias of the custom6 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom7:
                      type: string
                      description: |
                        Specifies an alias of the custom7 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom8:
                      type: string
                      description: |
                        Specifies an alias of the custom8 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom9:
                      type: string
                      description: |
                        Specifies an alias of the custom9 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom10:
                      type: string
                      description: |
                        Specifies an alias of the custom10 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom11:
                      type: string
                      description: |
                        Specifies an alias of the custom11 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom12:
                      type: string
                      description: |
                        Specifies an alias of the custom12 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom13:
                      type: string
                      description: |
                        Specifies a value of the custom13 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom14:
                      type: string
                      description: |
                        Specifies a value of the custom14 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom15:
                      type: string
                      description: |
                        Specifies a value of the custom15 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom16:
                      type: string
                      description: |
                        Specifies a value of the custom16 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom17:
                      type: string
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      type: string
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      type: string
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      type: string
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |
                        Specifies the lower limit of the custom21 date to search to.<br><br>
                        The custom21 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a custom21 property value after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom21_from for the lower limit and custom21_to for the upper limit.
                    custom21_to:
                      type: string
                      description: |
                        Specifies the upper limit of the custom21 date to search to.<br><br>
                        The custom21 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the latestvalue to search to.
                        For example, specifying 2018-11-24T00:00:00-08:00 (Saturday Nov 24, 2018 00:00:00 PST) returns only items
                        with a custom21 property value before 2018-11-24T00:00:00-08:00.
                        If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom21_from for the lower limit and custom21_to for the upper limit.
                    custom22_from:
                      type: string
                      description: |
                        Specifies the lower limit of the custom22 date to search from.<br><br>
                        The custom22 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a custom22 property value after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom22_from for the lower limit and custom22_to for the upper limit.
                    custom22_to:
                      type: string
                      description: |
                        Specifies the upper limit of the custom22 date to search to.<br><br>
                        The custom22 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying 2018-11-24T00:00:00-08:00 (Saturday Nov 24, 2018 00:00:00 PST) returns only items
                        with a custom22 property value before 2018-11-24T00:00:00-08:00.
                        If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom22_from for the lower limit and custom22_to for the upper limit.
                    custom23_from:
                      type: string
                      description: |
                        Specifies the lower limit of the custom23 date to search from.<br><br>
                        The custom23 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a custom22 property value after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom23_from for the lower limit and custom23_to for the upper limit.
                    custom23_to:
                      type: string
                      description: |
                        Specifies the upper limit of the custom23 date to search to.<br><br>
                        The custom23 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying 2018-11-24T00:00:00-08:00 (Saturday Nov 24, 2018 00:00:00 PST) returns only items
                        with a custom23 property value before 2018-11-24T00:00:00-08:00.
                        If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom23_from for the lower limit and custom23_to for the upper limit.
                    custom24_from:
                      type: string
                      description: |
                        Specifies the lower limit of the custom24 date to search from.<br><br>
                        The custom24 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a custom22 property value after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there is no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom24_from for the lower limit and custom24_to for the upper limit.
                    custom24_to:
                      type: string
                      description: |
                        Specifies the upper limit of the custom24 date to search to.<br><br>
                        The custom24 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value. For example, `2018-05-24T00:00:00-08:00`.<br>

                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying 2018-11-24T00:00:00-08:00 (Saturday Nov 24, 2018 00:00:00 PST) returns only items
                        with a custom24 property value before 2018-11-24T00:00:00-08:00.
                        If omitted or is invalid, there is no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using custom24_from for the lower limit and custom24_to for the upper limit.
                    custom21_relative:
                      type: string
                      description: |
                        Specifies a date/time range to search, relative to the current date/time.<br><br>
                        The custom21 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.<br>

                        This parameter has a format of `[begin]:[end][time units]`.
                        These values are relative to each other, and do not refer to calendar dates.
                        For example, `-30:0d`, indicates a date/time range from 30 days prior to today (that is, within the last 30 days),
                        and up through the user's current date/time, measured in days.

                        |Value|Description|Example|
                        |:---|:---|:---|
                        |begin|The earliest date/time, noted as negative value from today.|-30, -7|
                        |end|The latest date/time, noted as negative value from today, or using 0 for today|-30, -7, 0, 1|
                        |time units|The time unit to use. This is `d` for days, `m` for month, or `y` for years.|d, m, y|

                        Examples:<br>
                        * `custom21_relative=-30:0d` indicates a date/time range from 30 days prior to the current date/time and through the current date/time.
                        * `custom21_relative=-30:-7d` indicates a date/time range from 30 days prior to the current date/time and through seven days prior to the current date/time.
                        * `custom21_relative=-15:1d` indicates a date/time range from 15 days prior to the current date/time and through one day after the current date/time (or one day in the future).

                        A positive value can be used for [begin] or [end].
                        A date/time specifying a future period would generally limit the search up through the user's current date/time.
                        However, due to time changes or time zone differences, it is possible for an item to appear to have a future date/time relative to the user.
                        In those cases, a value like `-30:1d` is reasonable.
                      example: -30:0d
                    custom22_relative:
                      type: string
                      description: |
                        Specifies a date/time range to search, relative to the current date/time.<br><br>
                        The custom22 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.<br>

                        For more details of format, see the `custom21_relative` parameter description.
                      example: -30:0d
                    custom23_relative:
                      type: string
                      description: |
                        Specifies a date/time range to search, relative to the current date/time.<br><br>
                        The custom23 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.<br>

                        For more details of format, see the `custom21_relative` parameter description.
                      example: -30:0d
                    custom24_relative:
                      type: string
                      description: |
                        Specifies a date/time range to search, relative to the current date/time.<br><br>
                        The custom24 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.<br>

                        For more details of format, see the `custom21_relative` parameter description.
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |
                        Specifies the value of the custom25 property to return.<br><br>
                        The custom25 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a boolean value but can also be null.<br>

                        Examples:<br>
                        The following snippet for the request body returns the workspaces with custom25 set to `true`.
                        ```
                        "filters": { "custom25": true }
                        ```
                    custom26:
                      type: boolean
                      description: |
                        Specifies the value of the custom26 property to return.<br><br>
                        The custom26 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a boolean value but can also be null.<br>

                        Examples:<br>
                        The following snippet for the request body returns the workspaces with custom26 set to `false`.
                        ```
                        "filters": { "custom26": false }
                        ```
                    custom27:
                      type: boolean
                      description: |
                        Specifies the value of the custom27 property to return.<br><br>
                        The custom27 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a boolean value but can also be null.<br>

                        Examples:<br>
                        The following snippet for the request body returns the workspaces with custom27 set to `true`.
                        ```
                        "filters": { "custom26": true }
                        ```
                    custom28:
                      type: boolean
                      description: |
                        Specifies the value of the custom28 property to return.<br><br>
                        The custom28 property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a boolean value but can also be null.<br>

                        Examples:<br>
                        The following snippet for the request body returns the workspaces with custom28 set to `true`.
                        ```
                        "filters": { "custom28": true }
                        ```
                    custom29:
                      type: string
                      description: |
                        Specifies an alias of the custom29 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    custom30:
                      type: string
                      description: |
                        Specifies an alias of the custom30 property to match.<br><br>
                        This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard character (&ast;) is not supported.
                    name:
                      type: string
                      description: |
                        Specifies the text to be searched for in the `name` property of the workspaces.<br><br>
                        The `name` parameter is also known as `title` in some iManage Work clients.
                      example: contract
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    exclude_emails:
                      type: boolean
                      description: |
                        Specifies to exclude emails from the results set.<br><br>
                        If `true`, emails are excluded and only documents are returned.<br>
                        If `false`, emails can also be included along with documents.<br><br>
                        This parameter allows for a document-only return list.
                        For an email-only return list, see the `email_only` parameter.
                      default: false
                    email_only:
                      type: boolean
                      description: |
                        Specifies to include only emails from the results set.<br><br>
                        If `true`, only emails are included.<br>
                        If `false`, documents can also be included.<br><br>
                        This parameter allows for an email-only return list.
                        For a document-only return list, see the `exclude_emails` parameter.
                      default: false
                    name_or_description:
                      type: string
                      description: |-
                        Specifies the text to be searched for in the `name` property or the `description` property of the documents.
                      example: contract
                    document_number:
                      type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 4563
                    document_version:
                      type: integer
                      description: |-
                        Specifies the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1
                    sent_date:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: "-30:0d"
                    received_date:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                    has_attachment:
                      type: boolean
                      description: |
                        Specifies whether to return email that have attachments.<br><br>
                        If `true`, the email item must have at least one attachment.<br>
                        If `false`, the email item cannot have any attachments.<br><br>
                        If this parameter is omitted, then that attachment status is ignored.
                    subject:
                      type: string
                      description: |-
                        Specifies the text to find from the subject of the email for emails.
                      example: important
                    sender:
                      type: string
                      description: |-
                        Specifies the user ID that appears in the sender property of the email.
                      example: ACASE
                    recipient:
                      type: string
                      description: |-
                        Specifies the user ID that appears in any of the recipient properties of emails.
                      example: ACASE
                    last_user:
                      type: string
                      description: |
                        Specifies to include items that were last modified by the user ID.<br><br>
                        This parameter is ignored and not used.<br><br>
                        If specified, return items that were last modified by the specified user ID.<br>
                        If omitted, this parameter is ignored.
                      example: ACASE
                    checked_out:
                      type: boolean
                      description: |
                        Specifies to include items that are marked as checked out.<br><br>
                        If `true`, include items that are checked out.<br>
                        If `false`, include items that are not checked out.<br>
                        If omitted, the search ignore the checked out status.
                    in_use_by:
                      type: string
                      description: |
                        Specifies to include items that are in use by the user ID.<br><br>
                        If specified, return items that are marked as in use by the specified userID.<br>
                        If omitted, this parameter is ignored.
                      example: ACASE
                    in_use:
                      type: boolean
                      description: |
                        Specifies to include documents that are marked as in use.<br><br>
                        If `true`, return items that are marked as in use.<br>
                        If `false`, return items that are not marked as in use.<br>
                        If omitted, return items that are marked in either case as in use.
                    exclude_shortcuts:
                      type: boolean
                      description: |
                        Specifies to exclude shortcuts to the workspace.<br><br>
                        If `true`, exclude instances that are shortcuts to the workspace.<br>
                        If `false`, include instances that are shortcuts to the workspace.
                      default: false
                    user:
                      type: string
                      description: |-
                        Specifies the user ID for the document profile.
                    author:
                      type: string
                      description: |-
                        Specifies the author's user ID for the document profile.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        Specifies the operator's user ID for the document profile.
                      example: MARCIEDAVENPORT
                    comments:
                      type: string
                      description: |-
                        Specifies the text to be searched for in the comment field of the document profile.
                      example: confidential
                    container_id:
                      type: string
                      description: |
                        Specifies the container ID to return documents from.<br><br>
                        This parameter is ignored and not used.<br><br>
                        The container_id can be the ID of a workspace or folder, such as *Archive!22*, or *Integration!1*.
                        If omitted, all of the container ID available to the user is searched.
                        Parameter values cannot be included using a comma-separated list.
                    include_subtree:
                      type: boolean
                      description: |
                        Specifies to search the subtree of the container ID specified.<br><br>
                        If `true`, return items from the entire subtree of the container ID specified.<br>
                        If `false`, return items only from the root level of the container ID specified.
                      default: true
                    personalized:
                      type: boolean
                      description: |
                        Specifies to retrieve the documents from user's Recent Matters.<br><br>
                        Recent Matters is all the matters in which the user has created a workspace, or has edited documents in the last 30 days.<br><br>
                        If `true`, retrieves documents only from user's Recent Matters folder.<br>
                        If `false`, retrieves documents from all the user's folders including Recent Matters.
                      default: false
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id080
                profile_fields:
                  workspace:
                  - name
                  - custom1
                filters:
                  custom1: '1001'
                  custom2: '321'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Document Search Response
                required:
                - data
                - overflow
                type: object
                properties: &id081
                  data:
                    type: array
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id082
                  data:
                  - custom1: '1086'
                    custom2: '1'
                    id: Active!10001
                    name: 0.999.9002 - Apple Computer Inc.APPLE v. LARRY
                    wstype: workspace
                  - custom1: '1086'
                    custom2: '1'
                    id: Active!10002
                    name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                    wstype: workspace
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/users:
    description: |-
      None

    get:
      tags:
      - Users
    # - customers-{customerId}-users
      summary: Search for global users
      description: |
        Searches for iManage Work users.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        There is a variant of this request that searches for users using the POST method.
        For more information, see <a href="#post-/work/api/v2/customers/-customerId-/users/search">POST /customers/{customerId}/users/search</a>

        There are both GET and POST versions of certain searches. For more information,
        see <a href="#overview--differences-between-get-and-post-search">Differences between GET and POST search</a> to identify the version to be used.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        * The following request returns all iManage Work users:<br>
          GET `https://www.ajubalaw.com/work/api/v2/customers/100/users`

        * The following request returns a list of up to 50 users whose location is Chicago:<br>
          GET `https://www.ajubalaw.com/work/api/v2/customers/100/users?limit=50&location=Chicago`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of users at a library level, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users">GET /customers/{customerId}/libraries/{libraryId}/users</a>.
        * To create a user, see <a href="#post-/work/api/v2/customers/-customerId-/users">POST /customers/{customerId}/users</a>
      operationId: GET_customers_{customerId}_users
      parameters:
      - *id004
      - &id085
        name: alias
        in: query
        description: |
          Filters users based on their `id` property.

          This search:
          * supports multiple values using a comma-separated list. For example: `alias=acase,cpierce`
          * is case insensitive. For example: *ACase* matches *acase*.
          * matches whole words. For example: *case* does not match *acase*.
          * does not support the wildcard character (&ast;).

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=


          For a more versatile search, see the request parameter `query`.
        schema:
          type: string
          example: acase
      - &id086
        name: allow_logon
        in: query
        description: |
          Filters users based on their `allow_logon` value.

          If `true`, returns enabled users.<br>
          If `false`, returns disabled users.<br>
          If this parameter is omitted, it returns users with any `allow_logon` value.
        schema:
          type: boolean
      - name: directory_id
        in: query
        description: |
          Filters users based on directory IDs that are set by an organization's directory service.<br><br>
          Multiple values can be included using a comma-separated list.
        schema:
          type: string
          example: dcbc9ae9-83a268-acc68j-sag61bx
      - &id087
        name: email
        in: query
        description: |
          Filters users based on their `email` property.

          This is a user's primary email address.
          It is unique within the iManage Work environment, and is the email used to contact or to identify a user.
          Alternate email addresses `email2`, `email3`, `email4`, `email5` are not included in this search.<br><br>
          This search:
          * is case insensitive. For example: *`ACase@AJubaLaw.com`* matches *`acase@ajubalaw.com`*.
          * matches whole words. For example: *acase* does not match *`acase@ajubalaw.com`*.
          * does not support the wildcard character (&ast;).

          Special characters allowed are +*.&-_`~|$%^?!’#={}/
        schema:
          example: acase@ajubalaw.com
          type: string
      - &id088
        name: full_name
        in: query
        description: |+
          Filters users based on their `full_name` property.

          This search:
          * is case insensitive. For example: *Andrew Case* matches *andrew case*.
          * matches whole content field. For example: *Andrew* does not match *Andrew Case*.
          * supports the wildcard character (&ast;) that matches any number of contiguous characters.
          For example: *Andrew&ast;* matches *Andrew Case*, and *&ast;ndre&ast;* matches *Andrew Case*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          example: Andrew Case
          type: string
      - &id089
        name: is_external
        in: query
        description: |+
          Filters users based on their `is_external` value.<br>

          If `true`, only the external users are returned.<br>
          If `false`, only the internal users are returned.<br>
          If omitted, both the internal and external users are returned.



        schema:
          type: boolean
      - &id011
        name: limit
        in: query
        description: |
          Specifies the maximum number of items to return regardless of the total number of items found by the search.<br><br>
          If the number of items in the result set are more, only the number of items defined by the `limit` parameter are returned.
          If the number of items in the result set is less than or equal to the limit, all the items are returned.<br><br>
          The limit is often used in combination with the offset parameter. For example, if limit=10 and offset=10 (`limit=10&offset=10`),
          the search returns ten items starting with the 11th item in the list, showing items 11 through 20.<br>
        schema:
          type: integer
          default: 25
      - &id090
        name: location
        in: query
        description: |+
          Filters users based on their geographic location.

          This search:
          * is case insensitive. For example: *chicago* matches *Chicago*.
          * matches whole words. For example: *Chi* does not match *Chicago*.
          * does not support the wildcard character (&ast;).

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          example: Chicago
          type: string
      - name: nos
        in: query
        description: |
          Filters the type of user.

          The allowed values are:

          | Value | Description |
          | :-: | - |
          | 2 | Virtual User |
          | 6 | Enterprise user |

          For more information on types of users, see <a href="#tag--Users">Users</a>.
        schema:
          type: integer
          example: 2
      - *id006
      - &id091
        name: password_never_expire
        in: query
        description: |
          Filters users whose password never expires.

          This is applicable to virtual users only (whose `user_nos=2`).

          If `true`, returns users whose passwords never expire.<br>
          If `false`, returns users whose passwords do expire.<br>
          If this parameter is omitted, it returns users whose password expiration is of either status.
        schema:
          type: boolean
      - &id092
        name: preferred_library
        in: query
        description: |
          Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
          If specified, returns only users whose preferred library is equal to the specified value.<br>
          If omitted, returns users with any preferred library.

          This search:<br>
          * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
          * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
          * does not support the wildcard character (&ast;).

          For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
        schema:
          example: ACTIVE_US
          type: string
      - name: query
        in: query
        description: |+
          Filters users based on this string found in at least one of the `id`, `full_name`, or `email` properties.<br>

          This search:
          * is case insensitive. For example: *Enron* matches *enron*.
          * matches whole words. For example: *Microso* does not match *Microsoft*.
          * supports the wildcard character (&ast;) that matches any number of contiguous characters
           For example: *Microso&ast;* matches *Microsoft*, and *&ast;icroso&ast;* matches *Microsoft*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: jan
      - name: ssid
        in: query
        description: |
          Filters users based on SSIDs that were generated by iManage Work.<br><br>
          Multiple values can be included using a comma-separated list.
        schema:
          type: string
          example: 170486260463309443
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: &id093
                  data:
                    type: array
                    description: Array of users
                    items:
                      $ref: '#/components/schemas/Users.user'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: &id008
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_ACCESS_DENIED"]
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_ACCESS_DENIED
                    code_message: Access is denied
        404: *id005
    post:
      tags:
      - Users
    # - customers-{customerId}-users
      summary: Create a global user
      description: |
        Creates an iManage Work user.<br>

        The global privileges required to implement this request: User Management.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        A global level user is the one who has not been assigned to any library, and exists at the global level in iManage Work.
        The user can be later assigned to a library.
        One of the following two types of users may be created:

        **Virtual user**<br>
        The users are created and managed in iManage Work. The virtual users are authenticated against passwords stored in iManage Work. They are not part of the organization's directory service.
        These are typically external users who are not part of the organization and are included for a specific purpose and for a defined period of time. For example, auditors, interns, and contractors.
        This user is created at the global level, and must be manually assigned to a library. A virtual user can be converted to an enterprise user by changing their user type (`nos`) value from 2 to 6.

        **Enterprise user**<br>
        An enterprise user is created and managed within the organization's directory service.
        The enterprise users are authenticated against the IDP configured by an organization.
        This type of user is managed by the organization's network administrators, such as for changing names, and creating or deleting users.
        The iManage Work system accepts and provides updates through a series of automated user imports and exports.
        An enterprise user can be converted to a virtual user by changing their user type (`nos`) from 6 to 2.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following is the minimal request required to create virtual user MARCIEDAVENPORT:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/users`<br>
        Request body:
        ```
        {
          "id": "MARCIEDAVENPORT",
          "full_name": "Marcie Davenport",
          "user_id_ex": "MARCIEDAVENPORT",
          "email": "marciedavenport@ajubalaw.com",
          "allow_logon": true,
          "user_password": "password1",
          "preferred_library": "active_uk",
          "user_nos": 2
        }
        ```
        The request returns the response body with the new user's information:
        ```
        {
          "data": {
              "allow_logon": true,
              "create_date": "2019-07-22T20:39:25.400998Z",
              "edit_date": "2019-07-22T20:39:25.401045Z",
              "email": "marciedavenport@ajubalaw.com",
              "full_name": "Marcie Davenport",
              "id": "MARCIEDAVENPORT",
              "is_external": false,
              "preferred_library": "active_uk",
              "ssid": "170869392651892016",
              "user_id_ex": "MARCIEDAVENPORT",
              "user_nos": 2,
              "user_num": 170869392651892016
          }
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a user in a library, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users">POST /customers/{customerId}/libraries/{libraryId}/users</a>
        * To assign a global user to a library, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users">POST /customers/{customerId}/libraries/{libraryId}/users</a>
      operationId: POST_customers_{customerId}_users
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: acase@ajubalaw.com
                full_name: Andrew Case
                id: ACASE
                is_external: false
                allow_logon: true
                preferred_library: active_us
                user_domain: cn=users,dc=ajubalaw,dc=com
                user_id_ex: ACASE
                user_nos: 6
              required:
              - id
              - email
              type: object
              properties: &id009
                allow_logon:
                  type: boolean
                  default: true
                  description: |
                    Specifies if the user is allowed to sign in.<br><br>
                    If `true`, the user is allowed to sign in.<br>
                    If `false`, the user is not allowed to sign in.<br>
                    If omitted, the value is `false`.
                custom1:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                  example: Used for court dates only through August.
                custom2:
                  maxLength: 254
                  type: string
                  example: Used for court dates only through August.
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                custom3:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                directory_id:
                  type: string
                  description: |-
                    Specifies the ID from an external directory (such as AD FS), which is used for user profile synchronization.
                distinguished_name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the fully-qualified path of names that trace the user entry to the root of the LDAP tree.
                  example: cn=username,dc=example,dc=ajubalaw,dc=com.
                email:
                  type: string
                  maxLength: 254
                  example: acase@ajubalaw.com
                  description: |
                    Specifies the primary email address of the user.<br><br>
                    The primary email address must be unique for each user in the iManage Work system.
                    It can be the same as one of the alternate email addresses of the user: `email2`, `email3`, and `email4`, and `email5`.

                    The requirements for an email address are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 3 |
                    | Maximum length | 254 |
                    | Spaces allowed  | No |
                    | Unicode allowed | Yes |
                    | Special characters allowed | +*.&-_`~\|$%^?!’#={}/ |
                email2:
                  type: string
                  maxLength: 254
                  example: acase_2@ajubalaw.com
                  description: |
                    Specifies an alternate email address for the user.<br><br>
                    This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                    Special characters allowed are +*.&-_`~|$%^?!’#={}/
                email3:
                  type: string
                  maxLength: 254
                  example: acase_3@ajubalaw.com
                  description: |
                    Specifies an alternate email address for the user.<br><br>
                    This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                    Special characters allowed are +*.&-_`~|$%^?!’#={}/
                email4:
                  type: string
                  maxLength: 254
                  example: acase_4@ajubalaw.com
                  description: |
                    Specifies an alternate email address for the user.<br><br>
                    This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                    Special characters allowed are +*.&-_`~|$%^?!’#={}/
                email5:
                  type: string
                  maxLength: 254
                  example: acase_5@ajubalaw.com
                  description: |
                    Specifies an alternate email address for the user.<br><br>
                    This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                    Special characters allowed are +*.&-_`~|$%^?!’#={}/
                exch_autodiscover:
                  type: string
                  description: |
                    Specifies the Exchange Server details of the user.<br><br>
                    Maximum length is 1024.
                extension:
                  maxLength: 32
                  type: string
                  description: |
                    Specifies the phone extension number of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                fax:
                  maxLength: 32
                  type: string
                  description: |+
                    Specifies the fax number of the user.

                     Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                force_password_change:
                  type: boolean
                  default: false
                  description: |
                    Specifies the user must change their password on next sign in.

                    This is applicable to virtual users only (whose `user_nos=2`).<br>
                    If `true`, the user must change their password on next sign in.<br>
                    If `false`, the user does not need to change their password on next sign in.
                full_name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the user's full name.

                    The requirements for a user's full name are:

                      |Description|Value|
                      |:---|:---:|
                      | Minimum length | 0 |
                      | Maximum length | 254 |
                      | Spaces allowed  | Yes |
                      | Unicode allowed | Yes |
                      | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |
                general:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is arbitrary information about the user, that does not have to conform to any format.
                id:
                  minLength: 1
                  maxLength: 64
                  pattern: |-
                    ^[\u0021-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*$
                  type: string
                  description: |+
                    Specifies the user ID.<br><br>
                    In some cases, the field `user_id_ex`, which comes from an external source system such as Active Directory, is formatted
                    to all upper case letters internally and then saved as the value of the `id` field.<br>
                    For example, if `user_id_ex` is ACase then the `id` will be ACASE.

                    For more information, see the field `user_id_ex`.

                    The requirements for `id` are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 1 |
                    | Maximum length | 64 |
                    | Spaces allowed  | No |
                    | Unicode allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"= |


                is_external:
                  type: boolean
                  default: false
                  description: |+
                    Specifies if  the user is an external user.<br><br>
                    If `true`, the user is an external user.<br>
                    If `false`, the user is not an external user, also called a regular user.

                    For more information, see <a href="#overview--external-users"> External users</a>.


                location:
                  maxLength: 254
                  type: string
                  example: Chicago
                  description: |+
                    Specifies the geographic location of the user.

                    The requirements for the location are:

                      |Description|Value|
                      |:---|:---:|
                      | Minimum length | 0 |
                      | Maximum length | 254 |
                      | Spaces allowed  | Yes |
                      | Unicode allowed | Yes |
                      | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=

                phone:
                  maxLength: 32
                  type: string
                  description: |+
                    Specifies the phone number of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                preferred_library:
                  maxLength: 32
                  type: string
                  description: |
                    Specifies the default library for the user.

                    For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
                user_domain:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies  the fully qualified domain name for the user's directory service.

                    It is the metadata from LDAP server that determines the unit to which the user belongs to.
                    This information is mainly used by iManage system administrators.
                user_id_ex:
                  maxLength: 64
                  type: string
                  description: |
                    Specifies the original value of the user ID that is received from the source system such as Active Directory.

                    It is formatted internally to all upper case letters, and then saved as `id`.
                    The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
                    For example, if `user_id_ex` is ACase then the `id` will be ACASE.
                    Alphanumeric characters and Unicode are allowed.
                user_nos:
                  type: integer
                  description: |
                    Specifies the type of user.

                    The allowed values are:

                    | Value | Description |
                    | :-: | - |
                    | 2 | Virtual User |
                    | 6 | Enterprise user |

                    For more information on types of users, see <a href="#tag--Users">Users</a>.
                user_password:
                  maxLength: 64
                  type: string
                  description: |
                    Specifies the sign-in password of the user.

                    The requirements for the password are:
                    * Minimum 12 characters.
                    * At least 1 upper case character.
                    * At least 1 lower case character.
                    * At least 1 number or special character.
                    * Special characters supported are !"#$%&'()*+,-./:;<=>?@[]\^_`{}~| 

                    The password is required for adding a virtual user or converting a user to virtual.<br>
                    It must not be provided if adding a non-virtual user or converting a user to non-virtual user.<br>
                    It is optional if updating an existing virtual user.
                pwd_never_expire:
                  type: boolean
                  description: |
                    Specifies if the user's password never expires.<br><br>
                    This is applicable to virtual users only (whose `user_nos=2`).

                    If `true`, the user's password never expires.<br>
                    If `false`, the user's password expires.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    allow_logon: true
                    create_date: '2020-01-15T15:25:48.857103Z'
                    edit_date: '2020-01-15T15:25:48.857193Z'
                    email: acase@ajubalaw.com
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    preferred_library: active_us
                    ssid: '98512908316573949'
                    user_domain: cn=users,dc=ajubalaw,dc=com
                    user_id_ex: ACASE
                    user_nos: 6
                    user_num: 98512908316573949
                required:
                - data
                type: object
                properties: &id010
                  data:
                    $ref: '#/components/schemas/Users.userGlobal'
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.warning'
                    description: |-
                      Array of warning messages indicating possible problems with the user creation or update.
                additionalProperties: false
        401: *id008
        404: *id005
        409: &id511
          description: ''
          content: &id516
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_DOC_CHECKEDOUT", "NRC_DOC_IN_USE", "NRC_DUP_RECORD",
                          "CONFLICT"]
                        type: string
                        description: |-
                          Error code.
                      code_message:
                        type: string
                        description: |-
                          Description of the error.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_DUP_RECORD
                    code_message: Record already exists
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/users/search:
    description: |-
      None
    post:
      tags:
      - Users
    # - customers-{customerId}-users-search
      summary: Scoped search for global users
      description: |
        Searches for iManage Work users.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        This request uses the POST method.
        The `filters` parameter must be specified to define the search criteria. However, it can be empty if the request does not need any filters.<br>
        Also, only the specified user profile fields are returned in the response. This facilitates retrieval of only the information that is relevant and useful.

        There are both GET and POST versions of certain searches. For more information,
        see <a href="#overview--differences-between-get-and-post-search">Differences between GET and POST search</a> to identify the version to be used.

        There is a GET variation of this request.
        For more information, see <a href="#get-/work/api/v2/customers/-customerId-/users/search">GET `/work/api/v2/customers/{customerId}/users/search`</a>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all users in the system:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/users`<br>
        Request body:
        ```
        {
          "filters": {}
        }
        ```

      requestBody:
        content:
          application/json:
            schema:
              example:
                filters:
                  alias:
                  - ACASE
                  - CPIERCE
                  - MARCIEDAVENPORT
                paging:
                  offset: 0
                  limit: 100
                  total: true
              required:
              - filters
              type: object
              properties: &id1568
                filters:
                  description: |-
                    User search criteria.
                  type: object
                  properties: &id1569
                    alias:
                      type: array
                      items:
                        type: string
                      description: |
                        Filters users based on their `id` property.

                        This search:
                        * is case insensitive. For example: *acase* matches *ACASE*.
                        * matches whole words. For example: *acas* does not match *acase*.
                        * does not support the wildcard character (&ast;).

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=


                        Multiple values can be provided as an array of strings.
                        The following example shows a complete request body for filtering three user IDs:
                        ```
                        {
                          "filters":
                          {
                             "alias":
                             [
                                "ACASE",
                                "CPIERCE",
                                "MARCIEDAVENPORT"
                             ]
                          }
                        }
                        ```
                    allow_logon:
                      type: boolean
                      description: |
                        Filters users based on their `allow_logon` value.<br><br>
                        If `true`, returns users with `allow_logon` enabled.<br>
                        If `false`, returns users with `allow_logon` disabled.<br>
                        If this parameter is omitted, it returns all users.
                    directory_id:
                      type: array
                      items:
                        type: string
                      description: |
                        Filters users based on directory IDs that are set by an organization's directory service.<br><br>
                        Multiple values can be included using a comma-separated list.
                    email:
                      type: string
                      maxLength: 254
                      description: |
                        Filters users based on their primary `email` property.<br><br>
                        Alternate email addresses `email2`, `email3`, `email4`, `email5` are not included in this search.<br>

                        This search:
                        * is case insensitive. For example: *acase* matches *ACASE*.
                        * matches whole words. For example: *acas* does not match *acase*.
                        * does not support the wildcard character (&ast;).

                        Special characters allowed are +*.&-_`~|$%^?!’#={}/
                    full_name:
                      type: string
                      description: |+
                        Filters users based on the `full_name` property.<br>

                        This search:
                        * is case insensitive. For example: *Enron* matches *enron*.
                        * matches whole words. For example: *acas* does not match *acase*.
                        * supports the wildcard character (&ast;) that matches any number of contiguous characters.
                        For example: *Microso&ast;* matches *Microsoft*, and icroso&ast;* matches *Microsoft*.

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                    nos:
                      type: string
                      description: |
                        Filters the type of user.

                        The allowed values are:

                        | Value | Description |
                        | :-: | - |
                        | 2 | Virtual User |
                        | 6 | Enterprise user |

                        For more information on types of users, see <a href="#tag--Users">Users</a>
                    is_external:
                      type: boolean
                      description: |+
                        Filters users based on their `is_external` value.<br>

                        If `true`, only the external users are returned.<br>
                        If `false`, only the internal users are returned.<br>
                        If omitted, both the internal and external users are returned.



                    location:
                      type: string
                      description: |+
                        Filters users based on their geographic location.<br>

                        This search:
                        * is case insensitive. For example: *houston* matches *Houston*.
                        * matches whole words. For example: *hou* does not match *Houston*.
                        * does not support the wildcard character (&ast;).

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                    password_never_expire:
                      type: boolean
                      description: |
                        Filters users whose password never expires.<br><br>
                        This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                        If `true`, returns users whose passwords never expires.<br>
                        If `false`, returns users whose passwords do expire.<br>
                        If this parameter is omitted, it returns users whose password expiration is of either status.
                    preferred_library:
                      type: string
                      description: |
                        Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
                        If specified, returns only users whose preferred library is equal to the specified value.<br>
                        If omitted, returns users with any preferred library.

                        This search:<br>
                        * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
                        * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
                        * does not support the wildcard character (&ast;).<br><br>
                        A preferred library is user's default library. Each user is required to have one preferred library.
                        It stores user's preferred settings such as language preference
                        and default search form for iManage Work advanced search.

                        If a user's preferred library is switched to another, the preferences are reset.
                    query:
                      type: string
                      description: |+
                        Filters users based on this string found in at least one of the `id`, `full_name`, or `email` properties.<br>

                        This search:
                        * is case insensitive. For example: *Enron* matches *enron*.
                        * matches whole words. For example: *Microso* does not match *Microsoft*.
                        * supports the wildcard character (&ast;) that matches any number of contiguous characters
                         For example: *Microso&ast;* matches *Microsoft*, and *&ast;icroso&ast;* matches *Microsoft*.

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                    ssid:
                      type: array
                      items:
                        type: number
                        format: long
                      description: |-
                        Filters  users based on SSIDs that were generated by iManage Work.<br><br>
                        Multiple SSIDs can be included using a comma-separated list.
                paging:
                  description: |-
                    Pagination settings.
                  properties:
                    offset:
                      type: integer
                      description: |-
                        Specifies the position of the first item to be returned from the result set.

                        This value indicates the starting position for the first item to return from among all the possible items.
                        By default, this value is zero, meaning items are returned starting from the first item in the list.
                        For example, if the offset is ten (`offset=10`), the first item returned will be the 11th item in the list.
                        The `offset` is often used in combination with the `limit` parameter.
                        For example, if `limit=10&offset=10`, the list returns ten items starting from the 11th item through the 20th.

                        If the value is greater than the number of items in the return list, no items are returned but no error occurs.<br>
                        For more information, see <a href="#overview--pagination">Pagination</a>.
                      default: 0
                    limit:
                      type: integer
                      minimum: 1
                      maximum: 1000
                      description: |-
                        Specifies the maximum number of items to include in the response.

                        The request returns either the actual number of items if there are fewer than or equal to the `limit` value,
                        or the `limit` value if there are more items than the `limit` value.
                        <br>
                        This parameter may be used in conjunction with pagination parameters. For more information, see <a href="#overview--pagination">Pagination</a>.
                      default: 25
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                properties:
                  data:
                    type: array
                    description: Array of users
                    items:
                      $ref: '#/components/schemas/Users.user'
        400: *id003
        401: *id008
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/users/admin-import:
    description: |-
      None
    post:
      tags:
      - Users
    # - customers-{customerId}-users-admin-import
      summary: Create or update a batch of global users
      description: |
        Create or update a batch of global users.<br><br>
        The global-management privileges required to implement this request: User Management.<br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        This allows multiple users to be created or updated in one request.
        The information about multiple users is specified as an array of user objects.
        Each user can have a different set of properties. The properties do not have to be identically formatted.

      operationId: POST_customers_{customerId}_users_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                import_id: abc123
                overwrite: true
                users:
                - allow_logon: true
                  distinguished_name: cn=andrew case,cn=users,dc=ajubalaw,dc=com
                  edit_date: '2017-11-14T16:42:37Z'
                  email: acase@ajubalaw.com
                  failed_logins: 0
                  force_password_change: false
                  full_name: Andrew Case
                  id: ACASE
                  is_external: false
                  last_sync_ts: '2011-10-12T10:41:52Z'
                  preferred_library: REACTIVE
                  pwd_changed_ts: '2017-11-14T16:42:36Z'
                  sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                  user_domain: cn=users,dc=ajubalaw,dc=com
                  user_id_ex: ACASE
                  user_nos: 6
                  user_password: ;js,ULR.)]BAikbD*S5z
                - allow_logon: false
                  edit_date: '2017-04-20T12:05:04Z'
                  email: ACTIVE_NRTADMIN@AJUBALAW.COM
                  failed_logins: 0
                  force_password_change: false
                  full_name: Active NRTADMIN
                  id: ACTIVE_NRTADMIN
                  is_external: false
                  preferred_library: ACTIVE
                  pwd_changed_ts: '2017-04-20T12:04:49Z'
                  user_id_ex: active_nrtadmin
                  user_nos: 2
                - allow_logon: true
                  distinguished_name: cn=adam smith,cn=users,dc=ajubalaw,dc=com
                  edit_date: '2017-11-14T16:42:37Z'
                  email: ASMITH@AJUBALAW.COM
                  failed_logins: 0
                  force_password_change: false
                  full_name: Adam Smith
                  id: ASMITH
                  is_external: false
                  last_sync_ts: '2011-10-12T10:41:52Z'
                  preferred_library: REACTIVE
                  pwd_changed_ts: '2017-11-14T16:42:36Z'
                  sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                  user_domain: cn=users,dc=ajubalaw,dc=com
                  user_id_ex: asmith
                  user_nos: 6
                - allow_logon: false
                  edit_date: '2017-04-20T12:05:04Z'
                  email: REACTIVE_NRTADMIN@AJUBALAW.COM
                  failed_logins: 0
                  force_password_change: false
                  full_name: Reactive NRTADMIN
                  id: REACTIVE_NRTADMIN
                  is_external: false
                  preferred_library: REACTIVE
                  pwd_changed_ts: '2017-04-20T12:04:49Z'
                  user_id_ex: reactive_nrtadmin
                  user_nos: 2
                  user_password: 7{|vB@Rb,Yk:)$}.2(Kr
              required:
              - import_id
              - users
              type: object
              properties: &id1562
                import_id:
                  type: string
                  description: |
                    For internal use only. Do not use.<br>
                    A client-supplied identifier for the import request.

# Specifies the action for a user who already exists with the same directory_id or email + alias combination:<br><br>
                overwrite:
                  type: boolean
                  description: |
                    Specifies to overwrite the information of an existing user.<br><br>
                    If `true`, overwrites information of an existing user.<br>
                    If `false`, does not overwrite information of an existing user, and a warning appears in the response for this user.<br>
                  default: false
                users:
                  type: array
                  items:
                    required:
                    - email
                    - id
                    type: object
                    properties:
                      allow_logon:
                        type: boolean
                        description: |
                          Specifies the user is allowed to sign in.<br><br>
                          If `true`, the user is allowed to sign in.<br>
                          If `false`, the user is not allowed to sign in.<br>
                          If omitted, the value is `false`.
                      create_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |+
                          Indicates the date (in the ISO 8601 format) when the user profile was created.<br><br>
                          If `create_date` id not provided, or null is provided:<br>
                          * On user creation, it defaults to the current date and time.<br><br>
                          * On user update, it does not get updated.<br><br>
                          The date can be specified in one of two formats.
                          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
                          µ represents zero or more microseconds.
                          For example: 2019-10-29T11:44:24.229Z
                          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
                          µ represents zero or more microseconds.
                          For example: 2019-10-29T11:44:24.229+02.00.
                          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
                          This can be used to inline the time difference.
                          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.



                        nullable: true
                      custom1:
                        maxLength: 254
                        type: string
                        description: |
                          Specifies additional information about the user.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>

                          The text restrictions are:

                          |Term|Value|
                          |:---|:---:|
                          | Minimum length | 0 |
                          | Maximum length | 254 |
                          | Unicode allowed | Yes |
                          | Special Characters allowed | Yes |
                        example: Used for court dates only through August.
                      custom2:
                        maxLength: 254
                        type: string
                        example: Used for court dates only through August.
                        description: |
                          Specifies additional information about the user.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>

                          The text restrictions are:

                          |Term|Value|
                          |:---|:---:|
                          | Minimum length | 0 |
                          | Maximum length | 254 |
                          | Unicode allowed | Yes |
                          | Special Characters allowed | Yes |
                      custom3:
                        maxLength: 254
                        type: string
                        description: |
                          Specifies additional information about the user.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>

                          The text restrictions are:

                          |Term|Value|
                          |:---|:---:|
                          | Minimum length | 0 |
                          | Maximum length | 254 |
                          | Unicode allowed | Yes |
                          | Special Characters allowed | Yes |
                      directory_id:
                        type: string
                        description: |
                          Specifies users based on directory IDs that are set by an organization's directory service.<br><br>
                          Multiple values can be included using a comma-separated list.
                        nullable: true
                      distinguished_name:
                        type: string
                        description: |
                          Unique name of the user which represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.<br><br>
                          For example: cn=username,dc=example,dc=ajubalaw,dc=com.<br><br>
                          Maximum length: 254.
                        nullable: true
                      edit_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Date when the user profile was last edited.<br><br>
                          Defaults to the current date and time if not provided, or if null is provided.
                        nullable: true
                      email:
                        type: string
                        maxLength: 254
                      email2:
                        maxLength: 254
                        type: string
                        example: acase_2@ajubalaw.com
                        description: |
                          Specifies an alternate email address for the user.<br><br>
                          This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                          Special characters allowed are +*.&-_`~|$%^?!’#={}/
                        nullable: true
                      email3:
                        maxLength: 254
                        type: string
                        example: acase_3@ajubalaw.com
                        description: |
                          Specifies an alternate email address for the user.<br><br>
                          This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                          Special characters allowed are +*.&-_`~|$%^?!’#={}/
                        nullable: true
                      email4:
                        maxLength: 254
                        type: string
                        example: acase_4@ajubalaw.com
                        description: |
                          Specifies an alternate email address for the user.<br><br>
                          This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                          Special characters allowed are +*.&-_`~|$%^?!’#={}/
                        nullable: true
                      email5:
                        maxLength: 254
                        type: string
                        example: acase_5@ajubalaw.com
                        description: |
                          Specifies an alternate email address for the user.<br><br>
                          This email address does not have to be unique among all the users' addresses in the iManage Work system.<br>
                          Special characters allowed are +*.&-_`~|$%^?!’#={}/
                        nullable: true
                      exch_autodiscover:
                        type: string
                        description: |
                          Exchange server details of the user.<br><br>
                          Maximum length is 1024.
                        nullable: true
                      extension:
                        type: string
                        description: |
                          Phone number extension of the user.<br><br>
                          Maximum length is 32.
                        nullable: true
                      failed_logins:
                        type: integer
                        description: |
                          The current number of failed attempts to sign in.<br><br>
                          Defaults to 0 if not provided, or if null is provided.
                        nullable: true
                      fax:
                        type: string
                        description: |
                          Fax number of the user.<br><br>
                          Maximum length is 32.
                        nullable: true
                      force_password_change:
                        type: boolean
                        default: false
                        description: |
                          Specifies the user must change their password on next sign in.<br><br>
                          This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                          If `true`, the user must change their password on next sign in.<br>
                          If `false`, the user does not have to change their password on next sign in.<br>
                      full_name:
                        type: string
                        description: |
                          Specifies the user's full name.

                          The requirements for a user's full name are:

                          |Description|Value|
                          |:---|:---:|
                          | Minimum length | 0 |
                          | Maximum length | 254 |
                          | Spaces allowed  | Yes |
                          | Unicode allowed | Yes |
                          | Special characters allowed | Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                           |
                        nullable: true
                      id:
                        type: string
                        description: |
                          Unique ID of the user.<br><br>
                          Maximum length is 64.
                      is_external:
                        type: boolean
                        description: |+
                          Specifies if the user is an external user.

                          If `true`, only the external users are returned.<br>
                          If `false`, only the internal users are returned.<br>
                          If omitted, both the internal and external users are returned.



                      last_sync_ts:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Date when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
                        nullable: true
                      location:
                        type: string
                        description: |
                          Geographical location of the user.<br><br>
                          Maximum length is 254.
                        nullable: true
                      lockout_ts:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Date when the user was locked and could not access iManage Work Server.
                        nullable: true
                      phone:
                        type: string
                        description: |
                          Phone number of the user.<br><br>
                          Maximum length is 32.
                        nullable: true
                      preferred_library:
                        type: string
                        description: |
                          Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
                          If specified, returns only users whose preferred library is equal to the specified value.<br>
                          If omitted, returns users with any preferred library.

                          This search:<br>
                          * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
                          * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
                          * does not support the wildcard character (&ast;).<br><br>
                          A preferred library is user's default library. Each user is required to have one preferred library.
                          It stores user's preferred settings such as language preference
                          and default search form for iManage Work advanced search.

                          If a user's preferred library is switched to another, the preferences are reset.
                        nullable: true
                      pwd_changed_ts:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the date (in the ISO 8601 format) when the user's password was last changed.<br><br>
                          This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                          For example: 2020-03-09T17:01:16Z
                        nullable: true
                      pwd_never_expire:
                        type: boolean
                        description: |
                          Specifies if the user's password never expires.<br><br>
                          This is applicable to virtual users only (whose `user_nos=2`).

                          If `true`, the user's password never expires.<br>
                          If `false`, the user's password expires.

                          This parameter may be optional for some environments.
                          Prior to executing this request, check GET&nbsp;`/customers/{customerId}/features`.<br>
                          If `global_users` is `true`, this parameter is optional.<br>
                          If `global_users` is `false`, this parameter is required.<br>
                      user_domain:
                        type: string
                        description: |
                          Specifies  the fully qualified domain name for the user's directory service.

                          It is the metadata from LDAP server that determines the unit to which the user belongs to.
                          This information is mainly used by iManage system administrators.
                        nullable: true
                      user_id_ex:
                        type: string
                        description: |
                          Specifies the original value of the user ID that is received from the source system such as Active Directory.

                          It is formatted internally to all upper case letters, and then saved as `id`.
                          The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
                          For example, if `user_id_ex` is ACase then the `id` will be ACASE.
                          Alphanumeric characters and Unicode are allowed.
                      user_nos:
                        type: integer
                        description: |
                          Specifies the type of user.

                          The allowed values are:

                          | Value | Description |
                          | :-: | - |
                          | 2 | Virtual User |
                          | 6 | Enterprise user |

                          For more information on types of users, see <a href="#tag--Users">Users</a>.
                      user_password:
                        type: string
                        description: |
                          Specifies the sign-in password of the user.

                          The requirements for the password are:
                          * Minimum 12 characters.
                          * At least 1 upper case character.
                          * At least 1 lower case character.
                          * At least 1 number or special character.
                          * Special characters supported are " !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"

                          Required if adding a virtual user or converting a user to virtual.<br>
                          Must not be provided if adding a non-virtual user or converting a user to non-virtual user.<br>
                          Optional if updating an existing virtual user.
                    additionalProperties: true
                  description: |
                    Array of users to add or update.<br><br>
                    The following fields are required depending on whether the user is added or updated:
                    * For adding a user: `id`, `email`, `allow_logon`, `user_id_ex`, and `user_nos`
                    * For updating a user: `id` and `email`
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: abc123
                    task_id: def456
                    status: success
                    users:
                    - user_num: 123
                    - user_num: 456
                  warnings:
                  - data:
                      allow_logon: true
                      distinguished_name: cn=adam smith,cn=users,dc=ajubalaw,dc=com
                      edit_date: '2017-11-14T16:42:37Z'
                      email: ASMITH@AJUBALAW.COM
                      failed_logins: 0
                      force_password_change: false
                      full_name: Adam Smith
                      id: ASMITH
                      is_external: false
                      last_sync_ts: '2011-10-12T10:41:52Z'
                      preferred_library: REACTIVE
                      pwd_changed_ts: '2017-11-14T16:42:36Z'
                      sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                      user_domain: cn=users,dc=ajubalaw,dc=com
                      user_id_ex: asmith
                      user_nos: 6
                    code: NRC_INVALID_PARAM
                    error: user_password must be supplied when creating virtual users
                      or converting an existing domain user to virtual.
                    field: user_password
                  - data:
                      allow_logon: false
                      edit_date: '2017-04-20T12:05:04Z'
                      email: REACTIVE_NRTADMIN@AJUBALAW.COM
                      failed_logins: 0
                      force_password_change: false
                      full_name: Reactive NRTADMIN
                      id: REACTIVE_NRTADMIN
                      is_external: false
                      preferred_library: REACTIVE
                      pwd_changed_ts: '2017-04-20T12:04:49Z'
                      user_id_ex: reactive_nrtadmin
                      user_nos: 2
                      user_password: '*'
                    code: NRC_INVALID_PARAM
                    error: user_password must not be supplied when creating a domain
                      user or converting an existing virtual user to domain.
                    field: user_password
                required:
                - data
                type: object
                properties: &id098
                  data:
                    required:
                    - import_id
                    - task_id
                    - status
                    - users
                    type: object
                    properties:
                      import_id:
                        type: string
                        description: |
                          (Intended for future use once the Admin Import API is made asynchronous):<br>
                          A client-supplied identifier for the import request.
                      task_id:
                        type: string
                        description: |
                          Future use (once the Admin Import API is made asynchronous):<br>
                          A server-generated ID of the import task.
                          Used for checking the status of this import task.<br>
                          May also be used by the client in conjunction with import_id to map import tasks on the server to the client's import requests.
                      status:
                        type: string
                        description: |
                          Future use (once the Admin Import API is made asynchronous):<br>
                          Identifies the current status of the import task.
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/Users.adminImportResponseDatum'
                        description: |-
                          Array of successfully imported users.
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.warning'
                    description: |-
                      Array of warning messages indicating import errors
        400: *id003
        401: *id008
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/users/{userId}:
    description: |-
      None

    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}
      summary: Get information of a global user
      description: |
        Returns the information about the specified user.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns information about the user ACASE:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a user, see <a href="#post-/work/api/v2/customers/-customerId-/users">POST /customers/{customerId}/users</a>
        * To see information of a library user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}</a>
      operationId: GET_customers_{customerId}_users_{userId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    allow_logon: true
                    create_date: '2020-01-15T15:25:48.857103Z'
                    edit_date: '2020-01-15T15:25:48.857193Z'
                    email: acase@ajubalaw.com
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    preferred_library: active_us
                    ssid: '98512908316573949'
                    user_domain: cn=users,dc=ajubalaw,dc=com
                    user_id_ex: ACASE
                    user_nos: 6
                    user_num: 98512908316573949
                required:
                - data
                type: object
                properties: &id099
                  data:
                    $ref: '#/components/schemas/Users.user'
                additionalProperties: false
        401: *id008
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}
      summary: Update a user's information
      description: |
        Updates the specified user's information.<br><br>
        The global privileges required to implement this request: User Management.<br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        Each field supplied in the request body replaces the existing field.
        Therefore, individual fields can be updated without affecting other fields.
        If the user does not exist, this request fails.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the `allowed_logon` value of the user ACASE:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase`<br>
        The body:
        ```
        {
          "allow_logon": true
        }
        ```
      operationId: PATCH_customers_{customerId}_users_{userId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: acase@ajubalaw.com
                full_name: Andrew Case
                id: ACASE
                is_external: false
                allow_logon: true
                preferred_library: active_us
                user_domain: cn=users,dc=ajubalaw,dc=com
                user_id_ex: ACASE
                user_nos: 6
              required:
              - id
              - email
              type: object
              properties: *id009
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    allow_logon: true
                    create_date: '2020-01-15T15:25:48.857103Z'
                    edit_date: '2020-01-15T15:25:48.857193Z'
                    email: acase@ajubalaw.com
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    preferred_library: active_us
                    ssid: '98512908316573949'
                    user_domain: cn=users,dc=ajubalaw,dc=com
                    user_id_ex: ACASE
                    user_nos: 6
                    user_num: 98512908316573949
                required:
                - data
                type: object
                properties: *id010
                additionalProperties: false
        401: *id008
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/users/{userId}/libraries:
    description: |-
      None
    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}-libraries
      summary: Get libraries the user is assigned to
      description: |
        Returns all libraries the specified user has been assigned to.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all libraries that user ACASE has been assigned to:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/libraries`<br>
      operationId: GET_customers_{customerId}_users_{userId}_libraries
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: active_us
                    library_id: 15
                    preferred: true
                  - id: active_uk
                    library_id: 28
                    preferred: false
                  total_count: 2
                title: Accessible Libraries
                required:
                - data
                type: object
                properties: &id1670
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - preferred
                      - library_id
                      type: object
                      properties:
                        id:
                          type: string
                          description: Indicates the name of the library the user
                            is assigned to.
                          example: "active_us"
                        library_id:
                          type: integer
                          description: For internal use only. Do not use.
                        preferred:
                          type: boolean
                          description: |
                            Indicates if it is user's preferred library.<br><br>
                            If `true`, it is user's preferred library.<br>
                            If `false`, it is not the user's preferred library.

                            A preferred library is user's default library. Each user is required to have one preferred library.
                            It stores user's preferred settings such as language preference
                            and default search form for iManage Work advanced search.

                            If a user's preferred library is switched to another, the preferences are reset.
                          example: true
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id008
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/users/{userId}/apps:
    description: |
      Applications (also called apps) are software packages that either integrate with iManage Work to access data from it, or extend the functionality of iManage Work client applications.
      For example, a firm may use an application for document comparison.
      The application can extend iManage Work functionality by adding a context menu to documents for document comparison

      These applications are either developed by iManage, third-party vendors, or a company's internal development staff.

      Types of apps:
      * iManage apps - These applications are available for iManage Work client applications.
        For example, iManage Work Desktop for Windows, iManage Work Email Management for Gmail, iManage Work Desktop for Mac, and Mobility for iOS.

      * Third-party apps:
        * Standalone applications that interact with iManage Work through APIs only to access information and do not modify the iManage Work user interface, for example an application that tracks and analyzes audit records of documents in iManage Work to understand user behavior.
        * Applications that extend iManage features and modify the user interface by providing context menus or new panels in the the following applications:
          * iManage Work
          * iManage Work Desktop for Windows
          * iManage Control Center

      Not all apps are available to all users. Their access to apps are defined by their access level and tier support level.
      When users sign in into iManage Control Center, they can see only those applications on the home page on which they have the necessary privileges.
    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}-apps
      summary: Get a user's global apps
      description: |
        Returns a list of global apps available to a user.

        For more information on apps, see <a href="#tag--Apps">Apps</a>.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns global apps that the user ACASE has access to:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/apps`<br>
      operationId: GET_customers_{customerId}_users_{userId}_apps
      parameters:
      - *id004
      - name: client_id
        in: query
        description: Specifies an app's client ID.
        schema:
          type: string
      - *id011
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: 399695f3-0245-4b7b-a4dc-a6a309fca236
                  - id: f8bc2488-dab9-4e45-9dac-4ea37bfb8a87
                  - id: 5d9af773-00c3-423c-ab5f-9c0fff05d54d
                required:
                - data
                type: object
                properties: &id629
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apps.appIdObj'
        401: *id002
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/users/{userId}/roles:
    description: |-
      None
    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}-roles
      summary: Get a user's global roles
      description: |
        Returns a list of the global roles assigned to the user.

        The global-management privileges required to implement this request: Role Management.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        In addition to the roles' names, the status of each privilege within the role is listed.

        A global role is a set of privileges assigned to a user for managing iManage Work system operations,
        such as creating users, roles, and managing library encryption.

        Each role contains all the global privileges, and each global privilege is enabled or disabled.
        For example, a global role may be named *User Managers*, and the only role global privilege enabled is User Management.

        Any number of roles can be created for different set of priveleges in an organization.
        A user may be assigned with any number of roles. If a user belongs to more than one role,
        and there is a conflict among global privileges, the most permissive global privilege takes precedence.
        For example, if one role a user belongs to has the global privilege Settings Management enabled,
        and another role the user belongs to has the global privilege Settings Management disabled,
        the user will be treated as having the global privilege Settings Management enabled.

        Having any global privilege enabled does not make a user an iManage Work system administrator (tier 1, tier 2, or an NRTADMIN).
        That is, a user who is not a tier 1, tier 2, or an NRTADMIN can have global privileges enabled.
        However, many iManage Work system administrators will need to have global privileges enabled.
        For example, an NRTADMIN who manages users requires the global privilege User Management enabled.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns global roles that the user ACASE belongs to:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/roles`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see more global roles requests, see the <a href="#tag--Global-Roles">Global Roles</a> collection.
        * To see the roles from the library-management level that the user belongs to, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/role">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/role</a>
      operationId: GET_customers_{customerId}_users_{userId}_roles
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: App Managers
                    description: App Managers role
                    app_management: admin
                    encryption_management: no_access
                    feature_management: no_access
                    group_management: admin
                    role_management: no_access
                    settings_management: admin
                    user_management: no_access
                  - id: Role Managers
                    description: Role Managers role
                    app_management: no_access
                    encryption_management: admin
                    feature_management: admin
                    group_management: no_access
                    role_management: admin
                    settings_management: admin
                    user_management: admin
                  total_count: 2
                required:
                - data
                type: object
                properties: &id025
                  data:
                    description: User roles
                    type: array
                    items:
                      $ref: '#/components/schemas/Roles.customerRole'
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: true
        401: *id008
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/users/{userId}/groups:
    description: |-
      None
    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}-groups
      summary: Get global groups the user belongs to
      description: |
        Gets the global groups that the user belongs to.

        The global-management privileges required to implement this request: User Management.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        This request lists global groups.
        The global groups are used for managing users for application security throughout the iManage Work system.
        They are not library-specific groups.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all global groups that the user ACASE is a member of:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/groups`<br>

        This request returns all the disabled global groups that the user ACASE is a member of:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/groups/out-of?enabled=false`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see global groups, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>
        * To see global groups that the user does not belong to, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups/out-of">GET /customers/{customerId}/users/{userId}/groups/out-of</a>
        * To see library groups, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/groups">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups</a>
        * To see library groups a user is not a member of, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/groups/out-of">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups/out-of</a>
      operationId: GET_customers_{customerId}_users_{userId}_groups
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2021-01-18T08:28:19.57Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2021-01-18T11:34:13.462Z'
                    enabled: true
                    full_name: Matters Related Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  - create_date: '2019-10-31T19:34:47.405Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2020-08-20T17:58:47.501Z'
                    enabled: true
                    full_name: Case Management Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  total_count: 2
                required:
                - data
                type: object
                properties: &id012
                  data:
                    type: array
                    description: Array of global groups
                    items:
                      $ref: '#/components/schemas/Groups.group'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
      - &id013
        name: directory_id
        in: query
        description: |-
          Filters groups based on their ID from external ADFS repository.
        schema:
          type: string
      - &id014
        name: enabled
        in: query
        description: |
          Filters groups based on their enabled or disabled status.<br><br>
          If `true`, the group is enabled.<br>
          If `false`, the group is not enabled.<br>
          If omitted, both enabled and disabled groups are returned.
        schema:
          type: boolean
      - &id015
        name: external
        in: query
        description: |
          Filters groups based on their `is_external` value.<br><br>
          If `true`, only the external groups are returned.<br>
          If `false`, only the internal groups are returned.<br>
          If omitted, both the internal and external groups are returned.
        schema:
          type: boolean
      - *id011
      - *id006
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/users/{userId}/groups/out-of:
    description: |-
      None
    get:
      tags:
      - Users
    # - customers-{customerId}-users-{userId}-groups-out-of
      summary: Get global groups the user does not belong to
      description: |
        Gets the global groups that the user does not belong to.

        The global-management privileges required to implement this request: User Management.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        This request lists global groups.
        The global groups are used for managing users for application security throughout the iManage Work system.
        They are not groups used within libraries.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all global groups that the user ACASE is not a member of:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/groups/out-of`<br>

        This request returns all global groups that the user ACASE is not a member of and those groups must be disabled:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/users/acase/groups/out-of?enabled=false`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see global groups, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>
        * To see global groups that the user is a member of, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>
        * To see library groups, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/groups">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups</a>
        * To see library groups a user is not a member of, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/groups/out-of">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups/out-of</a>
        * To see a list of global groups that the user belongs to, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>
      operationId: GET_customers_{customerId}_users_{userId}_groups_out-of
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2021-01-18T08:28:19.57Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2021-01-18T11:34:13.462Z'
                    enabled: true
                    full_name: Matters Related Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  - create_date: '2019-10-31T19:34:47.405Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2020-08-20T17:58:47.501Z'
                    enabled: true
                    full_name: Case Management Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  total_count: 2
                required:
                - data
                type: object
                properties: *id012
                additionalProperties: true
        401: *id008
        404: *id005
      parameters:
      - *id004
      - *id013
      - *id014
      - *id015
      - *id011
      - *id006
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/settings/{appId}:
    description: |-
      Manages settings for either a specific application or for global settings.
    get:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}
      summary: Get a settings collection
      description: |
        Returns a settings collection for either a specified application or for global settings.<br><br>
        This request returns a list of settings based on the specified app ID.
        Use either the app ID to return the settings associated with the specified application, or use the literal `global` to return global settings.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">App ID</font><br>
        Using the app ID (also called a client ID) returns the settings associated with the specified application.
        The application must have been previously registered, such as by an iManage Work system administrator.

        Applications are not required to have settings. In those cases, a successful request returns an empty data set.
        See the parameter `appID` below for additional details.
        For example, to return a list of settings for a specific application, use its app ID, or its client ID:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/settings/9ce3b82d-88h4-4255-b0ee-e516a239f4d1`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Global</font><br>
        Using the literal `global` returns a list of settings that are applicable across the iManage Work system and not to specific applications.
        Global settings indicate additional capabilities that may available to users.
        See the parameter `appID` below for additional details.<br>

        For example, to return a settings collection for the global settings:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/settings/global`<br>
        It returns:<br>
        ```json
        {
          "data":
          [
            {
                "edit_date": "2019-02-27T17:52:54.014Z",
                "id": "5f08ba29-e654-439f-a859-f4e52a5e2617",
                "type": "value",
                "value": 131
            },
            {
                "_links": {
                    "file": {
                        "href": "https://www.ajubalaw.com/work/api/v2/customers/100/settings/global/commonsettings/file"
                    }
                },
                "edit_date": "2018-02-06T14:44:08.472Z",
                "filename": "commonsettings.txt",
                "id": "commonsettings",
                "type": "file"
            }
          ]
        }
        ```
        These values are stored in one of two ways: Settings collection (specified by its `type` being `value`), or a file (specified by its `type` being `file`).<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        * To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        * To read values from a settings collection, see GET `/customers/{customerId}/settings/{appId}/{settingId}`<br>
      operationId: GET_customers_{customerId}_settings_{appId}
      parameters:
      - *id004
      - name: id_starts_with
        in: query
        description: |
          Specifies the text to match from the beginning of the `id` field.<br><br>
          For example, `id_starts_with=CommonUsage` matches the `id` field *CommonUsage&nbsp;settings*, but not *Settings&nbsp;for&nbsp;CommonUsage*.
          The search is case insensitive, and no wildcard search character is needed.
        schema:
          type: string
          example: im
      - *id011
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id639
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apps.settingWithLibraryOverrides'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
              examples:
                ex1:
                  summary: 'Without library overrides'
                  value:
                    data:
                    - id: colors
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                      - red
                      - orange
                      - yellow
                      - green
                      - indigo
                      - violet
                    - id: helpEnabled
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: true
                    - id: count
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: 1234
                    - id: windowProperties
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                        helpEnabled: true
                        windowPosition:
                          x: 100
                          y: 250
                    - id: label
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: 'Items in list: {1}'
                    - id: blob
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: file
                      _links:
                        file:
                          href: https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/apps/df66290d-eebf-4e46-9e67-e68f07a597d7/settings/blob/file
                    total_count: 6
                ex2:
                  summary: 'With library overrides'
                  value:
                    data:
                    - id: colors
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                      - red
                      - orange
                      - yellow
                      - green
                      - indigo
                      - violet
                      library_overrides: []
                    - id: helpEnabled
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: true
                      library_overrides: []
                    - id: count
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: 1234
                      library_overrides: []
                    - id: windowProperties
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                        helpEnabled: true
                        windowPosition:
                          x: 100
                          y: 250
                      library_overrides: []
                    - id: label
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: 'Items in list: {1}'
                      library_overrides: []
                    - id: blob
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: file
                      _links:
                        file:
                          href: https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/apps/df66290d-eebf-4e46-9e67-e68f07a597d7/settings/blob/file
                      library_overrides: []
                    - id: domain
                      edit_date: '2022-02-25T20:15:37.461Z'
                      type: value
                      value: some.domain.com
                      library_overrides:
                      - edit_date: '2022-02-27T16:52:37.554Z'
                        library: US_active
                        value: us-override.domain.com
                      - edit_date: '2022-02-28T16:52:37.554Z'
                        library: UK_active
                        value: uk-override.domain.com
                    total_count: 7
        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - $ref: '#/components/parameters/appId'
  /platform/api/v2/customers/{customerId}/users/{userId}/tasks:
    description: |-
      None
    get:
      tags:
      - Asynchronous Task Framework
      summary: Get a user's background tasks
      description: |
        Get the background tasks owned by the user.

        Key properties of this background task are returned in the response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The user making this request must be the user specified in the path.

      operationId: GET_customers_{customerId}_users_{userId}_tasks

      parameters:
      - *id004
      - name: cursor
        in: query
        description: |-
          Specifies to begin the search from this cursor.<br><br>
          If omitted, the return set is from the beginning.<br>
          A new cursor value is returned on subsequent requests which points to the next record to start querying from.

        required: false
        schema:
          type: string
          example: 100

      - name: limit
        in: query
        description: |-
          Specifies the maximum number of items to be returned in the response.<br>
          The request returns either the actual number of items if there are fewer than or equal to the `limit` value, or the `limit` value if there are more items than the limit value.

        required: false
        schema:
          type: integer
          default: 100
          example: 25

      - name: status
        in: query
        description: |+
          Specifies to retrieve tasks that are in the indicated state.
          Multiple values may be entered as a comma-separated list.

          The following are available task statuses:

          | Value     | Description                                       |
          |-----------|---------------------------------------------------|
          | queued    | Task is submitted and is in queue for processing. |
          | success   | Task completed successfully.                      |
          | failed    | Task has failed.                                  |
          | cancelled | Task has been cancelled by a user.                |
          | aborted   | Task was aborted by the system.                   |



        required: false
        schema:
          type: string
          enum: ["queued", "success", "failed", "cancelled", "aborted"]
          default: false
          example: "success"

      - name: type
        in: query
        description: |+
          Specifies to retrieve tasks that are of the indicated type.
          Multiple values may be entered as a comma-separated list.

          The following are available task types:

          | Value                             | Description                                   |
          |-----------------------------------|-----------------------------------------------|
          | bulk_update_container_security    | Update the security of containers in bulk.    |
          | bulk_update_document_security     | Update the security of documents in bulk.     |
          | shred_document                    | Shred documents in bulk.                      |



        required: false
        schema:
          type: string
          enum: ["bulk_update_container_security", "bulk_update_document_security",
            "shred_document"]
          default: false
          example: "bulk_update_document_security"

      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: '500'
                    library: ACTIVE_US
                    name: Bulk Edit Security
                    create_date: '2007-08-16T20:10:51Z'
                    edit_date: '2007-08-16T20:15:51Z'
                    status: success
                    type: bulk_update_document_security
                  - id: '501'
                    library: ACTIVE_US
                    name: Bulk Edit Security
                    create_date: '2017-08-16T20:10:51Z'
                    edit_date: '2017-08-16T20:15:51Z'
                    status: success
                    type: bulk_update_document_security
                  cursor: '502'
                required:
                - data
                type: object
                properties: &id1687
                  data:
                    type: array
                    description: |-
                      Indicates the tasks owned by the specified user.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            The ID of the task.
                        library:
                          type: string
                          description: |-
                            The name of the library to which the task belongs.
                        name:
                          type: string
                          description: |-
                            Indicates the name of the task provided by the user.
                        type:
                          $ref: '#/components/schemas/BackgroundTask.type'
                        create_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the date (in the ISO 8601 format) when the task was created.
                        edit_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the date (in the ISO 8601 format) when the task was last updated.
                        status:
                          $ref: '#/components/schemas/BackgroundTask.status'
                  cursor:
                    type: string
                    description: |-
                      Indicates the cursor value to retrieve the next set of results.<br>
                      A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.<br>
                      If the response returns a cursor value, it can be passed in as a query parameter for the subsequent request to retrieve the next set of results.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.

                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/userId'


  /work/api/v2/customers/{customerId}/settings/{appId}/users/{userId}:
    description: |-
      The given user's settings for the given App.
    get:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-users-{userId}
      summary: Get a user's application settings
      description: |-
        Returns a list a user's application settings.
      operationId: GET_customers_{customerId}_settings_{appId}_users_{userId}
      parameters:
      - *id004
      - name: id_starts_with
        in: query
        description: |
          Specifies the text to match from the beginning of the `id` field.<br><br>
          For example, `id_starts_with=CommonUsage` matches the `id` field "CommonUsage settings", but not "Settings for CommonUsage".
          The search is case insensitive, and no wildcard search character is needed.
        schema:
          type: string
          example: id_starts_with=im.
      - *id011
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: colors
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value:
                    - red
                    - orange
                    - yellow
                    - green
                    - indigo
                    - violet
                  - id: helpEnabled
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value: true
                  - id: count
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value: 1234
                  - id: windowProperties
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value:
                      helpEnabled: true
                      windowPosition:
                        x: 100
                        y: 250
                  - id: label
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value: 'Items in list: {1}'
                  - id: blob
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: file
                    _links:
                      file:
                        href: https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/apps/df66290d-eebf-4e46-9e67-e68f07a597d7/settings/blob/file
                  total_count: 6
                required:
                - data
                type: object
                properties: &id642
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apps.setting'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        401: *id002
        403: *id001
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/appId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/settings/{appId}/users/{userId}/{settingId}:
    description: |
      Setting value is a key-value pair associated to an application or global setting.<br><br>
      For example, if settingId is `im.email.filingFolder.defaultName`, the setting value can be `"value": "Email"`.
      These values are stored in one of two ways: Settings collection (specified by its type being `value`), or as a file (specified by its type being `file`).<br>

      <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
      To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
      To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
      To read values from a settings collection, see GET `/customers/{customerId}/settings/{appId}/{settingId}`<br>
      To update values from a settings collection, see PUT `/customers/{customerId}/settings/{appId}/{settingId}`
    get:
      tags:
      - Settings
    # - customers-{customerId}-settings-{appId}-users-{userId}-{settingId}
      summary: Get a user's setting
      description: |
        Returns a setting collection for either the specified app ID or for the specified global setting.<br>

        For example, to return a settings value:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/settings/global/im.email.filingFolder.defaultName`<br>

        It returns:<br>
        ```json
        {
            "data": {
                "edit_date": "2019-02-06T14:44:08.471Z",
                "id": "im.email.filingFolder.defaultName",
                "type": "value",
                "value": "Email"
            }
        }
        ```
        These values are stored in one of two ways: Settings collection (specified by its type being `value`), or a settings file (specified by its type being `file`).<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update values from a settings collection, see PUT GET `/customers/{customerId}/settings/{appId}/{settingId}`
      operationId: GET_customers_{customerId}_settings_{appId}_users_{userId}_{settingId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: colors
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value:
                    - red
                    - orange
                    - yellow
                    - green
                    - indigo
                    - violet
                required:
                - data
                type: object
                properties: &id016
                  data:
                    required:
                    - id
                    - edit_date
                    - type
                    type: object
                    properties: &id637
                      id: &id017
                        type: string
                        description: |-
                          Indicates the name of the setting.
                      edit_date: &id018
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the date (in ISO 8601 format) when the setting was last edited.
                      type: &id019
                        $ref: '#/components/schemas/Apps.settingType'
                      value: &id020
                        description: |
                          Indicates the value of the setting.<br><br>
                          For example, the value can be like `"value": true`, or `"value": "indeterminate"`.
                      _links: &id021
                        required:
                        - file
                        type: object
                        properties:
                          file:
                            required:
                            - href
                            type: object
                            properties:
                              href:
                                title: URL
                                type: string
                                description: |-
                                  Indicates the URL to a web page, resource, or file.
                            description: |-
                              Indicates the structure for the link to download a settings file.
                      filename: &id022
                        type: string
                        description: |-
                          Indicates the filename of the setting file.
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-users-{userId}-{settingId}
      summary: Update a user's setting
      description: |
        Updates a setting value.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management level privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role with the Settings Management privilege enabled.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates a settings value:<br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/100/settings/global/im.email.filingFolder.defaultName`<br>
        Body:<br>
        ```
        {
          "type": "value",
          "value": false
        }
        ```
        It returns:<br>
        ```
        {
            "data": {
                "edit_date": "2019-02-27T16:52:37.55463Z",
                "id": "oWDH9DeCJ7u1yP5UAs7HqaREjEt5mQ3E",
                "type": "value",
                "value": false
            }
        }
        ```
        These values are stored in one of two ways: Settings collection (specified by its type being `value`), or a file (specified by its type being `file`).<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To read values from a settings collection, see GET `/customers/{customerId}/settings/{appId}/{settingId}`<br>
        For general information about the global privilege of Settings Management, see the `/customers/{customerId}/roles` collection.<br>
        For specific information about a specific global setting, see the `/customers/{customerId}/roles/{roleId}` family.
      operationId: PUT_customers_{customerId}_settings_{appId}_users_{userId}_{settingId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                type: value
                value:
                - red
                - orange
                - yellow
                - green
                - indigo
                - violet
              title: setting
              required:
              - type
              type: object
              properties: &id641
                type:
                  $ref: '#/components/schemas/Apps.settingType'
                value:
                  description: |
                    Specifies a setting value.

                    This value can be any JSON valid type. For example, string, number, object, array, boolean, or null.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: colors
                    edit_date: '2022-04-27T20:15:37.461Z'
                    type: value
                    value:
                    - red
                    - orange
                    - yellow
                    - green
                    - indigo
                    - violet
                required:
                - data
                type: object
                properties: *id016
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-users-{userId}-{settingId}
      summary: Delete a user's setting
      description: |
        Deletes a setting.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management level privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role with the Settings Management privilege enabled.
      operationId: DELETE_customers_{customerId}_settings_{appId}_users_{userId}_{settingId}
      responses:
        204:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/appId'
    - $ref: '#/components/parameters/userId'
    - $ref: '#/components/parameters/settingId'
  /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}/file:
    description: |-
      None
    get:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-{settingId}-file
      summary: Download a setting file
      description: |
        Downloads a setting file.<br><br>
        The contents of a file is determined by the file owner.
        The file may contain settings, or it may contain a data stream, such as for textual or graphical information.
      operationId: GET_customers_{customerId}_settings_{appId}_{settingId}_file
      responses:
        200:
          description: ''
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  The Setting file's name
                example: |
                  Content-Disposition: attachment; filename="settings.yml"
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  The setting file's size in bytes
                example: |
                  Content-Length: 1234
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  The setting file's MIME type
                example: |
                  Content-Type: text/plain
          content:
            application/octet-stream:
              schema:
                type: string
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-{settingId}-file
      summary: Update a setting file
      description: |
        Updates a setting file.<br><br>
        The minimum access permission required on the library to implement this request: NRTADMIN.
      operationId: PUT_customers_{customerId}_settings_{appId}_{settingId}_file
      parameters:
      - name: Content-Disposition
        in: header
        schema:
          example: |
            Content-Disposition: form-data; name="file"; filename="filename.extension"
      - *id004
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: |-
                    The file content.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        400: *id003
        401: *id002
        403: *id001
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/appId'
    - $ref: '#/components/parameters/settingId'
  /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}:
    get:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-{settingId}
      summary: Get a global setting or app ID setting collection
      description: |
        Returns a setting collection for either the specified app ID or for the specified global setting.<br>

        For example, to return a settings value:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/settings/global/im.email.filingFolder.defaultName`<br>

        It returns:<br>
        ```json
        {
            "data": {
                "edit_date": "2019-02-06T14:44:08.471Z",
                "id": "im.email.filingFolder.defaultName",
                "type": "value",
                "value": "Email"
            }
        }
        ```
        These values are stored in one of two ways: Settings collection (specified by its type being `value`), or a settings file (specified by its type being `file`).<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update values from a settings collection, see PUT GET `/customers/{customerId}/settings/{appId}/{settingId}`
      operationId: GET_customers_{customerId}_settings_{appId}_{settingId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id023
                  data:
                    properties: &id638
                      library_overrides:
                        type: array
                        items:
                          $ref: '#/components/schemas/Apps.libraryOverrideSetting'
                        description: |
                          Indicates the value of the library overrides. Only applicable to settings of type `value`.
                      id: *id017
                      edit_date: *id018
                      type: *id019
                      value: *id020
                      _links: *id021
                      filename: *id022
                    required:
                    - id
                    - edit_date
                    - type
                    type: object
              examples:
                ex1:
                  summary: 'Without library overrides'
                  value:
                    data:
                      id: colors
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                      - red
                      - orange
                      - yellow
                      - green
                      - indigo
                      - violet
                ex2:
                  summary: 'With library overrides'
                  value:
                    data:
                      id: domain
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: some.domain.com
                      library_overrides:
                      - edit_date: '2022-02-27T16:52:37.554Z'
                        library: US_active
                        value: us-override.domain.com
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-{settingId}
      summary: Update a setting value
      description: |
        Updates a setting value.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management level privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role with the Settings Management privilege enabled.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates a settings value:<br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/100/settings/global/im.email.filingFolder.defaultName`<br>
        Body:<br>
        ```
        {
          "type": "value",
          "value": false
        }
        ```
        It returns:<br>
        ```
        {
            "data": {
                "edit_date": "2019-02-27T16:52:37.55463Z",
                "id": "oWDH9DeCJ7u1yP5UAs7HqaREjEt5mQ3E",
                "type": "value",
                "value": false
            }
        }
        ```
        These values are stored in one of two ways: Settings collection (specified by its type being `value`), or a file (specified by its type being `file`).<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To read a settings file, see GET `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To update a settings file, see PUT `/customers/{customerId}/settings/{appId}/{settingId}/file`<br>
        To read values from a settings collection, see GET `/customers/{customerId}/settings/{appId}/{settingId}`<br>
        For general information about the global privilege of Settings Management, see the `/customers/{customerId}/roles` collection.<br>
        For specific information about a specific global setting, see the `/customers/{customerId}/roles/{roleId}` family.
      operationId: PUT_customers_{customerId}_settings_{appId}_{settingId}
      requestBody:
        content:
          application/json:
            schema:
              title: setting
              required:
              - type
              type: object
              properties: &id640
                type:
                  $ref: '#/components/schemas/Apps.settingType'
                value:
                  description: |
                    Specifies a value.

                    This value can be any JSON value such as a string, number, object, array, boolean, or null.
                library_overrides:
                  type: array
                  description: |
                    Specifies the value of the library overrides. Only applicable to settings of type `value`.

                    <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
                    Prior to using this property, check GET `/customers/{customerId}/features`.<br>
                    If `application_settings_library_overrides` is `true`, this property is available.

                    The `library_overrides` property affects existing library overrides as follows:
                      * If it is not passed in or is `null`, no changes to `library_overrides`.
                      * If it is an empty array, `library_overrides` are removed.
                      * If it has an array of objects, any existing `library_overrides` are replaced with the objects in the array.
                  items:
                    type: object
                    required:
                    - library
                    - value
                    properties:
                      library:
                        type: string
                        description: |
                          Specifies the library name.
                      value:
                        type: string
                        description: |
                          Specifies the library override setting value.
            examples:
              ex1:
                summary: 'Without library overrides'
                value:
                  type: value
                  value:
                  - red
                  - orange
                  - yellow
                  - green
                  - indigo
                  - violet
              ex2:
                summary: 'With library overrides'
                value:
                  type: value
                  value: some.domain.com
                  library_overrides:
                  - library: US_active
                    value: us-override.domain.com
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id023
              examples:
                ex1:
                  summary: 'Without library overrides'
                  value:
                    data:
                      id: colors
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value:
                      - red
                      - orange
                      - yellow
                      - green
                      - indigo
                      - violet
                ex2:
                  summary: 'With library overrides'
                  value:
                    data:
                      id: domain
                      edit_date: '2022-04-27T20:15:37.461Z'
                      type: value
                      value: some.domain.com
                      library_overrides:
                      - edit_date: '2022-02-27T16:52:37.554Z'
                        library: US_active
                        value: us-override.domain.com
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Settings
    #- customers-{customerId}-settings-{appId}-{settingId}
      summary: Delete a setting
      description: |
        Deletes a setting.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management level privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role with the Settings Management privilege enabled.

        If library_overrides exist with this setting, they will also be deleted.
      operationId: DELETE_customers_{customerId}_settings_{appId}_{settingId}
      responses:
        204:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/appId'
    - $ref: '#/components/parameters/settingId'
  /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}/library-overrides/{libraryName}:
    get:
      tags:
      - Settings
      summary: Get an app setting override
      description: |
        Gets a library-level override value for the specified app setting.

        Only applicable to settings of type `value`.

        Library-level overrides for global settings are not supported.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `application_settings_library_overrides` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/105/settings/share/domain/library-overrides/US_Active`
      operationId: GET_customers_{customerId}_settings_{appId}_{settingId}_library-overrides_{libraryName}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    edit_date: '2022-02-27T16:52:37.554Z'
                    library: US_active
                    value: us-override.domain.com
                required:
                - data
                type: object
                properties: &id024
                  data:
                    type: object
                    $ref: '#/components/schemas/Apps.libraryOverrideSetting'
        404: *id005
        401: *id002
        400: *id003
      parameters:
      - *id004
    put:
      tags:
      - Settings
      summary: Set an app setting override
      description: |
        Sets a library-level override value for the specified app setting. If a value exists, it is replaced. If it does not exist, it is created.

        Only applicable to settings of type `value`.

        Library-level overrides for global settings are not supported.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `application_settings_library_overrides` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/105/settings/share/domain/library-overrides/US_Active`
      operationId: PUT_customers_{customerId}_settings_{appId}_{settingId}_library-overrides_{libraryName}
      requestBody:
        content:
          application/json:
            schema:
              example:
                value: us-override.domain.com
              required:
              - value
              type: object
              properties: &id632
                value:
                  type: string
                  description: |
                    The library override setting value.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    edit_date: '2022-02-27T16:52:37.554Z'
                    library: US_active
                    value: us-override.domain.com
                required:
                - data
                type: object
                properties: *id024
        404: *id005
        401: *id002
        400: *id003
      parameters:
      - *id004
    delete:
      tags:
      - Settings
      summary: Delete an app setting override
      description: |
        Deletes a library-level override value for the specified app setting.

        Only applicable to settings of type `value`.

        Library-level overrides for global settings are not supported.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `application_settings_library_overrides` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/105/settings/share/domain/library-overrides/US_Active`
      operationId: DELETE_customers_{customerId}_settings_{appId}_{settingId}_library-overrides_{libraryName}
      responses:
        204:
          description: ''
        404: *id005
        401: *id002
        400: *id003
      parameters:
      - *id004
  /work/api/v2/customers/{customerId}/security-templates:
    get:
      tags:
      - Global Security Templates
    #- customers-{customerId}-security-templates
      summary: Get security templates
      description: |
        Returns a list of security templates.<br><br>
        A security template contains a list of predefined security settings that can be assigned to a particular user.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return the security template of a specified user, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/security-template`<br>
        To delete the security template of a specified user, see DELETE `/customers/{customerId}/libraries/{libraryId}/users/{userId}/security-template/{template-alias}`<br>
        To update the security template of a specified user, see PUT `/customers/{customerId}/libraries/{libraryId}/users/{userId}/security-template/{template-alias}`<br>
        To create the security template of a specified user, see POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/security-template/{template-alias}`<br>
      operationId: GET_customers_{customerId}_security-templates
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: XY
                    name: XYSEC
                    database: ACTIVE
                    description: Some security template
                    default_security: inherit
                  total_count: 10
                required:
                - data
                type: object
                properties: &id1667
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - name
                      - description
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Indicates the security template ID.
                        name:
                          type: string
                          description: |-
                            Indicates the security template name.
                        description:
                          type: string
                          description: |-
                            Indicates additional information about the security template.
                        default_security:
                          enum: ["inherit", "public", "view", "private"]
                          type: string
                          description: |
                            Indicates the default security setting of the template.

                            |Value|Description|
                            |:---|:---|
                            |inherit|The container or item inherits security settings from its parent container.|
                            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                          default: "public"
                        database:
                          type: string
                          description: |-
                            Indicates the library that the security template applies to.
                      description: |-
                        Security template contains a list of predefined security settings that can be assigned to a particular user.
                    description: |-
                      The requested data.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/roles:
    description: |-
      None

    get:
      tags:
      - Global Roles
    #- customers-{customerId}-roles
      summary: Gets all global roles
      description: |
        Gets all global roles.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.<br>

        This means that a user must be assigned to a role that has the Role Management privilege.
        Each role contains all available role privileges. However, iManage system administrators either
        marks the privileges as `admin` (administrative access) or `no_access` (no access) for each role.
        It is possible to mark more than one privilege for a role as `admin`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all global roles that contains the case insensitive string <i>user</i> in
        the properties `id` or `description`:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/roles?roles?query=User&query_match_type=contains`

      operationId: GET_customers_{customerId}_roles
      parameters:
      - *id004
      - *id011
      - *id006
      - name: query
        in: query
        description: |+
          Specifies text that must be found in either parameter `id` or `description`.<br><br>
          For information on how the search match is determined, see the parameter `query_match_type`.

          * The `query` value is case insensitive.
          * The (&ast;) character is not supported for making wildcard searches. However, it is interpreted literally in the searches. For example, the ID *dhcidj(&ast;)fsu56df*
          * Partial matching is supported. For example, *All* matches with *All privileges*.
          *  Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: query_match_type
        in: query
        description: |
          Specifies how the `query` parameter matches the text.<br>

          The following are allowed values:

          |Value|Description|
          |:---|:--- |
          |contains| The search returns roles that contain the query text. For example, *managers* matches *User Managers*.|
          |starts_with| The search returns roles that start with the query text. For example, *users* matches *User Managers* but *managers* does not match *User Managers*.|

          The search is case insensitive.<br>
          The wildcard character (&ast;) is not supported.
        schema:
          enum: [contains, starts_with]
          default: starts_with
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: App Managers
                    description: App Managers role
                    app_management: admin
                    encryption_management: no_access
                    feature_management: no_access
                    group_management: admin
                    role_management: no_access
                    settings_management: admin
                    user_management: no_access
                  - id: Role Managers
                    description: Role Managers role
                    app_management: no_access
                    encryption_management: admin
                    feature_management: admin
                    group_management: no_access
                    role_management: admin
                    settings_management: admin
                    user_management: admin
                  total_count: 2
                required:
                - data
                type: object
                properties: *id025
                additionalProperties: true
        403: *id001
        401: *id002
        404: *id005
    post:
      tags:
      - Global Roles
    #- customers-{customerId}-roles
      summary: Create a global role
      description: |
        Creates a global role.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.

        **Additional information**<br>
        For creating a role, all privileges must be included in the request body, and each privilege must be
        specified as `admin` (administrative access), or `no_access` (no access).<br>
        To get the list of all priveleges currently available, execute the request to <a href="#get-/work/api/v2/customers/-customerId-/roles"> get all roles</a>.
        Based on the response, specify all the privileges in the request body.

      operationId: POST_customers_{customerId}_roles
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: Role Managers
                description: Role for managing user roles
                app_management: no_access
                encryption_management: no_access
                feature_management: no_access
                group_management: no_access
                role_management: admin
                settings_management: no_access
                user_management: no_access
              required:
              - id
              - app_management
              - group_management
              - role_management
              - settings_management
              - user_management
              - encryption_management
              - feature_management
              type: object
              properties: &id1614
                id:
                  type: string
                  description: |-
                    Specifies the role ID.

                    The role ID requirements are:

                    |Criteria|Value|
                    |:---|:---|
                    | Minimum length | 1 |
                    | Maximum length | 32 |
                    | Unicode allowed | Yes |
                    | Spaces allowed | Yes |
                    | Special characters allowed |  *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |
                description:
                  type: string
                  description: |
                    Specifies additional information about the role.

                    The role description requirements are:

                    |Criteria|Value|
                    |:---|:---|
                    | Minimum length | 0 |
                    | Maximum length | 1024 |
                    | Unicode allowed | Yes |
                    | Spaces allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |
                app_management:
                  description: |
                    Specifies the access level of the role to operate on apps.

                    This privilege allows users to add internal or external applications.<br>
                    For more information on apps, see <a href="#tag--Apps">Apps</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                encryption_management:
                  description: |
                    Specifies the access level of the role to operate on encryption keys.

                    This privilege allows users to manage encryption keys, such as registering a new key, or activating a key on a library.<br>
                    For more information, see the <a href="#tag--Encryption">Encryption</a> section.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                feature_management:
                  description: |
                    Specifies the access level of the role to operate on upcoming features.

                    This privilege allows users to enable and disable new upcoming features, before they become permanent in the system.
                    For more information, see <a href="#tag--Features">Features</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                group_management:
                  description: |
                    Specifies the access level of the role to operate on global groups.

                    This privilege allows users to create global groups, rename groups, and add users to groups.<br>
                    For more information, see <a href="#tag--Groups">Groups</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                role_management:
                  description: |
                    Specifies the access level of the role to operate on global roles.

                    This privilege allows users to create global roles, delete roles, and edit roles.<br>
                    For more information, see <a href="#tag--Global-Roles">Global Roles</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                settings_management:
                  description: |
                    Specifies the access level of the role to operate on iManage Work global settings.

                    This privilege allows users to manage iManage Work global settings and settings for iManage Mobility for iOS (mobile), iManage Work Desktop for Windows, and iManage classic clients.
                    These settings appear in iManage Cntrol Center as Global, iOS, Office, and Classic.<br>
                    For more information about settings management, see <a href="#tag--Settings">Settings</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                user_management:
                  description: |
                    Specifies the access level of the role to operate on global settings of users.

                    This privilege allows users to create virtual users, edit user profile and security, reset password, and enable or disable sign-in.<br>
                    For more information, see <a href="#tag--Users">Users</a>.

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id008
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/roles/{roleId}:
    description: |-
      None

    get:
      tags:
      - Global Roles
    #- customers-{customerId}-roles-{roleId}
      summary: Get details of a global role
      description: |
        Gets details of the specified global role.

        The path parameter `roleId` is the role's `id`.
        Each role contains a complete set of privileges where each privilege is marked as `admin` (administrative access), or `no_access` (no access).

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.<br>

      operationId: GET_customers_{customerId}_roles_{roleId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: Role Managers
                    description: Role for managing user roles
                    app_management: no_access
                    encryption_management: no_access
                    feature_management: no_access
                    group_management: no_access
                    role_management: admin
                    settings_management: no_access
                    user_management: no_access
                required:
                - data
                type: object
                properties: &id026
                  data:
                    $ref: '#/components/schemas/Roles.customerRole'
                additionalProperties: true
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Global Roles
    #- customers-{customerId}-roles-{roleId}
      summary: Update a global role
      description: |
        Updates the specified global role.

        The field values that are specified for a role in the request body are updated as new values for the role.
        The fields that are not provided remain unchanged.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.

      operationId: PATCH_customers_{customerId}_roles_{roleId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Role Managers description
                group_management: no_access
              type: object
              properties: &id1613
                id:
                  type: string
                  description: |-
                    Specifies the role ID.

                    The role ID requirements are:

                    |Criteria|Value|
                    |:---|:---|
                    | Minimum length | 1 |
                    | Maximum length | 32 |
                    | Unicode allowed | Yes |
                    | Spaces allowed | Yes |
                    |  Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                    |
                description:
                  type: string
                  description: |
                    Specifies additional information about the role.

                    The role description requirements are:

                    |Criteria|Value|
                    |:---|:---|
                    | Minimum length | 0 |
                    | Maximum length | 1024 |
                    | Unicode allowed | Yes |
                    | Spaces allowed | Yes |
                    |  Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                    |
                app_management:
                  description: |
                    Specifies the access level for app management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                encryption_management:
                  description: |
                    Specifies the access level for encryption keys management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                feature_management:
                  description: |
                    Specifies the access level for features management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                group_management:
                  description: |
                    Specifies the access level for group management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                role_management:
                  description: |
                    Specifies the access level for role management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                settings_management:
                  description: |
                    Specifies the access level for settings management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
                user_management:
                  description: |
                    Specifies the access level for user management.<br><br>

                    The following are allowed values:<br>

                    |Value|Description|
                    |:---|:--- |
                    |admin|The privilege is granted to the role.|
                    |no_access|The privilege is denied for the role.|
                  enum: ["admin", "no_access"]
                  type: string
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: Role Managers
                    description: Role for managing user roles
                    app_management: no_access
                    encryption_management: no_access
                    feature_management: no_access
                    group_management: no_access
                    role_management: admin
                    settings_management: no_access
                    user_management: no_access
                required:
                - data
                type: object
                properties: *id026
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Global Roles
    #- customers-{customerId}-roles-{roleId}
      summary: Delete a global role
      description: |-
        Deletes the specified global role.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.

      operationId: DELETE_customers_{customerId}_roles_{roleId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id008
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - name: roleId
      in: path
      description: |-
        Specifies the role ID of a role.<br><br>
        It is the `id` property of the role. It must be the complete role ID and partial matching is not supported.
        It is case insensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/roles/{roleId}/members:
    description: |-
      None

    get:
      tags:
      - Global Roles
    #- customers-{customerId}-roles-{roleId}-members
      summary: Get users of a global role
      description: |
        Returns users who are assigned to the specified global role.

        If the search criteria are omitted, it returns all users assigned to the specified global role.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.

      operationId: GET_customers_{customerId}_roles_{roleId}_members
      parameters:
      - *id004
      - name: allow_logon
        in: query
        description: |
          Specifies that only users with the provided `allow_logon` value should be returned.

          If `true`, returns users with `allow_logon` enabled.<br>
          If `false`, returns users with `allow_logon` disabled.<br>
          If this parameter is omitted, it returns users with any `allow_logon` value.
        schema:
          type: boolean
      - name: full_name
        in: query
        description: |
          Specifies that only users whose full name matches the provided value should be returned.

          The search term can be a partial match of the name.
          For example, *Jenn*, *nif*, *nnifer* match with *Jennifer*.
        schema:
          type: string
      - *id011
      - name: location
        in: query
        description: |
          Specifies that only users whose location matches the provided value should be returned.

          This search is case insensitive and matches whole words.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - *id006
      - name: preferred_library
        in: query
        description: |
          Specifies that only users whose `preferred_library` matches the provided value should be returned.

          If this value is specified, returns users having the indicated preferred library.<br>
          If this value is omitted, it returns users of any preferred library.<br>
          This search is case insensitive and matches the whole word.
          The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - name: query
        in: query
        description: |
          Specifies the string that must be matched with the `email` or `full_name` of users.

          In addition, the search method uses the `query_match_type` parameter value to find matches.<br>
          This search is case insensitive. The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - name: query_match_type
        in: query
        description: |
          Specifies the search method for a parameter `query` search.

          * If set to `contains`, the search returns results that contain the query text.<br>
          * If set to `starts_with`, the search returns results that start with the query text.
        schema:
          enum: [contains, starts_with]
          default: starts_with
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-17T15:22:12.557Z'
                    edit_date: '2019-04-18T16:01:12.557Z'
                    email: acase@ajubalaw.com
                    failed_logins: 0
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: Chicago
                    ssid: '98126090240790646'
                    user_id_ex: ACASE
                    user_nos: 2
                    user_num: 98126090240790646
                  - allow_logon: true
                    create_date: '2020-06-18T03:48:44.555Z'
                    edit_date: '2020-07-22T12:50:13.06Z'
                    email: cpierce@ajubalaw.com
                    failed_logins: 0
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '170831383499900867'
                    user_id_ex: CPIERCE
                    user_nos: 2
                    user_num: 170831383499900867
                  total_count: 10
                  overflow: true
                required:
                - data
                type: object
                properties: &id1612
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Roles.user'
                    description: |-
                      List of users belonging to this role.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: true
        401: *id002
        404: *id005
    patch:
      tags:
      - Global Roles
    #- customers-{customerId}-roles-{roleId}-members
      summary: Add users to or remove them from a global role
      description: |
        Adds users to or removes users from a global role.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to call this request: Role Management.<br>

        **Important characteristics of this request:**
        * The request body is composed of two parameters: `include` and `exclude`.<br>
          Both of these parameters are required, even if they are empty.
        * The `include` parameter lists users who are to be added to the role.<br>
          The `exclude` parameter lists users who are to be removed from the role.
        * An empty `include` or `exclude` parameter indicates that there are no users to add or remove, respectively.
        * Each user is listed as an object under include or exclude parameter, and their `id` field must be specified.<br>
        * To add a user, the user ID must currently not be assigned to that global role.
        * If any of the user IDs conflicts with the one already assigned to a role, an error code is returned.
          However, the valid and non-conflicting user IDs are added.
        * To remove a user, the user ID must currently be assigned to that global role.
        * If a user ID does not exist, it is ignored and no error occurs.

      operationId: PATCH_customers_{customerId}_roles_{roleId}_members
      requestBody:
        content:
          application/json:
            schema:
              example:
                include:
                - id: ACASE
                - id: JTHOMAS
                exclude:
                - id: PPETERS
              type: object
              properties: &id1615
                include:
                  type: array
                  items:
                    $ref: '#/components/schemas/Roles.member'
                  description: |-
                    Specifies users to be added to the role.
                exclude:
                  type: array
                  items:
                    $ref: '#/components/schemas/Roles.member'
                  description: |-
                    Specifies users to be removed from the role.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id008
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - name: roleId
      in: path
      description: |-
        Specifies the role ID of a role.<br><br>
        It is the `id` property of the role. It must be the complete role ID and partial matching is not supported.
        It is case insensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/recent-workspaces:
    description: |-
      None
    get:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-workspaces
      summary: Get workspaces with recent activity
      description: |
        Returns a list of workspaces that there has been any recent activity (within the last 30 days).<br><br>
        For a more a detailed recent workspace search, or to provide more parameters conveniently, see POST `/customers/{customerId}/recent-workspaces`.<br>

        ### Date Range Format

        Some parameters may specify a Date Range format. This is a search between two dates relative to the current date.<br>

        The format is:<br>
        `[begin]:[end][timescale].`<br>
        `begin` is the number of units (see timescale) to start calculating from.<br>
        `end` is the number of units (see timescale) to stop calculating to.<br>
        `timescale` is a time unit notation using `d` for days, `m` for months, `y` for years.<br>

        The values for `begin` and `end` must be whole numbers, and can each be noted as positive or negative.
        Negative numbers indicate the time unit occurred in the past.
        The value `-30` days calculates 30 days before the current day.
        The more complete notation of `-30:-7d` indicates the beginning date is 30 days prior to the current date and the end date is seven days prior to the current date.
        Positive time units, indicated by not having a negative sign, is a time in the future. This is used mostly to compensate for time zone differences.
        For example, India is 11 hours and 30 minutes ahead of Chicago, so a Chicago-based search could use a thorough date range specified by `-30:1d`.<br>

        Incorrect notations, such as `-30:+1d` (using a plus sign), or `-30.5:1d` (noting a fraction), or if the end date is before the begin date result in an error.
      operationId: GET_customers_{customerId}_recent-workspaces
      parameters:
      - *id004
      - name: activity
        in: query
        description: |-
          A list of activities that were performed on the workspace recently.<br><br>

          One or more of the following activity codes can be provided as a search filter.
          The values are case insensitive.
          Multiple values are separated by a comma.
          For example, document_actions,new_workspace.<br><br>

          The following are allowed values:<br><br>

          |Activity|Description|
          |---|---|
          |document_actions|Workspaces where a document under those was recently modified or newly created.|
          |new_workspace|Recently created workspaces.|
          |browse|Recently browsed workspaces [used by classic clients].|
        schema:
          type: string
          default: "document_actions,new_workspace"
      - name: activity_date
        in: query
        description: |
          A date range in which the activity must have occurred.<br><br>
          See the *Date Range format* section earlier.
          For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: "-30:0d"
      - &id261
        name: custom1
        in: query
        description: |-
          Specifies a property alias to match in this custom property.

          A property alias is an entry for that custom property.
          For example, `custom1` can be captioned as *Client*.
          It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
          These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

          * This search is not case-sensitive.
          * Partial matches are not supported.
          * The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id262
        name: custom10
        in: query
        description: |-
          Alias for Custom10 field.
        schema:
          type: string
      - &id263
        name: custom11
        in: query
        description: |-
          Alias for Custom11 field.
        schema:
          type: string
      - &id264
        name: custom12
        in: query
        description: |-
          Alias for Custom12 field.
        schema:
          type: string
      - &id265
        name: custom13
        in: query
        description: |-
          Contents of custom13 field.
        schema:
          type: string
      - &id266
        name: custom14
        in: query
        description: |-
          Contents of custom14 field.
        schema:
          type: string
      - &id267
        name: custom15
        in: query
        description: |-
          Contents of custom15 field.
        schema:
          type: string
      - &id268
        name: custom16
        in: query
        description: |-
          Contents of custom16 field.
        schema:
          type: string
      - &id269
        name: custom17
        in: query
        description: |-
          Specifies a value or a range of values of the custom17 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
          | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
          | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
          | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id270
        name: custom18
        in: query
        description: |-
          Specifies a value or a range of values of the custom18 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
          | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
          | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
          | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id271
        name: custom19
        in: query
        description: |-
          Specifies a value or a range of values of the custom19 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
          | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
          | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
          | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id272
        name: custom2
        in: query
        description: |-
          Alias for Custom2 field.
        schema:
          type: string
      - &id273
        name: custom20
        in: query
        description: |-
          Specifies a value or a range of values of the custom20 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
          | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
          | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
          | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id274
        name: custom21_from
        in: query
        description: |-
          Contents of custom21_from field.
        schema:
          type: string
      - &id275
        name: custom21_relative
        in: query
        description: |-
          Date range within custom21, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id276
        name: custom21_to
        in: query
        description: |-
          Contents of custom21_to field.
        schema:
          type: string
      - &id277
        name: custom22_from
        in: query
        description: |-
          Contents of custom22_from field.
        schema:
          type: string
      - &id278
        name: custom22_relative
        in: query
        description: |-
          Date range within custom22, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id279
        name: custom22_to
        in: query
        description: |-
          Contents of custom22_to field.
        schema:
          type: string
      - &id280
        name: custom23_from
        in: query
        description: |-
          Contents of custom23_from field.
        schema:
          type: string
      - &id281
        name: custom23_relative
        in: query
        description: |-
          Date range within custom23, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id282
        name: custom23_to
        in: query
        description: |-
          Contents of custom23_to field.
        schema:
          type: string
      - &id283
        name: custom24_from
        in: query
        description: |-
          Contents of custom24_from field.
        schema:
          type: string
      - &id284
        name: custom24_relative
        in: query
        description: |-
          Date range within custom24, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id285
        name: custom24_to
        in: query
        description: |-
          Contents of custom24_to field.
        schema:
          type: string
      - &id286
        name: custom25
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id287
        name: custom26
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id288
        name: custom27
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id289
        name: custom28
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id290
        name: custom29
        in: query
        description: |-
          Alias of custom29 field.
        schema:
          type: string
      - &id291
        name: custom3
        in: query
        description: |-
          Alias for Custom3 field.
        schema:
          type: string
      - &id292
        name: custom30
        in: query
        description: |-
          Alias of custom30 field.
        schema:
          type: string
      - &id293
        name: custom4
        in: query
        description: |-
          Alias for Custom4 field.
        schema:
          type: string
      - &id294
        name: custom5
        in: query
        description: |-
          Alias for Custom5 field.
        schema:
          type: string
      - &id295
        name: custom6
        in: query
        description: |-
          Alias for Custom6 field.
        schema:
          type: string
      - &id296
        name: custom7
        in: query
        description: |-
          Alias for Custom7 field.
        schema:
          type: string
      - &id297
        name: custom8
        in: query
        description: |-
          Alias for Custom8 field.
        schema:
          type: string
      - &id298
        name: custom9
        in: query
        description: |-
          Alias for Custom9 field.
        schema:
          type: string
      - &id299
        name: description
        in: query
        description: |-
          Specifies the text to be searched for in the `description` field of the workspaces.
        schema:
          type: string
          example: contract
      - name: facets
        in: query
        description: |
          Specifies which facets to return.

          Facets are a summary list of the most common occurrences for each facet type listed.
          For example, if `facets` specifies custom1, all items containing any value for custom1 are counted.
          The five items with the highest counts are returned.
          Facets allow users to anticipate selections, or to present a list of suggestions that the user will likely select.

          Multiple facets can be included using a comma-separated list.
          For example: `facets=custom1,custom2,custom9`.
          If this parameter is omitted, which is the default value, no facets are returned.
          Possible values are: custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.

          This parameter is often used along with the `results` parameter.
          If neither of the parameters are included, only the search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, no data of either type is returned. However, an empty response object is returned.<br>

          <font style="color:black;font-size: 15px;font-weight: bold;">Sample request</font><br>
          In this example, the search is GET `https://www.ajubalaw.com/work/api/v2/customers/100/recent-workspaces?results=false&facets=custom1,custom9`.
          The response JSON object does not include any search results.
          The facets section specified returning custom9 but there are no custom9 values to return.
          However, three custom1 values are returned, with *Microsoft* being the most common with 132 instances.

          <pre>
          {
            "data": {
              "facets": {
                "custom1": [
                  {
                    "alias"      : "Microsoft",
                    "count"      : 132,
                    "description": "Microsoft Corporation"
                  },
                  {
                    "alias"      : "Amazon",
                    "count"      : 20,
                    "description": "Amazon.com, Inc"
                  },
                  {
                    "alias"      : "Wallachs",
                    "count"      : 1,
                    "description": "Wallachs"
                  }
                ],
                "custom9": []
              }
            }
          }</pre>
        schema:
          type: string
      - &id028
        name: libraries
        in: query
        description: |
          Specifies which libraries to limit the query to.<br><br>

          For example, `libraries=archive` only searches the *archive* library.
          Multiple libraries can be specified using a comma-separated list.
          For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
          Library names are case insensitive.<br>
          Neither the wildcard character (&ast;) nor stemming is supported.<br>
          For example, `libraries=acti` and `libraries=act*` are not valid searches.
          Therefore, the complete library name must be provided.<br><br>
          If omitted, all libraries accessible to the user are included.
        schema:
          type: string
          example: libraries=active,archive
      - name: limit
        in: query
        description: |-
          Maximum number of items to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - &id300
        name: name
        in: query
        description: |-
          Specifies the text to be searched for in the name of the workspaces.
        schema:
          type: string
          example: contract
      - &id301
        name: name_or_description
        in: query
        description: |
          Specifies the text to search for in the `name` or `description` fields of iManage Work object.<br>

          * This parameter is case insensitive.<br>
          * Matches whole fields only and partial matches are not supported.
            For example, for an object named *Enron Completion*, the search `name_or_description=Enron` does not match.
            It must be specified as `name_or_description=Enron Completion`.
          * The wildcard character (&ast;) is supported, and matches any number of contiguous characters, including spaces.<br>
            To match partial fields, include the wildcard character (&ast;) before, after, or at both ends of the term.<br>
            For example, all the following searches match with `litigation`:
            * `name_or_description=litigation`
            * `name_or_description=*gation`
            * `name_or_description=litiga*`.
        schema:
          type: string
          example: contract
      - *id006
      - &id302
        name: owner
        in: query
        description: |-
          Specifies the user ID of the author or operator from the `owner` field of the workspace.
        schema:
          type: string
          example: CPIERCE
      - name: results
        in: query
        description: |-
          Indicates whether to include search results.<br><br>
          If `true`, the search results are returned.<br>
          If `false`, no search results are returned.<br>
          The default value is `true`.<br><br>

          This parameter is often used along with the `facets` parameter.
          If neither of the parameters are included, only search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, then no data of either kind are returned.
        schema:
          description: needs defining
      - &id029
        name: since_days
        in: query
        description: |
          Returns only the items that the user has acted upon in the last number of specified days.<br><br>
          For example, `since_days=15` returns items that have been acted on within the last 15 days.
        schema:
          type: integer
          default: 30
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - name: userId
        in: query
        description: |
          The user ID who performed recent activities on a workspaces.<br><br>
          If this parameter is omitted, the currently signed in user ID is used.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-04-27T14:36:39-05:00'
                      author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2017-04-10T09:23:58-05:00'
                      custom1: '0999'
                      custom2: '0001'
                      custom3: ACTIVE
                      custom4: CA
                      database: Active
                      default_security: private
                      description: Pepsi vs. Coca Cola
                      document_number: 111347
                      edit_date: '2017-04-10T09:23:58-05:00'
                      edit_profile_date: '2017-04-26T12:17:49-05:00'
                      file_create_date: '2017-04-10T09:23:58-05:00'
                      file_edit_date: '2017-04-10T09:23:58-05:00'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!20213
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=111347&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\ACTIVE\ACASE\37\1\111347.1
                      name: Daniels vs. Bell
                      operator: ACASE
                      owner: ACASE
                      owner_description: Andrew Case
                      project_custom1: '0999'
                      project_custom2: '0001'
                      project_custom3: ACTIVE
                      retain_days: 365
                      size: 0
                      subclass: MATTER
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!20213
                      wstype: workspace
                    - activity_date: '2017-04-27T14:29:01-05:00'
                      author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2007-06-13T11:53:45-05:00'
                      custom1: '1086'
                      custom2: '1'
                      database: Active
                      default_security: public
                      document_number: 89
                      edit_date: '1999-07-02T07:11:53-05:00'
                      edit_profile_date: '2007-06-13T11:53:45-05:00'
                      file_create_date: '2007-06-13T11:53:45-05:00'
                      file_edit_date: '1999-07-02T07:11:53-05:00'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!492
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=89&&ver=1
                      last_user: ADMINISTRATOR
                      location: DEFSERVER:\DOCS\Active\ADMINIST\0\1\89.1
                      name: 1086.1 - General
                      operator: ACASE
                      owner: ADMINISTRATOR
                      owner_description: Administrator
                      project_custom3: Active|87|8.2.14
                      retain_days: 365
                      size: 124
                      subclass: MATTER
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!492
                      wstype: workspace
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                  total_count: 2
                required:
                - data
                type: object
                properties: *id027
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-workspaces
      summary: Get workspaces with recent activity (POST)
      description: |
        Returns a list of workspaces that there has been any recent activity (within the last 30 days).<br><br>
        For a more generalized recent workspace search, see GET `/customers/{customerId}/recent-workspaces`.
      operationId: POST_customers_{customerId}_recent-workspaces
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Workspace Request
              type: object
              properties: &id303
                limit:
                  maximum: 9999
                  minimum: 1
                  type: integer
                  description: |-
                    Maximum number of items to include in the response.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    workspace:
                      type: array
                      items:
                        type: string
                      description: |-
                        The workspace profile fields to include in the response.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    activity:
                      type: string
                      description: |-
                        A list of activities that were performed on the workspace recently.<br><br>

                        One or more of the following activity codes can be provided as a search filter.
                        The values are case insensitive.
                        Multiple values are separated by a comma.
                        For example, document_actions,new_workspace.<br><br>

                        The following are allowed values:<br><br>

                        |Activity|Description|
                        |---|---|
                        |document_actions|Workspaces where a document under those was recently modified or newly created.|
                        |new_workspace|Recently created workspaces.|
                        |browse|Recently browsed workspaces [used by classic clients].|
                      default: "document_actions,new_workspace"
                    activity_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    since_days:
                      type: integer
                      description: |
                        Returns only the items that the user has acted upon in the last number of specified days.<br><br>
                        For example, `since_days=15` returns items that the user has acted on within the last 15 days.
                      default: 30
                    userId:
                      type: string
                      description: |
                        The user ID who performed recent activities on a workspaces.<br><br>
                        If this parameter is omitted, the currently signed in user ID is used.
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |-
                        Alias for custom2 field.
                    custom3:
                      type: string
                      description: |-
                        Alias for custom3 field.
                    custom4:
                      type: string
                      description: |-
                        Alias for custom4 field.
                    custom5:
                      type: string
                      description: |-
                        Alias for custom5 field.
                    custom6:
                      type: string
                      description: |-
                        Alias for custom6 field.
                    custom7:
                      type: string
                      description: |-
                        Alias for custom7 field.
                    custom8:
                      type: string
                      description: |-
                        Alias for custom8 field.
                    custom9:
                      type: string
                      description: |-
                        Alias for custom9 field.
                    custom10:
                      type: string
                      description: |-
                        Alias for custom10 field.
                    custom11:
                      type: string
                      description: |-
                        Alias for custom11 field.
                    custom12:
                      type: string
                      description: |-
                        Alias for custom12 field.
                    custom13:
                      type: string
                      description: |-
                        Contents of custom13 field.
                    custom14:
                      type: string
                      description: |-
                        Contents of custom14 field.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 field.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 field.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from field.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from field.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from field.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from field.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to field.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to field.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to field.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to field.
                    custom21_relative:
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom29:
                      type: string
                      description: |-
                        Alias of custom29 field.
                    custom30:
                      type: string
                      description: |-
                        Alias of custom30 field.
                    description:
                      type: string
                      description: |-
                        String to be found in the `description` field of the workspaces.
                      example: contract
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    file_target:
                      type: string
                      description: |
                        String to be found in a subset of properties defined in the index.<br><br>
                        These fields are custom1, custom2, custom29, custom30, and workspace name.
                      example: contract
                    name:
                      type: string
                      description: |-
                        String to be found in the name of the workspaces.
                      example: contract
                    name_or_description:
                      type: string
                      description: |
                        String to be found in the name or description of the workspaces.<br><br>
                        This parameter is case insensitive and matches whole fields only.
                        To match partial fields, include the asterisk wildcard before, after, or both ends of the term.
                      example: contract
                    owner:
                      type: string
                      description: |-
                        The user ID from the `owner` field of the workspace.
                      example: CPIERCE
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id304
                limit: 500
                timezone_offset: 300
                profile_fields:
                  workspace:
                  - activity_date
                  - author
                  - description
                  - edit_date
                  - create_date
                  - size
                  - name
                  - type
                filters:
                  custom1: '1001'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Workspace Response
                required:
                - data
                - overflow
                type: object
                properties: &id305
                  data:
                    required:
                    - results
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id306
                  data:
                    results:
                    - id: Active!20213
                      activity_date: '2017-04-27T14:36:39-05:00'
                      author: ACASE
                      create_date: '2017-04-10T09:23:58-05:00'
                      description: Pepsi vs. Coca Cola
                      edit_date: '2017-04-10T09:23:58-05:00'
                      name: Daniels vs. Bell
                      size: 0
                      type: XML
                      wstype: workspace
                    - id: Active!492
                      activity_date: '2017-04-27T14:29:01-05:00'
                      author: ACASE
                      create_date: '2007-06-13T11:53:45-05:00'
                      description: Pepsi Summary
                      edit_date: '1999-07-02T07:11:53-05:00'
                      size: 124
                      name: 1086.1 - General
                      type: XML
                      wstype: workspace
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/recent-folders:
    description: |-
      None
    get:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-folders
      summary: Get folders with recent activity
      description: |-
        Returns a list of folders on which there has been any recent activity (within the last 30 days).
      operationId: GET_customers_{customerId}_recent-folders
      parameters:
      - *id004
      - name: email_only
        in: query
        description: |
          Specifies to return emails only, and not documents.<br><br>
          If `true`, returns folders with recent email activities.<br>
          If `false`, returns folders with recent email and document activities.
        schema:
          type: boolean
          default: false
      - name: exclude_emails
        in: query
        description: |
          Specifies to return documents only, and not emails.<br><br>
          If `true`, returns folders with recent document activities.<br>
          If `false`, returns folders with recent email and document activities.
        schema:
          type: boolean
          default: false
      - *id028
      - *id011
      - *id006
      - *id029
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-03-27T02:56:29Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-02-04T07:08:23Z'
                      email: icc.Active@ajubalaw.com
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!17078
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: ICC
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!15680
                      workspace_id: Active!15680
                      workspace_name: Employment Agreements
                      wstype: folder
                    - activity_date: '2017-03-24T12:04:49Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-03-24T12:04:31Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!14345
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: test_create_folder
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!9472
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: folder
                    - activity_date: '2017-03-24T12:04:25Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-03-24T12:03:38Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!16324
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Depositions
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!9192
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: folder
                    - activity_date: '2017-03-24T10:56:05Z'
                      database: Archive
                      default_security: inherit
                      edit_date: '2017-03-24T09:40:22Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Archive!25
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Folder with Shortcuts
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Archive!24
                      workspace_id: Archive!23
                      workspace_name: Shortcut City
                      wstype: folder
                    - activity_date: '2017-03-24T10:56:05Z'
                      database: Archive
                      default_security: inherit
                      edit_date: '2017-03-09T17:35:59Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Archive!21
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Documents
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Archive!20
                      workspace_id: Archive!19
                      workspace_name: 112233.020 - Apple vs. Archive-imanage
                      wstype: folder
                  total_count: 120
                required:
                - data
                type: object
                properties: &id307
                  data:
                    required:
                    - results
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Projects.folderWithoutProfile'
                    additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/recent-email:
    description: |-
      None
    get:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-email
      summary: Get emails with recent activity
      description: |
        Returns a list of emails that have had recent activity (activity within the last 30 days).<br><br>
        For a more a detailed recent email search, or to provide more parameters conveniently, see POST `/customers/{customerId}/recent-email`.<br>

        The list of returned emails does not include the actual activities.
        To see the list of activities, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history`.
      operationId: GET_customers_{customerId}_recent-email
      parameters:
      - *id004
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: boolean
          default: true
      - *id028
      - *id011
      - *id006
      - name: received_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: "-30:0d"
      - name: recipient
        in: query
        description: |-
          String that appears in any of the recipient fields of the emails in the result.
        schema:
          type: string
          example: "current resident"
      - name: sender
        in: query
        description: |-
          String that appears in the sender field of the emails in the result.
        schema:
          type: string
          example: "johnson"
      - name: sent_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: "-30:0d"
      - name: since_days
        in: query
        description: |
          Returns only the items that the user has acted upon in the last number of specified days.<br><br>
          For example, `since_days=15` returns items that have been acted on within the last 15 days.
          This is considered only if `received_date` and `sent_date` are not provided.
        schema:
          type: integer
          default: 30
          example: 12
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
          example: -300
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    cc: Andrew Case <acase@ajubalaw.com>, Kelly Thompson <kthompson@ajubalaw.com>
                    conversation_count: 1
                    conversation_id: RndkOiBGdzogQ29udGluZW50YWwvRGVsdGEgbWVldGluZyByZXNjaGVkdWxlZCBmcm9tIEZlYiAxMXRoIHRvIEZlYiAxMnRoIGZyb20gMTozMC0zOjAwIFBNIGluIEVucm9uIEJ1aWxkaW5nIDMzMjE=
                    conversation_name: 'Fwd: Fw: Continental/Delta meeting rescheduled
                      from Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building
                      3321'
                    create_date: '2017-01-25T23:05:20-05:00'
                    custom13: Andrew Case <acase@ajubalaw.com>
                    custom14: Barbara Cummings <bcummings@ajubalaw.com>, Ed White
                      <ewhite@ajubalaw.com>
                    custom15: Andrew Case <acase@ajubalaw.com>, Kelly Thompson <kthompson@ajubalaw.com>
                    custom21: '2017-01-25T20:57:48-05:00'
                    custom22: '2017-01-25T21:14:41-05:00'
                    database: active_us
                    document_number: 108238
                    edit_date: '2017-01-25T23:05:20-05:00'
                    extension: eml
                    from: Andrew Case <acase@ajubalaw.com>
                    has_attachment: false
                    id: active_us!108238.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=active_us&&num=108238&&ver=1
                    last_user: ACASE
                    name: 'Fwd: Fw: Continental/Delta meeting rescheduled from Feb
                      11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                    operator: ACASE
                    received_date: '2017-01-25T21:14:41-05:00'
                    sent_date: '2017-01-25T20:57:48-05:00'
                    size: 64910
                    subject: 'Fwd: Fw: Continental/Delta meeting rescheduled from
                      Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                    to: Barbara Cummings <bcummings@ajubalaw.com>, Ed White <ewhite@ajubalaw.com>
                    type: EML
                    version: 1
                    workspace_id: active_us!15620
                    workspace_name: gfu
                    wstype: email
                  - author: ACASE
                    cc: Barbara Cummings; Ed White
                    conversation_count: 3
                    conversation_id: V2Vpw59lcyBLYW5pbmNoZW4=
                    conversation_name: Weißes Kaninchen
                    create_date: '2017-02-07T16:20:27-05:00'
                    custom13: Kelly Thompson
                    custom14: Barbara Cummings; Ed White
                    custom15: Andrew Case; Kelly Thompson
                    custom21: '2017-01-23T15:06:52-05:00'
                    custom22: '2017-01-23T15:06:57-05:00'
                    database: active_us
                    document_number: 108889
                    edit_date: '2017-02-07T16:20:27-05:00'
                    extension: msg
                    from: Kelly Thompson
                    has_attachment: false
                    id: active_us!108889.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=active_us&&num=108889&&ver=1
                    last_user: ACASE
                    name: Weißes Kaninchen
                    operator: ACASE
                    received_date: '2017-01-23T15:06:57-05:00'
                    sent_date: '2017-01-23T15:06:52-05:00'
                    size: 248320
                    subject: Weißes Kaninchen
                    to: Andrew Case; Kelly Thompson
                    type: MIME
                    version: 1
                    workspace_id: active_us!11429
                    workspace_name: 00000-0001-0002 Weisses Kaninchen
                    wstype: email
                  - author: ACASE
                    conversation_count: 1
                    conversation_id: S2VsbHkgVGhvbXBzb24gaGFzIHNoYXJlZCBhIGRvY3VtZW50IHdpdGggeW91ICBcdTA2MzMgXHUwNjQxIFx1MDZDQyBcdTA2MkYgIFx1MDYyRSBcdTA2MzEgXHUwNkFGIFx1MDY0OCBcdTA2MzQgZG9jeA==
                    conversation_name: Kelly Thompson has shared a document with you
                    create_date: '2016-10-31T20:24:39-05:00'
                    custom13: test
                    custom14: test
                    custom21: '2016-12-08T01:00:00-05:00'
                    custom22: '2016-12-09T01:00:00-05:00'
                    database: Archive
                    document_number: 81
                    edit_date: '2016-10-31T20:24:39-05:00'
                    extension: msg
                    from: test
                    has_attachment: false
                    id: Archive!81.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=Archive&&num=81&&ver=1
                    last_user: KTHOMPSON
                    name: Kelly Thompson has shared a document with you
                    operator: KTHOMPSON
                    received_date: '2016-12-09T01:00:00-05:00'
                    sent_date: '2016-12-08T01:00:00-05:00'
                    size: 83968
                    subject: Kelly Thompson has shared a document with you
                    to: test
                    type: MIME
                    version: 1
                    workspace_id: Archive!32
                    workspace_name: 1080.1000 - Larry Johnson Lawsuit
                    wstype: email
                  total_count: 742
                required:
                - data
                type: object
                properties: &id308
                  data:
                    type: object
                    properties:
                      facets:
                        $ref: '#/components/schemas/Documents.searchFilter'
                        description: |-
                          A summary list of the most common occurrences for each facet type requested.
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailWithFlattenedParticipantsWithoutAttachment'
                        description: |-
                          The response data.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
                description: |-
                  Email response with flattened participant list.
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-email
      summary: Get emails with recent activity (POST)
      description: |
        Returns a list of emails that have had recent activity (activity within the last 30 days).<br><br>
        For a more generalized recent email search, see GET `/customers/{customerId}/recent-email`.<br>

        The list of returned emails does not include the actual activities.
        To see the list of activities, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history`.
      operationId: POST_customers_{customerId}_recent-email
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Email Request
              type: object
              properties: &id309
                limit:
                  type: integer
                  description: |-
                    Maximum number of items to include in the response.
                  default: 500
                profile_fields:
                  type: object
                  properties:
                    email:
                      type: array
                      items:
                        type: string
                        maxLength: 254
                      description: |-
                        The email profile fields to include in the response
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                filters:
                  type: object
                  properties:
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |-
                        Returns documents that were edited on or after this date (in ISO 8601 format). The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range. For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z. If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |-
                        Returns documents that were edited on or before this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range. For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z. If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    exclude_emails:
                      type: boolean
                      description: |
                        Specifies to include only documents from the results set.<br><br>
                        If `true`, only documents are returned.<br>
                        If `false`, emails and documents are returned.<br><br>
                        This parameter allows for a document-only return list.
                        For an email-only return list, see the `email_only` parameter.
                      default: false
                    email_only:
                      type: boolean
                      description: |
                        Specifies to include only emails from the results set.<br><br>
                        If `true`, only emails are included.<br>
                        If `false`, documents may also be included.<br><br>
                        This parameter allows for an email-only return list.
                        For a document-only return list, see the `exclude_emails` parameter.
                      default: false
                    anywhere:
                      type: string
                      description: |-
                        A string to be searched anywhere in the document profile or contents. This does not apply to folder searches.
                      example: litigation
                    user:
                      type: string
                      description: |-
                        ID of the user.
                    author:
                      type: string
                      description: |-
                        The user ID of the document's author.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        The user ID of the operator of the documents.
                      example: MARCIEDAVENPORT
                    owner:
                      type: string
                      description: |-
                        The user ID of the author or operator of the documents.
                      example: CPIERCE
                    comments:
                      type: string
                      description: |-
                        A string that appears in the comments of the results.
                      example: confidential
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |-
                        Alias for Custom2 field.
                    custom3:
                      type: string
                      description: |-
                        Alias for Custom3 field.
                    custom4:
                      type: string
                      description: |-
                        Alias for Custom4 field.
                    custom5:
                      type: string
                      description: |-
                        Alias for Custom5 field.
                    custom6:
                      type: string
                      description: |-
                        Alias for Custom6 field.
                    custom7:
                      type: string
                      description: |-
                        Alias for Custom7 field.
                    custom8:
                      type: string
                      description: |-
                        Alias for Custom8 field.
                    custom9:
                      type: string
                      description: |-
                        Alias for Custom9 field.
                    custom10:
                      type: string
                      description: |-
                        Alias for Custom10 field.
                    custom11:
                      type: string
                      description: |-
                        Alias for Custom11 field.
                    custom12:
                      type: string
                      description: |-
                        Alias for Custom12 field.
                    custom13:
                      type: string
                      description: |-
                        Contents of custom13 field.
                    custom14:
                      type: string
                      description: |-
                        Contents of custom14 field.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 field.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 field.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from field.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from field.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from field.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from field.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to field.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to field.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to field.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to field.
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom21_relative field.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom22_relative field.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom23, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom24, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom29:
                      type: string
                      description: |-
                        Alias of custom29 field.
                    custom30:
                      type: string
                      description: |-
                        Alias of custom30 field.
                    name:
                      type: string
                      description: |-
                        A string to be found in the name of the documents.
                      example: contract
                    document_number:
                      type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 3562
                    document_version:
                      type: integer
                      description: |-
                        Specifies the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |-
                        Indicates whether to return documents created on or after this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:00Z"
                    create_date_to:
                      type: string
                      description: |-
                        Indicates whether to return documents created on or before this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:00Z"
                    sent_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: "-30:0d"
                    received_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                    has_attachment:
                      type: boolean
                      description: |-
                        Indicates whether to return emails that have attachments.<br><br>
                        If `true`, the email item must have at least one attachment.<br>
                        If `false`, the email item cannot have any attachments.<br>
                        If this parameter is omitted, that attachment status is ignored.
                    subject:
                      type: string
                      description: |-
                        A string that appears in the subject of the email for emails.
                      example: important
                    sender:
                      type: string
                      description: |-
                        A string that appears in the sender field of the email.
                      example: johnson
                    recipient:
                      type: string
                      description: |-
                        A string that appears in any of the recipient fields of emails.
                      example: current resident
                    last_user:
                      type: string
                      description: |-
                        The user ID of the last user for the documents.
                      example: ACASE
                    checked_out:
                      type: boolean
                      description: |-
                        Includes only checked out documents in the result, if set true.
                    in_use_by:
                      type: string
                      description: |-
                        Indicates whether to include only documents in use by the provided user ID.
                      example: ACASE
                    in_use:
                      type: boolean
                      description: |-
                        Indicates whether to include only documents in use.
                    group_by_conversation:
                      type: boolean
                      description: |-
                        Indicates emails are grouped by conversation thread.
                      default: true
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id310
                profile_fields:
                  email:
                  - from
                  - subject
                  - received_date
                timezone_offset: 300
                filters:
                  custom1: '1001'
                  has_attachment: true
                  group_by_conversation: true
                  sender: ACASE
                  libraries: Active,Archive
                  received_date: -30:0d
                  recipient: KTHOMPSON
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Email Response
                required:
                - data
                - overflow
                type: object
                properties: &id311
                  data:
                    type: array
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id312
                  data:
                  - id: Active!10000.1
                    wstype: email
                    subject: Job search documents
                    received_date: '2018-05-04T02:06:32Z'
                  - id: Active!10100.1
                    wstype: email
                    subject: Old stuff
                    received_date: '2018-06-14T12:10:33Z'
                  - id: Active!10001.1
                    wstype: email
                    subject: Cover Letter
                    received_date: '2018-06-04T12:11:53Z'
                  - id: Active!10002.1
                    wstype: email
                    subject: Resume
                    received_date: '2018-02-17T06:50:00Z'
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/recent-documents:
    description: |-
      None
    get:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-documents
      summary: Get documents with recent activity
      description: |
        Returns a list of documents that have had recent activity (activity within the last 30 days).<br><br>
        For a more a detailed recent documents search, or to provide more parameters conveniently, see POST `/customers/{customerId}/recent-documents`.<br>

        The list of returned documents does not include the actual activities.
        To see the list of activities, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history`.
      operationId: GET_customers_{customerId}_recent-documents
      parameters:
      - *id004
      - name: activity
        in: query
        description: |
          A list of recent activities that have been performed on documents.<br><br>
          The values from the Common names in the table below are case insensitive.
          Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
          The following are the activity values and their descriptions&colon;
          * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
          * **Common Name** is the friendly name that appears in the response structure.
          * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
          * **Description** is the explanation of the activity.<br><br>

          |Activity|Common Name|Code|Description|
          |---|---|---|---|
          |LAUNCH|Open|0|Application was launched or opened.|
          |VIEW|View|1|The item was viewed.|
          |CHECKOUT|Checkout|2|The item was checked out.|
          |CHECKIN|Checkin|3|The item was checked in.|
          |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
          |DOCCLOSE|Close|5|The document was closed.|
          |NEWDOCUMENT|Create|6|The document was created.|
          |NEWDOCVER|Create Version|7|The document's version was updated.|
          |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
          |COPYDOC|Copy|9|The document was copied.|
          |PRINT|Print|10|The item was printed.|
          |MAIL|Mail|11|The item was mailed.|
          |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
          |DELETEDOC|Delete|13|The document was deleted.|
          |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
          |ARCHIVEDOC|Archive|15|The document was archived.|
          |RESTOREDOC|Restore|16|The document was restored.|
          |RELEASEDOC|Release|17|The document was released.|
          |EXPORT|Export|18|The item was imported.|
          |MODIFY|Modify|19|The item was modified.|
          |EDITTIME|Edit Time|20|The time spent editing the item.|
          |SHRED|Shred|21|The item was shredded.|
          |DECLARE|Declared|22|The item was declared for archiving.|
          |MIGRATED|Migrated|23|The item was migrated.|
          |UNDECLARE|Undeclared|24|The item was undeclared as record.|
          |RECONCILE|Reconciled|25|The item was reconciled.|
          |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
          |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
          |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
          |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
          |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
          |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
          |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
        schema:
          type: string
          default: view,edit
          example: activity=view,edit
      - name: activity_date
        in: query
        description: |-
          Returns the items with the activity date between the specified timeframe. Format = [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years]
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id313
        name: additional_fields
        in: query
        description: |-
          Profiles fields that are required in addition to standard profile fields.<br><br>
          Multiple values can be included using a comma-separated list.
        schema:
          enum: [checkout_date]
          type: string
          example: checkout_date
      - &id314
        name: author
        in: query
        description: |-
          The user ID of the owner (the creator) of the document.
        schema:
          type: string
          example: ACASE
      - &id315
        name: checked_out
        in: query
        description: |-
          Includes only checked out documents in the result, if set `true`.
        schema:
          type: boolean
      - &id316
        name: create_date
        in: query
        description: |-
          Returns documents created on this date (in ISO 8601 format).
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id317
        name: create_date_from
        in: query
        description: |-
          Returns documents created on or after this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:07Z"
      - &id318
        name: create_date_to
        in: query
        description: |-
          Returns documents created on or before this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:08Z"
      - &id319
        name: custom1
        in: query
        description: |-
          Specifies a property alias to match in this custom property.

          A property alias is an entry for that custom property.
          For example, `custom1` can be captioned as *Client*.
          It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
          These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

          * This search is not case-sensitive.
          * Partial matches are not supported.
          * The wildcard character (&ast;) is not supported.
        schema:
          type: string
      - &id320
        name: custom10
        in: query
        description: |-
          Alias for Custom10 field.
        schema:
          type: string
      - &id321
        name: custom11
        in: query
        description: |-
          Alias for Custom11 field.
        schema:
          type: string
      - &id322
        name: custom12
        in: query
        description: |-
          Alias for Custom12 field.
        schema:
          type: string
      - &id323
        name: custom13
        in: query
        description: |-
          Contents of custom13 field.
        schema:
          type: string
      - &id324
        name: custom14
        in: query
        description: |-
          Contents of custom14 field.
        schema:
          type: string
      - &id325
        name: custom15
        in: query
        description: |-
          Contents of custom15 field.
        schema:
          type: string
      - &id326
        name: custom16
        in: query
        description: |-
          Contents of custom16 field.
        schema:
          type: string
      - &id327
        name: custom17
        in: query
        description: |-
          Specifies a value or a range of values of the custom17 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
          | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
          | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
          | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id328
        name: custom18
        in: query
        description: |-
          Specifies a value or a range of values of the custom18 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
          | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
          | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
          | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id329
        name: custom19
        in: query
        description: |-
          Specifies a value or a range of values of the custom19 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
          | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
          | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
          | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id330
        name: custom2
        in: query
        description: |-
          Alias for Custom2 field.
        schema:
          type: string
      - &id331
        name: custom20
        in: query
        description: |-
          Specifies a value or a range of values of the custom20 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
          | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
          | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
          | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id332
        name: custom21_from
        in: query
        description: |-
          Contents of custom21_from field.
        schema:
          type: string
      - &id333
        name: custom21_relative
        in: query
        description: |-
          Contents of custom21_relative field.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id334
        name: custom21_to
        in: query
        description: |-
          Contents of custom21_to field.
        schema:
          type: string
      - &id335
        name: custom22_from
        in: query
        description: |-
          Contents of custom22_from field.
        schema:
          type: string
      - &id336
        name: custom22_relative
        in: query
        description: |-
          Contents of custom22_relative field.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id337
        name: custom22_to
        in: query
        description: |-
          Contents of custom22_to field.
        schema:
          type: string
      - &id338
        name: custom23_from
        in: query
        description: |-
          Contents of custom23_from field.
        schema:
          type: string
      - &id339
        name: custom23_relative
        in: query
        description: |-
          Contents of custom23_relative field.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id340
        name: custom23_to
        in: query
        description: |-
          Contents of custom23_to field.
        schema:
          type: string
      - &id341
        name: custom24_from
        in: query
        description: |-
          Contents of custom24_from field.
        schema:
          type: string
      - &id342
        name: custom24_relative
        in: query
        description: |-
          Contents of custom24_relative field.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id343
        name: custom24_to
        in: query
        description: |-
          Contents of custom24_to field.
        schema:
          type: string
      - &id344
        name: custom25
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id345
        name: custom26
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id346
        name: custom27
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id347
        name: custom28
        in: query
        description: |-
          Boolean custom field.
        schema:
          type: boolean
      - &id348
        name: custom29
        in: query
        description: |-
          Alias of custom29 field.
        schema:
          type: string
      - &id349
        name: custom3
        in: query
        description: |-
          Alias for Custom3 field.
        schema:
          type: string
      - &id350
        name: custom30
        in: query
        description: |-
          Alias of custom30 field.
        schema:
          type: string
      - &id351
        name: custom4
        in: query
        description: |-
          Alias for Custom4 field.
        schema:
          type: string
      - &id352
        name: custom5
        in: query
        description: |-
          Alias for Custom5 field.
        schema:
          type: string
      - &id353
        name: custom6
        in: query
        description: |-
          Alias for Custom6 field.
        schema:
          type: string
      - &id354
        name: custom7
        in: query
        description: |-
          Alias for Custom7 field.
        schema:
          type: string
      - &id355
        name: custom8
        in: query
        description: |-
          Alias for Custom8 field.
        schema:
          type: string
      - &id356
        name: custom9
        in: query
        description: |-
          Alias for Custom9 field.
        schema:
          type: string
      - &id357
        name: document_number
        in: query
        description: |-
          Indicates the document number of a document.

          Document number is the number assigned to a document when it is imported to iManage Work,
          and appears as part of the document ID.<br>
          Document ID is the combination of library ID, document number, and document version.<br>
          For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        schema:
          anyOf:
          - type: string
          - type: integer
          example: 123 "123" "123,124"
      - &id358
        name: document_version
        in: query
        description: |-
          Specifies the document version number.<br><br>
          The document version number is the number of times a document has been edited.
          For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

          When specifying document version numbers, either a single value can be included (`document_number=1`), or
          a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
        schema:
          type: integer
          example: 1
      - &id359
        name: edit_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id360
        name: edit_date_from
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id361
        name: edit_date_to
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: string
          example: senders
      - &id362
        name: file_target
        in: query
        description: |
          String to be found in a subset of properties defined in the index.<br><br>
          These fields are custom1, custom2, custom29, custom30, and workspace name.<br>
          Those fields can be changed. Contact your iManage Work system administrator for more information.
        schema:
          type: string
      - &id363
        name: in_use
        in: query
        description: |
          Indicates whether to return documents that are currently in use.<br><br>
          If `true`, returns documents marked as in use.<br>
          If `false`, returns documents regardless of their in use status.<br>
        schema:
          type: boolean
      - &id364
        name: in_use_by
        in: query
        description: |-
          Includes only documents in use by the provided user ID.
        schema:
          type: string
          example: ACASE
      - &id365
        name: last_user
        in: query
        description: |-
          The user ID of the last user for the documents.
        schema:
          type: string
          example: ACASE
      - *id028
      - name: limit
        in: query
        description: |
          Maximum number of items to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id006
      - &id366
        name: operator
        in: query
        description: |-
          The user ID of the operator of the documents (the user who last modified the documents).
        schema:
          type: string
          example: MARCIEDAVENPORT
      - &id367
        name: owner
        in: query
        description: |-
          The userID of the owner (the creator) of the folder or workspace.
        schema:
          type: string
          example: CPIERCE
      - &id368
        name: reference_database
        in: query
        description: |-
          Specifies the library (formerly called a database) that the item is associated with.
        schema:
          type: string
      - name: results
        in: query
        description: |-
          Indicates whether to include search results.<br><br>
          If `true`, the search results are returned.<br>
          If `false`, no search results are returned.<br>
          The default value is `true`.<br><br>

          This parameter is often used along with the `facets` parameter.
          If neither of the parameters are included, only search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, then no data of either kind are returned.
        schema:
          type: boolean
          default: true
      - *id029
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - &id369
        name: type
        in: query
        description: |-
          Specifies documents of the document type.<br><br>

          Each iManage Work system has a customizable list of document types per the organizational requirements.
          For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
          These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
          Document type is not case sensitive, that is, *Word* matches with *word*.<br>
          There is no stemming and the wildcard character (&ast;) is not supported.
          For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
          Multiple document types can be included using a comma-separated list.
          For example, *type=WORD,WORDX,WORDXT*

          <br>
          To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
        schema:
          type: string
          example: type=WORD, or type=WORD,WORDX
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-03-17T04:10:38Z'
                      author: ACASE
                      class: DOC
                      comment: editing comments
                      create_date: '2017-03-14T21:57:40Z'
                      custom3: INPROGRESS
                      custom4: IL
                      database: Active
                      default_security: public
                      document_number: 110410
                      edit_date: '2017-03-14T21:57:40Z'
                      edit_profile_date: '2017-03-16T19:09:04Z'
                      extension: docx
                      file_create_date: '2017-03-14T21:57:37Z'
                      file_edit_date: '2017-03-14T21:57:37Z'
                      has_attachment: false
                      id: Active!110410.2
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=ACTIVE&&lib=Active&&num=110410&&ver=2
                      last_user: ACASE
                      name: Doc1
                      operator: ACASE
                      size: 16750
                      type: WORDX
                      version: 2
                      workspace_id: Active!11429
                      workspace_name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - activity_date: '2017-03-16T21:02:31Z'
                      author: ACASE
                      class: DOC
                      create_date: '2017-03-14T20:22:23Z'
                      custom1: '1086'
                      custom2: '1'
                      custom3: INPROGRESS
                      custom4: IL
                      database: Active
                      default_security: public
                      document_number: 110405
                      edit_date: '2017-03-14T20:22:23Z'
                      edit_profile_date: '2017-03-14T20:22:23Z'
                      extension: rtf
                      file_create_date: '2017-03-14T20:22:23Z'
                      file_edit_date: '2017-03-14T20:22:23Z'
                      has_attachment: false
                      id: Active!110405.1
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110405&&ver=1
                      last_user: ACASE
                      name: HP Branded EULA
                      operator: ACASE
                      size: 55791
                      type: RTF
                      version: 1
                      workspace_id: Active!11429
                      workspace_name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - activity_date: '2017-03-16T20:24:47Z'
                      author: ACASE
                      class: DOC
                      create_date: '2017-03-16T20:24:46Z'
                      custom1: '9999'
                      custom2: '1045'
                      custom29: LABOR
                      database: Active
                      default_security: public
                      document_number: 110477
                      edit_date: '2017-03-16T20:24:46Z'
                      edit_profile_date: '2017-03-16T20:24:46Z'
                      extension: docx
                      file_create_date: '2017-03-16T20:24:46Z'
                      file_edit_date: '2017-03-16T20:24:46Z'
                      has_attachment: false
                      id: Active!110477.1
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110477&&ver=1
                      last_user: ACASE
                      name: SAMP Doc
                      operator: ACASE
                      size: 68761
                      type: WORDX
                      version: 1
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                  total_count: 224
                required:
                - data
                type: object
                properties: &id370
                  data: &id135
                    type: object
                    properties:
                      facets:
                        $ref: '#/components/schemas/Documents.searchFilter'
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Documents.document'
                    additionalProperties: false
                  total_count: &id136
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Containers and Documents
    #- customers-{customerId}-recent-documents
      summary: Get documents with recent activity (POST)
      description: |
        Returns a list of documents that have had recent activity (activity within the last 30 days).<br><br>
        For a more generalized recent documents search, see GET `/customers/{customerId}/recent-documents`.<br>

        The list of returned documents does not include the actual activities.
        To see the list of activities, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history`.
      operationId: POST_customers_{customerId}_recent-documents
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Documents Request
              type: object
              properties: &id371
                limit:
                  maximum: 9999
                  minimum: 1
                  type: integer
                  description: |
                    Maximum number of items to include in the response.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    document:
                      type: array
                      items:
                        type: string
                      description: |
                        The document profile fields to include in the response
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |-
                        Returns documents that were edited on or after this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range. For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z. If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |-
                        Returns documents that were edited on or before this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range. For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z. If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    anywhere:
                      type: string
                      description: |-
                        A string to be searched anywhere in the document profile or contents. This does not apply to folder searches.
                      example: litigation
                    user:
                      type: string
                      description: |-
                        ID of the user.
                    author:
                      type: string
                      description: |-
                        The user ID of the document's author.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        The user ID of the operator of the documents.
                      example: MARCIEDAVENPORT
                    owner:
                      type: string
                      description: |-
                        The user ID of the author or operator of the documents.
                      example: CPIERCE
                    comments:
                      type: string
                      description: |-
                        A string that appears in the comments of the results.
                      example: confidential
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |-
                        Alias for Custom2 field.
                    custom3:
                      type: string
                      description: |-
                        Alias for Custom3 field.
                    custom4:
                      type: string
                      description: |-
                        Alias for Custom4 field.
                    custom5:
                      type: string
                      description: |-
                        Alias for Custom5 field.
                    custom6:
                      type: string
                      description: |-
                        Alias for Custom6 field.
                    custom7:
                      type: string
                      description: |-
                        Alias for Custom7 field.
                    custom8:
                      type: string
                      description: |-
                        Alias for Custom8 field.
                    custom9:
                      type: string
                      description: |-
                        Alias for Custom9 field.
                    custom10:
                      type: string
                      description: |-
                        Alias for Custom10 field.
                    custom11:
                      type: string
                      description: |-
                        Alias for Custom11 field.
                    custom12:
                      type: string
                      description: |-
                        Alias for Custom12 field.
                    custom13:
                      type: string
                      description: |-
                        Contents of custom13 field.
                    custom14:
                      type: string
                      description: |-
                        Contents of custom14 field.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 field.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 field.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from field.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from field.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from field.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from field.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to field.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to field.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to field.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to field.
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom21_relative field.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom22_relative field.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom23, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom24, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom29:
                      type: string
                      description: |-
                        Alias of custom29 field.
                    custom30:
                      type: string
                      description: |-
                        Alias of custom30 field.
                    name:
                      type: string
                      description: |-
                        A string to be found in the name of the documents.
                      example: contract
                    document_number:
                      anyOf:
                      - type: string
                      - type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 123 "123" "123,124"
                    document_version:
                      anyOf:
                      - type: string
                      - type: integer
                      description: |-
                        Indicates the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1 "1" "1,2"
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |-
                        Returns documents created on or after this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:05Z"
                    create_date_to:
                      type: string
                      description: |-
                        Returns documents created on or before this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:06Z"
                    last_user:
                      type: string
                      description: |-
                        The user ID of the last user for the documents.
                      example: ACASE
                    checked_out:
                      type: boolean
                      description: |-
                        Includes only checked out documents in the result, if set `true`.
                    in_use_by:
                      type: string
                      description: |-
                        Includes only documents in use by the provided user ID.
                      example: ACASE
                    in_use:
                      type: boolean
                      description: |-
                        Includes only documents in use.
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id372
                limit: 500
                timezone_offset: 300
                profile_fields:
                  document:
                  - activity_date
                  - in_use_by
                  - edit_date
                  - create_date
                  - size
                  - name
                  - type
                filters:
                  custom1: '1001'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Documents Response
                required:
                - data
                - overflow
                type: object
                properties: &id373
                  data:
                    type: array
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id374
                  data:
                  - activity_date: '2018-09-19T14:33:43Z'
                    create_date: '2018-07-18T15:18:04Z'
                    database: Active
                    edit_date: '2018-07-18T15:18:05Z'
                    id: Active!181518.1
                    iwl: iwl:dms=dms.company.com&&lib=Active&&num=181518&&ver=1
                    name: Insurance Policy for Acme
                    size: 79897
                    type: WORDX
                    wstype: document
                  - activity_date: '2018-09-19T18:34:56Z'
                    create_date: '2018-05-16T14:48:26Z'
                    database: Active
                    edit_date: '2018-05-16T14:48:26Z'
                    id: Active!181556.1
                    in_use_by: ACASE
                    iwl: iwl:dms=dms.company.com&&lib=Active&&num=181556&&ver=1
                    name: TEST_checkout
                    size: 5
                    type: ANSI
                    wstype: document
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/ping:
    description: |-
      None
    get:
      tags:
      - Ping
    #- customers-{customerId}-ping
      summary: Ping the server to test the connectivity
      description: |
        Pings the server to test the connectivity.<br><br>
        Check the server response value:
        * A response value of 204 indicates connectivity is successful.
        * A response value of 200 indicates the connectivity check is uncertain. Try `ping` again, or consult your iManage Work system administrator.
        * Any other code in the 200 series indicates there is no current connection.
        * Any code other than in the 200 series indicates the request has failed and no information is available about the connection status.

        Either no JSON structure is returned with this call, or ignore the JSON structure that is returned.
      operationId: GET_customers_{customerId}_ping
      responses:
        204:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/libraries:
    get:
      tags:
      - Libraries
    #- customers-{customerId}-libraries
  #summary: GET /customers/{customerId}/libraries
      summary: Get available libraries
      description: |-
        Gets a list of libraries (formerly called databases) accessible on iManage Work Server.
      operationId: GET_customers_{customerId}_libraries
      parameters:
      - *id004
      - name: include_linksite
        in: query
        description: |-
          Indicates whether to include iManage Share Plug-in for iManage Work (previously called Linksite) libraries.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: Active
                    type: worksite
                    is_hidden: true
                  - id: Archive
                    type: worksite
                    is_hidden: false
                required:
                - data
                type: object
                properties: &id1633
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - type
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Name of the database (also called a library).
                        type:
                          enum: ["worksite", "linksite"]
                          type: string
                          description: |-
                            Type of the library (formerly called a database).
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates the library (formerly called a database) is hidden.<br><br>
                            If `true`, the library is hidden.<br>
                            If `false`, the library is not hidden.
                          default: false
                      additionalProperties: false
                additionalProperties: false
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/libraries/{libraryId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces
      summary: Get workspaces from a library
      description: |
        Returns a list of workspaces from the specified library.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the workspaces from library active_uk:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/workspaces`<br>

        The following request returns workspaces active_uk!19523 and active_uk!564 from library active_uk:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/workspaces?container_ids=active_uk!19523,active_uk!564`

        This request returns up to the first 500 workspaces in ascending order of the workspaceID using a page cursor:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/workspaces?paging_mode=standard_cursor&limit=500&sort_order=asc&cursor=154300`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To update a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        * To delete a workspace, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
        * For an overview of workspace templates, see the topic introduction of `/customers/{customerId}/libraries/{libraryId}/templates`
        * To return a list of templates in a library, see GET `/customers/{customerId}/libraries/{libraryId}/templates`
        * To return a list of children (containers and documents) from the top level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`
        * To return a list of children (containers and documents) from a specified folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`
        * To create a workspace in the specified library, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces
      parameters:
      - *id004
      - *id030
      - *id031
      - &id083
        name: cursor
        in: query
        description: |
          Specifies to begin the search from this cursor.<br>
          If omitted, the returned set is from the beginning.<br><br>
          A new cursor value is returned which can be used in subsequent requests to point to the next starting record.
        schema:
          type: string
          example: 5
      - *id032
      - *id033
      - *id034
      - *id035
      - *id036
      - *id037
      - *id038
      - *id039
      - *id040
      - *id041
      - *id042
      - *id043
      - *id044
      - *id045
      - *id046
      - *id047
      - *id048
      - *id049
      - *id050
      - *id051
      - *id052
      - *id053
      - *id054
      - *id055
      - *id056
      - *id057
      - *id058
      - *id059
      - *id060
      - *id061
      - *id062
      - *id063
      - *id064
      - *id065
      - *id066
      - *id067
      - *id068
      - *id069
      - *id070
      - *id071
      - name: facets
        in: query
        description: |
          Specifies which facets to return.

          Facets are a summary list of the most common occurrences for each facet type listed.
          For example, if `facets` specifies custom1, all items containing any value for custom1 are counted.
          The five items with the highest counts are returned.
          Facets allow users to anticipate selections, or to present a list of suggestions that the user will likely select.

          Multiple facets can be included using a comma-separated list.
          For example: `facets=custom1,custom2,custom9`.
          If this parameter is omitted, which is the default value, no facets are returned.
          Possible values are: custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.

          This parameter is often used along with the `results` parameter.
          If neither of the parameters are included, only the search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, no data of either type is returned. However, an empty response object is returned.<br>

          <font style="color:black;font-size: 15px;font-weight: bold;">Sample request</font><br>
          In this example, the search is GET `https://www.ajubalaw.com/work/api/v2/customers/100/recent-workspaces?results=false&facets=custom1,custom9`.
          The response JSON object does not include any search results.
          The facets section specified returning custom9 but there are no custom9 values to return.
          However, three custom1 values are returned, with *Microsoft* being the most common with 132 instances.

          <pre>
          {
            "data": {
              "facets": {
                "custom1": [
                  {
                    "alias"      : "Microsoft",
                    "count"      : 132,
                    "description": "Microsoft Corporation"
                  },
                  {
                    "alias"      : "Amazon",
                    "count"      : 20,
                    "description": "Amazon.com, Inc"
                  },
                  {
                    "alias"      : "Wallachs",
                    "count"      : 1,
                    "description": "Wallachs"
                  }
                ],
                "custom9": []
              }
            }
          }</pre>
        schema:
          type: string
      - *id072
      - name: include_ids
        in: query
        description: |
          Specifies to return workspaces only from the list of workspace IDs provided.<br><br>
          If this parameter is omitted, returns all workspaces from the user's available libraries.
          Multiple workspaces can be included using a comma-separated list.
          For example, `include_ids=active_us!22,active_us!55,active_us!401`.
        schema:
          type: string
      - *id073
      - name: limit
        in: query
        description: |-
          Specifies the maximum number of items to include in the response.

          The request returns either the actual number of items if there are fewer than or equal to the `limit` value,
          or the `limit` value if there are more items than the `limit` value.
          <br>
          This parameter may be used in conjunction with pagination parameters. For more information, see <a href="#overview--pagination">Pagination</a>.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id074
      - *id075
      - *id006
      - *id076
      - name: paging_mode
        in: query
        description: |-
          Specifies the paging mode to be used to retrieve the result set.

          The following are allowed values:

          * standard_cursor - Specifies the query parameter `cursor`can be used to identify the first item to return.
          The cursor is a value that specifies an item by an ID within the results set to start returning from.
          It is not an ordinal position as `offset` is for the standard paging mode.
          For a subsequent search, set `cursor` to the cursor value returned in the previous search.
          Do not modify the cursor value in anyway.
          The standard_cursor mode is the preferred paging mode, as it is quicker and less stressful on system performance.
          The parameter `offset` is ignored in this mode.<br>

          * standard -  Specifies the query parameter `offset` can be used to identify the first item to return.
          The offset is a value that specifies the position of an item within the results set to start returning from.
          This is relative to zero, or the absolute start of the list.
          An offset value of zero starts at the beginning of the results set.
          An offset value of 5, starts with the fifth item in the results set.
          The parameter `cursor` is ignored in this mode.<br><br>
        schema:
          enum: [standard, standard_cursor]
          default: standard
          example: standard_cursor
      - name: sort_order
        in: query
        description: |-
          The sort order to be used when the paging mode is set to use a cursor.<br>

          The following are allowed values:

          |Value|Description|
          |:---|:---|
          |asc|The items are listed in ascending order either alphabetically or numerically.|
          |desc|The items are listed in descending order either alphabetically or numerically.|

          If omitted, items are returned in the order they are found.
        schema:
          enum: [asc, desc]
          type: string
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  cursor: 31653;1
                  data:
                    results:
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2007-08-16T18:55:35Z'
                      custom1: '1009'
                      custom2: '002'
                      custom29: INS
                      custom3: Active|6949|8.2.14
                      custom30: '100'
                      custom4: CO
                      database: active_us
                      default_security: public
                      description: (1009.002) - Worldcom Inc. Worldcom v. Pfieffer
                      document_number: 31653
                      edit_date: '1999-02-25T12:11:53Z'
                      edit_profile_date: '2007-08-16T18:55:35Z'
                      file_create_date: '2007-08-16T18:55:35Z'
                      file_edit_date: '1999-02-25T12:11:53Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: active_us!7601
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=active_us&&lib=&&num=31653&&ver=1
                      last_user: WORKSITEADMIN
                      location: DEFSERVER:\DOCS\active_us\WORKSITE\10\1\31653.1
                      name: 1009.002 - Worldcom v. Pfieffer
                      operator: ACASE
                      owner: WORKSITEADMIN
                      owner_description: WorkSiteAdmin
                      retain_days: 365
                      size: 124
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: active_us!7601
                      wstype: workspace
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2007-08-16T18:55:56Z'
                      custom1: '1011'
                      custom2: '002'
                      custom29: INS
                      custom3: active_us|6949|8.2.14
                      custom30: '100'
                      custom4: MI
                      database: active_us
                      default_security: public
                      description: (1011.002) - EMAP Petersen Inc. EMAP Peterson v.
                        Areneson
                      document_number: 31668
                      edit_date: '1999-01-21T12:11:53Z'
                      edit_profile_date: '2007-08-16T18:55:56Z'
                      file_create_date: '2007-08-16T18:55:56Z'
                      file_edit_date: '1999-01-21T12:11:53Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: active_us!7745
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=active_us&&lib=&&num=31668&&ver=1
                      last_user: WORKSITEADMIN
                      location: DEFSERVER:\DOCS\active_us\WORKSITE\10\1\31668.1
                      name: 1011.002 - EMAP Peterson v. Areneson
                      operator: ACASE
                      owner: WORKSITEADMIN
                      owner_description: WorkSiteAdmin
                      retain_days: 365
                      size: 124
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: active_us!7745
                      wstype: workspace
                    - author: ADMINISTRATOR
                      class: WEBDOC
                      content_type: P
                      create_date: '2008-01-31T02:10:38Z'
                      database: active_us
                      default_security: public
                      document_number: 32639
                      edit_date: '1999-01-11T12:11:53Z'
                      edit_profile_date: '2008-01-31T02:12:06Z'
                      file_create_date: '2008-01-31T02:10:38Z'
                      file_edit_date: '1999-01-11T12:11:53Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: active_us!9230
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=active_us&&lib=&&num=32639&&ver=1
                      last_user: ADMINISTRATOR
                      location: DEFSERVER:\DOCS\active_us\ADMINIST\10\1\32639.1
                      name: London
                      operator: ADMINISTRATOR
                      owner: ADMINISTRATOR
                      owner_description: Administrator
                      retain_days: 365
                      size: 545
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: active_us!9230
                      wstype: workspace
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                required: &id1352
                - data
                - cursor
                properties: &id1353
                  cursor:
                    type: string
                    description: |-
                      The next position of the cursor returned by the server.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  data: *id077
                  total_count: *id078
                additionalProperties: false
                type: object
        400: *id003
        401: *id002
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces
      summary: Create a workspace
      description: |
        Creates a workspace.<br>

        <font style="color:black;size:5">Relationship with workspace templates</font><br>
        Creating a workspace is associated with workspace templates.
        A workspace template is a predefined workspace whose structure is copied for the new workspace.
        These define the:<br>
        * The number, types, and structure of containers
        * Whether users can rename containers
        * Where users can create additional containers within that workspace.
        These restrictions allow the organization to better structure, standardize, and control the format of their workspaces.<br>

        Workspace template restrictions are automatically enforced when creating workspaces through iManage Work clients.
        This means users attempting to add containers through iManage Work clients may have template restrictions.
        For more information, see `/customers/{customerId}/libraries/{libraryId}/templates`.<br>

        Workspace template restrictions are not enforced when using REST requests directly.
        Workspaces can be created directly by using a series of requests, first to create the workspace, and then to populate it with containers.
        That means when creating a workspace using REST requests, a workspace template should be explicitly assigned by adding a name-value pair with the format `"TemplateId": "workspaceId"`.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The only two required fields are `name` and `default security`.<br>
        The following request creates a workspace in library active_uk:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces`<br>
        The request body:<br>

        ```
        {
          "name": "Retained documents",
          "default_security" : "private"
        }
        ```

        <br>The following request creates a name-value pair for a workspace:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!179273/name-value-pairs`<br>
        The request body:<br>

        ```
        {
          "TemplateId": "active_us!179193"
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To update a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        To delete a workspace, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceID}`
        For an overview of workspace templates, see the topic introduction of `/customers/{customerId}/libraries/{libraryId}/templates`
        To return a list of templates in a library, see GET `/customers/{customerId}/libraries/{libraryId}/templates`
        To return a list of children (containers and documents) from the top level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`
        To return a list of children (containers and documents) from a specified folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`
        To return a list of workspaces from a library, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              required:
              - name
              - default_security
              type: object
              properties: &id1348
                custom1: &id212
                  type: string
                  description: |-
                    Specifies the alias for the `custom1` property. The `custom1` property is the parent of `custom2` property.
                custom2: &id213
                  type: string
                  description: |-
                    Specifies the alias for the `custom2` property. The `custom2` property is the child of `custom1` property.
                custom3: &id214
                  type: string
                  description: |-
                    Specifies the alias for the `custom3` property.
                custom4: &id215
                  type: string
                  description: |-
                    Specifies the alias for the `custom4` property.
                custom5: &id216
                  type: string
                  description: |-
                    Specifies the alias for the `custom5` property.
                custom6: &id217
                  type: string
                  description: |-
                    Specifies the alias for the `custom6` property.
                custom7: &id218
                  type: string
                  description: |-
                    Specifies the alias for the `custom7` property.
                custom8: &id219
                  type: string
                  description: |-
                    Specifies the alias for the `custom8` property.
                custom9: &id220
                  type: string
                  description: |-
                    Specifies the alias for the `custom9` property.
                custom10: &id221
                  type: string
                  description: |-
                    Specifies the alias for the `custom10` property.
                custom11: &id222
                  type: string
                  description: |-
                    Specifies the alias for the `custom11` property.
                custom12: &id223
                  type: string
                  description: |-
                    Specifies the alias for the `custom12` property.
                custom13: &id224
                  type: string
                  description: |-
                    Specifies the value of the `custom13` property.
                custom14: &id225
                  type: string
                  description: |-
                    Specifies the value of the `custom14` property.
                custom15: &id226
                  type: string
                  description: |-
                    Specifies the value of the `custom15` property.
                custom16: &id227
                  type: string
                  description: |-
                    Specifies the value of the `custom16` property.
                custom17: &id228
                  type: number
                  description: |-
                    Specifies the value of the `custom17` property.
                  format: double
                custom18: &id229
                  type: number
                  description: |-
                    Specifies the value of the `custom18` property.
                  format: double
                custom19: &id230
                  type: number
                  description: |-
                    Specifies the value of the `custom19` property.
                  format: double
                custom20: &id231
                  type: number
                  description: |-
                    Specifies the value of the `custom20` property.
                  format: double
                custom21: &id232
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom21` property in ISO 8601 date format.
                custom22: &id233
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom22` property in ISO 8601 date format.
                custom23: &id234
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom23` property in ISO 8601 date format.
                custom24: &id235
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom24` property in ISO 8601 date format.
                custom25: &id236
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom25` property.
                custom26: &id237
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom26` property.
                custom27: &id238
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom27` property.
                custom28: &id239
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom28` property.
                custom29: &id240
                  type: string
                  description: |-
                    Specifies the alias of the `custom29` property. The `custom29` property is the parent of `custom30` property.
                custom30: &id241
                  type: string
                  description: |-
                    Specifies the alias of the `custom30` property. The `custom30` property is the child of `custom29` property.
                custom31: &id242
                  type: string
                  description: |-
                    Reserved. Do not use.
                declared_date: &id243
                  type: string
                  description: |-
                    Specifies the date (in ISO 8601 format) when a workspace was declared as a record.

                    A record cannot be edited or deleted, except by an iManage Work system administrator.
                    To see if the workspace has been declared as a record, see the parameter `is_declared`.
                default_security: &id244
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                  default: private
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                description: &id245
                  maxLength: 254
                  type: string
                  description: |-
                    Specifies additional information about the workspace.
                  example: |
                    "description": "Private documents for Matter 003 staff."
                is_declared: &id246
                  type: boolean
                  description: |-
                    Specifies if a workspace is declared as a record, and can no longer be edited or deleted, except by an iManage Work system administrator.
                is_external: &id247
                  type: boolean
                  description: |-
                    Specifies if the workspace is shared with external users.

                    If `true`, the workspace is shared with external users.<br>
                    If `false`, the workspace is not shared with external users.
                is_external_as_normal: &id248
                  type: boolean
                  description: |-
                    Specifies an external user is treated as a normal user when determining the access permission to the workspace.

                    If `true`, an external user is treated as a normal user.<br>
                    If `false`, an external user is not treated as a normal user, and access permission is restricted.
                  default: false
                name: &id249
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |
                    Specifies a descriptive name for the workspace.

                    This is a required field when creating a workspace.
                  example: |
                    "name" : "Matter 10234 documents"
                owner: &id250
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |-
                    Specifies the user ID of the owner of the workspace.
                profile: &id251
                  type: object
                  additionalProperties: true
                  description: |-
                    Set of arbitrary name-value pair properties.
                project_custom1: &id252
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.

                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2: &id253
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.

                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3: &id254
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.

                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                retain_days: &id255
                  type: integer
                  description: |-
                    Specifies the number of days to retain a declared workspace.
                  format: int64
                  default: 365
                subclass: &id256
                  type: string
                  description: |-
                    Specifies the sub-category of the workspace.

                    This is a validated field and must be a defined subclass alias of class WEBDOC.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    author: ACASE
                    author_description: Andrew Case
                    class: WEBDOC
                    content_type: P
                    create_date: '2017-04-10T14:23:58Z'
                    custom1: '0999'
                    custom1_description: ACME
                    custom2: '0001'
                    custom2_description: ACME Matter 1
                    custom3: ACTIVE
                    custom3_description: Active
                    custom4: CA
                    custom4_description: California
                    database: Active
                    default_security: private
                    description: Kate Daniels vs. Arcadia Bell
                    document_number: 111347
                    edit_date: '2017-04-10T14:23:58Z'
                    edit_profile_date: '2017-04-26T17:17:49Z'
                    effective_security: full_access
                    extension: xml
                    file_create_date: '2017-04-10T14:23:58Z'
                    file_edit_date: '2017-04-10T14:23:58Z'
                    has_attachment: false
                    has_documents: false
                    has_subfolders: true
                    id: Active!20213
                    in_use: false
                    indexable: false
                    is_checked_out: false
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE&&lib=Active&&num=111347&&ver=1
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Daniels vs. Bell
                    operator: ACASE
                    operator_description: Andrew Case
                    owner: ACASE
                    owner_description: Andrew Case
                    project_custom1: '0999'
                    project_custom2: '0001'
                    project_custom3: ACTIVE
                    size: 0
                    subclass: MATTER
                    subtype: work
                    type: XML
                    version: 1
                    workspace_id: Active!20213
                    wstype: workspace
                required:
                - data
                type: object
                properties: &id084
                  data:
                    $ref: '#/components/schemas/Projects.workspace'
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        he customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        minimum: 1
        type: integer
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        type: string
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/search:
    description: |-
      None
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-search
      summary: Scoped search for workspaces
      description: |
        Returns workspaces based on the specified criteria.<br>

        There are three considerations when making this call.<br><br>
        First, all query parameters must be specified in the request body, and that these parameters must not be search criteria.
        As an example, the request body of the POST `/customers/{customerId}/libraries/{libraryName}/workspaces/search` specifies one parameter:

        ```
        {
          "limit" : 1000
        }
        ```

        <br>Second, all search related query parameters must be in the `filters` parameter.
        As an example, the request body of the POST `/customers/{customerId}/libraries/{libraryName}/workspaces/search` specifies
        one search parameter (that finds workspaces edited within the last 30 days):

        ```
        {
          "filters":
          {
            "edit_date": "-30:0d"
          }
        }
        ```

        Second, all query parameters must be specified in the request body.
        As an example, the request body of POST `/customers/{customerId}/libraries/{libraryName}/workspaces/search` specifies one parameter:

        ```
        {
          "limit" : 1000
        }
        ```
        The combined version:
            ```
            {
              "limit" : 1000,
              "filters":
              {
                "edit_date": "-30:0d"
              }
            }
            ```

        <br>Third, the response JSON object includes profile properties only if those are explicitly included to be returned.
        The exception is that the two profile properties `id`, and `wstype` are always returned and cannot be omitted from being returned.
        As an example, the request body of the POST `/customers/{customerId}/libraries/{libraryName}/workspaces/search` with the default `profile_fields` parameters,
        and an empty request body (`{}`) returns the default properties:

        ```
        {
            "data":
            [
              {
                "id": "active!1268670",
                "wstype": "workspace"
              },
              {
                "id": "active!1268669",
                "wstype": "workspace"
              }
            ],
            "overflow": true
          }
          ```
          The same POST request `/customers/{customerId}/libraries/{libraryName}/workspaces/search` with the following profile_fields parameters in the body:

          ```json
          {
            "profile_fields" :
            {
              "workspace"  :
              [
                "create_date",
                "edit_date"
              ]
            }
          }```

          now returns:
          ```json
          {
              "data": [
                  {
                      "id": "active!1273729",
                      "create_date": "2019-10-29T11:44:24.229Z",
                      "edit_date": "2019-10-29T11:44:24.229Z",
                      "wstype": "workspace"
                  },
                  {
                      "id": "active!1273639",
                      "create_date": "2019-10-29T11:36:56.03Z",
                      "edit_date": "2019-10-29T11:36:56.03Z",
                      "wstype": "workspace"
                  }
              ],
              "overflow": true
          }
          ```

          These can be combined into a single request body:

          ```
          {
          	"filters":
          	{
          		"edit_date": "-30:0d"
          	},
          	"profile_fields" :
          	{
              "workspace"  :
              [
                "create_date",
                "edit_date"
              ]
            }
          }
          ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_search
      requestBody:
        content:
          application/json:
            schema:
              title: Workspace Search Request
              type: object
              properties: *id079
              example: *id080
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Document Search Response
                required:
                - data
                - overflow
                type: object
                properties: *id081
                example: *id082
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/admin-search:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-admin-search
      summary: Search for admin-search workspaces
      description: |-
        Returns all the workspaces from the specified library.<br><br>

        The minimum access permission required to implement this request: Tier 1 administrator.<br>
        The custom metadata descriptions are redacted from the response for Tier 1 administrators, whereas Tier 2 and and higher administrators will recieve this information.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_admin-search
      responses:
        200:
          description: The custom metadata description fields are redacted for Tier
            1 admin users
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      facets:
                        $ref: '#/components/schemas/Projects.searchFilter'
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Projects.workspace-admin-search'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - author: KTHOMPSON
                    author_description: Kelly Thompson
                    class: WEBDOC
                    class_description: infoLink Web Page
                    content_type: P
                    create_date: '2014-10-17T20:45:49Z'
                    custom1: '1022'
                    custom2: '009'
                    custom21: '2017-01-23T06:00:00Z'
                    custom22: '2017-01-16T06:00:00Z'
                    custom23: '2017-01-10T06:00:00Z'
                    custom24: '2017-01-16T06:00:00Z'
                    custom25: true
                    custom26: true
                    custom27: true
                    custom28: true
                    library: Archive
                    declared: false
                    default_security: view
                    document_number: 1
                    edit_date: '2014-10-17T20:45:49Z'
                    edit_profile_date: '2017-02-16T22:54:48Z'
                    file_create_date: '2014-10-17T20:44:36Z'
                    file_edit_date: '2014-10-17T20:44:36Z'
                    has_subfolders: true
                    id: Archive!1
                    in_use: false
                    is_checked_out: false
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hidden: false
                    is_hipaa: false
                    is_in_use: false
                    iwl: iwl:dms=ACTIVE.imanage.com&&lib=&&num=1&&ver=1
                    last_user: KTHOMPSON
                    last_user_description: Kelly Thompson
                    location: DEFSERVER:\ARCHIVE\KTHOMPSON\0\1\1.1
                    name: Thompson Archive
                    operator: KTHOMPSON
                    operator_description: Kelly Thompson
                    owner: KTHOMPSON
                    owner_description: Kelly Thompson
                    project_custom1: '1022'
                    project_custom2: '009'
                    retain_days: 365
                    size: 1
                    subtype: work
                    type: XML
                    type_description: XML
                    version: 1
                    workspace_id: Archive!1
                    wstype: workspace
                  - author: ACASE
                    author_description: Andrew Case
                    class: WEBDOC
                    class_description: infoLink Web Page
                    content_type: P
                    create_date: '2015-11-04T17:33:01Z'
                    custom1: '1176'
                    custom13: 你好你好吗
                    custom14: salut comment ca va
                    custom15: ನಮಸ್ಕಾರ ಹೇಗಿದ್ದೀರಾ
                    custom16: ನಮಸ್ಕಾರ ಹೇಗಿದ್ದೀರಾ
                    custom2: '1'
                    custom21: '2011-02-16T06:00:00Z'
                    custom22: '2012-05-16T06:00:00Z'
                    custom23: '2013-06-13T06:00:00Z'
                    custom24: '2014-05-14T06:00:00Z'
                    custom25: false
                    custom26: true
                    custom27: false
                    custom28: true
                    custom29: BANK
                    custom3: ACTIVE
                    custom4: CO
                    custom5: AER
                    library: Archive
                    declared: false
                    default_security: public
                    description: hi how are you
                    document_number: 5
                    edit_date: '2015-11-04T17:33:01Z'
                    edit_profile_date: '2017-07-07T02:05:09Z'
                    file_create_date: '2015-11-04T17:33:01Z'
                    file_edit_date: '2015-11-04T17:33:01Z'
                    has_subfolders: true
                    id: Archive!19
                    in_use: false
                    is_checked_out: false
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hidden: false
                    is_hipaa: false
                    is_in_use: false
                    iwl: iwl:dms=ACTIVE.imanage.com&&lib=&&num=5&&ver=1
                    last_user: ACASE
                    last_user_description: Andrew Case
                    location: DEFSERVER:\ARCHIVE\ACASE\0\1\5.1
                    name: 112233.020 - Apple vs. Archive-imanage
                    operator: ACASE
                    operator_description: Andrew Case
                    owner: ACASE
                    owner_description: Andrew Case
                    project_custom1: '1176'
                    project_custom2: '1'
                    project_custom3: ACTIVE
                    retain_days: 365
                    size: 1
                    subtype: work
                    type: XML
                    type_description: XML
                    version: 1
                    workspace_id: Archive!19
                    wstype: workspace
                  total_count: 2
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id030
      - *id031
      - *id083
      - *id032
      - *id033
      - *id034
      - *id035
      - *id036
      - *id037
      - *id038
      - *id039
      - *id040
      - *id041
      - *id042
      - *id043
      - *id044
      - *id045
      - *id046
      - *id047
      - *id048
      - *id049
      - *id050
      - *id051
      - *id052
      - *id053
      - *id054
      - *id055
      - *id056
      - *id057
      - *id058
      - *id059
      - *id060
      - *id061
      - *id062
      - *id063
      - *id064
      - *id065
      - *id066
      - *id067
      - *id068
      - *id069
      - *id070
      - *id071
      - *id072
      - *id073
      - &id134
        name: limit
        in: query
        description: |
          Specifies the maximum number of items to be returned by each search, regardless of the total number of items found.<br><br>
          If the number of items in the result set is more than the limit, then only the number of items defined by the limit are returned.
        schema:
          type: integer
          default: 25
          example: 10
      - *id074
      - *id075
      - *id006
      - *id076
      - *id007
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}
      summary: Get a workspace profile
      description: |
        Returns the workspace profile, and optionally the list of allowed operations for the workspace ID.<br><br>
        The workspace profile consists of its various properties. For example: class, custom properties, default security.<br>
        If the parameter `include_operations` is `true`, it also returns the list of allowed operations.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of all workspaces in a library, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`<br>
        * To list properties of a single workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        * To create folders at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        * To update a workspace’s properties, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}
      parameters:
      - *id004
      - name: include_operations
        in: query
        description: |
          Specifies to return a list of allowed operations for the user on the workspace.<br><br>
          If `true`, returns a list of allowed operations for the user on the workspace.<br>
          If `false`, does not return a list of allowed operations for the user on the workspace.
        schema:
          type: boolean
          default: false
      - &id389
        name: profile_check
        in: query
        description: |
          Specifies warnings for missing required fields and disabled fields based on the folder's class (if it has one).<br><br>
          If `true`, returns warnings for missing required fields and disabled fields for the class set on folder.<br>
          If `false`, does not return warnings for missing required fields and disabled fields for the class set on folder.<br>
          For example, if `custom1` is the mandatory field for a class that is not defined, and `profile_check=true`, a warning is returned.

          ```
          "warnings": [
              {
                  "error": "required",
                  "field": "custom1"
              }
          ],
          "error": {
              "code": "NRC_INVALID_PROFILE",
              "code_message": "Document profile is invalid",
              "messages": [
                  {
                      "code": "required",
                      "field": "custom1"
                  }
              ]
          }
          ```
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    class: WEBDOC
                    content_type: P
                    create_date: '2017-04-10T14:23:58Z'
                    custom1: '0999'
                    custom1_description: ACME
                    custom2: '0001'
                    custom2_description: ACME Matter 1
                    custom3: ACTIVE
                    custom3_description: Active
                    custom4: CA
                    custom4_description: California
                    database: Active
                    default_security: private
                    description: Kate Daniels vs. Arcadia Bell
                    document_number: 111347
                    edit_date: '2017-04-10T14:23:58Z'
                    edit_profile_date: '2017-04-26T17:17:49Z'
                    effective_security: full_access
                    extension: xml
                    file_create_date: '2017-04-10T14:23:58Z'
                    file_edit_date: '2017-04-10T14:23:58Z'
                    has_attachment: false
                    has_documents: false
                    has_subfolders: true
                    id: Active!20213
                    in_use: false
                    indexable: false
                    is_checked_out: false
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE&&lib=Active&&num=111347&&ver=1
                    last_user: ACASE
                    last_user_description: Andrew Case
                    last_user_info:
                      allow_logon: true
                      is_external: false
                    name: Daniels vs. Bell
                    operations:
                      add_custom_folders: true
                      add_folders: true
                      change_name: true
                      modify: true
                      remove: true
                      remove_folders: true
                      set_default_security: true
                      set_security: true
                      update_content_shortcut: true
                      default_security_values:
                      - private
                      - view
                      - public
                      - inherit
                    owner: ACASE
                    owner_description: Andrew Case
                    owner_info:
                      allow_logon: true
                      is_external: false
                    project_custom1: '0999'
                    project_custom2: '0001'
                    project_custom3: ACTIVE
                    size: 0
                    subclass: MATTER
                    subtype: work
                    type: XML
                    version: 1
                    workspace_id: Active!20213
                    wstype: workspace
                required:
                - data
                type: object
                properties: &id1355
                  data:
                    properties:
                      operations:
                        additionalProperties: true
                        required:
                        - add_folders
                        - change_name
                        - modify
                        - remove
                        - remove_folders
                        - set_default_security
                        - set_security
                        - update_content_shortcut
                        - add_content
                        type: object
                        properties:
                          add_content:
                            type: boolean
                            description: |
                              Indicates that documents can be added to the workspace.<br><br>
                              If `true`, documents can be added to the workspace.<br>
                              If `false`, documents cannot be added to the workspace.
                          add_custom_folders:
                            type: boolean
                            description: |
                              Indicates a user can upload a folder directly in a container.<br><br>
                              Custom folders are those created other than using the template.
                              This parameter applies only to a workspace that had been created from a template and that the flexible folders option is currently enabled.<br><br>
                              If `true`, users can upload a folder directly in a container.<br>
                              If `false`, users cannot upload a folder directly in a container.<br><br>
                              If the folder was not created from a workspace template, users can create standard folders according their access permission.
                          add_folders:
                            type: boolean
                            description: |
                              Indicates the user can add folders to a workspace.<br><br>
                              If `true`, the user can add folders to a workspace.<br>
                              If `false`, the user cannot add folders to a workspace.<br><br>
                              To see if the user can remove folders, see the parameter `remove_folders`.
                          change_name:
                            type: boolean
                            description: |
                              Indicates the user can change the name of a workspace.<br><br>
                              If `true`, the user can change the name of a workspace.<br>
                              If `false`, the user cannot change the name of a workspace.
                          modify:
                            type: boolean
                            description: |
                              Indicates the user can modify properties of a workspace.<br><br>
                              If `true`, the user can modify properties of a workspace.<br>
                              If `false`, the user cannot modify properties of a workspace.
                          remove:
                            type: boolean
                            description: |
                              Indicates the user can delete a workspace.<br><br>
                              If `true`, the user can delete a workspace.<br>
                              If `false`, the user cannot delete a workspace.
                          remove_folders:
                            type: boolean
                            description: |
                              Indicates the user can remove folders from a workspace.<br><br>
                              If `true`, the user can remove folders from a workspace.<br>
                              If `false`, the user cannot remove folders from a workspace.<br><br>
                              To see if the user can add folders, see the parameter `add_folders`.
                          set_default_security:
                            type: boolean
                            description: |
                              Indicates the user can change the default security for a workspace.<br><br>
                              If `true`, the user can change the default security for a workspace.<br>
                              If `false`, the user cannot change the default security for a workspace.
                          set_security:
                            type: boolean
                            description: |
                              Indicates the user can change the security for a workspace.<br><br>
                              If `true`, the user can change the security for a workspace.<br>
                              If `false`, the user cannot change the security for a workspace.
                          update_content_shortcut:
                            type: boolean
                            description: |
                              Indicates the user can update the target of the shortcut.<br><br>
                              If `true`, the user can update the target of the shortcut.<br>
                              If `false`, the user can update the target of the shortcut.
                          default_security_values:
                            type: array
                            items:
                              enum: ["private", "view", "public"]
                              type: string
                            description: |
                              Indicates the default security setting.<br>

                              |Value|Description|
                              |:---|:---|
                              |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                              |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                              |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      owner_info:
                        description: Information about the owner of this workspace.
                        type: object
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      last_user_info:
                        description: Information about the last user of this workspace.
                        type: object
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      activity_date: &id1276
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) when an activity was last performed on a document in the workspace.
                      create_date: &id1277
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) when the workspace was created.
                      custom1: &id1278
                        type: string
                        description: |
                          Indicates an alias of the custom1 property.<br><br>
                          For example, if the caption of custom1 is Client, then aliases might be DOJ, Pepsi, or Acquisition.<br>
                          This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard asterisk is not supported.
                      custom1_description: &id1279
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom1`.
                      custom2: &id1280
                        type: string
                        description: |
                          Indicates an alias of the custom2 property.<br><br>
                          For example, if the caption of custom2 is Matters, then aliases might be *Active Cases*, or *vs. Texas*.<br>
                          This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard asterisk is not supported.
                      custom2_description: &id1281
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom2`.
                      custom3: &id1282
                        type: string
                        description: |-
                          Indicates an alias of the custom3 property.
                      custom3_description: &id1283
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom3`.
                      custom4: &id1284
                        type: string
                        description: |-
                          Indicates an alias of the custom4 property.
                      custom4_description: &id1285
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom4`.
                      custom5: &id1286
                        type: string
                        description: |-
                          Indicates an alias of the custom5 property.
                      custom5_description: &id1287
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom5`.
                      custom6: &id1288
                        type: string
                        description: |-
                          Indicates an alias of the custom6 property.
                      custom6_description: &id1289
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom6`.
                      custom7: &id1290
                        type: string
                        description: |-
                          Indicates an alias of the custom7 property.
                      custom7_description: &id1291
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom7`.
                      custom8: &id1292
                        type: string
                        description: |-
                          Indicates an alias of the custom8 property.
                      custom8_description: &id1293
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom8`.
                      custom9: &id1294
                        type: string
                        description: |-
                          Indicates an alias of the custom9 property.
                      custom9_description: &id1295
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom9`.
                      custom10: &id1296
                        type: string
                        description: |-
                          Indicates an alias of the custom10 property.
                      custom10_description: &id1297
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom10`.
                      custom11: &id1298
                        type: string
                        description: |-
                          Indicates an alias of the custom11 property.
                      custom11_description: &id1299
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom11`.
                      custom12: &id1300
                        type: string
                        description: |-
                          Indicates an alias of the custom12 property.
                      custom12_description: &id1301
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom12`.
                      custom13: &id1302
                        type: string
                        description: |-
                          Indicates the text of the custom13 property.
                      custom14: &id1303
                        type: string
                        description: |-
                          Indicates the text of the custom14 property.
                      custom15: &id1304
                        type: string
                        description: |-
                          Indicates the text of the custom15 property.
                      custom16: &id1305
                        type: string
                        description: |-
                          Indicates the text of the custom16 property.
                      custom17: &id1306
                        type: number
                        description: |-
                          Indicates a numeric value of the custom17 property.
                        format: double
                      custom18: &id1307
                        type: number
                        description: |-
                          Indicates a numeric value of the custom18 property.
                        format: double
                      custom19: &id1308
                        type: number
                        description: |-
                          Indicates a numeric value of the custom19 property.
                        format: double
                      custom20: &id1309
                        type: number
                        description: |-
                          Indicates a numeric value of the custom20 property.
                        format: double
                      custom21: &id1310
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) value for the custom21 property.
                      custom22: &id1311
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) value for the custom22 property.
                      custom23: &id1312
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) value for the custom23 property.
                      custom24: &id1313
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) value for the custom24 property.
                      custom25: &id1314
                        type: boolean
                        description: |-
                          Indicates the boolean value for the custom25 property.
                      custom26: &id1315
                        type: boolean
                        description: |-
                          Indicates the boolean value for the custom26 property.
                      custom27: &id1316
                        type: boolean
                        description: |-
                          Indicates the boolean value for the custom27 property.
                      custom28: &id1317
                        type: boolean
                        description: |-
                          Indicates the boolean value for the custom28 property.
                      custom29: &id1318
                        type: string
                        description: |-
                          Indicates an alias of the custom29 property.
                      custom29_description: &id1319
                        type: string
                        description: |-
                          Indicates additional information about the parameter `custom29`.
                      custom30: &id1320
                        type: string
                        description: |-
                          Indicates an alias of the custom30 property.
                      custom30_description: &id1321
                        type: string
                        description: |-
                          Indicates additional information about the custom30 property.
                      database: &id1322
                        type: string
                        description: |
                          Indicates the library name where the workspace is located.<br><br>
                          For example: active_us.
                      declared_date: &id1323
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the date (in ISO format) when a workspace was declared as a record.<br><br>
                          A record cannot be edited or deleted, except by an iManage Work system administrator.
                          To see if the workspace has been declared as a record, see the parameter `is_declared`.
                      default_security: &id1324
                        enum: ["inherit", "public", "view", "private"]
                        type: string
                        description: |-
                          The default access level.

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or document inherits security settings from its parent container.|
                          |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                          |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      description: &id1325
                        type: string
                        description: |
                          Indicates additional information or notes about the workspace.<br><br>
                          This is not the same as the custom1 property, and is not validated.
                          Maximum string length: 254.
                      document_number: &id1326
                        type: integer
                        description: |
                          Indicates the document number for the document that is associated with workspace.<br><br>
                          For example, if the document ID is active!64573.2, the document number is 64573.
                      edit_date: &id1327
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date/time (in ISO 8601 format) when the workspace was last edited.
                      effective_security: &id1328
                        enum: ["no_access", "read", "read_write", "full_access"]
                        type: string
                        description: |
                          Indicates the effective security access level available to the user.

                          Effective security is the access level that is the net result of a combination of the following:
                          * an objects's default security
                          * a user's access permission for that object
                          * possible conflicts among groups to which the user belongs to
                          * the security model being used.

                          The available access levels are:

                          |Access level|Description|
                          |:---|:---|
                          |no_access|The user has no access, or any permissions to the container or document.|
                          |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
                          |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
                      has_subfolders: &id1329
                        type: boolean
                        description: |
                          Indicates the workspace has accessible subfolders.<br><br>
                          If `true`, accessible subfolders exist.<br>
                          If `false`, accessible subfolders do not exist.
                      id: &id1330
                        type: string
                        description: |
                          Indicates the workspace ID.<br><br>
                          For example: active!3643.
                      is_declared: &id1331
                        type: boolean
                        description: |
                          Indicates if a workspace is declared as a record.<br><br>
                          A record cannot be edited or deleted, except by an iManage Work system administrator.<br>
                          For the date it was declared as a record, see the parameter `declared_date`.
                      is_external: &id1332
                        type: boolean
                        description: |
                          Indicates if the workspace is shared with the external users.<br><br>
                          If `true`, the workspace is shared with the external users.<br>
                          If `false`, the workspace is not shared with the external users.
                      is_external_as_normal: &id1333
                        type: boolean
                        description: |
                          Indicates if the workspace can be treated as a public workspace.<br><br>
                          If `true`, an external user can access public workspaces.<br>
                          If `false`, an external user cannot access public workspaces.
                      is_hipaa: &id1334
                        type: boolean
                        description: |-
                          Indicates the document is encrypted.<br><br>
                          If `true`, the document is encrypted.<br>
                          If `false`, the document is not encrypted.

                          Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                          Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                          This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                      iwl: &id1335
                        type: string
                        description: |-
                          Indicates the <glossary>iManage Work Link</glossary> (iWL) of a workspace.
                      last_user: &id1336
                        type: string
                        description: |-
                          Indicates the user ID who recently worked on this workspace.
                        example: ACASE
                      last_user_description: &id1337
                        type: string
                        description: |
                          Indicates additional information or notes about the last user.<br><br>
                          Maximum string length: 254.
                      name: &id1338
                        type: string
                        description: |-
                          Indicates the name of the workspace.
                        example: Active
                      owner: &id1339
                        type: string
                        description: |-
                          Indicates the user ID of workspace owner.
                        example: ACASE
                      owner_description: &id1340
                        type: string
                        description: |
                          Indicates additional information or notes about the workspace owner.<br><br>
                          Maximum string length: 254.
                      profile: &id1341
                        type: object
                        additionalProperties: true
                        description: |-
                          Indicates the set of arbitrary name-value pair properties.
                      project_custom1: &id1342
                        type: string
                        description: |
                          Indicates additional information about the workspace.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      project_custom2: &id1343
                        type: string
                        description: |
                          Indicates additional information about the workspace.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      project_custom3: &id1344
                        type: string
                        description: |
                          Indicates additional information about the workspace.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      retain_days: &id1345
                        type: integer
                        description: |-
                          Indicates the number of days to retain a declared workspace.
                      subclass: &id1346
                        type: string
                        description: |-
                          Indicates the subcategory of the workspace based on the subclass of the document it contains.
                      wstype: &id1347
                        enum: ["document", "folder", "workspace", "email", "document_shortcut",
                          "folder_shortcut", "workspace_shortcut", "user"]
                        type: string
                        description: |
                          Indicates the iManage Work object type.

                          |Value|Description|
                          |:---|:---|
                          |document|A document object.|
                          |folder|A folder object.|
                          |workspace|A workspace object.|
                          |email|An email object.|
                          |document_shortcut|A shortcut to the document object.|
                          |folder_shortcut|A shortcut to the folder object.|
                          |workspace_shortcut|A shortcut to the workspace object.|
                          |user|A user object.|
                    additionalProperties: true
                    required:
                    - database
                    - default_security
                    - is_external_as_normal
                    type: object
                additionalProperties: false
        401: *id002
        404: *id005
    delete:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}
      summary: Delete a workspace
      description: |
        Deletes the specified workspace.<br><br>
        A successfully deleted workspace will return no response object.
        A delete request may fail for two common conditions:<br>

        1. The workspace must not contain any child.<br>
        For example, a workspace cannot have any folders or documents under it.
        Check for the workspace children using the request:<br>
        GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`.

        2. You must have read/write access permission to that item and to all other attached items.<br>
        This applies to all create, delete, and modify operations.
        Check access permission for each library using the request:<br>
        GET `/customers/{customerId}/libraries/{libraryId}/operations`.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        The following operations may be made on workspaces:<br>
        * To list workspaces, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`<br>
        * To list properties of a single workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        * To create folders at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        * To update a workspace’s properties, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}
      summary: Update a workspace
      description: |
        Updates the information of the specified workspace.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        Fields that cannot be directly updated, such as `database` and `wstype`, are ignored if included in the request body.
        Fields containing incorrect values fail the entire request, and no update, even a partial update, occurs.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the description field of workspace active_us!2731:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/workspaces/active_us!2731`<br>
        Request body: See the **Request samples** section of the sample provided in the right pane.

        Although the parameters `custom2_description`, `edit_date`, and `has_subfolders` are specified in the request body in the example,
        they cannot be updated using this request and it does not cause an error.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        The following operations may be made on workspaces:<br>
        * To list workspaces, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`<br>
        * To list properties of a single workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
        * To create folders at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        * To delete workspaces, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`<br>
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: (001) - Mergers
                retain_days: 364
                custom1: '001'
                custom1_description: Required only for Illinois
                custom2: '001002'
                custom3: Federal
                custom2_description: 001002 on hold
                edit_date: '2019-09-17T17:56:30.01Z'
                has_subfolders: true
              type: object
              properties: &id1350
                custom1:
                  type: string
                  description: |-
                    Specifies a custom1 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom2:
                  type: string
                  description: |-
                    Specifies a custom2 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom3:
                  type: string
                  description: |-
                    Specifies a custom3 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom4:
                  type: string
                  description: |-
                    Specifies a custom4 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom5:
                  type: string
                  description: |-
                    Specifies a custom5 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom6:
                  type: string
                  description: |-
                    Specifies a custom6 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom7:
                  type: string
                  description: |-
                    Specifies a custom7 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom8:
                  type: string
                  description: |-
                    Specifies a custom8 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom9:
                  type: string
                  description: |-
                    Specifies a custom9 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom10:
                  type: string
                  description: |-
                    Specifies a custom10 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom11:
                  type: string
                  description: |-
                    Specifies a custom11 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom12:
                  type: string
                  description: |-
                    Specifies a custom12 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error..
                custom13:
                  type: string
                  description: |-
                    Specifies a custom13 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom14:
                  type: string
                  description: |-
                    Specifies a custom14 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom15:
                  type: string
                  description: |-
                    Specifies a custom15 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom16:
                  type: string
                  description: |-
                    Specifies a custom16 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom17:
                  type: number
                  description: |-
                    Specifies the value for custom17.
                  format: double
                custom18:
                  type: number
                  description: |-
                    Specifies the value for custom18.
                  format: double
                custom19:
                  type: number
                  description: |-
                    Specifies the value for custom19.
                  format: double
                custom20:
                  type: number
                  description: |-
                    Specifies the value for custom20.
                  format: double
                custom21:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date value (in ISO 8601 format) for custom21.
                custom22:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date value (in ISO 8601 format) for custom22.
                custom23:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date value (in ISO 8601 format) for custom23.
                custom24:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date value (in ISO 8601 format) for custom24.
                custom25:
                  type: boolean
                  description: |-
                    Specifies the boolean value for custom25.
                custom26:
                  type: boolean
                  description: |-
                    Specifies the boolean value for custom26.
                custom27:
                  type: boolean
                  description: |-
                    Specifies the boolean value for custom27.
                custom28:
                  type: boolean
                  description: |-
                    Specifies the boolean value for custom28.
                custom29:
                  type: string
                  description: |-
                    Specifies a custom29 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                custom30:
                  type: string
                  description: |-
                    Specifies a custom30 alias.<br><br>If this property is included, its matching description is automatically included in the response.

                    This is a validated property and must be a valid alias at the time it's used here.
                    If it is not valid, the request returns an error.
                declared_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date (in ISO 8601 format) when the workspace is declared as a record.<br><br>
                    A record can no longer be edited or deleted, except by an NRTADMIN.
                default_security:
                  default: "private"
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  maxLength: 254
                  type: string
                  description: |-
                    Specifies additional information about the workspace.
                is_declared:
                  type: boolean
                  description: |-
                    Specifies if the workspace is declared as a record.<br><br>
                    If `true`, the workspace is declared as a record.<br>
                    If `false`, the workspace is not declared as a record.<br><br>
                    A record can no longer be edited or deleted, except by an NRTADMIN.
                is_external_as_normal:
                  type: boolean
                  description: |-
                    Specifies if the workspace can be treated as a public workspace.<br><br>
                    If `true`, an external user can access public workspaces.<br>
                    If `false`, an external user cannot access public workspaces.
                  default: false
                name:
                  type: string
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |
                    Specifies a name for the workspace.<br><br>
                    Must be 254 characters or less.
                    This is a required field when creating a workspace, and this field cannot be deleted.
                  example: |
                    "name" : "Matter 10234 documents"
                owner:
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |-
                    Specifies the owner of the workspace.
                profile:
                  type: object
                  additionalProperties: true
                  description: |-
                    Specifies the set of arbitrary name-value pair properties.
                project_custom1:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                retain_days:
                  type: integer
                  description: |-
                    Specifies the number of days to retain a declared workspace.
                  format: int64
                  default: 365
                subclass:
                  type: string
                  description: |-
                    Specifies the subclass of the workspace based on the subclass of the document it contains.
              additionalProperties: true
              description: |-
                Represents an object for updating an existing workspace.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    create_date: '2020-09-16T19:00:01.479Z'
                    database: active_us
                    default_security: view
                    edit_date: '2019-09-17T20:13:13.856Z'
                    effective_security: full_access
                    has_subfolders: true
                    id: active_us!2371
                    is_external: false
                    is_external_as_normal: false
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: (001) - Mergers
                    owner: ACASE
                    owner_description: ACASE
                    custom1_description: Enron
                    custom1: '001'
                    custom2: '001002'
                    custom2_description: 001002 on hold
                    custom3_description: Jurisdiction
                    custom3: Federal
                    document_number: 204020
                    is_declared: true
                    is_hipaa: false
                    iwl: iwl:dms=ajubalaw.com&&lib=active_us&&num=204020&&ver=1
                    retain_days: 364
                    version: 1
                    wstype: workspace
                required:
                - data
                type: object
                properties: *id084
                additionalProperties: false
        403: *id001
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/users/search:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-users-search
      summary: Get users from a library
      description: |-
        Gets a list of users in the specified library optionally filtered by search criteria.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_users_search
      parameters:
      - *id004
      - *id085
      - *id086
      - name: database
        in: query
        description: |-
          The library ID of the target library (formerly called a database).
        schema:
          default: User's preferred library.
          example: ACTIVE
      - *id087
      - *id088
      - *id089
      - &id573
        name: libraries
        in: query
        description: |
          Specifies which libraries to limit the query to.<br><br>

          For example, `libraries=archive` only searches the *archive* library.
          Multiple libraries can be specified using a comma-separated list.
          For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
          Library names are case insensitive.<br>
          Neither the wildcard character (&ast;) nor stemming is supported.<br>
          For example, `libraries=acti` and `libraries=act*` are not valid searches.
          Therefore, the complete library name must be provided.<br><br>
          If omitted, all libraries accessible to the user are included.
        schema:
          type: string
          default: All the available libraries.
          example: ACTIVE,ARCHIVE
      - *id011
      - *id090
      - &id260
        name: nos
        in: query
        description: |
          Filters the type of user.

          The allowed values are:

          | Value | Description |
          | :-: | - |
          | 2 | Virtual User |
          | 6 | Enterprise user |

          For more information on types of users, see <a href="#tag--Users">Users</a>.
        schema:
          type: integer
          example: 2
      - *id006
      - *id091
      - *id092
      - name: query
        in: query
        description: |-
          String to be found in the user ID, full name, or email address of a user.
        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: *id093
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/users/{userId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/users/{userId}/security:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-users-{userId}-security
      summary: Get a user's access permission for a workspace
      description: |
        Returns the access permission of the specified user for the workspace.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the access permission of user ACASE for workspace active_us!7324:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/users/acase/security`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of workspaces from a library, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_users_{userId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                required:
                - data
                type: object
                properties: &id1354
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: |-
                          The user ID.
                        example: ACASE
                      name:
                        type: string
                        description: |-
                          The full name of the user.
                        example: Andrew Case
                      access:
                        enum: ["no_access", "read", "read_write", "full_access", "change_security",
                          "unknown"]
                        type: string
                        description: |
                          Indicates  the access permissions to a document or container that is set by the owner or a user with full access.

                          The following are the possible values:

                          |Term|Value|Description|
                          |:---|:---|:---|
                          |no_access|0|The user has no permissions to access the container or document.|
                          |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                          |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                          |change_security|4|Reserved for system use. Do not use.|
                          |unknown|4|This is an error if received.|
                      type:
                        enum: ["user", "group"]
                        type: string
                        description: |-
                          Type of the user.
                      sid:
                        type: string
                        description: |-
                          Security identifier to identify a user or a group.
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs:
    description: |
      Tabs are containers that exist only at the root level of a workspace.
      They are intended to provide additional or more precise organization.
      Tabs can hold other folders but not other tabs.
      Tabs cannot contain documents directly under them, although folders inside a tab can contain documents.<br>

      A tab is a container and its tab ID is a combination of its library name and a number.
      For example: active!654235.

      <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
      To return a list of children, including tabs, for a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
      To delete a tab from a workspace, see DELETE `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}`<br>
      To create a tab in a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-tabs
      summary: Create a workspace tab
      description: |
        Creates a tab at the root level of the specified workspace.<br>

        The fields custom1-custom30, author, and owner are validated fields.
        The value entered must be an existing value for that property.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a tab in workspace active_us!7324:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/tabs`<br>
        The request body:

        ```
        {
          "name"             : "Enron Staffing",
          "description"      : "Staff for Enron case",
          "default_security" : "inherit"
        }
        ```

        The following request creates a tab in workspace active_us!7324 with two profile fields, `custom1` and `custom2`:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/tabs`<br>
        Request body:<br>

        ```
        {
          "name"             : "Microsoft Staffing",
          "description"      : "Staff for Microsoft case",
          "default_security" : "inherit",
          "project_custom1"  : "Retain until trial conclusion",
          "profile"          :
          {
              "operator": "ACASE",
              "author"  : "CPIERCE",
              "custom1" : "001abc",
              "custom2" : "Microsoft"
          }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of children, including tabs, for a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
        To delete a tab from a workspace, see DELETE `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}`<br>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_tabs
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Trial Documentation
                description: Needed by sub judice
                default_security: inherit
                profile:
                  custom1: 00100000001XD0Y
                  custom2: '177101'
              type: object
              properties: &id1260
                default_security: &id1261
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description: &id1262
                  maxLength: 254
                  type: string
                  description: |
                    Additional information about the tab to be created.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                edit_date: &id1263
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Date when the content of tab is last edited.
                is_external_as_normal: &id1264
                  type: boolean
                  description: |-
                    If `true`, the external user is treated as normal user and can access public folders.
                  default: false
                name: &id1265
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |
                    Name of the tab.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                owner: &id1266
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |-
                    Owner of the tab. Administrative role is required to update this property.
                profile: &id1267
                  type: object
                  description: Specifies the folder or tab profile information that
                    is applied to the documents automatically when they are uploaded
                    to the folder or tab.
                  properties:
                    author:
                      maxLength: 32
                      type: string
                      description: |-
                        The ID of the user who created the document.
                    class:
                      maxLength: 32
                      type: string
                      description: |
                        The class of the folder or tab.

                        This is a validated field and must be a defined alias of the property `class`.
                      example: Doc
                    subclass:
                      maxLength: 32
                      type: string
                      description: |
                        The subclass of the folder or tab.

                        This is a validated field and must be a defined alias of the property `subclass`.
                      example: Word2007
                    custom1:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom2:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom3:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom4:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom5:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom6:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom7:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom8:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom9:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom10:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom11:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom12:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom13:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom13 property.<br><br>Maximum length&colon; 96.
                    custom14:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom14 property.<br><br>Maximum length&colon; 96.
                    custom15:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom15 property.<br><br>Maximum length&colon; 96.
                    custom16:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom16 property.<br><br>Maximum length&colon; 96.
                    custom17:
                      type: number
                      description: |-
                        A numeric value for the custom17 property.
                      format: double
                    custom18:
                      type: number
                      description: |-
                        A numeric value for the custom18 property.
                      format: double
                    custom19:
                      type: number
                      description: |-
                        A numeric value for the custom19 property.
                      format: double
                    custom20:
                      type: number
                      description: |-
                        A numeric value for the custom20 property.
                      format: double
                    custom21:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        Specifies a timestamp for the custom21 property (in ISO 8601 format).
                    custom22:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom22 property (in ISO 8601 format).
                    custom23:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom23 property (in ISO 8601 format).
                    custom24:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom24 property (in ISO 8601 format).
                    custom25:
                      type: boolean
                      description: |-
                        A boolean value for the custom25 property.
                    custom26:
                      type: boolean
                      description: |-
                        A boolean value for the custom26 property.
                    custom27:
                      type: boolean
                      description: |-
                        A boolean value for the custom27 property.
                    custom28:
                      type: boolean
                      description: |-
                        A boolean value for the custom28 property.
                    custom29:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom30:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom31:
                      maxLength: 32
                      type: string
                      description: |-
                        Reserved. Do not use.
                    description:
                      maxLength: 254
                      type: string
                      description: |-
                        Reserved. Do not use.
                  additionalProperties: true
                project_custom1: &id1268
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2: &id1269
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3: &id1270
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the workspace tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    default_security: inherit
                    edit_date: '2020-04-27T18:34:39Z'
                    effective_security: full_access
                    folder_type: tab
                    id: active_us!261821
                    is_external_as_normal: false
                    name: Trial Documentation
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!14696
                    profile:
                      custom1: 00100000001XD0Y
                      custom2: '177101'
                    subtype: Q
                    workspace_id: active_us!14696
                    workspace_name: Pre-Trial motions
                    wstype: folder
                required:
                - data
                type: object
                properties: &id1271
                  data:
                    $ref: '#/components/schemas/Projects.tab'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/security-policy:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-security-policy
      summary: Get a workspace's allowed/denied users
      description: |-
        Returns a list of denied and allowed users for the workspace.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_security-policy
      parameters:
      - *id004
      - name: spm_custom1
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      - name: spm_custom2
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Common.effectiveSecurityPolicy'
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/security:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-security
      summary: Get a workspace's users and groups default security
      description: |
        Returns the default security of the workspace, and a list of users and groups who have access to the workspace.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the following information for workspace active_us!7324:<br>
        * The default security of the workspace.
        * A list of users and groups who have access to the workspace.
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/security`

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To update the default security of a workspace, or users and groups access to a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/security`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: &id094
                  inherited_default_security:
                    enum: ["public", "view", "private"]
                    type: string
                    description: |
                      The default access permission assigned to a folder that is inherited from its parent container.<br><br>
                      This field is present only if `default_security` is inherit.
                  data: &id513
                    type: array
                    description: Array of user and group access permissions and details.
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/userSecurityResponseItem'
                      - $ref: '#/components/schemas/groupSecurityResponseItem'
                  default_security: &id514
                    enum: ["inherit", "public", "view", "private"]
                    type: string
                    description: |-
                      The default access level.

                      |Value|Description|
                      |:---|:---|
                      |inherit|The container or document inherits security settings from its parent container.|
                      |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                      |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                      |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-security
      summary: Update a workspace's users and groups default security
      description: |
        Updates the default security of the workspace, and users and groups access to the workspace.<br>

        The request body can contain up to three fields:<br>
        * `default_security`. This sets the new default security for the specified workspace.<br>
        The following request body sets the default security to public:<br>
        ```
        {
          "default_security": "public"
        }
        ```

        * `include`. This array contains a list of users or groups who are added to those who can access the workspace.
        Including a user or group who already has access updates them to the new values.<br>
        The following request body adds access to user ACASE to the workspace:<br>
        ```
        {
          "include" :
          [
            {
              "id"  : "ACASE",
              "access_level" : "full_access",
              "type" : "user"
            }
          ]
        }
        ```

        * `remove`. This array contains a list of users or groups who are to be removed from those who can access the workspace.
        Users or groups who does not have access are ignored.<br>
        The following request body removes access to user ACASE from the workspace:<br>
        ```
        {
          "remove" :
          [
            {
              "id"  : "ACASE",
              "type" : "user"
            }
          ]
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request body combines modifying default access, and adding and removing multiple users:<br>
        ```
        {
          "default_security": "public",
          "include" :
          [
            {
              "id"  : "ACASE",
              "access_level" : "full_access",
              "type" : "user"
            },
            {
              "id"  : "CPIERCE",
              "access_level" : "read",
              "type" : "user"
            }
          ],
          "remove" :
          [
            {
              "id"  : "ADENT",
              "type" : "user"
            }
          ]
        }
        ```
        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return the default security of the workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/security`
        To return a list of users and groups who have access to the workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/security`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_security
      requestBody:
        content:
          application/json:
            schema:
              example:
                include:
                - access_level: full_access
                  id: andrew
                  type: user
                - access_level: read
                  id: viewgroup
                  type: group
                remove:
                - id: nonviewgroup
                  type: group
                default_security: public
              type: object
              properties: &id100
                include:
                  type: array
                  items:
                    required:
                    - id
                    - access_level
                    - type
                    type: object
                    properties:
                      id:
                        type: string
                        description: |-
                          Specifies the user ID or group ID whose access levels are to be updated.
                      access_level:
                        enum: ["no_access", "read", "read_write", "full_access", "change_security"]
                        type: string
                        description: |
                          Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
                          See the <a href="#overview--privileges">Privileges</a> section of the overview.

                          The following are the possible values:

                          |Access Level|Numeric Value|Description|
                          |:---|:---|:---|
                          |no_access|0|The user has no access, or any permissions to the container or document.|
                          |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
                          |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                          |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
                          |change_security|4|Reserved for system use. Do not use.|
                      type:
                        enum: ["user", "group"]
                        type: string
                        description: |-
                          Specifies the type of trustee.
                  description: |-
                    List of users and groups to be added to the access list.
                remove:
                  type: array
                  items:
                    required:
                    - id
                    - type
                    type: object
                    properties:
                      id:
                        type: string
                        description: |-
                          Specifies the user ID or group ID to be removed.
                      type:
                        enum: ["user", "group"]
                        type: string
                        description: |-
                          Specifies the type of trustee.
                  description: |-
                    List of users and groups to be removed from the access list.
                default_security:
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders:
    description: |-
      None
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-search-folders
      summary: Create a workspace root level search folder
      description: |
        Creates a search folder at the root level of a workspace.<br>

        To create search folders within other folders, use POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`<br>

        The search criteria is specified using the `searchprofile` field.
        To modify the search criteria after the search folder is created, use PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a search folder in workspace active_us!7324 and searches for documents whose document number is exclusively between 3000 and 5000.
        The response body includes the details for the newly-created search folder.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/search-folders`<br>
        Request body:<br>

        ```
        {
          "database"         : "active_us",
          "default_security" : "inherit",
          "name"             : "Due Soon Documents",
          "searchprofile"    :
          {
            "contenttype"       : "D,5",
            "databases"         : "active_us",
            "docnum"            : "3000-5000"
          }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`<br>
        To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`<br>
        To list the children (containers and documents) at the root level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
        To list the children (including folders, search folders, and documents) of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`<br>
        To see the details of folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders`<br>
        To see the search criteria of a search folder, see GET `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folderId}`<br>
        To update the search criteria for a search folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{folderId}`<br>
        To delete any folder (including a search folder), see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_search-folders
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: WorksiteDB
                name: SearchFolder1
                default_security: inherit
                group_trustees: []
                searchprofile:
                  docnum: '1'
                  version: '2'
                  name: docSearch
                  author: ACASE
                  operator: ACASE
                  class: Document
                  fulltext: fulltext
                  subclass: subclass
                  type: Document
                  checked_out: true
                  in_use: true
                  emails_only: false
                  documents_only: true
                  description_fulltext: desc
                  comments_fulltext: comment
                  comments_description_fulltext: commentsanddesc
                  body: body
                  description: desc
                  size: 10
                user_trustees: []
              required:
              - database
              - name
              - default_security
              - searchprofile
              type: object
              properties: &id390
                database:
                  type: string
                  description: |-
                    Name of the iManage Work library where the search folder is to be created.
                name:
                  maxLength: 254
                  type: string
                  description: |
                    Name of the search folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                default_security:
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  type: string
                  description: |
                    Additional information about the folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                group_trustees:
                  type: array
                  items: &id095
                    $ref: '#/components/schemas/groupSecurityItem'
                  description: |-
                    List of groups and their access permissions.
                owner:
                  type: string
                  description: |
                    The user ID of the folder owner.<br><br>
                    This value can be updated only by an NRTADMIN.
                project_custom1:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                searchprofile:
                  $ref: '#/components/schemas/Projects.searchFolderSearchProfile'
                user_trustees:
                  type: array
                  items: &id096
                    $ref: '#/components/schemas/userSecurityItem'
                  description: |-
                    List of users and their access permissions.
              additionalProperties: false
              description: |-
                Search folder to create.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    content_saved_search_id: '53498'
                    database: Active
                    default_security: inherit
                    edit_date: '2017-05-03T19:36:48Z'
                    effective_security: full_access
                    folder_type: search
                    has_documents: false
                    has_subfolders: false
                    id: Active!262143
                    is_container_saved_search: false
                    is_content_saved_search: true
                    is_external_as_normal: false
                    name: SearchFolder1
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    searchprofile:
                      author: ACASE
                      body: body
                      checked_out: true
                      class: Document
                      comments_description_fulltext: commentsanddesc
                      comments_fulltext: comment
                      description: desc
                      description_fulltext: desc
                      docnum: '1'
                      documents_only: true
                      emails_only: true
                      fulltext: fulltext
                      in_use: true
                      name: docSearch
                      operator: ACASE
                      size: 10
                      subclass: subclass
                      type: Document
                      version: '2'
                    view_type: email
                    workspace_id: Active!14696
                    workspace_name: Evaluation Space
                    wstype: folder
                required:
                - data
                type: object
                properties: &id257
                  data:
                    $ref: '#/components/schemas/Projects.searchFolder'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/operations:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-operations
      summary: Get the user's workspace operations
      description: |
        Returns operations the current user is allowed to perform on the specified workspace.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on workspace active_us!7483:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7483/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/workspaceOperations'
                example:
                  data:
                    add_content: true
                    add_folders: true
                    add_custom_folders: true
                    change_name: true
                    modify: true
                    remove: true
                    remove_folders: true
                    set_default_security: true
                    set_security: true
                    update_content_shortcut: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs:
    description: |
      Name-value pairs are customized properties for a workspace to store additional information.<br>

      Name-value pairs allow the open-ended storage of any additional information with the workspace.
      These are in addition to the system-provided properties, and are saved separately from them.
      They are not custom fields, not a part of the object model, or a part of the object profile.
      The information is stored as a dictionary pair in the format `"key_name": "value"`.
      Any number of pairs can be stored.<br>

      Name-value pairs are allowed with the following object types:
      * Documents
      * Folders and tabs
      * Workspaces

      For example, the workspace owner may need to store a trial or court date.
      As there is no property for this, a name-value pair can be created as `"trial_date": "2021-01-15T15:00:00.000000Z"`.<br>

      <font style="color:black;size:5">Using name-value-pairs requests</font><br><br>
      To return the name-value pairs properties of a workspace, use GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br><br>
      The following request returns all the name-value pairs of the specified workspace:<br>
      GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!123/name-value-pairs`<br>
      Response body:<br>
       ```
      {
         "trial_date": "2021-01-15T15:00:00.000000Z",
         "prefix_document_name": "true"
      }
      ```

      <br>To create a new name-value pair, to modify the value of an existing one, or to delete a pair, use PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br><br>
      This example continues the one above.
      * The first entry creates a new name-value pair `project_lead` with `ACASE` as the value.
      * The second entry modifies the existing `trial_date` to `2021-02-15T15:00:00.000000Z`.
      * The third entry deletes `prefix_document_name` by setting it to null.
      * The fourth entry attempts to delete a name-value pair that does not exist.
      No error occurs if deleting a name-value pair that is not already present.

      PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!123/name-value-pairs`<br>
      Request body:<br>

      ```
      {
        "project_lead": "ACASE",
        "trial_date": "2021-02-15T15:00:00.000000Z",
        "is_prefix_set": null,
        "deadline_required": null
      }
      ```

      <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
      To return a list of the name-value pairs properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
      To update, create, or delete name-value pairs from a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
      To return a list of the name-value pairs properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
      To update, create, or delete name-value pairs from a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
      To return a list of the name-value pairs properties of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`<br>
      To update, create, or delete name-value pairs from a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-name-value-pairs
      summary: Get name-value pairs of a workspace
      description: |
        Returns a list of the name-value pairs properties of a workspace.<br><br>
        There are no query parameters.<br><br>
        The following request returns all the name-value pairs of the specified folder:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!123/name-value-pairs`<br>
        Response body:<br>
         ```
        {
           "trial_date": "2021-01-15T15:00:00.000000Z",
           "prefix_document_name": "true"
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To update, create, or delete name-value pairs from a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To return a list of the name-value pairs properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs from a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To return a list of the name-value pairs properties of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs from a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_name-value-pairs
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    TemplateId: Active!72
                type: object
                properties: &id391
                  data:
                    type: object
                    additionalProperties: true
                    description: |-
                      Additional properties of an iManage Work object that are used to extend the base set of object properties.
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-name-value-pairs
      summary: Create, update, or delete workspace name-value pairs
      description: |
        Creates, updates, or deletes name-value pairs from a workspace.<br><br>
        The following actions are available:<br>
        * To create a name-value pair, include the new pairing. If the key name already exists, this updates the value.
        * To update a name-value pair, include the existing key name with its new value. If the key name does not already exist, this creates the name-value pair.
        * To delete a name-value pair, include the existing key name with the value of null.

        The following request performs these actions:<br>
        * The first entry creates a new name-value pair `project_lead` with `ACASE` as the value.
        * The second entry modifies an existing `trial_date` to `2021-02-15T15:00:00.000000Z`.
        * The third entry deletes `is_prefix_set` by setting it to null.
        * The fourth entry (`deadline_required`) attempts to delete a name-value pair that does not exist.
        No error occurs if deleting a name-value pair that is not already present.

        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!123/name-value-pairs`<br>
        Request body:<br>

        ```
        {
          "project_lead": "ACASE",
          "trial_date": "2021-02-15T15:00:00.000000Z",
          "is_prefix_set": null,
          "deadline_required": null
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of the name-value pairs properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs from a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To return a list of the name-value pairs properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs from a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To return a list of the  name-value pairs properties of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs from a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_name-value-pairs
      requestBody:
        content:
          application/json:
            schema:
              description: |
                Refer to the the description section for the sample name-value pair request body.
              type: object
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folder-shortcuts:
    description: |
      A folder shortcut is a link to a folder in another location, such as another folder, or another workspace.<br><br>
      Users can place shortcuts in frequently used locations.
      These allow users to navigate quickly to those locations, or to better organize their data.
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-folder-shortcuts
      summary: Create a folder shortcut at the root level of a workspace
      description: |
        Creates a folder shortcut at the root level of a workspace.<br>

        The shortcut to the target folder is created in the specified workspace.
        The target information is included in the request body in the `target` field.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a shortcut for the folder active_us!195646 at the root level of workspace active_us!7324.
        The response body includes details about the newly-created shortcut.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/folder-shortcuts`<br>
        Request body:<br>

        ```
        {
          "name": "Shortcut to Staffing Roster",
          "target": {
            "id": "active_us!195646"
          }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        To create a folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>
        To create a folder within a tab, see POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`<br>
        To delete a folder or a shortcut to a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_folder-shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Employment Agreements
                target:
                  database: active_uk
                  id: active_uk!19598
                  folder_type: imanage_share_folder
                  wstype: folder
                  imanage_share_eid: X4LuVCmhYFCsXYW4HFb3Y-odk7QlolAnsL4IDmtt3ds
              required:
              - name
              - target
              type: object
              properties: &id392
                name:
                  type: string
                  description: Name of the folder shortcut.
                target:
                  $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcutTarget'
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Pepsi
                    default_security: inherit
                    edit_date: '2017-09-05T20:55:48Z'
                    effective_security: full_access
                    id: Pepsi!43
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: custom1.custom2
                    owner: MARCIEDAVENPORT
                    owner_description: MARCIEDAVENPORT
                    parent_id: Pepsi!20
                    target:
                      database: hl1gbp6l3
                      folder_type: imanage_share_folder
                      id: hl1gbp6l3!752157283
                      imanage_share_eid: X4LuVCmhYFCsXYW4HFb3Y-odk7QlolAnsL4IDmtt3ds
                      wstype: folder
                    view_type: imanage_share
                    workspace_id: Pepsi!20
                    workspace_name: Testing123
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: &id393
                  data:
                    $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcut'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: &id101
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    - messages
                    type: object
                    properties:
                      code:
                        enum: ["NRC_DUP_RECORD"]
                        type: string
                        description: |-
                          Error code.
                      code_message:
                        type: string
                        description: |-
                          Description of the error.
                      dms_version:
                        type: string
                        description: |-
                          The DMS version.
                      transaction:
                        type: string
                        description: |-
                          Transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          - data
                          type: object
                          properties:
                            audit:
                              type: object
                              description: |
                                Indicates additional details about the error.<br><br>
                                This is returned in the POST ../history routes.
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              type: object
                              description: |-
                                Provides existing duplicate shortcut detail.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_DUP_RECORD
                    code_message: Record already exists
                    messages:
                    - data:
                        database: active_uk
                        default_security: inherit
                        edit_date: '2020-04-26T18:41:18Z'
                        effective_security: full_access
                        id: active_uk!9435
                        name: _Benefits
                        owner: ACASE
                        parent_id: active_uk!9014
                        target:
                          database: active_uk
                          id: active_uk!9434
                          subtype: S
                          wstype: folder
                        wstype: folder_shortcut
                      code: NRC_DUP_RECORD
                      code_message: Record already exists
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders:
    description: |-
      None
    post:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-folders
      summary: Create a root level workspace folder
      description: |
        Creates a new folder at the root level of the specified workspace.<br>

        Attempting to use this for any other location results in an error.
        If the folder is to be created within another folder, instead use see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a new folder at the root level of workspace active_us!7324:
        The response body includes details about the newly-created folder.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!7324/folder`
        Request body:<br>

        ```
        {
          "name": "Client's Notes",
          "description" : "General notes for clients",
          "location" : "Austin, Texas",
          "default_security": "public",
          "profile": {
            "class": "001"
          },
          "is_external" : false,
          "is_container_saved_search" : false,
          "is_content_saved_search" : false
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        To create a folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>
        To create a folder within a tab, see POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`<br>
        To delete a folder or a shortcut to a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_folders
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Employee Agreements
                default_security: inherit
                description: Contract documents
                profile:
                  custom1: '001'
                  custom1_description: Microsoft
                group_trustees: []
                user_trustees:
                - id: CPIERCE
                  access_level: read_write
              required:
              - name
              type: object
              properties: &id211
                default_security:
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  type: string
                  maxLength: 254
                  description: |+
                    Additional information about the folder.<br><br>
                    Maximum length is 254 characters.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                  nullable: true
                email:
                  description: |+
                    Email address of the folder.<br><br>
                    Maximum length is 254 characters.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                  nullable: true
                group_trustees:
                  type: array
                  items: *id095
                  description: |-
                    List of groups and their access permissions.
                is_external:
                  type: boolean
                  description: |
                    Specifies  the user is an external user.<br><br>
                    If `true`, the user is an external user.<br>
                    If `false`, the user is not an external user, also called a regular user.

                    For more information, see <a href="#overview--external-users"> External users</a>.
                is_external_as_normal:
                  type: boolean
                  description: |-
                    Specifies if the external folder is treated as a normal folder.<br><br>
                    If `true`, the current user's `is_external` value does not affect the access permissions the user has on the folder.
                    That is, all the users can access the content of a folder according to their access permissions. <br>
                    If `false`, the external users can access only the folder content they are permitted to. <br>

                    If it is `true` and `default_security` of folder is not `private`, the property `is_external` is set to `true`.<br>
                    If it is `false` and `default_security` of folder is not `private`, the property `is_external` is set to `false`.
                  nullable: true
                name:
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |
                    Name of the folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                owner:
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |
                    The user ID of the folder owner.<br><br>
                    This value can be updated only by an NRTADMIN.
                  nullable: true
                parent_id:
                  type: string
                  description: |-
                    The parent folder ID.
                  nullable: true
                profile:
                  type: object
                  description: Specifies the folder or tab profile information that
                    is applied to the documents automatically when they are uploaded
                    to the folder or tab.
                  properties:
                    author:
                      maxLength: 32
                      type: string
                      description: |-
                        The ID of the user who created the document.
                    class:
                      maxLength: 32
                      type: string
                      description: |
                        The class of the folder or tab.

                        This is a validated field and must be a defined alias of the property `class`.
                      example: Doc
                    subclass:
                      maxLength: 32
                      type: string
                      description: |
                        The subclass of the folder or tab.

                        This is a validated field and must be a defined alias of the property `subclass`.
                      example: Word2007
                    custom1:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom2:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom3:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom4:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom5:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom6:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom7:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom8:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom9:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom10:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom11:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom12:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom13:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom13 property.<br><br>Maximum length&colon; 96.
                    custom14:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom14 property.<br><br>Maximum length&colon; 96.
                    custom15:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom15 property.<br><br>Maximum length&colon; 96.
                    custom16:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom16 property.<br><br>Maximum length&colon; 96.
                    custom17:
                      type: number
                      description: |-
                        A numeric value for the custom17 property.
                      format: double
                    custom18:
                      type: number
                      description: |-
                        A numeric value for the custom18 property.
                      format: double
                    custom19:
                      type: number
                      description: |-
                        A numeric value for the custom19 property.
                      format: double
                    custom20:
                      type: number
                      description: |-
                        A numeric value for the custom20 property.
                      format: double
                    custom21:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        Specifies a timestamp for the custom21 property (in ISO 8601 format).
                    custom22:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom22 property (in ISO 8601 format).
                    custom23:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom23 property (in ISO 8601 format).
                    custom24:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom24 property (in ISO 8601 format).
                    custom25:
                      type: boolean
                      description: |-
                        A boolean value for the custom25 property.
                    custom26:
                      type: boolean
                      description: |-
                        A boolean value for the custom26 property.
                    custom27:
                      type: boolean
                      description: |-
                        A boolean value for the custom27 property.
                    custom28:
                      type: boolean
                      description: |-
                        A boolean value for the custom28 property.
                    custom29:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom30:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom31:
                      maxLength: 32
                      type: string
                      description: |-
                        Reserved. Do not use.
                    description:
                      maxLength: 254
                      type: string
                      description: |-
                        Reserved. Do not use.
                  additionalProperties: true
                project_custom1:
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                  nullable: true
                project_custom2:
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                  nullable: true
                project_custom3:
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                  nullable: true
                user_trustees:
                  type: array
                  items: *id096
                  description: |-
                    List of users and their access permissions.
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Active
                    default_security: inherit
                    edit_date: '2017-03-16T19:22:11Z'
                    effective_security: full_access
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!258111
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: confidential
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    profile:
                      custom1: 00100000001XD0Y
                      custom2: '177101'
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: New York Acquisitions
                    wstype: folder
                required:
                - data
                type: object
                properties: &id097
                  data:
                    $ref: '#/components/schemas/Projects.folder'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/default-email-folder:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-default-email-folder
      summary: Get a workspace's default email folder
      description: |-
        Returns the default email folder for the workspace.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_default-email-folder
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active
                    default_security: inherit
                    edit_date: '2018-05-01T18:29:30Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: active!1791
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: E-mails
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active!12
                    view_type: document
                    workspace_id: active!12
                    workspace_name: Proceedings
                    wstype: folder
                required:
                - data
                type: object
                properties: *id097
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/contacts:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-contacts
      summary: Get email recipients filed to a workspace
      description: |-
        Gets the list of recipients of the emails filed to a workspace.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_contacts
      parameters:
      - *id004
      - name: limit
        in: query
        description: |-
          Maximum number of contacts to be returned.
        schema:
          type: integer
          default: 5
      - name: query
        in: query
        description: |-
          String to be searched in the email addresses or full names.
        schema:
          type: string
      - name: sender_only
        in: query
        description: |-
          Indicates if to limit the results only to senders.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - name: Andrew Case
                    address: acase@ajubalaw.com
                required:
                - data
                type: object
                properties: &id1678
                  data:
                    type: array
                    items:
                      required:
                      - address
                      type: object
                      properties:
                        address:
                          type: string
                          description: |-
                            The email address of a recipient.
                        name:
                          type: string
                          description: |-
                            The display name of a recipient.
                      additionalProperties: true
                      description: |-
                        Email Participant
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children:
    description: |-
      None
    get:
      tags:
      - Workspaces
    #- customers-{customerId}-libraries-{libraryId}-workspaces-{workspaceId}-children
      summary: Get containers from a workspace's root level
      description: |
        Returns a list of containers (folders and tabs) from the root level of the specified workspace.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        This example queries the root level of a workspace. It then queries one of the folders found.<br>

        To return containers from the root level of workspace active_us!179186:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!179186/children`<br>
        The request returns the contents of workspace active_us!179186, in this case of one container, abbreviated here for demonstation purposes:<br>

        ```
        {
            "data": [
                {
                    "id": "active_us!4532",
                    "name": "Case Staffing",
                    "parent_id": "active_us!179186",
                    "workspace_name": "Enron",
                    "workspace_id": "active_us!123",
                    "wstype": "folder"
                }
            ]
        }
        ```

        <br>To see the contents of subfolder active_us!4532:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4532/children`<br>
        The request returns the contents of subfolder active_us!4532, in this case with two items, a document and a folder, abbreviated here for demonstation purposes:<br>

        ```
        {
            "data": [
                {
                    "id": "active_us!179201",
                    "name": "Temporary Staffing",
                    "workspace_id": "active_us!123",
                    "workspace_name": "Enron",
                    "wstype": "folder"
                },
                {
                    "id": "active_us!203970.1",
                    "name": "Merge Requirements List",
                    "extension": "docx"
                    "workspace_id": "active_us!123",
                    "workspace_name": "Enron",
                    "wstype": "document"
                }
            ]
        }
        ```
      operationId: GET_customers_{customerId}_libraries_{libraryId}_workspaces_{workspaceId}_children
      parameters:
      - *id004
      - name: children_type
        in: query
        description: |
          Specifies the type of children to return.<br><br>
          Multiple values can be included using a comma-separated list.
          For example: `children_type=tabs`, or `children_type=tabs,folders`.<br>
          The following are allowed values:<br>

          |Value|Description|
          |:---|:---|
          |tabs|Returns tabs.|
          |folders|Returns regular folders and search folders.|
          |folder_shortcuts|Returns folder shortcuts and search folder shortcuts.|
          |imanage_share_folders|Returns iManage Share folders.|                  
          |all|Returns tabs, folders, folder_shortcuts and imanage_share_folders. This is the default value.|
        schema:
          type: string
          default: all
          example: tabs
      - *id011
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-04T15:21:59Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!19663
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Documents
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!19662
                    view_type: document
                    workspace_id: Active!19662
                    workspace_name: Test Workspace
                    wstype: folder
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-04T15:22:01Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!20104
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Emails for Vincent
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!19662
                    view_type: document
                    workspace_id: Active!19662
                    workspace_name: Test Workspace
                    wstype: folder
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1351
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Projects.folderWithoutProfile'
                      - $ref: '#/components/schemas/Projects.tab'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: workspaceId
      in: path
      description: |
        The workspace ID.
      required: true
      schema:
        type: string
        example: active!34765
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users
      summary: Get all library users
      description: |
        Gets a list of all users from a library who meet the search criteria.<br><br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
         A user is not required to have any special privileges to execute this request.

        For a list of users at the global level, see GET `/customers/{customerId}/users`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users
      parameters:
      - *id004
      - name: alias
        in: query
        description: |+
          Filters users based on user ID.<br><br>

          * Multiple values can be included using comma-separated list.
            For example, `alias=acase,dfenton` or `alias=acase,dfenton,cpierce`.<br><br>
          * The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.
          * To match partial fields, include the asterisk wildcard before or after the query value.
          * If wildcard character is not included, it matches whole fields only.
          * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: allow_logon
        in: query
        description: |
          Filters users based on their `allow_logon` status.<br><br>
          If `true`, returns enabled users.<br>
          If `false`, returns disabled users.<br>
          If this parameter is omitted, it returns users with any `allow_logon` value.
        schema:
          type: boolean
      - name: email
        in: query
        description: |
          Filters users based on their email address.<br><br>
          This search is case insensitive and matches whole words only. The wildcard character (&ast;) is not supported.<br>
          Special characters allowed are +*.&-_`~|$%^?!’#={}/
        schema:
          type: string
      - name: full_name
        in: query
        description: |+
          Filters users based on the `full_name` property.<br><br>
          * The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          * To match partial fields, include the asterisk wildcard before or after the query value.<br>
          * If wildcard character is not included, it matches whole fields only.
          * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: is_external
        in: query
        description: |
          Filters  the user is an external user.<br><br>
          If `true`, the user is an external user.<br>
          If `false`, the user is not an external user, also called a regular user.

          For more information, see <a href="#overview--external-users"> External users</a>.
        schema:
          type: boolean
      - *id011
      - name: location
        in: query
        description: |+
          Filters users based on their location.<br><br>
          This search is case insensitive and matches whole words only. The wildcard character (&ast;) is not supported.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: nos
        in: query
        description: |-
          Filters users with specified network operating system (NOS).
        schema:
          enum: ["novell_3x", "virtual", "windows_nt", "novell_nds", "external", "nt_ads",
            "netscape_ds", "internal", "all"]
          type: string
      - *id006
      - name: password_never_expire
        in: query
        description: |
          Filters users whose password never expires.<br><br>
          This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          If `true`, returns users whose password never expires.<br>
          If `false`, returns users whose password do expire.<br>
          If this parameter is omitted, it returns users whose password expiration is of either status.
        schema:
          type: boolean
      - name: preferred_library
        in: query
        description: |
          Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
          If specified, returns only users whose preferred library is equal to the specified value.<br>
          If omitted, returns users with any preferred library.

          This search:<br>
          * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
          * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
          * does not support the wildcard character (&ast;).

          For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
        schema:
          type: string
      - name: query
        in: query
        description: |+
          Specifies to return users based on this value found in at least one of `id`, `full_name`, or `email` properties.<br>

          If wildcard character (&ast;) is not added, all partial matches are returned.<br>

          The wildcard character (&ast;) is also supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields as required, include the asterisk wildcard before or after the query value.<br>
          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: require_role
        in: query
        description: |
          Specifies if the results require user to have roles.<br><br>
          The roles will not be displayed, only that each user has roles as indicated by the parameter value.
          The parameters `roles` is preferred. `Require_role` is included for version compatibility.<br><br>
          If *true*, only users with roles are returned.
          If *false* users with or without roles may be returned.
        schema:
          type: boolean
          default: false
      - name: roles
        in: query
        description: |
          Specifies if the results require the user to have an assigned role.<br><br>
          The roles will not be displayed, only that each user has roles as indicated by the parameter value.
          The `roles` parameter is preferred. The parameter `require_role` is included for version compatibility.<br><br>
          If *true*, only users with roles are returned.
          If *false* users with or without roles may be returned.
        schema:
          type: boolean
          default: true
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1604
                  data:
                    type: array
                    description: Array of users
                    items:
                      $ref: '#/components/schemas/Users.userLibrary'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users
      summary: Create a library user
      description: |
        Creates a new user profile in the specified library.<br>

        The following types of users can be created in iManage Work:
         * **Virtual users** - The users are created and managed in iManage Work. The virtual users are authenticated against passwords stored in iManage Work. They are not part of the organization's directory service.
             These are typically external users who are not part of the organization and are included for a specific purpose and for a defined period of time. For example, auditors, interns, and contractors.
             This user is created at the global level, and must be manually assigned to a library. A virtual user can be converted to an enterprise user by changing their user type (`nos`) value from 2 to 6.
         * **Enterprise users** - The users that are added to iManage Work from the organization's directory service. The enterprise users are authenticated against the IDP configured
             by an organization. Virtual users can be synced with the organization's directory service and converted to enterprise users by changing their user type (`nos`) value from 6 to 2.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: NRTADMIN. <br>
        That means, to execute this request a user must be a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        A library user is created and directly assigned to the specified library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a user at the global level, see <a href="#post-/work/api/v2/customers/-customerId-/users">POST /customers/{customerId}/users</a>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users
      requestBody:
        content:
          application/json:
            schema:
              example:
                allow_logon: true
                custom1: Temporary user
                custom2: Valid till 23rd August 2021
                custom3: Home
                distinguished_name: cn=marciedavenport,dc=example,dc=ajubalaw,dc=com
                email: marciedavenport@ajubalaw.com
                exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                email2: marciedavenport2@ajubalaw.com
                email3: marciedavenport3@ajubalaw.com
                email4: marciedavenport4@ajubalaw.com
                email5: marciedavenport5@ajubalaw.com
                extension: '421'
                fax: '100100100'
                force_password_change: true
                full_name: Marcie Davenport
                general: New temporary user
                id: MARCIEDAVENPORT
                is_external: false
                last_sync_ts: '2020-11-14T04:28:29.071Z'
                location: Chicago
                password_never_expire: false
                phone: +41-555-555-5555
                preferred_library: ACTIVE_US
                role_alias: DEFAULT
                user_domain: cn=users,dc=ajubalaw,dc=com
                user_id_ex: MARCIEDAVENPORT
                user_nos: 2
                user_password: mDavenport1
              required:
              - id
              - email
              type: object
              properties: *id009
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  user_num: 327584
                required:
                - user_num
                type: object
                properties: &id1671
                  user_num:
                    type: integer
                    description: |-
                      Specifies the unique number assigned by iManage Work to the user.
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/users
      summary: Update roles and enable/disable sign-in for users
      description: |
        Updates the role of specified users, and/or enables or disables them from signing in to iManage Work.<br><br>
        At least one of the parameters `allow_logon` and `role_alias` must be specified.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: NRTADMIN. <br>
        That means, to execute this request a user must be a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        This request is important in updating the user profiles that are stored at global level
        and only their `allow_logon` values and `role_alias` are stored in the library.

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_users
      requestBody:
        content:
          application/json:
            schema:
              example:
              - id: ACASE
                allow_logon: true
                role_alias: admin
              - id: CPIERCE1
                allow_logon: false
              - id: USERSYNC
                role_alias: admin
              type: array
              items: &id1605
                $ref: '#/components/schemas/Users.userLibraryPatchRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: ACASE
                    allow_logon: true
                    role_alias: Admin
                  - id: CPIERCE1
                    allow_logon: false
                  - id: USERSYNC
                    role_alias: Admin
                  warnings:
                  - code: NRC_INVALID_PARAM
                    data:
                      id: CPIERCE1
                      allow_logon: true
                    error: Cannot find user with matching id in Customer.
                    field: id
                required:
                - data
                type: object
                properties: &id1606
                  data:
                    type: array
                    description: |-
                      Array of users whose library membership has been successfully updated.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: |
                            Indicates the user ID.
                        allow_logon:
                          type: boolean
                          description: |
                            Indicates if the user has access to the specified library.

                            If `true`, the user has access to the specified library.<br>
                            If `false`, the user does not have access to the specified library.
                        role_alias:
                          type: string
                          description: |
                            Indicates the role assigned to a user.<br><br>
                          nullable: true

                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.warning'
                    description: |-
                      Array of warning messages indicating users library patch errors.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/admin-import:
    description: |-
      None
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/admin-import
      summary: Import user to library
      description: |
        Create or update a batch of library users.<br><br>
        Available if the global_users feature is enabled.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                import_id: abc123
                users:
                - allow_logon: true
                  id: ACASE
                  role_alias: admin
                - allow_logon: false
                  id: CPIERCE
                - id: ASMITH
                  role_alias: admin
              required:
              - import_id
              - users
              type: object
              properties: &id1563
                import_id:
                  type: string
                  description: |
                    (Intended for future use once the Admin Import API is made asynchronous):<br>
                    A client-supplied identifier for the import request.
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/Users.userLibraryPatchRequest'
                  description: |-
                    Array of users to add or update.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: abc123
                    task_id: def456
                    status: success
                    users:
                    - user_num: 123
                    - user_num: 456
                  warnings:
                  - data:
                      id: ASMITH
                      role_alias: admin
                    code: OTHER
                    error: Failed to resolve collisions.
                required:
                - data
                type: object
                properties: *id098
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/admin-search:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-admin-search
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/admin-search
      summary: Admin search for users
      description: |-
        Gets all the users with fields allowed for admin-search.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_admin-search
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.user-admin-search'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - allow_logon: true
                    library: archive
                    distinguished_name: cn=andrew case,cn=users,dc=ajubalaw,dc=com
                    edit_date: '2017-11-14T16:42:37Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    last_sync_ts: '2011-10-12T10:41:52Z'
                    preferred_library: REACTIVE
                    sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                    user_domain: cn=users,dc=ajubalaw,dc=com
                    user_id_ex: ACASE
                    user_nos: 6
                    wstype: user
                  - allow_logon: true
                    library: archive
                    edit_date: '2017-04-20T12:05:04Z'
                    full_name: Active NRTADMIN
                    id: ACTIVE_NRTADMIN
                    is_external: false
                    preferred_library: ACTIVE
                    user_id_ex: active_nrtadmin
                    user_nos: 2
                    wstype: user
                  total_count: 2
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/me/photo:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-me-photo
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/me/photo
      summary: Download current user's profile photo
      description: |
        Downloads the profile photo of the signed-in user.<br>
        This photo is the profile picture of the user that appears in the iManage applications.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_me_photo
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                description: This can be any image type.
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-me-photo
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/me/photo
      summary: Upload current user's profile photo
      description: |
        Uploads the profile photo of the signed-in user.<br>
        This photo appears as the profile picture of the user in the iManage applications.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To download the photo of a user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/photo">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo</a><br>
        * To upload a photo of a user, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/photo">POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo</a><br>
        * To download the photo of the signed in user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/me/photo">GET /customers/{customerId}/libraries/{libraryId}/users/me/photo</a>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_me_photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  description: |-
                    Specifies the user picture file to upload.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/by-email/{email}/photo:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-by-email-{email}-photo
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/by-email/{email}/photo
      summary: Download user's profile photo using email ID
      description: |-
        Downloads the profile photo of a user by specifying the email address of the user.

        That is, the request accepts the email address of the user as a request path parameter and downloads the profile picture.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_by-email_{email}_photo
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                description: This can be of any image type.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}
      summary: Get library user information
      description: |
        Returns the information about a user from the specified library.

        The information mainly includes the user profile stored in the library. For example, if the user is allowed to sign in,
        email ID, tier, preferred library, and so on.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of libraries accessible on iManage Work Server, see <a href="#get-/work/api/v2/customers/-customerId-/libraries">GET /customers/{customerId}/libraries</a>
        * To get a list of all users from a library, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users">GET /customers/{customerId}/libraries/{libraryId}/users</a>
        * To get the global information of a user, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-">GET /customers/{customerId}/users/{userId}</a>.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    allow_logon: true
                    create_date: '2020-01-15T15:25:48.857103Z'
                    edit_date: '2020-01-15T15:25:48.857193Z'
                    email: acase@ajubalaw.com
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    preferred_library: active_us
                    ssid: '98512908316573949'
                    user_domain: cn=users,dc=ajubalaw,dc=com
                    user_id_ex: ACASE
                    user_nos: 6
                    user_num: 98512908316573949
                required:
                - data
                type: object
                properties: *id099
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/users/{userId}
      summary: Update user profile
      description: |-
        Updates the profile of the specified user.

        This request requires NRTADMIN privilege. That is, the requester must be part of the library's NRTADMIN group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get the information of a user at the library level, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}</a>.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_users_{userId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: acase@ajubalaw.com
                full_name: Andrew Case
              type: object
              properties: &id1607
                allow_logon:
                  type: boolean
                  description: |
                    Specifies the user is allowed to sign in.<br><br>
                    If `true`, the user is allowed to sign in.<br>
                    If `false`, the user is not allowed to sign in.<br>
                    If omitted, the value is `false`.<br><br>
                custom1:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                custom2:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                custom3:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the user.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                doc_server:
                  type: string
                  description: |
                    Indicates the file path on the iManage Work server.<br>

                    This parameter may not be available for all environments.
                    Prior to providing a value, check GET&nbsp;`/customers/{customerId}/features`.<br>
                    If `global_users` is `false`, this parameter is available and a value may be provided.<br>
                    If `global_users` is `true`, this parameter is not available.
                email:
                  type: string
                  maxLength: 254
                  description: |-
                    Email address of the user.

                    Special characters allowed are +*.&-_`~|$%^?!’#={}/
                exch_autodiscover:
                  maxLength: 1024
                  type: string
                  description: |
                    Exchange server details of the user.<br><br>
                    Maximum length of 1024.
                extension:
                  maxLength: 32
                  type: string
                  description: |+
                    Phone extension number of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                fax:
                  maxLength: 32
                  type: string
                  description: |+
                    Fax number of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                force_password_change:
                  type: boolean
                  default: false
                  description: |
                    Specifies whether the user must change their password on next sign in.<br><br>
                    This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                    If `true`, the user must change their password on next sign in.<br>
                    If `false`, the user does not have to change their password on next sign in.
                full_name:
                  maxLength: 254
                  type: string
                  description: |+
                    Full friendly name of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                general:
                  maxLength: 254
                  type: string
                  description: |-
                    Any comments or description applicable for the user.<br><br>Maximum length is 254 characters.
                id:
                  minLength: 1
                  maxLength: 64
                  pattern: |-
                    ^[\u0021-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*$
                  type: string
                  description: |
                    Specifies the user ID.<br><br>
                    In some cases, the field `user_id_ex`, which comes from an external source system such as Active Directory, is formatted
                    to all upper case letters internally and then saved as the value of the `id` field.<br>
                    For example, if `user_id_ex` is ACase then the `id` will be ACASE.

                    For more information, see the field `user_id_ex`.

                    The requirements for `id` are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 1 |
                    | Maximum length | 64 |
                    | Spaces allowed  | No |
                    | Unicode allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"= |


                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                is_external:
                  type: boolean
                  description: |+
                    Specifies if the user is an external user.

                    If `true`, only the external users are returned.<br>
                    If `false`, only the internal users are returned.<br>
                    If omitted, both the internal and external users are returned.



                location:
                  maxLength: 254
                  type: string
                  description: |
                    Geographical location of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                phone:
                  maxLength: 32
                  type: string
                  description: |
                    Phone number of the user.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                preferred_library:
                  maxLength: 32
                  type: string
                  description: |-
                    Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
                    If specified, returns only users whose preferred library is equal to the specified value.<br>
                    If omitted, returns users with any preferred library.

                    This search:<br>
                    * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
                    * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
                    * does not support the wildcard character (&ast;).<br><br>
                    A preferred library is user's default library. Each user is required to have one preferred library.
                    It stores user's preferred settings such as language preference
                    and default search form for iManage Work advanced search.

                    If a user's preferred library is switched to another, the preferences are reset.
                pwd_changed_ts:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |
                    Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
                    This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                    For example: 2020-03-09T17:01:16Z
                role_alias:
                  type: string
                  description: |-
                    The library role assigned to a user.<br><br>
                    A user assigned to at least one library must have a library role.
                user_domain:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies  the fully qualified domain name for the user's directory service.

                    It is the metadata from LDAP server that determines the unit to which the user belongs to.
                    This information is mainly used by iManage system administrators.
                user_id_ex:
                  maxLength: 64
                  type: string
                  description: |-
                    Specifies the original value of the user ID that is received from the source system such as Active Directory.

                    It is formatted internally to all upper case letters, and then saved as `id`.
                    The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
                    For example, if `user_id_ex` is ACase then the `id` will be ACASE.
                user_nos:
                  type: integer
                  description: |-
                    Specifies the type of user.

                    The allowed values are:

                    | Value | Description |
                    | :-: | - |
                    | 2 | Virtual User |
                    | 6 | Enterprise user |
                user_password:
                  maxLength: 64
                  type: string
                  description: |-
                    Login password of the user.

                    The requirements for the password are:
                    * Minimum 12 characters.
                    * At least 1 upper case character.
                    * At least 1 lower case character.
                    * At least 1 number or special character.
                    * Special characters supported are !"#$%&'()*+,-./:;<=>?@[]\^_`{}~| 

                    The password is required for adding a virtual user or converting a user to virtual.<br>
                    It must not be provided if adding a non-virtual user or converting a user to non-virtual user.<br>
                    It is optional if updating an existing virtual user.
                pwd_never_expire:
                  type: boolean
                  description: |
                    Specifies if the user's password never expires.<br><br>
                    This is applicable to virtual users only (whose `user_nos=2`).

                    If `true`, the user's password never expires.<br>
                    If `false`, the user's password expires.

              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/recent-workspaces:
    description: |-
      None
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-recent-workspaces
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/recent-workspaces
      summary: Add a workspace to user's recent workspaces
      description: |-
        Adds the specified workspace to the recent workspaces list of the user.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The user executing this request must either be an NRTADMIN or have full access on the workspace to be able to
        add it to another user's Recent Workspaces list.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        After a workspace has been added to a user's Recent Workspaces list, the user can sign in and retrieve the
        newly updated list by executing the request <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/recent-workspaces">GET /customers/{customerId}/recent-workspaces</a>.

        **Note**: When the user is retrieving recent workspaces, they must specify the type of activity that was
        used while adding the recent workspace. This can be done by using the `activity` query parameter.

        For example: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/{{customerId}}/recent-workspaces?activity=browse`

      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_recent-workspaces
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: Active!2550
                activity: browse
              required:
              - id
              - activity
              type: object
              properties: &id1628
                id:
                  type: string
                  description: |
                    Specifies the workspace ID that is to be added to the Recent Workspaces list of a user.
                activity:
                  type: string
                  description: |
                    Specifies the type of activity performed on a workspace that will add it to the Recent Workspaces list.
                    Currently, only `browse` activity can be specified for a workspace.
                    This value is case insensitive.

                    |Activity|Description|
                    |---|---|
                    |browse|Recently browsed workspace.|
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/role:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-role
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/role
      summary: Get user's library role
      description: |
        Gets the library role of the specified user.<br>
        For more information, see <a href="#tag--Library-Roles">Library Roles</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return the user's roles at the global level, see GET `/customers/{customerId}/users/{userId}/roles`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_role
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id258
                  data:
                    $ref: '#/components/schemas/Users.role'
                additionalProperties: false
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/photo:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-photo
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo
      summary: Download a user's profile photo
      description: |
        Downloads the profile photo of the specified user.<br>
        This photo is the profile picture of the user that appears in iManage applications.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To upload a photo of a user, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/photo">POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo</a><br>
        * To download the photo of the signed in user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/me/photo">GET /customers/{customerId}/libraries/{libraryId}/users/me/photo</a><br>
        * To upload a photo of the signed in user, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/me/photo">POST /customers/{customerId}/libraries/{libraryId}/users/me/photo</a>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_photo
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                description: This can be any image type.
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-photo
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo
      summary: Upload a user's profile photo
      description: |
        Uploads the profile photo of the specified user.<br>
        This photo appears as the profile picture of the user in the iManage applications.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To download the photo of a user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/-userId-/photo">GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/photo</a><br>
        * To download the photo of the signed in user, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/me/photo">GET /customers/{customerId}/libraries/{libraryId}/users/me/photo</a><br>
        * To upload a photo of the signed in user, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users/me/photo">POST /customers/{customerId}/libraries/{libraryId}/users/me/photo</a>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  description: |-
                    Specifies the user picture file to upload.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters:
    description: |-
      !include ./raml/raml/snippets/my-favorites-my-matters.txt
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/admin-import:
    description: |-
      None
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/admin-import
      summary: Import into user's My Matters
      description: |
        Creates or updates workspace shortcuts and categories, and updates the security profile of categories, in the specified user's My Matters.
        It also adds subscriptions on other users' My Matters for the target user (specified in the endpoint as `userId`).

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: NRTADMIN. <br>
        That means, to execute this request a user must be a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available only for specific environments.<br>
        Prior to executing this request, execute GET `/customers/{customerId}/features` to check the value of `my_matters_admin_import` field.<br>
        If `my_matters_admin_import` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * If `parent_id` is not provided, the request applies changes to My Matters of the target user.
        * If `parent_id` is provided, the request applies only to the category identified by this ID.
          This ID must point to an existing category within My Matters of the target user.
        * The request body parameters `subscriptions` and `security` can be applied only at the root level of My Matters and not to any categories.
          This is because subscriptions can be added and security can be applied only at the root level of My Matters.
          Therefore, the request returns a warning if `subscriptions` and `security` are specified along with the `parent_id` of a category.
        * The `shortcut_id` can be specified to update an existing shortcut.
        * More than one shortcut to the same workspace can be created in My Matters.
        * A user must give access to their My Matters to another user before that user can subscribe to it. For more information, see the <a href="#tag--My-Matters">My Matters</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        This sample request performs the following:
        * creates a new category *Litigation*
        * updates the name of the category ACTIVE_UK!24499 to *Legal Actions*
        * adds a shortcut to the workspace ACTIVE_UK!21827 in the category ACTIVE_UK!2449938 identified by the `parent_id`.

        As the `parent_id` of a category is specified in this request, specifying the `security` and `subscriptions` parameters would return a warning.

        ```
        {
           "parent_id":"ACTIVE_UK!2449938",
           "categories":[
              {
                 "name":"Litigation"
              },
              {
                 "name":"Legal Actions",
                 "id":"ACTIVE_UK!24499"
              }
           ],
           "shortcuts":[
              {
                 "target_id":"ACTIVE_UK!21827",
                 "name":"Shortcut to NewMatter",
                 "wstype":"workspace"
              }
           ]
        }
        ```

      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                categories:
                - name: Litigation
                - id: ACTIVE_UK!1234
                  name: Banking
                  owner: ACTIVE_NTRTADMIN
                shortcuts:
                - name: Internal Matters
                  owner: ACTIVE_NTRTADMIN
                  target_id: ACTIVE_UK!14696
                - id: ACTIVE_UK!2345
                  name: Google
                  target_id: ACTIVE_UK!14690
                subscriptions:
                - user_id: ACASE
                security:
                  default_security: public
                  include:
                  - access_level: full_access
                    id: andrew
                    type: user
                  - access_level: read
                    id: viewgroup
                    type: group
                  remove:
                  - id: nonviewgroup
                    type: group
              properties: &id1172
                shortcuts:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projects.myMattersShortcutAdminImportRequest'
                  description: |
                    Workspace shortcuts to be created or updated.
                subscriptions:
                  type: array
                  items:
                    required:
                    - user_id
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: |-
                          Specifies the ID of the user whose My Matters the target user will subscribe to.
                  description: |
                    List of users whose My Matters the target user will subscribe to.
                security:
                  description: |-
                    Changes to be made to the My Matters security of the target user.
                  type: object
                  properties:
                    include:
                      type: array
                      items:
                        required:
                        - id
                        - access_level
                        - type
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              Specifies the user ID or group ID whose access levels are to be updated.
                          access_level:
                            enum: ["no_access", "read", "read_write", "full_access",
                              "change_security"]
                            type: string
                            description: |
                              Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
                              See the <a href="#overview--privileges">Privileges</a> section of the overview.

                              The following are the possible values:

                              |Access Level|Numeric Value|Description|
                              |:---|:---|:---|
                              |no_access|0|The user has no access, or any permissions to the container or document.|
                              |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
                              |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                              |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
                              |change_security|4|Reserved for system use. Do not use.|
                          type:
                            enum: ["user", "group"]
                            type: string
                            description: |-
                              Specifies the type of trustee.
                      description: |-
                        List of users and groups to be added to the access list.
                    remove:
                      type: array
                      items:
                        required:
                        - id
                        - type
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              Specifies the user ID or group ID to be removed.
                          type:
                            enum: ["user", "group"]
                            type: string
                            description: |-
                              Specifies the type of trustee.
                      description: |-
                        List of users and groups to be removed from the access list.
                    default_security:
                      enum: ["inherit", "public", "view", "private"]
                      type: string
                      description: |-
                        The default access level.

                        |Value|Description|
                        |:---|:---|
                        |inherit|The container or document inherits security settings from its parent container.|
                        |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                        |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                        |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                  additionalProperties: true
                parent_id:
                  type: string
                  description: |
                    Specifies the ID of the category to be updated.

                    If specified, it identifies the category to be modified.<br><br>
                    If omitted, the request is applied to the root of My Matters.
                categories: &id123
                  type: array
                  items:
                    $ref: '#/components/schemas/Projects.categoryAdminImportRequest'
                  description: |-
                    Categories to be created, or categories with IDs to be updated.
                import_id: &id124
                  type: string
                  description: |-
                    Reserved for future use.
              additionalProperties: true
              type: object
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: ''
                    task_id: ''
                    status: completed
                    categories:
                    - category_type: my_matters
                      database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2020-04-26T22:56:39.802Z'
                      folder_type: category
                      has_subfolders: false
                      id: ACTIVE_UK!754895016
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Litigation
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: ACTIVE_UK!9013
                      view_type: document
                      wstype: folder
                    - category_type: my_matters
                      database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2021-06-26T22:56:45.802Z'
                      folder_type: category
                      has_subfolders: false
                      id: ACTIVE_UK!1234
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Banking
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: ACTIVE_UK!10043
                      view_type: document
                      wstype: folder
                    shortcuts:
                    - database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2019-03-17T14:09:13Z'
                      id: ACTIVE_UK!258137
                      name: Internal Matters
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: ACTIVE_UK!231248
                      target:
                        database: ACTIVE_UK
                        id: ACTIVE_UK!14696
                        wstype: workspace
                      wstype: workspace_shortcut
                    - database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2019-03-17T14:09:13Z'
                      id: ACTIVE_UK!258137
                      name: Google
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: ACTIVE_UK!231248
                      target:
                        database: ACTIVE_UK
                        id: ACTIVE_UK!2345
                        wstype: workspace
                      wstype: workspace_shortcut
                required:
                - data
                type: object
                properties: &id1170
                  data:
                    properties:
                      categories:
                        type: array
                        description: Array of categories
                        items:
                          $ref: '#/components/schemas/Projects.category'
                      shortcuts:
                        type: array
                        description: Array of workspace shortcuts
                        items:
                          $ref: '#/components/schemas/Projects.Shortcuts.workspaceShortcut'
                      import_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      task_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      status:
                        enum: [queued, completed, failed]
                        type: string
                        description: |-
                          Indicates the status of import task.

                          |Status|Description|
                          |:---|:---|
                          | queued   | The import is in progress and in the queue.|
                          | completed| The import has completed.|
                          | failed   | The import has failed and needs investigation.|
                    additionalProperties: true
                    required:
                    - status
                    type: object
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/search:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-search
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/search
      summary: Search for My Matters
      description: |
        Gets a list of workspace IDs that have shortcuts in the My Matters folder and are shared with the current user.<br><br>
        The specified workspaces is the endpoint parameter `userId`. The workspace ID is the required query parameter `workspace_id`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_search
      parameters:
      - *id004
      - name: workspace_id
        in: query
        description: |-
          The workspace ID of the target workspace.
        schema:
          type: string
          example: ACTIVE!123
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - Active!20213
                    - Active!22355
                required:
                - data
                type: object
                properties: &id1677
                  data:
                    required:
                    - results
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: string
                        description: |-
                          List User's My Matters shortcut ID.
                    additionalProperties: false
                    description: |
                      Results contains a list of workspace shortcut IDs.

                      ```
                      {
                        "data": {
                          "results": [
                            "Active!123",
                            "Active!456"
                          ]
                        }
                      }```
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/operations:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/operations
      summary: Get My Matters' allowed operations
      description: |-
        Gets the operations the current user is allowed to perform on the specified user's My Matters.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    add_categories: true
                    add_shortcuts: true
                    change_name: true
                    modify: true
                    remove: true
                    move: true
                    remove_categories: true
                    remove_shortcuts: true
                    set_default_security: true
                    set_security: true
                    update_content_shortcut: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
                required:
                - data
                type: object
                properties: &id1676
                  data:
                    required:
                    - add_categories
                    - add_shortcuts
                    - change_name
                    - modify
                    - remove
                    - remove_categories
                    - remove_shortcuts
                    - set_default_security
                    - set_security
                    - update_content_shortcut
                    type: object
                    properties:
                      add_categories:
                        type: boolean
                        description: |
                          Indicates the user can create a new category.<br><br>
                          If `true`, the user can create a new category.<br>
                          If `false`, the user cannot create a new category.<br><br>
                          If omitted, the value is `false`.
                      add_shortcuts:
                        type: boolean
                        description: |
                          Indicates the user can create shortcuts.<br><br>
                          If `true`, the user can create shortcuts.<br>
                          If `false`, the user cannot create shortcuts.<br><br>
                          If omitted, the value is `false`.
                      change_name:
                        type: boolean
                        description: |
                          Indicates the user can change the name of a category.<br><br>
                          If `true`, the user can change the name of a category.<br>
                          If `false`, the user cannot change the name of a category.<br><br>
                          If omitted, the value is `false`.
                      modify:
                        type: boolean
                        description: |
                          Indicates the user can modify the content of a category.<br><br>
                          If `true`, the user can modify the content of a category.<br>
                          If `false`, the user cannot modify the content of a category.<br><br>
                          If omitted, the value is `false`.
                      remove:
                        type: boolean
                        description: |
                          Indicates the user can remove content from a category.<br><br>
                          If `true`, the user can remove content from a category.<br>
                          If `false`, the user cannot remove content from a category.<br><br>
                          If omitted, the value is `false`.
                      move:
                        type: boolean
                        description: |
                          Indicates the user can move a category.<br><br>
                          If `true`, the user can move a category.<br>
                          If `false`, the user cannot move a category.<br><br>
                          If omitted, the value is `false`.
                      remove_categories:
                        type: boolean
                        description: |
                          Indicates the user can delete an existing category.<br><br>
                          If `true`, the user can delete an existing category.<br>
                          If `false`, the user cannot delete an existing category.<br><br>
                          If omitted, the value is `false`.
                      remove_shortcuts:
                        type: boolean
                        description: |
                          Indicates the user can remove shortcuts to other objects from a category.<br><br>
                          If `true`, the user can remove shortcuts to other objects from a category.<br>
                          If `false`, the user cannot remove shortcuts to other objects from a category.<br><br>
                          If omitted, the value is `false`.
                      set_default_security:
                        type: boolean
                        description: |
                          Indicates the user can set the default security on a category.<br><br>
                          If `true`, the user can set the default security on a category.<br>
                          If `false`, the user cannot set the default security on a category.<br><br>
                          If omitted, the value is `false`.
                      set_security:
                        type: boolean
                        description: |
                          Indicates the user can set the security on a category.<br><br>
                          If `true`, the user can set the security on a category.<br>
                          If `false`, the user cannot set the security on a category.<br><br>
                          If omitted, the value is `false`.
                      update_content_shortcut:
                        type: boolean
                        description: |
                          Indicates the user can update the target of the shortcut.<br><br>
                          If `true`, the user can update the target of the shortcut.<br>
                          If `false`, the user cannot update the target of the shortcut.<br><br>
                          If omitted, the value is `false`.
                      default_security_values:
                        type: array
                        items:
                          enum: ["private", "view", "public", "inherit"]
                          type: string
                        description: |
                          Indicates the default security setting.<br>

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or item inherits security settings from its parent container.|
                          |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                          |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                    additionalProperties: true
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/available-subscriptions:
    description: |-
      None

    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-available-subscriptions
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/available-subscriptions
      summary: Get available subscriptions
      description: |
        Returns a list of possible My Matters subscriptions from other users.<br><br>
        A subscription is a shortcut to another user's My Matters. It is created only by the My Matters'owner.
        Subscription allows a user to share their My Matters with others.<br>

        The host user is the user offering their My Matters to others. They create the subscription.
        The invited user is the user being offered the subscription to the host user's My Matters.
        Acceptance of the subscription is automatic; no additional action is required on their part.
        The invited user is still limited by default security and access permission.
        The subscription remains in place until it is explicitly deleted by the host user.<br>

        This list returns both current subscriptions and possible subscriptions.<br><br>
        * A current subscription is a My Matters subscription that has been created for the specified user.
        The offering is made by the host user. The subscription acceptance is automatic.
        The invited user does not have to explicitly accept.<br>
        * A possible subscription is a subscription that could be offered by another user.
        That is, each user has their own My Matters, and each of these My Matters can be offered to other users.
        Each offering is a possible subscription.
        This request lists all other users' My Matters that the specified user does not have a subscription to yet.
        Since this includes all users on their iManage Work system, this list could be significantly long.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns a list of all possible and current subscriptions for user ACASE.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/available-subscriptions`

        This example returns a list of user ACASE's possible and current subscriptions from user CPIERCE:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/available-subscriptions?query=CPIERCE`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see all the subscriptions, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`.<br>
        * To create a subscription, see POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`.<br>
        * To unsubscribe from a subscription, see DELETE `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions/{subscriptionId}`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_available-subscriptions
      parameters:
      - *id004
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Specifies the target user by either `userid` or `full_name`.<br><br>
          Multiple values are not supported by a comma-separated list.<br><br>
          This search:
          * Is case insensitive. For example: *ACase* matches *acase*.
          * Matches partial words. For example: *as* does match *acase*.
          * Does not supports the wildcard character (&ast;).
        schema:
          type: string
          example: ACASE
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - userid: KTHOMPSON
                    subscription_id: reactive!42467
                    full_name: Kelly Thompson
                    is_subscribed: true
                    is_external: false
                    allow_logon: true
                    preferred_library: ACTIVE_UK
                  - userid: ACASE
                    full_name: Andrew Case
                    is_subscribed: false
                    is_external: false
                    allow_logon: false
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1675
                  data:
                    type: array
                    items:
                      required:
                      - userid
                      - is_subscribed
                      type: object
                      properties:
                        userid:
                          type: string
                          description: Indicates the target user ID whose My Matters
                            can be subscribed by the current user.
                        subscription_id:
                          type: string
                          description: |
                            Indicates the subscription ID.<br><br>
                            This is returned only if the current user is subscribed to the target user's My Matters.
                        is_subscribed:
                          type: boolean
                          description: |
                            Indicates the user is subscribed to the target user's My Matters.<br><br>
                            If `true`, the user is subscribed to the target user's My Matters.<br>
                            If `false`, the user is not subscribed to the target user's My Matters.
                        full_name:
                          type: string
                          description: Indicates the full name of the target user
                            whose My Matters can be subscribed to.
                        is_external:
                          type: boolean
                          description: |+
                            Indicates that  the user is an external user.

                            If `true`, the user is an external user.<br>
                            If `false`, the user is not an external user, also called a regular user.

                            For more information, see <a href="#overview--external-users"> External users</a>.

                        allow_logon:
                          type: boolean
                          description: |
                            Indicates if the user is allowed to sign in.

                            If `true`, the user is allowed to sign in.<br>
                            If `false`, the user is not allowed to sign in.
                        preferred_library:
                          type: string
                          description: |
                            Indicates the preferred library of the user.<br><br>
                            For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions:
    description: |-
      None

    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-subscriptions
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions
      summary: Get My Matters subscriptions
      description: |
        Returns a list of subscriptions of the specified user to another user's My Matters.<br><br>
        A subscription is a shortcut to another user's My Matters. It is created only by the My Matters'owner.
        Subscription allows a user to share their My Matters with others.<br>

        The host user is the user offering their My Matters to others. They create the subscription.
        The invited user is the user being offered the subscription to the host user's My Matters.
        Acceptance of the subscription is automatic; no additional action is required on their part.
        The invited user is still limited by default security and access permission.
        The subscription remains in place until it is explicitly deleted by the host user.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns a list of subscriptions the user ACASE has to other user's workspaces:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/subscriptions`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a subscription, see POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>
        * To unsubscribe from a subscription, see DELETE `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions/{subscriptionId}`<br>
        * To see a list of users whose My Matters folder is available for subscription, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/available-subscriptions`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_subscriptions
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: reactive
                    full_name: Kelly Thompson
                    subscription_id: reactive!42467
                    userid: KTHOMPSON
                    wstype: my_matters_subscription
                    is_external: false
                    allow_logon: true
                  - database: reactive
                    full_name: Pam Peters
                    subscription_id: reactive!43467
                    userid: PPETERS
                    wstype: my_matters_subscription
                    is_external: true
                    allow_logon: true
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1674
                  data:
                    type: array
                    items:
                      required:
                      - database
                      - userid
                      - subscription_id
                      - full_name
                      - wstype
                      type: object
                      properties:
                        database:
                          type: string
                          description: Indicates the library that contains the subscribed
                            My Matters.
                        userid:
                          description: Indicates the user ID of the owner of the subscribed
                            My Matters.
                          type: string
                        subscription_id:
                          type: string
                          description: Indicates the ID of the My Matters subscription.
                        full_name:
                          type: string
                          description: Indicates the full name of the owner of the
                            subscribed My Matters.
                        wstype:
                          type: string
                          description: Indicates the iManage Work object type of the
                            subscription.
                        is_external:
                          type: boolean
                          description: |+
                            Indicates that  the user is an external user.

                            If `true`, the user is an external user.<br>
                            If `false`, the user is not an external user, also called a regular user.

                            For more information, see <a href="#overview--external-users"> External users</a>.

                        allow_logon:
                          type: boolean
                          description: |
                            Indicates if the user is allowed to sign in.

                            If `true`, the user is allowed to sign in.<br>
                            If `false`, the user is not allowed to sign in.
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-subscriptions
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions
      summary: Create My Matters subscription
      description: |
        Creates a subscription from the specified user's My Matters to another user.<br><br>
        A subscription is a shortcut to another user's My Matters. It is created only by the My Matters'owner.
        Subscription allows a user to share their My Matters with others.<br>

        The host user is the user offering their My Matters to others. They create the subscription.
        The invited user is the user being offered the subscription to the host user's My Matters.
        Acceptance of the subscription is automatic; no additional action is required on their part.
        The invited user is still limited by default security and access permission.
        The subscription remains in place until it is explicitly deleted by the host user.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a subscription from host user ACASE's My Matters to the invited user CPIERCE.
        In other words, CPIERCE has been invited to access ACASE's My Matters:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/subscriptions`<br>
        Request body:
        ```
        {
          "userid" : "CPIERCE"
        }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see all the subscriptions, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>
        * To unsubscribe from a subscription, see DELETE `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions/{subscriptionId}`<br>
        * To see a list of users whose My Matters folder is available for subscription, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/available-subscriptions`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_subscriptions
      requestBody:
        content:
          application/json:
            schema:
              example:
                userid: PPETERS
              required:
              - userid
              type: object
              properties: &id1672
                userid:
                  type: string
                  description: Specifies the user ID of the invited user.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    full_name: Kelly Thompson
                    subscription_id: active_us!42467
                    userid: KTHOMPSON
                    wstype: my_matters_subscription
                    is_external: false
                    allow_logon: true
                required:
                - data
                type: object
                properties: &id1673
                  data:
                    required:
                    - database
                    - userid
                    - subscription_id
                    - full_name
                    - wstype
                    type: object
                    properties:
                      database:
                        type: string
                        description: Indicates the library that contains the subscribed
                          My Matters.
                      userid:
                        description: Indicates the user ID of the owner of the subscribed
                          My Matters.
                        type: string
                      subscription_id:
                        type: string
                        description: Indicates the ID of the My Matters subscription.
                      full_name:
                        type: string
                        description: Indicates the full name of the owner of the subscribed
                          My Matters.
                      wstype:
                        type: string
                        description: Indicates the iManage Work object type of the
                          subscription.
                      is_external:
                        type: boolean
                        description: |+
                          Indicates that  the user is an external user.

                          If `true`, the user is an external user.<br>
                          If `false`, the user is not an external user, also called a regular user.

                          For more information, see <a href="#overview--external-users"> External users</a>.

                      allow_logon:
                        type: boolean
                        description: |
                          Indicates if the user is allowed to sign in.

                          If `true`, the user is allowed to sign in.<br>
                          If `false`, the user is not allowed to sign in.
                    additionalProperties: false
                additionalProperties: false
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions/{subscriptionId}:
    description: |-
      None

    delete:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-subscriptions-{subscriptionId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions/{subscriptionId}
      summary: Unsubscribe from My Matters
      description: |
        Unsubscribes a user from a subscribed My Matters.<br><br>
        A subscription is a shortcut to another user's My Matters. It is created only by the My Matters'owner.
        Subscription allows a user to share their My Matters with others.<br>

        The host user is the user offering their My Matters to others. They create the subscription.
        The invited user is the user being offered the subscription to the host user's My Matters.
        Acceptance of the subscription is automatic; no additional action is required on their part.
        The invited user is still limited by default security and access permission.
        The subscription remains in place until it is explicitly deleted by the host user.<br>

        This request requires the subscription ID.
        It is the ID of the link to the other user's My Matters.
        To retrieve subscription IDs, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request for host user ACASE unsubscribes from the subscription ID 98773794532987234:
        That is, the invited user who is associated with that subscription ID will no longer have access to ACASE's My Matters.<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/subscriptions/98773794532987234`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see all the subscriptions, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>
        * To create a subscription, see POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>
        * To see a list of users whose My Matters are available for subscription, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/available-subscriptions`
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_subscriptions_{subscriptionId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
    - $ref: '#/components/parameters/subscriptionId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/security:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/security
      summary: Get My Matters' security
      description: |-
        Gets the security and default security of My Matters.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-security
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/security
      summary: Update My Matter's security
      description: |-
        Modifies the security and default security of My Matters.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_security
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                JSON app extension profile. This must be valid JSON, but need not be complete.
              example:
                include:
                - access_level: full_access
                  id: andrew
                  type: user
                - access_level: read
                  id: viewgroup
                  type: group
                remove:
                - id: nonviewgroup
                  type: group
                default_security: public
              type: object
              properties: *id100
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts
      summary: Create workspace shortcut
      description: |
        Creates a shortcut for a workspace in the root level of the My Matters folder.<br><br>
        For example, to create a shortcut for a workspace within the My Matters folder, the following is information is required:
        * workspace ID: This is the `id` parameter of the target workspace.
        * name: This is the `name` parameter and is the name of the shortcut. Typically, the workspace name is used.<br>

        The request is:<br>
        POST `{hostname}/work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts`<br>
        For example:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/users/acase/my-matters/shortcuts`<br>
        with the body<br>
        ```
        {
          "id": "active!15629",
          "name": "Ajubalaw Client"
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a shortcut for a workspace in the specified container within My Matters, see POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/shortcuts`<br>
        To get a list of contents from the root level of My Matters, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/children`<br>
        To get a list of contents from any other container from within My Matters, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}`<br>
        To delete a shortcut from within My Matters, see DELETE `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}`<br>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "id": "Active!1024.1",
                  "name": "Shortcut to the Document"
                }
              required:
              - id
              - name
              type: object
              properties: &id122
                id:
                  type: string
                  description: |
                    The document ID, folder ID, or workspace ID of the object to create the shortcut for.<br><br>
                    The ID must be complete, including the version number.
                    For example: active!1944.3.
                name:
                  type: string
                  description: |
                    Name of the shortcut.<br><br>
                    This name displays with the shortcut.
                    The name is typically the same as the source object's name, such as the document name.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
        401: *id002
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}:
    description: |-
      None
    patch:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-shortcuts-{shortcutId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}
      summary: Update shortcut in My Matters
      description: |-
        Updates the shortcut with the specified shortcut ID.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_shortcuts_{shortcutId}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              - wstype
              type: object
              properties: &id376
                name:
                  type: string
                  pattern: ^.*\S.*$
                  description: |-
                    Name of the shortcut.
                wstype:
                  enum: ["workspace_shortcut", "document_shortcut", "folder_shortcut"]
                  type: string
                  description: |-
                    Type of the shortcut created for iManage Work object that is represented by ID.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  - $ref: '#/components/schemas/Shortcuts.workspaceShortcut'
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}/operations:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-shortcuts-{shortcutId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}/operations
      summary: Get allowed operations on workspace shortcut
      description: |
        Returns operations the current user is allowed to perform on the specified shortcut within My Matters.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on shortcut active_us!712:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/users/acase/my-matters/shortcuts/active_us!712/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_shortcuts_{shortcutId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    change_name: true
                    move: true
                    remove: true
                required:
                - data
                type: object
                properties: &id378
                  data:
                    required:
                    - change_name
                    - remove
                    - move
                    type: object
                    properties:
                      change_name:
                        type: boolean
                        description: |-
                          Indicates that the user can change the name of a shortcut.
                      remove:
                        type: boolean
                        description: |-
                          Indicates that the user can remove a shortcut.
                      move:
                        type: boolean
                        description: |-
                          Indicates that the user can move a shortcut from its current parent.
                    additionalProperties: true
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}/move:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-shortcuts-{shortcutId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts/{shortcutId}/move
      summary: Move workspace shortcut
      description: |-
        Moves the workspace shortcut to the specified category or the root of my-matters.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_shortcuts_{shortcutId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: Active!123456
              required:
              - destination_id
              type: object
              properties: &id1679
                destination_id:
                  type: string
                  description: |
                    Destination to move the shortcut.

                    The possible values are:<br>
                    * **Category ID**: ID of the category where the shortcut should be moved.
                    * **my-matters**: indicates that the shortcut should be moved to my-matters root.
                  example: "Active!123 | my-matters"
                destination_user_id:
                  type: string
                  description: |
                    The user ID of the destination my-matters.

                    This parameter is ignored if destination_id is Category ID.
                  default: userId in the URI
                  example: ACASE
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_uk
                    default_security: inherit
                    edit_date: '2020-04-26T18:41:18Z'
                    effective_security: full_access
                    id: active_uk!9435
                    name: _Benefits
                    owner: ACASE
                    parent_id: active_uk!9014
                    target:
                      database: active_uk
                      id: active_uk!9434
                      subtype: S
                      wstype: folder
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: &id377
                  data:
                    $ref: '#/components/schemas/Projects.Shortcuts.containerShortcut'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories
      summary: Create category in My Matters
      description: |
        Creates a category at the root level of My Matters.<br><br>
        The My Matters folder can contain categories.
        A category is a container that holds workspaces and other categories.
        This allows for better organization among workspaces in My Matters.<br><br>
        A category contained inside another category is called a subcategory.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a subcategory within the My Matters folder in a location other than the root level of the My Matters folder, see POST `/customers/{customerId}/libraries/{libraryId}/my-matters/categories/{categoryId}/categories`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: &id102
                name: &id1168
                  minLength: 1
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the name of the category.<br>
                    This name appears in the client applications.

                    The requirements for category name are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 1 |
                    | Maximum length | 254 |
                    | Spaces allowed | Yes |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |

              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id103
                  data:
                    $ref: '#/components/schemas/Projects.category'
                additionalProperties: false
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}
      summary: Get My Matters category details
      description: |-
        Gets the category details for a specified category ID.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id380
                  data:
                    properties:
                      owner_info:
                        type: object
                        description: Information about the owner of this category.
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      category_type: &id104
                        type: string
                        description: |-
                          Indicates the type of category.

                          It can be either `my_matters` or `my-favorites`.
                      database: &id105
                        type: string
                        description: |-
                          Indicates the name of the library (formerly called a database) where the category is located.
                      default_security: &id106
                        enum: ["inherit", "public", "view", "private"]
                        type: string
                        description: |-
                          The default access level.

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or document inherits security settings from its parent container.|
                          |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                          |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      edit_date: &id107
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) when the category profile or its content was last edited.
                      folder_type: &id108
                        $ref: '#/components/schemas/Projects.folderType'
                      has_documents: &id109
                        type: boolean
                        description: |
                          Indicates if the category has documents.
                      has_subfolders: &id110
                        type: boolean
                        description: |
                          Indicates if the category has subfolders.
                      id: &id111
                        type: string
                        description: |
                          Indicates the category ID.<br>
                        example: ACTIVE_UK!157452
                      is_container_saved_search: &id112
                        type: boolean
                        description: |
                          Indicates the folder search is saved in this folder.

                          If `true`, the folder search is saved in this folder.<br>
                          If `false`, the folder search is not saved in this folder.
                      is_content_saved_search: &id113
                        type: boolean
                        description: |
                          Indicates the document search is saved in this folder.

                          If `true`, the document search is saved in this folder.<br>
                          If `false`, the document search is not saved in this folder.
                      is_external: &id114
                        type: boolean
                        description: |
                          Indicates the folder is shared with external users.

                          If `true`, the folder is shared with external users.<br>
                          If `false`, the folder is not shared with external users.
                      is_external_as_normal: &id115
                        type: boolean
                        description: |-
                          Indicates if the external folder is treated as a normal folder.

                          If `true`, the current user's `is_external` value does not affect the access permissions the user has on the folder.
                          That is, all users can access the content of a folder according to their access permission. <br>
                          If `false`, the external users can access only the folder content they have been permitted to. <br>

                          If it is `true` and `default_security` of folder is not `private`, the property `is_external` is set to `true`.<br>
                          If it is `false` and `default_security` of folder is not `private`, the property `is_external` is set to `false`.
                      name: &id116
                        type: string
                        description: |
                          Indicates the name of the category.

                          This name appears in the client applications.
                      owner: &id117
                        type: string
                        description: |
                          Indicates the user ID of the category owner.
                      owner_description: &id118
                        type: string
                        description: |-
                          Indicates the full name of the category owner.
                      parent_id: &id119
                        type: string
                        description: |
                          Indicates the parent folder ID of this container.<br><br>
                          It is the folder ID of `My Matters` or `My Favorites`.
                      view_type: &id120
                        enum: ["none", "document", "email", "email_search", "document_search",
                          "linksite", "imanage_share"]
                        type: string
                        description: |-
                          The folder view type based on its content.<br><br>
                          The display in client application is customized for each content type.
                          For example, when a document folder (type *document*) is selected, the display is customized for
                          displaying documents and their properties such as file name, size, and location.

                          The following are folder view types based on the type of content they hold:

                          |View Type|Description|
                          |:---|:---|
                          |document|For document folders and document search folders.|
                          |email| For email folders and email search folders.|
                          |imanage_share|For iManage Share folder shortcuts.|
                      wstype: &id121
                        $ref: '#/components/schemas/Projects.wsType'
                    additionalProperties: true
                    required:
                    - id
                    - name
                    type: object
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
    delete:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}
      summary: Delete a category in My Matters
      description: |
        Deletes the specified category ID.<br><br>
        The deleted category can contain any number of subcategories as long as none of those have items other than categories.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
      parameters:
      - *id004
    patch:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}
      summary: Update a category in My Matters
      description: |-
        Updates a category for the specified category ID.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: *id102
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id103
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/security:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/security
      summary: Get My Matters' category security
      description: |-
        Returns a list of users' and groups' default security of a My Matters' category.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-security
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/security
      summary: Update My Matters' category security
      description: |-
        Updates default security of a My Matters' category.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_security
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                JSON app extension profile. This must be valid JSON, but need not be complete.
              example:
                include:
                - access_level: full_access
                  id: ACASE
                  type: user
                - access_level: read
                  id: ALL LITIGATION
                  type: group
                remove:
                - id: ALL BANKRUPTCY
                  type: group
                default_security: private
              type: object
              properties: *id100
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/move:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/move
      summary: Move My Matters category
      description: |-
        Moves the current category to the specified category or my-matters.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_move
      requestBody:
        content:
          application/json:
            schema:
              required:
              - destination_id
              type: object
              properties: &id1680
                destination_id:
                  type: string
                  description: |
                    Destination to move the category.

                    The possible values are:<br>
                    * **Destination ID**: ID of the category where the category should be moved.
                    * **my-matters**: indicates that the category should be moved to my-matters root.
                  example: "Active!123 | my-matters"
                destination_user_id:
                  type: string
                  description: |
                    The user ID of the destination my-matters.

                    This parameter is ignored if destination_id is Category ID.
                  default: userId in the URI
                  example: ACASE
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                required:
                - id
                - name
                type: object
                properties: &id381
                  category_type: *id104
                  database: *id105
                  default_security: *id106
                  edit_date: *id107
                  folder_type: *id108
                  has_documents: *id109
                  has_subfolders: *id110
                  id: *id111
                  is_container_saved_search: *id112
                  is_content_saved_search: *id113
                  is_external: *id114
                  is_external_as_normal: *id115
                  name: *id116
                  owner: *id117
                  owner_description: *id118
                  parent_id: *id119
                  view_type: *id120
                  wstype: *id121
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/children:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/children
      summary: Get category children in My Matters
      description: |
        Gets the children for a category ID within My Matters for a container other than at the root level of My Matters.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of containers from the root level of My Matters, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/children`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_children
      parameters:
      - *id004
      - name: children_type
        in: query
        description: |
          Specifies the type of children to return.

          |Value|Description|
          |:---|:---|
          |categories|Returns categories.|
          |workspaces|Returns (shortcuts to) workspaces.|
          |all|Returns categories or (shortcuts to) workspaces. This is the default value.|
        schema:
          type: string
          default: all
          example: all, categories, workspaces
      - *id011
      - *id006
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
          example: -300
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                      - anyOf:
                        - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                        - anyOf:
                          - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
                          - $ref: '#/components/schemas/Projects.category'
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9454
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Andrew Case - Personal
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      id: Active!6780
                      subtype: work
                      wstype: workspace
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: workspace_shortcut
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9435
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: _Benefits
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      folder_type: regular
                      id: Active!9434
                      subtype: O
                      wstype: folder
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: folder_shortcut
                  - database: Active
                    folder_type: tab
                    has_documents: true
                    has_subfolders: true
                    id: Active!261821
                    name: Customized
                    parent_id: Active!9014
                    wstype: folder
                  - name: 中國國際航空公司 [Itinerary]
                    parent_id: '13'
                    id: Active!34664
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!78886.1
                      type: NOTES
                      wstype: document
                    wstype: document_shortcut
                  - name: Ajuba Law 2018 Firm Holidays
                    parent_id: '23'
                    id: Active!7553
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!33021.1
                      type: WORDX
                      wstype: document
                    wstype: document_shortcut
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/shortcuts:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/shortcuts
      summary: Create category in My Matters
      description: |-
        Creates a shortcut to a document, folder, or workspace.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "id": "Active!1024.1",
                  "name": "Shortcut to the Document"
                }
              required:
              - id
              - name
              type: object
              properties: *id122
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
        401: *id002
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/operations:
    description: |-
      None
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/operations
      summary: Get My Matters' category operations
      description: |-
        Gets the operations the current user is allowed to perform on the category.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    add_categories: true
                    add_shortcuts: true
                    change_name: true
                    modify: true
                    remove: true
                    move: true
                    remove_categories: true
                    remove_shortcuts: true
                    set_default_security: true
                    set_security: true
                    update_content_shortcut: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
                required:
                - data
                type: object
                properties: &id382
                  data:
                    required:
                    - add_categories
                    - add_shortcuts
                    - change_name
                    - modify
                    - remove
                    - remove_categories
                    - remove_shortcuts
                    - set_default_security
                    - set_security
                    - update_content_shortcut
                    type: object
                    properties:
                      add_categories:
                        type: boolean
                        description: |
                          Indicates the user can create a new category.<br><br>
                          If `true`, the user can create a new category.<br>
                          If `false`, the user cannot create a new category.<br><br>
                          If omitted, the value is `false`.
                      add_shortcuts:
                        type: boolean
                        description: |
                          Indicates the user can create shortcuts.<br><br>
                          If `true`, the user can create shortcuts.<br>
                          If `false`, the user cannot create shortcuts.<br><br>
                          If omitted, the value is `false`.
                      change_name:
                        type: boolean
                        description: |
                          Indicates the user can change the name of a category.<br><br>
                          If `true`, the user can change the name of a category.<br>
                          If `false`, the user cannot change the name of a category.<br><br>
                          If omitted, the value is `false`.
                      modify:
                        type: boolean
                        description: |
                          Indicates the user can modify the content of a category.<br><br>
                          If `true`, the user can modify the content of a category.<br>
                          If `false`, the user cannot modify the content of a category.<br><br>
                          If omitted, the value is `false`.
                      remove:
                        type: boolean
                        description: |
                          Indicates the user can remove content from a category.<br><br>
                          If `true`, the user can remove content from a category.<br>
                          If `false`, the user cannot remove content from a category.<br><br>
                          If omitted, the value is `false`.
                      move:
                        type: boolean
                        description: |
                          Indicates the user can move a category.<br><br>
                          If `true`, the user can move a category.<br>
                          If `false`, the user cannot move a category.<br><br>
                          If omitted, the value is `false`.
                      remove_categories:
                        type: boolean
                        description: |
                          Indicates the user can delete an existing category.<br><br>
                          If `true`, the user can delete an existing category.<br>
                          If `false`, the user cannot delete an existing category.<br><br>
                          If omitted, the value is `false`.
                      remove_shortcuts:
                        type: boolean
                        description: |
                          Indicates the user can remove shortcuts to other objects from a category.<br><br>
                          If `true`, the user can remove shortcuts to other objects from a category.<br>
                          If `false`, the user cannot remove shortcuts to other objects from a category.<br><br>
                          If omitted, the value is `false`.
                      set_default_security:
                        type: boolean
                        description: |
                          Indicates the user can set the default security on a category.<br><br>
                          If `true`, the user can set the default security on a category.<br>
                          If `false`, the user cannot set the default security on a category.<br><br>
                          If omitted, the value is `false`.
                      set_security:
                        type: boolean
                        description: |
                          Indicates the user can set the security on a category.<br><br>
                          If `true`, the user can set the security on a category.<br>
                          If `false`, the user cannot set the security on a category.<br><br>
                          If omitted, the value is `false`.
                      update_content_shortcut:
                        type: boolean
                        description: |
                          Indicates the user can update the target of the shortcut.<br><br>
                          If `true`, the user can update the target of the shortcut.<br>
                          If `false`, the user cannot update the target of the shortcut.<br><br>
                          If omitted, the value is `false`.
                      default_security_values:
                        type: array
                        items:
                          enum: ["private", "view", "public", "inherit"]
                          type: string
                        description: |
                          Indicates the default security setting.<br>

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or item inherits security settings from its parent container.|
                          |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                          |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                    additionalProperties: true
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/categories:
    description: |-
      None
    post:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-categories-{categoryId}-categories
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/categories
      summary: Create subcategory in My Matters
      description: |
        Creates a subcategory under the My Matters folder.<br><br>
        The My Matters folder can contain categories.
        A category is a container that holds workspaces and other categories.
        This allows for better organization among workspaces in My Matters.<br><br>
        A category contained inside another category is called a subcategory.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a category at the root level of the My Matters folder, see POST `/customers/{customerId}/libraries/{libraryId}/my-matters/categories`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_categories_{categoryId}_categories
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: *id102
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id103
                additionalProperties: false
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/children:
    description: |
      My Matters contains shortcuts to workspaces that are selected by the user.
      It is used to navigate to frequently used workspaces.<br>

      Users can save shortcuts to those workspaces.
      There can be additional subfolders, called categories, to better organize the user’s links.<br>

      My Matters workspaces are explicitly bookmarked by the user.
      Unlike a "recently used" list, no items are automatically included in My Matters.<br>

      Each category returned must be queried individually if additional information is required, such as for nested categories or documents.
      To return a list of children from other containers, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`
    get:
      tags:
      - My Matters
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-matters-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/children
      summary: Get My Matters' children
      description: |
        Returns a list of children from the root level of My Matters.<br><br>
        Children are:<br>
        * Categories. A category is a container. It is the only container allowed in My Matters, and they can be nested inside other categories.
        * Shortcuts. These include shortcuts to documents, containers, and workspaces.

        See the parameter `children_type` for a complete list of children types.<br>

        Each category returned must be queried individually if additional information is required, such as for nested categories or documents.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of categories at location other than the root level of My Matters, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories/{categoryId}/children`
        To return a list of children from other containers, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-matters_children
      parameters:
      - *id004
      - name: libraries
        in: query
        description: |
          Specifies which libraries a shortcut to a workspace points to.<br><br>
          Multiple libraries can be specified using a comma-separated list.
          This library names are case insensitive, match whole words only, and the wildcard character (&ast;) is not supported.
          If empty or omitted, it returns all items from specified endpoint parameter library, and is not dependent on where the shortcut points to.
        schema:
          type: string
      - *id011
      - *id006
      - *id007
      - name: type
        in: query
        description: |
          Specifies the type of children to return.<br><br>
          The following are allowed values:<br>

          |Value|Description|
          |:---|:---|
          |categories|Returns categories.|
          |workspaces|Returns (shortcuts to) workspaces.|
          |all|Returns categories and shortcuts to workspaces.|
        schema:
          enum: [categories, workspaces, all]
          default: 'all'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2019-03-17T14:09:13Z'
                    id: active!258137
                    name: Internal Matters
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active!231248
                    target:
                      database: active
                      id: active!14696
                      wstype: workspace
                    wstype: workspace_shortcut
                  total_count: 1
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-favorites:
    description: |-
      !include ./raml/raml/snippets/my-favorites-my-matters.txt
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-favorites/admin-import:
    description: |-
      None
    post:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-my-favorites-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/users/{userId}/my-favorites/admin-import
      summary: Import into user's My Favorites
      description: |
        Creates or updates categories, and shortcuts to documents or containers, in the specified user's My Favorites.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: NRTADMIN. <br>
        That means, to execute this request a user must be a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available only for specific environments.<br>
        Prior to executing this request, execute GET `/customers/{customerId}/features` to check the value of `my_favorites_admin_import` field.<br>
        If `my_favorites_admin_import` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The request body parameter `parent_id` can be specified to update an existing category.
        * For an object, only one shortcut can be created in My Favorites. However, additional shortcuts to the same object can be created in categories.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_users_{userId}_my-favorites_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                categories:
                - name: Litigation
                - id: Active_uk!1234
                  name: Banking
                  owner: ACTIVE_NRTADMIN
                shortcuts:
                - name: Internal Matters
                  target_id: Active_uk!14696
                  wstype: workspace
                - id: Active_uk!8385
                  name: Affidavit.docx
                  owner: ACTIVE_NRTADMIN
                  target_id: Active_uk!2111592287.3
                  wstype: document
              properties: &id1171
                shortcuts:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projects.myFavoritesShortcutAdminImportRequest'
                  description: |
                    Specifies the list of workspace, folder, and/or document shortcuts to be created or updated.
                parent_id:
                  type: string
                  description: |
                    Specifies the ID of the category to be updated.

                    If specified, the request points to the category. That is, the shortcuts in the request body are created
                    or updated in this category instead of the root level of My Favorites.
                    If omitted, the request is applied at the root of My Favorites.
                categories: *id123
                import_id: *id124
              additionalProperties: true
              type: object
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: ''
                    task_id: ''
                    status: completed
                    categories:
                    - category_type: my_favorites
                      database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2020-05-05T17:54:43.331Z'
                      effective_security: full_access
                      folder_type: category
                      has_documents: true
                      has_subfolders: false
                      id: ACTIVE_UK!1224376162
                      inherited_default_security: private
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      name: Litigation
                      owner_description: Andrew Case
                      owner: ACASE
                      parent_id: ACTIVE_UK!9014
                      view_type: document
                      wstype: folder
                    - category_type: my_favorites
                      database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2020-05-05T17:54:43.888Z'
                      effective_security: full_access
                      folder_type: category
                      has_documents: true
                      has_subfolders: false
                      id: ACTIVE_UK!1234
                      inherited_default_security: private
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      name: Banking
                      owner_description: Andrew Case
                      owner: ACASE
                      parent_id: ACTIVE_UK!9014
                      view_type: document
                      wstype: folder
                    shortcuts:
                    - database: ACTIVE_UK
                      default_security: inherit
                      edit_date: '2019-03-17T14:09:13Z'
                      id: active!258137
                      name: Internal Matters
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: active!231248
                      target:
                        database: ACTIVE_UK
                        id: ACTIVE_UK!14696
                        wstype: workspace
                      wstype: workspace_shortcut
                    - database: ACTIVE_UK
                      folder_id: 9014
                      id: ACTIVE_UK!8385
                      iwl: iwl:dms=atlas.imanage.com&&lib=Active&&num=2111592287&&ver=3
                      name: Affidavit.docx
                      target:
                        database: ACTIVE_UK
                        document_number: 2111592287
                        id: ACTIVE_UK!2111592287.3
                        type: DOCX
                        version: 3
                        wstype: document
                      wstype: document_shortcut
                required:
                - data
                type: object
                properties: &id1169
                  data:
                    properties:
                      categories:
                        type: array
                        description: Indicates an array of categories
                        items:
                          $ref: '#/components/schemas/Projects.category'
                      shortcuts:
                        type: array
                        description: Indicates an array of document shortcuts, folder
                          shortcuts, and/or workspace shortcuts.
                        items:
                          anyOf:
                          - $ref: '#/components/schemas/Projects.Shortcuts.documentShortcut'
                          - anyOf:
                            - $ref: '#/components/schemas/Projects.Shortcuts.folderShortcut'
                            - $ref: '#/components/schemas/Projects.Shortcuts.workspaceShortcut'
                      import_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      task_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      status:
                        enum: [queued, completed, failed]
                        type: string
                        description: |-
                          Indicates the status of import task.

                          |Status|Description|
                          |:---|:---|
                          | queued   | The import is in progress and in the queue.|
                          | completed| The import has completed.|
                          | failed   | The import has failed and needs investigation.|
                    additionalProperties: true
                    required:
                    - status
                    type: object
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/groups:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-groups
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups
      summary: Get a user's library groups
      description: |
        Gets all library groups to which the user belongs.<br>
        The request does not return global groups.

        Each library can have mulitple groups for different types of users.
        A user can be a member of multiple groups within the same library.
        For more information, see the <a href="#tag--Library-Groups">Library Groups</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get global groups that the user is a member of, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>.
        * To get global groups that the user is not a member of, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups/out-of">GET /customers/{customerId}/users/{userId}/groups/out-of</a>.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_groups
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Matters Related Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  - database: ACTIVE_UK
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Case Management Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  total_count: 2
                required:
                - data
                type: object
                properties: &id125
                  data:
                    type: array
                    description: Array of library groups
                    items:
                      $ref: '#/components/schemas/groupLibrary'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
      - &id126
        name: alias
        in: query
        description: |+
          Filters groups based on group alias.<br>
          The group alias is the group `id`.

          * The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.
          * If no wildcard character is included, only the group that matches the exact string is returned.
          * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - &id127
        name: enabled
        in: query
        description: |
          Filters groups based on their enabled status.

          If `true`, only enabled groups are returned.<br>
          If `false`, only disabled groups are returned.<br>
          If omitted, both enabled and disabled groups are returned.
        schema:
          type: boolean
      - &id128
        name: external
        in: query
        description: |
          Filters groups based on their `is_external` value.

          If `true`, only external groups are returned.<br>
          If `false`, only internal groups are returned.<br>
          If omitted, both internal and external groups are returned.
        schema:
          type: boolean
      - &id129
        name: full_name
        in: query
        description: |+
          Filters groups based on the name.

          * The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.
          * To match partial fields, include the asterisk wildcard before or after the query value.
          * If no wildcard character is included, only the group that matches the exact string is returned.
          * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - &id130
        name: last_sync_ts
        in: query
        description: |
          Filters groups based on  on their last sync time.

          The last sync time is the date when it was last synchronized with an external directory (such as LDAP or Microsoft
          Active Directory). The parameters `last_sync_ts`  and `last_sync_ts_end` can be used to form a date/time range.
          For more information, see the parameter `last_sync_ts_end`.

          * If omitted, the last sync time is not used for filtering results.
          * If both parameters are used, items whose last sync time falls within the range will be returned.
          * If only `last_sync_ts` is provided, then it does not act as the start of a range, but as an exact timestamp filter. Only items whose last sync timestamp matches the specified value are returned.
          * If only `last_sync_ts_end` is provided, then only items with the last sync time before the specified value are returned.
        schema:
          type: string
      - &id131
        name: last_sync_ts_end
        in: query
        description: |
          Filters groups based on the upper date/time limit for the last sync time.

          Returns the items that are synced between `last_sync_ts` and `last_sync_ts_end`.<br>
          The last sync time is the date when it was last synchronized with an external directory (such as LDAP or Microsoft
          Active Directory). The parameters `last_sync_ts` and `last_sync_ts_end` can be used to form a date/time range.

          * If omitted, a date/time range is not used, and uses only the `last_sync_ts`, if available.
          * If both parameters are used, the last sync time that falls between these values inclusively are returned.
          * If only `last_sync_ts` is provided, then it does not act as the start of a range, but as an exact timestamp filter. Only items whose last sync timestamp matches the specified value are returned.
          * If only `last_sync_ts_end` is provided, then only items with the last sync time before the specified value are returned.
        schema:
          type: string
      - *id011
      - &id132
        name: nos
        in: query
        description: |-
          Filters groups based on the type of group.

          The following are valid nos values for groups:

          | Value | Description |
          | :-: | - |
          | 2 | Group for virtual users.|
          | 6 | Group for enterprise users. |
        schema:
          type: string
      - *id006
      - &id133
        name: sync_id
        in: query
        description: |-
          Filters groups based on the ID from an external directory (such as AD FS), which is used for group profile synchronization.
        schema:
          type: string
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/users/{userId}/groups/out-of:
    description: |-
      None
    get:
      tags:
      - Library Users
    #- customers-{customerId}-libraries-{libraryId}-users-{userId}-groups-out-of
  #summary: GET /customers/{customerId}/libraries/{libraryId}/users/{userId}/groups/out-of
      summary: Get library groups a user in not member of
      description: |
        Gets all library groups to which the user does not belong.<br>
        The request does not return global groups.

        For more information, see <a href="#tag--Library-Groups">Library Groups</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of global groups that the user is a member of, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups">GET /customers/{customerId}/users/{userId}/groups</a>.
        * To get a list of global global groups that the user is not a member of, see <a href="#get-/work/api/v2/customers/-customerId-/users/-userId-/groups/out-of">GET /customers/{customerId}/users/{userId}/groups/out-of</a>.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_users_{userId}_groups_out-of
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Matters Related Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  - database: ACTIVE_UK
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Case Management Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  total_count: 2
                required:
                - data
                type: object
                properties: *id125
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id126
      - *id127
      - *id128
      - *id129
      - *id130
      - *id131
      - *id011
      - *id132
      - *id006
      - *id133
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/userId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/type-mappings:
    description: |
      This API is intended for clients that use KeyView to identify file types.<br>
      It can be used for creating and retrieving associations (mappings) between KeyView-identified numeric file type IDs and Work document types.<br>
    get:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-type-mappings
  #summary: GET /customers/{customerId}/libraries/{libraryId}/type-mappings
      summary: Get file type mappings
      description: |
        Gets all the file type mappings that match the filter criteria specified by query parameters.<br><br>
        If no filter criteria are specified, then all available type mappings are returned.<br><br>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_type-mappings
      parameters:
      - *id004
      - name: app_extension
        in: query
        description: |+
          The document's file extension.<br><br>
          Used for filtering results.<br>
          Multiple values are not allowed.<br>
          This parameter is case insensitive and matches whole word. The wildcard character (&ast;) is not supported.<br>
          Query parameters `app_extension` and `doc_type_id` cannot be provided together.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          example: PDF
      - *id083
      - name: doc_type_id
        in: query
        description: |+
          The document's type alias.<br><br>
          Used for filtering results.<br>
          Multiple values are not allowed.<br>
          This parameter is case insensitive and matches whole word. The wildcard character (&ast;) is not supported.<br>
          Query parameters `app_extension` and `doc_type_id` cannot be provided together.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          example: ACROBAT
      - name: kv_detected_value
        in: query
        description: |
          The document's KeyView detected format id.<br><br>
          Used for filtering results.<br>
          Multiple values are not allowed.<br>
        schema:
          type: integer
          example: 238
      - *id134
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: FI_PNG
                    kv_detected_value: 238
                    description: Portable Network Graphics (PNG)
                    database: ACTIVE
                  - id: FI_TIFF
                    kv_detected_value: 1501
                    description: Tagged Image File Format
                    database: ACTIVE
                    doc_type:
                      app_extension: TIF
                      auto_detect: true
                      database: ACTIVE
                      description: Tagged Image File Format
                      dms_extension: '%V'
                      hipaa: false
                      id: TIFF
                      indexable: true
                  cursor: '98723488549884435'
                required:
                - data
                type: object
                properties: &id1560
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Types.typeMapping'
                  cursor:
                    type: string
                    description: |
                      The next position of the cursor returned by the server. <br><br>
                      Empty cursor indicates end of the records.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                    example: "98723488549884435"
                additionalProperties: true
        401: *id002
        404: *id005
    post:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-type-mappings
  #summary: POST /customers/{customerId}/libraries/{libraryId}/type-mappings
      summary: Create a file type mapping
      description: |-
        Creates a new file type mapping.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_type-mappings
      requestBody:
        content:
          application/json:
            schema:
              example:
                kv_detected_value: 238
                app_extension: png
              required:
              - kv_detected_value
              - app_extension
              type: object
              properties: &id1558
                kv_detected_value:
                  type: integer
                  description: |-
                    Indicates the KeyView detected format id.
                app_extension:
                  maxLength: 8
                  type: string
                  description: |
                    File extension.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
              additionalProperties: true
              description: |-
                Represents a type map creation request.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: FI_TIFF
                    kv_detected_value: 1501
                    description: Tagged Image File Format
                    database: ACTIVE
                    doc_type:
                      app_extension: TIF
                      auto_detect: true
                      database: ACTIVE
                      description: Tagged Image File Format
                      dms_extension: '%V'
                      hipaa: false
                      id: TIFF
                      indexable: true
                required:
                - data
                type: object
                properties: &id1559
                  data:
                    $ref: '#/components/schemas/Types.typeMapping'
                additionalProperties: true
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/types:
    description: |-
      None
    get:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-types
  #summary: GET /customers/{customerId}/libraries/{libraryId}/types
      summary: Get file types
      description: |
        Gets all the file types that match the specified search criteria.<br><br>
        If the search criteria is omitted, it returns all available file types.<br><br>
        Documents or files may be opened in specific applications so that they can be read or edited.
        Many of the common types of files come preconfigured during installation.
        It is likely that no further system modifications are required.
        However, organizations may have their own custom types of files, or may want to have a different application to open them.
        The process of associating a document or file type to an application that can read it uses two iManage resources: File type, and file handler.<br>

        **File type**
        A File type matches a document or file application extension to an application type.
        The application extension is the last part of a file name, such as .doc for Microsoft Word document, or .pdf for an Adobe Acrobat document.
        Every document or file is requires a file type.
        That means .doc, docx, .docm, and .dot, as examples, each will have a file type.
        The file type resource also associates a file extension with a file handler type.<br>

        **File handler**
        A file handler associates a file handler type with an application.
        Every application used to open a document or file requires a file handler resource.
        One application may be used to open one or more file types.
        For example, the file types .doc, docx, .docm, and .dot can all be opened by a single application, Microsoft Word.<br>

        The following request illustrates this.
        The two resources, the file type and the file handler, are listed below.

        * The two significant fields for the file type are `app_extension`, and the `id`. The `app_extension` associates the value DOC with the file handler `id` of WORD.

        * The two significant fields for the file handler are the `id` and `location`. The `id` associates the application type with the `location` of the application.

        **File type resource**
        Two file types are shown, and both associate `app_extension`, which are DOC and DOCM, to the file handler WORD.<br>
        The sample request GET `/customers/{customerId}/libraries/active/types?app_extension=doc*` returns a list like:

        ```
        {
          "data": [
            {
                "app_extension": "DOC",
                "auto_detect": true,
                "database": "active",
                "description": "Microsoft Word document",
                "dms_extension": "%V",
                "hipaa": false,
                "id": "WORD",
                "indexable": true,
                "ssid": 9932985782931
            }
          ]
        }
        ```

        **File handler resource**
        The single file handler shown below associates `id`, which is WORD, to the location of the application.<br>
        The sample request GET `/customers/{customerId}/libraries/active/appsetup/word` returns a list like:

        ```
        {
          "data": [
            {
              "id": "WORD",
              "location": "C:\\Program Files\\Microsoft Office\\Office\\WINWORD.EXE",
              "database": "active",
              "dde": true,
              "dde_app_name": "WINWORD",
              "dde_open": "[REM _DDE_Direct][FileOpen(\"??\")]",
              "dde_print": "[FileOpen.Name=\"??\"][FilePrint 0][DocClose 2]",
              "dde_print_1": "[FileOpen.Name=\"??\"][FilePrint 0][FileExit 2]",
              "dde_read_open": "[FileOpen.Name=\"??\",.ReadOnly = 1]",
              "dde_topic": "SYSTEM",
              "integration_mode": "N",
              "name": "Microsoft Word",
              "primary": true
            }
          ]
        }
        ```
        <br>
        The diagram below illustrates the file type-file handler relationship.
        The file type resource is on the left.
        The file handler resource is on the right.<br>
        Step 1 ties the `app_extension` of DOC to the `id` of WORD.<br>
        Step 2 ties the file type's `id` of WORD to the file handler's `id` of WORD.
        Those two IDs must match.<br>
        Step 3 allows the file handler in turn to tie the `id` to a `location` of an executable that will open documents or files of the `app_extension` type.<br>

        ![The file type-file handler relationship](https://docs.imanage.com/sdk/FileType_Filehandler.jpeg)
      operationId: GET_customers_{customerId}_libraries_{libraryId}_types
      parameters:
      - *id004
      - name: alias
        in: query
        description: |+
          The document type's alias. The alias is the `id` field.<br>

          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.<br>

          If wildcard character is not included, it matches whole fields only.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          example: ACROBAT
      - name: app_extension
        in: query
        description: |+
          Returns the document types with the specified app extension property.<br><br>
          This is an exact word sort, so app_extension must match the parameter.
          The search is not case sensitive.
          The wildcard character (&ast;) can be used before and after the specified text.
          For example, *\*ennifer*, *jennif\**, and *\*ennif\** all match *Jennifer*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: auto_detect
        in: query
        description: |
          Indicates if iManage Work Server can automatically recognize a document type and map it to the corresponding file type.<br><br>
          If `true`, returns the auto detectable types.<br>
          If `false`, does notreturn auto detectable types.
        schema:
          type: boolean
      - name: description
        in: query
        description: |+
          Returns the document types with the specified description property.<br><br>
          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.<br>

          If wildcard character is not included, it matches whole fields only.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: dms_extension
        in: query
        description: |+
          Identifies the filename extension that iManage Work uses to store a document of a type on the file server.<br><br>
          The default value is %V.

          If %V is entered as the DMS Extension, iManage uses the document’s version number as the file name extension.
          For example, the document number is 157 and the document version is 2.
          If %V is the DMS extension for the document type, then iManage will store the file as 157.2 on the file server.<br><br>
          This parameter is not applicable for all iManage Work environments.
          For more information, contact your iManage Work system administrator.

          Minimum length: 0
          Maximum length: 8
          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: hippa
        in: query
        description: |-
          Returns the document types with the specified HIPAA value.
        schema:
          type: boolean
      - name: indexable
        in: query
        description: |-
          If `true`, returns the indexable types.
        schema:
          type: boolean
      - *id011
      - *id006
      - name: query
        in: query
        description: |+
          Search string that must be found in the alias or description of types.<br><br>
          If wildcard character (&ast;) is not added, all partial matches are returned.<br>

          The wildcard character (&ast;) is also supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields as required, include the asterisk wildcard before or after the query value.<br>

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - app_extension: BAT
                    auto_detect: false
                    database: ACTIVE
                    description: BAT
                    dms_extension: '%V'
                    hipaa: false
                    id: BAT
                    ssid: 99992894732623
                  - app_extension: ONM
                    auto_detect: false
                    database: ACTIVE
                    description: ONM
                    dms_extension: '%V'
                    hipaa: false
                    id: ONM
                    ssid: 99992894732624
                  - app_extension: AW
                    auto_detect: false
                    database: ACTIVE
                    description: AW
                    dms_extension: '%V'
                    hipaa: false
                    id: AW
                    ssid: 99992894732625
                  - app_extension: ZIP
                    auto_detect: false
                    database: ACTIVE
                    description: ZIP
                    dms_extension: '%V'
                    hipaa: false
                    id: ZIP
                    ssid: 99992894732626
                  - app_extension: DXF
                    auto_detect: false
                    database: ACTIVE
                    description: DXF
                    dms_extension: '%V'
                    hipaa: false
                    id: DXF
                    ssid: 99992894732627
                  total_count: 115
                required:
                - data
                type: object
                properties: &id1550
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        ssid:
                          type: number
                          description: |-
                            Indicates a unique ID assigned by iManage Work to the document type.
                        app_extension: &id1536
                          type: string
                          description: |
                            Indicates the application extension for the document's type.<br><br>
                            The application extension is the file name's suffix such as doc, docx, or pdf.
                            The initial period is not used. For example, use *doc*, not *.doc*.<br><br>
                            Maximum length: 8.
                        id: &id1537
                          type: string
                          description: |-
                            The document type ID.
                        database: &id1538
                          type: string
                          description: |-
                            Name of the library (formerly called a database) where the document type is stored.
                        description: &id1539
                          type: string
                          description: |-
                            Full name of the document type.
                        dms_extension: &id1540
                          type: string
                          description: |
                            Identifies the file name extension that is part of the name that iManage Work uses to store a document of a type on the file server.<br><br>
                            The default value is %V.
                            If %V is entered as the DMS Extension, iManage uses the document’s version number as the file name extension.
                            For example, the document number is 157 and the document version is 2.
                            If %V is the DMS extension for the document type, then iManage stores the file as 157.2 on the file server.<br><br>
                            Maximum length: 8.
                        hipaa: &id1541
                          type: boolean
                          description: |
                            Indicates the document is encrypted.<br><br>
                            If `true`, the document is encrypted.<br>
                            If `false`, the document is not encrypted.

                            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                        auto_detect: &id1542
                          type: boolean
                          description: |
                            Indicates if iManage Work Server can automatically recognize a document type and map it to the corresponding file type.<br><br>
                            If `true`, detection will occur when opening a document of that type.<br>
                            If `false`, detection will not occur when opening a document of that type.
                      required:
                      - app_extension
                      - id
                      - database
                      - description
                      - dms_extension
                      - hipaa
                      additionalProperties: true
                      description: |-
                        Represents a document type.
                    description: |-
                      Array of document types.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
    post:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-types
  #summary: POST /customers/{customerId}/libraries/{libraryId}/types
      summary: Create a file type
      description: |-
        Creates a new file type.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_types
      requestBody:
        content:
          application/json:
            schema:
              example:
                app_extension: BAT
                auto_detect: false
                description: BAT
                dms_extension: '%V'
                hipaa: false
                id: BAT
              required:
              - app_extension
              - description
              - dms_extension
              - id
              type: object
              properties: &id551
                app_extension: &id1543
                  maxLength: 8
                  type: string
                  description: |+
                    Indicates the application extension for the document's type.<br><br>
                    The application extension is the file name's suffix such as doc, docx, or pdf.
                    The initial period is not used. For example, use *doc*, not *.doc*.<br><br>
                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                database: &id1544
                  type: string
                  description: |-
                    Library in which to store the new document type. Only used by multi-library URIs.
                description: &id1545
                  maxLength: 254
                  type: string
                  description: |+
                    Full name of the document type. Required for type creation.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                dms_extension: &id1546
                  maxLength: 8
                  type: string
                  description: |+
                    Identifies the file name extension that iManage Work uses to store a document of a type on the file server.<br><br>
                    The default value is %V.
                    If %V is entered as the DMS Extension, iManage uses the document’s version number as the file name extension.
                    For example, the document number is 157 and the document version is 2.
                    If %V is the DMS extension for the document type, then iManage stores the file as 157.2 on the file server.<br><br>
                    Required for type creation.<br><br>

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                hipaa: &id1547
                  type: boolean
                  description: |-
                    Specifies the document is to be encrypted.<br><br>
                    If `true`, the document is to be encrypted.<br>
                    If `false`, the document is not to be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
                  default: false
                id: &id1548
                  maxLength: 32
                  type: string
                  description: |+
                    The document type ID.<br><br>
                    The value must be unique from among library's document types.
                    Required for type creation.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                auto_detect: &id1549
                  type: boolean
                  description: |
                    Indicates if iManage Work Server can automatically recognize a document type and map it to the corresponding file type.<br><br>
                    If `true`, sets the type to be able to return auto detectable types.<br>
                    If `false`, sets the type not to be able to return auto detectable types.
                  default: false
              additionalProperties: true
              description: |-
                Represents a document type creation request.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/types/{aliasId}:
    description: |-
      None
    get:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-types-{aliasId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/types/{aliasId}
      summary: Get document types
      description: |
        Gets the document type for the specified alias ID (also called type ID).<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get all the document types for a specified library, see GET `/customers/{customerId}/libraries/{libraryId}/types`<br>
        To delete a document type from a specified library, see DELETE `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`<br>
        To update or to edit a document type from a specified library, see PUT `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_types_{aliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    app_extension: doc
                    auto_detect: false
                    database: ACTIVE
                    description: Document
                    dms_extension: '%V'
                    hipaa: false
                    id: BAT
                required:
                - data
                type: object
                properties: &id550
                  data:
                    $ref: '#/components/schemas/Types.documentType'
                additionalProperties: true
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-types-{aliasId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/types/{aliasId}
      summary: Update a document type
      description: |
        Updates the document type for the specified alias ID (also called type ID).<br>

        As with a PUT request, all request body parameters replace their existing values.
        That means missing request body parameters will remove existing fields.
        For this request, the parameters `app_extension` and `description` can be incidentally deleted if those are not included in the request body.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get all the document types for a specified library, see GET `/customers/{customerId}/libraries/{libraryId}/types`<br>
        To get a document type for a specified library, see GET `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`<br>
        To delete a document type from a specified library, see DELETE `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`
        is: [authenticated, 404-error]
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_types_{aliasId}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: &id1551
                app_extension: &id1552
                  maxLength: 8
                  type: string
                  description: |+
                    The file's application extension for the document type.<br><br>
                    The application extension is the file name's suffix such as doc, docx, or pdf.
                    The initial period is not used. For example, use *doc*, not *.doc*.<br><br>
                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                description: &id1553
                  maxLength: 254
                  type: string
                  description: |
                    Full name of the document type.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dms_extension: &id1554
                  maxLength: 8
                  type: string
                  description: |+
                    Identifies the file name extension that iManage Work uses to store a document of a type on the file server.<br><br>
                    The default value is %V. If %V is entered as the DMS Extension, iManage uses the document’s version number as the file name extension.
                    For example, the document number is 157 and the document version is 2.
                    If %V is the DMS extension for the document type, then iManage stores the file as 157.2 on the file server.<br><br>
                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                hipaa: &id1555
                  type: boolean
                  description: |-
                    Indicates the document is encrypted.<br><br>
                    If `true`, the document is encrypted.<br>
                    If `false`, the document is not encrypted.

                    Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                    Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                    This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                auto_detect: &id1556
                  type: boolean
                  description: |
                    Indicates if iManage Work Server can automatically recognize a document type and map it to the corresponding file type.<br><br>
                    If `true`, returns the auto detectable types.<br>
                    If `false`, does not return the auto detectable types.<br>
                    If omitted, returns items of either auto detectable type.
              additionalProperties: true
              description: |-
                Represents a document type update request.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
    delete:
      tags:
      - File Types
    #- customers-{customerId}-libraries-{libraryId}-types-{aliasId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/types/{aliasId}
      summary: Delete a document type
      description: |
        Deletes a document type for the specified alias ID (also called type ID).<br><br>
        A successfully deleted document type request does not return a response object.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get all the document types for a specified library, see GET `/customers/{customerId}/libraries/{libraryId}/types`<br>
        To get a document type for a specified library, see GET `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`<br>
        To update or to edit a document type from a specified library, see PUT `/customers/{customerId}/libraries/{libraryId}/types/{aliasId}`
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_types_{aliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trustees:
    description: |-
      None
    get:
      tags:
      - Trustees
    #- customers-{customerId}-libraries-{libraryId}-trustees
  #summary: GET /customers/{customerId}/libraries/{libraryId}/trustees
      summary: Get trustees
      description: |-
        Gets a list of users or groups based on a query, which can be used to assign permissions in documents and workspaces.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_trustees
      parameters:
      - *id004
      - name: custom1
        in: query
        description: |-
          Restrict the results based on SPM rules for the client, if SPM is enabled.
        schema:
          type: string
      - name: custom2
        in: query
        description: |-
          Restrict the results based on SPM rules for the matter (requires client parameter), if SPM is enabled.
        schema:
          type: string
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Specifies a string to search for users or groups.

          ### Searching for users
          The user search is performed against the user fields `id`, `email`, and `fullname`.
          The value provided can contain multiple search terms, separated either by commas or spaces.
          A match is found if any of these user fields contain all the search terms in any order.

          The following example outlines some of the behaviours of the query parameter when attempting to search for a user:<br>

          **Sample user profile**
          - `id`: ACASE
          - `email`: acase@ajubalaw.com
          - `fullname`: Andrew Case

          | Query value | Result | Reason |
          | - | - | - |
          | case andrew | Match is found. | The `fullname` contains all search terms. |
          | drew case | Match is found. | The `fullname` contains all search terms. |
          | ajubalaw com acase | Match is found. | The `email` contains all search terms.|
          | case ajuba | Match is found. | The `email` contains all search terms.|
          | CASE | Match is found.| The `id`, `fullname`, and `email` contain the search term.|
          | ajubalaw andrew | No match is found. | Both `fullname` and `email` contain only one of the search terms.|

          ### Searching for groups
          The group search is performed against the group fields `id` and `fullname`.
          The multiple search strings provided are treated as a single contiguous search term.
          A match is found only if these group fields contain the search term in its entirety.

          The following example outlines some of the behaviours of the query parameter when attempting to search for a group:<br>

          **Sample group profile**
          - `id`: CONT_PARALEGAL
          - `fullname`: Paralegal Contractors

          | Query value | Result | Reason |
          | - | - | - |
          | cont | Match is found. | The `id` and `fullname` both contain the search term. |
          | cont_para | Match is found. | The `id` contains the search term. |
          | paralegal contractors | Match is found. | The `fullname` contains the search term. |
          | contractors paralegal | No match is found. | None of the group fields contain the search term. |
        schema:
          type: string
      - *id007
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Users.user'
                      - $ref: '#/components/schemas/Groups.group'
                  total_count:
                    type: integer
                    readOnly: true
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - full_name: 克衫裤骂人 克衫裤骂人
                    id: 克衫裤骂人
                    is_external: false
                    login: true
                    preferred_library: ACTIVE
                    user_id: 克衫裤骂人
                    user_nos: 2
                    userid: 克衫裤骂人
                  - full_name: Exchange Install Domain Servers
                    group_domain: cn=Microsoft Exchange System Objects,dc=ajubalaw,dc=com
                    group_id: $G33300-K52S129GTK0V
                    group_nos: 6
                    group_number: 101
                    groupid: $G33300-K52S129GTK0V
                    id: $G33300-K52S129GTK0V
                  - email: acase@ajubalaw.com
                    id: ACASE
                    is_external: false
                    location: Chicago
                    login: true
                    user_id: ACASE
                    user_nos: 2
                    userid: ACASE
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin:
    description: |
      The trash bin is a location that stores deleted documents.<br><br>
      It allows for recovery of documents that were accidentally deleted.<br>

      Users can delete documents only if they have the document delete privilege from their role.
      If a user deletes a document, it is moved to the trash bin.
      It becomes unavailable to users.
      However, it is not permanently deleted yet. Instead, it is stored in the trash bin indefinitely.<br>

      iManage Work system administrators manage the trash bin.
      The following actions must be performed manually:<br>

      |Action|Description|Minimum permissions level required|
      |:---|:---|:---|
      |Restore a document.|This recovers the document to its last version.|Tier 1|
      |Permanently purge a document.|This deletes the document from the trash bin and it cannot be recovered except through journaling. The iManage Work system does not automatically purge documents.|NRTADMIN|
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin/user/documents:
    description: |-
      None
    get:
      tags:
      - Trash
    #- customers-{customerId}-libraries-{libraryId}-trash-bin-user-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/trash-bin/user/documents
      summary: Get current user's deleted documents
      description: |
        Gets the deleted documents from the specified library of the currently signed in user.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        For a list of deleted documents for all users for the specified library, see GET `/customers/{customerId}/libraries/{libraryId}/trash-bin/documents`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_trash-bin_user_documents
      parameters:
      - *id004
      - &id137
        name: anywhere
        in: query
        description: |
          Filters documents based on the matching text found anywhere in the document's profile or its contents.
        schema:
          type: string
          example: litigation
      - name: ascending
        in: query
        description: |
          Specifies to return documents in the ascending order of document number.<br><br>
          If `true`, return documents in the ascending order of document number.<br>
          If `false`, documents are returned in the order they are found.
        schema:
          type: boolean
          default: false
      - &id138
        name: author
        in: query
        description: |-
          Filters documents based on the user ID of the author of the documents.
        schema:
          type: string
          example: ACASE
      - &id139
        name: body
        in: query
        description: |-
          Filters documents based on the matching text found in a document's content.
        schema:
          type: string
          example: litigation
      - &id140
        name: checked_out
        in: query
        description: |
          Filters documents based on the `checked_out` status.<br><br>
          If `true`, returns only checked out documents.<br>
          If `false`, returns only documents that are not checked out.<br>
          If omitted, returns documents regardless of whether they are checked out.
        schema:
          type: boolean
      - &id141
        name: comments
        in: query
        description: |-
          Filters documents based on the matching text found in the document profile's comments.
          * Partial matches are supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
          example: confidential
      - &id142
        name: create_date
        in: query
        description: |-
          Filters documents by create date, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id143
        name: create_date_from
        in: query
        description: |-
          Filters documents created on or after this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id144
        name: create_date_to
        in: query
        description: |-
          Filters documents created on or before this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - *id083
      - &id145
        name: custom1
        in: query
        description: |
          Filters documents based on the alias of the `custom1` property.<br>
          Specifies a property alias to match in this custom property.

          A property alias is an entry for that custom property.
          For example, `custom1` can be captioned as *Client*.
          It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
          These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

          * This search is not case-sensitive.
          * Partial matches are not supported.
          * The wildcard character (&ast;) is not supported.
        schema:
          type: string
          maxLength: 254
      - &id146
        name: custom10
        in: query
        description: |-
          Filters documents based on the alias of the `custom10` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id147
        name: custom11
        in: query
        description: |-
          Filters documents based on the alias of the `custom11` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id148
        name: custom12
        in: query
        description: |-
          Filters documents based on the alias of the `custom12` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id149
        name: custom13
        in: query
        description: |-
          Filters documents based on the value of the `custom13` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id150
        name: custom14
        in: query
        description: |-
          Filters documents based on the value of the `custom14` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id151
        name: custom15
        in: query
        description: |-
          Filters documents based on the value of the `custom15` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id152
        name: custom16
        in: query
        description: |-
          Filters documents based on the value of the `custom16` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id153
        name: custom17
        in: query
        description: |-
          Specifies a value or a range of values of the custom17 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
          | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
          | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
          | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id154
        name: custom18
        in: query
        description: |-
          Specifies a value or a range of values of the custom18 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
          | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
          | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
          | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id155
        name: custom19
        in: query
        description: |-
          Specifies a value or a range of values of the custom19 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
          | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
          | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
          | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id156
        name: custom2
        in: query
        description: |-
          Filters documents based on the alias of the `custom2` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id157
        name: custom20
        in: query
        description: |-
          Specifies a value or a range of values of the custom20 property to match.<br><br>

          |Symbol|Value|Description|
          |:---|:----|:---|
          | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
          | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
          | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
          | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
        schema:
          anyOf:
          - type: string
          - type: number
      - &id158
        name: custom21_from
        in: query
        description: |-
          Filters documents based on `custom21` values dated on or after this date (in ISO 8601 format).
        schema:
          type: string
      - &id159
        name: custom21_relative
        in: query
        description: |-
          Filters documents by `custom21` value, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id160
        name: custom21_to
        in: query
        description: |-
          Filters documents based on `custom21` values dated on or before this date (in ISO 8601 format).
        schema:
          type: string
      - &id161
        name: custom22_from
        in: query
        description: |-
          Filters documents based on `custom22` values dated on or after this date (in ISO 8601 format).
        schema:
          type: string
      - &id162
        name: custom22_relative
        in: query
        description: |-
          Filters documents by `custom22` value, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id163
        name: custom22_to
        in: query
        description: |-
          Filters documents based on `custom22` values dated on or before this date (in ISO 8601 format).
        schema:
          type: string
      - &id164
        name: custom23_from
        in: query
        description: |-
          Filters documents based on `custom23` values dated on or after this date (in ISO 8601 format).
        schema:
          type: string
      - &id165
        name: custom23_relative
        in: query
        description: |-
          Filters documents by `custom23` value, based on the specified date range.<br> The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id166
        name: custom23_to
        in: query
        description: |-
          Filters documents based on `custom23` values dated on or before this date (in ISO 8601 format).
        schema:
          type: string
      - &id167
        name: custom24_from
        in: query
        description: |-
          Filters documents based on `custom24` values dated on or after this date (in ISO 8601 format).
        schema:
          type: string
      - &id168
        name: custom24_relative
        in: query
        description: |-
          Filters documents by `custom24` value, based on the specified date range.<br> The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id169
        name: custom24_to
        in: query
        description: |-
          Filters documents based on `custom24` values dated on or before this date (in ISO 8601 format).
        schema:
          type: string
      - &id170
        name: custom25
        in: query
        description: |-
          Filters documents based on the value of the `custom25` property.
        schema:
          type: boolean
      - &id171
        name: custom26
        in: query
        description: |-
          Filters documents based on the value of the `custom26` property.
        schema:
          type: boolean
      - &id172
        name: custom27
        in: query
        description: |-
          Filters documents based on the value of the `custom27` property.
        schema:
          type: boolean
      - &id173
        name: custom28
        in: query
        description: |-
          Filters documents based on the value of the `custom28` property.
        schema:
          type: boolean
      - &id174
        name: custom29
        in: query
        description: |-
          Filters documents based on the alias of the `custom29` property.<br>
        schema:
          type: string
      - &id175
        name: custom3
        in: query
        description: |-
          Filters documents based on the alias of the `custom3` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id176
        name: custom30
        in: query
        description: |-
          Filters documents based on the alias of the `custom30` property.<br>
        schema:
          type: string
      - &id177
        name: custom4
        in: query
        description: |-
          Filters documents based on the alias of the `custom4` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id178
        name: custom5
        in: query
        description: |-
          Filters documents based on the alias of the `custom5` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id179
        name: custom6
        in: query
        description: |-
          Filters documents based on the alias of the `custom6` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id180
        name: custom7
        in: query
        description: |-
          Filters documents based on the alias of the `custom7` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id181
        name: custom8
        in: query
        description: |-
          Filters documents based on the alias of the `custom8` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id182
        name: custom9
        in: query
        description: |-
          Filters documents based on the alias of the `custom9` property.<br>
          * Partial matches are not supported.
          * The wildcard character (*) is not supported.
        schema:
          type: string
      - &id183
        name: document_number
        in: query
        description: |
          Filters documents based on their numeric identifier, known as a document number.<br><br>
          The document number appears as part of the document ID.
          For example, if the document ID is `active!72634.3`, the document number is 72634.<br>

          This filter supports specifying document numbers as follows:
          * A single value.
          * Multiple document numbers as a comma-separated list.
            For example, `document_number=7545,674332,6543`.
          * A value less than (<), greater than(>), less than or equal(<=), and greater than or equal (>=)
            For example, `document_number=<=7545`.
          * A range of document numbers. For example, `document_number=7545-674332`.
        schema:
          anyOf:
          - type: string
          - type: integer
          example: 72634 "72634" "7545,674332,6543"
      - &id184
        name: document_version
        in: query
        description: |
          Filters documents based on the document version number.<br><br>
          The document version number is the number of times a document has been edited.
          For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

          When specifying document version numbers, either a single value can be included (`document_number=1`), or
          a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).

          This filter supports specifying document versions as follows:
          * A single value.
          * Multiple document versions as a comma-separated list.
            For example, `document_version=2,5,8`.
          * A value less than (<), greater than(>), less than or equal(<=), and greater than or equal (>=)
            For example, `document_version=>=4`.
          * A range of document versions. For example, `document_version=2-5`.
        schema:
          anyOf:
          - type: string
          - type: integer
          example: 1 "1" "1,2"
      - &id185
        name: edit_date
        in: query
        description: |-
          Filters documents by edit date, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id186
        name: edit_date_from
        in: query
        description: |-
          Filters documents that were edited on or after this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id187
        name: edit_date_to
        in: query
        description: |-
          Filters documents that were edited on or before this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id188
        name: email_only
        in: query
        description: |
          Filters documents to include only emails and to exclude documents.<br><br>
          If `true`, only emails are included.<br>
          If `false`, include emails and documents.<br>

          To return only documents, see the `exclude_emails` parameter.
        schema:
          type: boolean
          default: false
      - &id189
        name: exclude_emails
        in: query
        description: |
          Filters documents to exclude emails.<br><br>
          If `true`, exclude emails and return only documents.<br>
          If `false`, include emails and documents.<br>

          To return only emails, see the `email_only` parameter.
        schema:
          type: boolean
          default: false
      - &id190
        name: exclude_shortcuts
        in: query
        description: |
          Filters documents to exclude document shortcuts.<br><br>
          If `true`, exclude document shortcuts.<br>
          If `false`, include document shortcuts.
        schema:
          type: boolean
          default: false
      - &id191
        name: file_target
        in: query
        description: |
          Filters documents based on the value of any of the following properties:
          * `custom1`
          * `custom2`
          * `custom29`
          * `custom30`
          * `workspace_name`
        schema:
          type: string
      - &id192
        name: has_attachment
        in: query
        description: |
          Filters emails that have attachments.<br><br>
          If `true`, returns emails with at least one attachment.<br>
          If `false`, returns all emails with or without attachments.
        schema:
          type: boolean
      - &id193
        name: in_use
        in: query
        description: |
          Filters documents based on whether or not they are in use.

          If `true`, returns documents marked as in use.<br>
          If `false`, returns documents marked as not in use.<br>
          If omitted, returns documents regardless of whether they are in use.
        schema:
          type: boolean
      - &id194
        name: in_use_by
        in: query
        description: |-
          Filters documents that are in use by the specified user ID.
        schema:
          type: string
          example: ACASE
      - &id195
        name: last_user
        in: query
        description: |-
          Filters documents based on the user ID of the last user of documents.
        schema:
          type: string
          example: ACASE
      - name: latest
        in: query
        description: |
          Specifies restoring only the latest version of a document.<br><br>
          If `true`, restores the latest version.<br>
          If `false`, restores the version specified in the document ID.
        schema:
          type: boolean
          default: true
      - *id134
      - &id196
        name: name
        in: query
        description: |
          Filters documents based on the matching text found in the name of documents.

          * The search matches with whole words only.<br>
          * The wildcard character (*) is supported.
        schema:
          type: string
          example: contract
      - &id197
        name: operator
        in: query
        description: |-
          Filters documents based on the user ID of the operator of the documents.
        schema:
          type: string
          example: MARCIEDAVENPORT
      - &id198
        name: owner
        in: query
        description: |-
          Filters documents based on the user ID of the owner of the documents.
        schema:
          type: string
          example: CPIERCE
      - &id199
        name: received_date
        in: query
        description: |-
          Filters emails by received date, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          type: string
          example: -30:0d
      - &id200
        name: received_date_from
        in: query
        description: |-
          Filters emails received on or after this date (in ISO 8601 format).
          Specifies to search for emails received on or after this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id201
        name: received_date_to
        in: query
        description: |-
          Filters emails received on or before this date (in ISO 8601 format).
          Specifies to search for emails received on or before this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id202
        name: recipient
        in: query
        description: |-
          Filters documents based on the text that appears in recipient field of emails.
        schema:
          type: string
          example: ACASE
      - &id203
        name: sender
        in: query
        description: |-
          Filters documents based on the text that appears in the sender field of emails.
        schema:
          type: string
          example: ACASE
      - &id204
        name: sent_date
        in: query
        description: |-
          Filters emails by sent date, based on the specified date range.<br>
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - &id205
        name: sent_date_from
        in: query
        description: |-
          Filters emails sent on or after this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id206
        name: sent_date_to
        in: query
        description: |-
          Filters emails sent on or before this date (in ISO 8601 format).
        schema:
          type: string
          example: "2017-09-18T00:00:00Z"
      - &id207
        name: subject
        in: query
        description: |-
          Filters emails based on the matching text found in the email subject.
           * The wildcard character (*) is supported.
           * The search is not case-sensitive.
           * The search is fuzzy and returns results in the order of relevance.
        schema:
          type: string
          example: important
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - name: trashed_date
        in: query
        description: |
          Filters documents based on the date they were deleted (moved to trash).<br>

          This parameter is in the format `[begin]:[end][time units]`.<br>
          The values are relative to each other, and do not refer to calendar dates.
          For example, `-30:0d`, indicates a date range from 30 days prior to today
          and up through the user's current date, measured in days.
        example: -30:0d
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
      - &id208
        name: type
        in: query
        description: |-
          Specifies documents of the document type.<br><br>

          Each iManage Work system has a customizable list of document types per the organizational requirements.
          For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
          These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
          Document type is not case sensitive, that is, *Word* matches with *word*.<br>
          There is no stemming and the wildcard character (&ast;) is not supported.
          For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
          Multiple document types can be included using a comma-separated list.
          For example, *type=WORD,WORDX,WORDXT*

          <br>
          To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
        schema:
          type: string
          example: type=WORD, or type=WORD,WORDX
      - &id209
        name: user
        in: query
        description: |-
          Filters documents based on the document's user ID.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  cursor: '110478'
                  data:
                    results:
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:22:10-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: public
                      document_number: 105895
                      edit_date: '2016-12-02T04:34:17-05:00'
                      edit_profile_date: '2016-12-02T04:34:17-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:19:50-05:00'
                      file_edit_date: '2016-12-02T04:34:29-05:00'
                      has_attachment: false
                      id: Active!105895.2
                      is_in_use: true
                      in_use_by: ACASE
                      is_declared: false
                      is_checked_out: true
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                      last_user: ACASE
                      name: microsoft_manual_of_style_fourth_edition_Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 10003063
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:00:23-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105892
                      edit_date: '2016-12-02T04:10:19-05:00'
                      edit_profile_date: '2016-12-02T04:10:20-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:02:16-05:00'
                      file_edit_date: '2016-12-02T04:02:16-05:00'
                      has_attachment: false
                      id: Active!105892.2
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                      last_user: ACASE
                      name: ACME 2014 Audit Engagement Contract (1) Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 422553
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T00:27:24-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105893
                      edit_date: '2016-12-02T00:28:30-05:00'
                      edit_profile_date: '2016-12-02T00:28:30-05:00'
                      extension: pdf
                      file_create_date: '2016-11-29T14:15:18-05:00'
                      file_edit_date: '2016-11-29T14:15:18-05:00'
                      has_attachment: false
                      id: Active!105893.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                      last_user: ACASE
                      name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                        as Copy'
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 419637
                      type: ACROBAT
                      version: 1
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      conversation_id: RndkOiBGdzogQ29udGluZW50YWwvRGVsdGEgbWVldGluZyByZXNjaGVkdWxlZCBmcm9tIEZlYiAxMXRoIHRvIEZlYiAxMnRoIGZyb20gMTozMC0zOjAwIFBNIGluIEVucm9uIEJ1aWxkaW5nIDMzMjE=
                      conversation_name: 'Fwd: Fw: Continental/Delta meeting rescheduled
                        from Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building
                        3321'
                      create_date: '2016-11-29T14:40:56-05:00'
                      custom13: Andrew Case
                      custom14: Barbara Cummings
                      custom21: '2016-11-25T12:50:51-05:00'
                      custom22: '2016-11-25T12:50:54-05:00'
                      database: Active
                      default_security: private
                      document_number: 105634
                      edit_date: '2016-11-29T14:40:56-05:00'
                      edit_profile_date: '2016-11-29T14:40:56-05:00'
                      extension: msg
                      file_create_date: '2016-11-29T14:40:56-05:00'
                      file_edit_date: '2016-11-29T14:40:56-05:00'
                      from: Andrew Case
                      has_attachment: false
                      id: Active!105634.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=MAIN&&lib=Active&&num=105634&&ver=1
                      last_user: ACASE
                      name: 'Fwd: Fw: Continental/Delta meeting rescheduled from Feb
                        11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                      operator: ACASE
                      operator_description: Andrew Case
                      received_date: '2016-11-25T12:50:54-05:00'
                      sent_date: '2016-11-25T12:50:51-05:00'
                      size: 97280
                      subject: 'Fwd: Fw: Continental/Delta meeting rescheduled from
                        Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                      to: Barbara Cummings
                      type: MIME
                      version: 1
                      workspace_id: Active!11559
                      workspace_name: testWS001
                      wstype: email
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      cc: Ed White; Barbara Cummings
                      class: E-Mail
                      conversation_id: UmU6IEN0cmwgJiBEcmFn
                      conversation_name: 'Re: Ctrl & Drag'
                      create_date: '2015-12-21T11:31:58-05:00'
                      custom1: '1000'
                      custom13: Andrew Case
                      custom14: Andrew Case; Kelly Thompson
                      custom15: Ed White; Barbara Cummings
                      custom1_description: Enron Corporation
                      custom2: '004'
                      custom21: '2015-12-21T11:31:58-05:00'
                      custom22: '2015-12-21T11:31:13-05:00'
                      custom29: BANK
                      custom29_description: Bankruptcy
                      custom2_description: Enron v. Markham
                      custom3: ACTIVE
                      custom30: '106'
                      custom30_description: Chapter 11
                      custom3_description: Active
                      custom4: TX
                      custom4_description: Texas
                      database: Active
                      default_security: public
                      document_number: 53332
                      edit_date: '2015-12-21T11:31:58-05:00'
                      edit_profile_date: '2015-12-21T11:31:58-05:00'
                      extension: msg
                      file_create_date: '2015-12-21T11:31:58-05:00'
                      file_edit_date: '2015-12-21T11:31:13-05:00'
                      from: Andrew Case
                      has_attachment: false
                      id: Active!53332.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=MAIN&&lib=Active&&num=53332&&ver=1
                      name: 'Re: Ctrl & Drag'
                      operator: ACASE
                      operator_description: Andrew Case
                      received_date: '2015-12-21T11:31:13-05:00'
                      sent_date: '2015-12-21T11:31:58-05:00'
                      size: 24576
                      subject: 'Re: Ctrl & Drag'
                      to: Andrew Case; Kelly Thompson
                      type: MIME
                      version: 1
                      workspace_id: Active!6987
                      workspace_name: 1000.004 - Enron v. Markham
                      wstype: email
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                properties: &id865
                  cursor:
                    type: string
                    description: |-
                      The next position of the cursor returned by the server.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  data: *id135
                  total_count: *id136
                additionalProperties: false
                required:
                - data
                type: object
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin/documents:
    description: |-
      None
    get:
      tags:
      - Trash
    #- customers-{customerId}-libraries-{libraryId}-trash-bin-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/trash-bin/documents
      summary: Get deleted documents
      description: |
        Returns a list of deleted documents from the specified library.<br><br>
        The minimum permissions level required to implement this request: Tier 1.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        To return a deleted document named *Motion to dismiss*:
        GET `https://www.ajubalaw.com/work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin/documents?name=Motion to dismiss`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_trash-bin_documents
      parameters:
      - *id004
      - *id137
      - name: ascending
        in: query
        description: |
          Specifies to return documents in the ascending order of document number.<br><br>
          If `true`, return documents in the ascending order of document number.<br>
          If `false`, returns documents in the order they are found.
        schema:
          type: boolean
          default: false
      - *id138
      - *id139
      - *id140
      - *id141
      - *id142
      - *id143
      - *id144
      - *id083
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - *id188
      - *id189
      - *id190
      - *id191
      - *id192
      - *id193
      - *id194
      - *id195
      - name: latest
        in: query
        description: |
          Specifies to return only the latest version of a deleted document.<br><br>
          If `true`, returns only the latest version of a deleted document.<br>
          If `false`, returns all the versions of a deleted document.
        schema:
          type: boolean
          default: true
      - *id134
      - *id196
      - *id197
      - *id198
      - *id199
      - *id200
      - *id201
      - *id202
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - name: trashed_date
        in: query
        description: |
          Filters documents based on the date they were deleted (moved to trash).<br>

          This parameter is in the format `[begin]:[end][time units]`.<br>
          The values are relative to each other, and do not refer to calendar dates.
          For example, `-30:0d`, indicates a date range from 30 days prior to today
          and up through the user's current date, measured in days.
        example: -30:0d
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
      - *id208
      - *id209
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  cursor: '110478'
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    content_type: D
                    create_date: '2016-12-02T04:22:10-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: public
                    document_number: 105895
                    edit_date: '2016-12-02T04:34:17-05:00'
                    edit_profile_date: '2016-12-02T04:34:17-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:19:50-05:00'
                    file_edit_date: '2016-12-02T04:34:29-05:00'
                    has_attachment: false
                    id: Active!105895.2
                    in_use: true
                    in_use_by: ACASE
                    indexable: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                    last_user: ACASE
                    name: microsoft_manual_of_style_fourth_edition_Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 10003063
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    content_type: D
                    create_date: '2016-12-02T04:00:23-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105892
                    edit_date: '2016-12-02T04:10:19-05:00'
                    edit_profile_date: '2016-12-02T04:10:20-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:02:16-05:00'
                    file_edit_date: '2016-12-02T04:02:16-05:00'
                    has_attachment: false
                    id: Active!105892.2
                    in_use: false
                    indexable: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                    last_user: ACASE
                    name: ACME 2014 Audit Engagement Contract (1) Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 422553
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    content_type: D
                    create_date: '2016-12-02T00:27:24-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105893
                    edit_date: '2016-12-02T00:28:30-05:00'
                    edit_profile_date: '2016-12-02T00:28:30-05:00'
                    extension: pdf
                    file_create_date: '2016-11-29T14:15:18-05:00'
                    file_edit_date: '2016-11-29T14:15:18-05:00'
                    has_attachment: false
                    id: Active!105893.1
                    in_use: false
                    indexable: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                    last_user: ACASE
                    name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                      as Copy'
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 419637
                    type: ACROBAT
                    version: 1
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                properties: &id864
                  cursor:
                    type: string
                    description: |-
                      The next position of the cursor returned by the server.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  data: &id807
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Documents.emailWithFlattenedParticipants'
                      - $ref: '#/components/schemas/Documents.documentBase'
                additionalProperties: false
                required:
                - data
                type: object
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin/documents/{documentId}:
    description: |-
      None
    delete:
      tags:
      - Trash
    #- customers-{customerId}-libraries-{libraryId}-trash-bin-documents-{documentId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/trash-bin/documents/{documentId}
      summary: Permanently delete documents
      description: |
        Permanently deletes a document from the trash bin.<br><br>
        The document ID must include the version number, such as `active!43534.2`.
        Only the specified version number is deleted.
        To delete all versions of a document, each version must be individually deleted.<br><br>
        The minimum access permission required on the library to implement this request: NRTADMIN.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_trash-bin_documents_{documentId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: documentId
      in: path
      description: |-
        Document ID of the target document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/trash-bin/documents/{documentId}/restore:
    description: |-
      None
    post:
      tags:
      - Trash
    #- customers-{customerId}-libraries-{libraryId}-trash-bin-documents-{documentId}-restore
  #summary: POST /customers/{customerId}/libraries/{libraryId}/trash-bin/documents/{documentId}/restore
      summary: Restore a deleted document
      description: |-
        Restores a deleted document from the trash bin.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_trash-bin_documents_{documentId}_restore
      requestBody:
        content:
          application/json:
            schema:
              example:
                folder_ids:
                - active!44356
                - active!83886
                comments: Restoring as requested by Andrew Case (acase)
                for_user: MARCIEDAVENPORT
              required:
              - for_user
              type: object
              properties: &id1669
                comments:
                  type: string
                  description: |-
                    Specifies additional comments associated with the document restore process.
                folder_ids:
                  type: array
                  items:
                    type: string
                  description: |
                    Specifies an array of folder IDs that the document needs to be referenced.<br><br>
                    If omitted, the original referenced folders at the time of deletion are used.
                for_user:
                  type: string
                  description: |-
                    Specifies the user ID on whose behalf the document is restored.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: documentId
      in: path
      description: |-
        Document ID of the target document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/templates:
# September, 2020

    description: |
      none

    get:
      tags:
      - Workspace Templates
    #- customers-{customerId}-libraries-{libraryId}-templates
  #summary: GET /customers/{customerId}/libraries/{libraryId}/templates
      summary: Get workspace templates
      description: |
        Returns a list of templates for the specified library.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns a list of all the workspace templates from library active_us:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/templates`<br>

        This request returns a list of all the workspace templates from library active_us with a custom1 value of 001:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/templates?custom1=001`

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of workspace templates, see GET `customers/{customerId}/libraries/{libraryId}/templates`
        * To create a workspace template, see POST `customers/{customerId}/libraries/{libraryId}/templates`
        * To create a workspace from a template, see POST `customer/{customerId}/libraries/{libraryId}/workspaces`
        * To update a workspace template, see PUT `customers/{customerId}/libraries/{libraryId}/templates/{templateId}`
        * To delete a workspace template use the template's `id` as the `workspaceId`, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
        * To create a folder at the root level of a workspace, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`
        * To create a tab at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
        * To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`
        * To create a folder within a container, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`
        * To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_templates
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2017-02-07T15:40:05Z'
                      custom29: SECURE
                      database: active_us
                      default_security: public
                      description: Pre-trial use only.
                      document_number: 108877
                      edit_date: '2017-02-07T15:40:05Z'
                      edit_profile_date: '2017-04-03T14:49:01Z'
                      file_create_date: '1753-01-01T00:00:00Z'
                      file_edit_date: '2017-02-07T15:40:05Z'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: active_us!17844
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=active_us&&lib=&&num=108877&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\active_us\ACASE\36\1\108877.1
                      name: 1. Eugene's WS25
                      operator: ACASE
                      retain_days: 365
                      size: 0
                      subtype: template
                      type: XML
                      version: 1
                      workspace_id: active_us!17844
                      wstype: workspace
                    - author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2017-03-27T18:44:24Z'
                      database: active_us
                      default_security: public
                      document_number: 110922
                      edit_date: '2017-03-27T18:44:24Z'
                      edit_profile_date: '2017-03-27T18:44:24Z'
                      file_create_date: '2017-03-27T18:44:24Z'
                      file_edit_date: '2017-03-27T18:44:24Z'
                      has_attachment: false
                      has_subfolders: true
                      id: active_us!19787
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=active_us&&lib=&&num=110922&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\active_us\ACASE\36\1\110922.1
                      name: '111'
                      operator: ACASE
                      retain_days: 365
                      size: 0
                      subtype: template
                      type: XML
                      version: 1
                      workspace_id: active_us!19787
                      wstype: workspace
                  total_count: 34
                required:
                - data
                type: object
                properties: &id1275
                  data:
                    required:
                    - results
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Projects.template'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
      parameters:
      - *id004
      - *id030
      - *id031
      - *id032
      - *id033
      - *id034
      - *id035
      - *id036
      - *id037
      - *id038
      - *id039
      - *id040
      - *id041
      - *id042
      - *id043
      - *id044
      - *id045
      - *id046
      - *id047
      - *id048
      - *id049
      - *id050
      - *id051
      - *id052
      - *id053
      - *id054
      - *id055
      - *id056
      - *id057
      - *id058
      - *id059
      - *id060
      - *id061
      - *id062
      - *id063
      - *id064
      - *id065
      - *id066
      - *id067
      - *id068
      - *id069
      - *id070
      - *id071
      - *id072
      - *id011
      - *id074
      - *id075
      - *id006
      - *id076
      - *id007
    post:
      tags:
      - Workspace Templates
    #- customers-{customerId}-libraries-{libraryId}-templates
  #summary: POST /customers/{customerId}/libraries/{libraryId}/templates
      summary: Create a workspace template
      description: |
        Creates a workspace template.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        This request creates only the workspace template.
        It does not:
        * Create containers within the workspace template. Those must be added in separate step, noted in the **Containers** section.
        * Create a workspace.

        Custom properties, such as custom1 or custom8, can have aliases defined for a workspace template.
        That means, when a workspace is created from this workspace template, aliases for these custom properties are automatically applied to the workspace.
        Custom properties custom1 through custom16, custom29 and custom30 are validated fields.
        Aliases provided for the workspace template must be defined when the workspace template is created.
        If the alias is not defined, the request results in an error ("Document profile is invalid").

        To complete the workspace template, three additional types of requests can be added: Containers, containers requirement, and name prefixes or suffixes.

        **Containers**<br>
        Each container (a folder, tab, or search folder) must be added with a separate request.
        A workspace template can be created without any containers.
        Even if flexible folders enabled, users can add containers, subject to their other security and permissions limits.
        Use the template's `id` as the `workspaceId` when creating containers at the root level of the workspace using the following requests.
        The containers can be created at the root level of the workspace template with these requests:
        * To create a folder, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`
        * To create a tab, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
        * To create a search folder, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`

        If subfolders are created after that, use the parent's container ID as normal for the parent of each subfolder.

        **Containers requirement**<br>
        Containers specified in workspace templates are created in the workspace in one of the following ways:
        * Workspace Creation. The container is created automatically at the time the workspace is created.
        * Optional. The container may be created at the time the workspace is created, or it may be created later.
        * Required. The container is created automatically at the time its parent container is created.
        A required container at the rool level of workspace is considerd to be a Workspace Creation container.
        Required is the default value.

        To add the container creation requirements of Workspace Creation or Optional, iManage recommends using iManage Control Center.
        See <a href="https://docs.imanage.com/cc-help/10.3.1/en/Creating_a_folder_structure.html" target="_blank">Creating a folder structure</a>.

        **Name prefixes or suffixes**
        To add workspace and container name prefixes or suffixes, iManage recommends using iManage Control Center.
        See <a href="https://docs.imanage.com/cc-help/10.3.1/en/Name_Prefixes_and_Suffixes.html" target="_blank">Name prefixes and suffixes</a>.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a workspace template:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/templates`<br>
        Request body: See the **Request samples** section of the sample provided in the right pane.

        This request adds a folder at the root level of the workspace template.
        Assume that the templateID returned from the previous request was active_us!17437. Use that value for the workspaceID of this request.
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!17437/folders`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of workspace templates, see GET `customers/{customerId}/libraries/{libraryId}/templates`
        * To create a workspace template, see POST `customers/{customerId}/libraries/{libraryId}/templates`
        * To create a workspace from a template, see POST `customer/{customerId}/libraries/{libraryId}/workspaces`
        * To update a workspace template, see PUT `customers/{customerId}/libraries/{libraryId}/templates/{templateId}`
        * To delete a workspace template use the template's `id` as the `workspaceId`, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
        * To create a folder at the root level of a workspace, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`
        * To create a tab at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
        * To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`
        * To create a folder within a container, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`
        * To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_templates
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Merger Projects
                description: Use this template for each planned merger.
                custom1: '001'
              type: object
              properties: &id210
                custom1:
                  type: string
                  description: |-
                    Specifies an alias for the custom1 property field.<br><br>
                    <a href="#" onClick="MyWindow=window.open('https://docs.imanage.com/sdk/What_are_custom_property_aliases_.html','MyWindow','width=600,height=300,top=250,left=600'); return false;">This is a validated field and must be defined before assigning it to a template.</a>
                custom2:
                  type: string
                  description: |-
                    Specifies an alias for the custom2 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom3:
                  type: string
                  description: |-
                    Specifies an alias for the custom3 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom4:
                  type: string
                  description: |-
                    Specifies an alias for the custom4 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom5:
                  type: string
                  description: |-
                    Specifies an alias for the custom5 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom6:
                  type: string
                  description: |-
                    Specifies an alias for the custom6 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom7:
                  type: string
                  description: |-
                    Specifies an alias for the custom7 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom8:
                  type: string
                  description: |-
                    Specifies an alias for the custom8 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom9:
                  type: string
                  description: |-
                    Specifies an alias for the custom9 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom10:
                  type: string
                  description: |-
                    Specifies an alias for the custom10 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom11:
                  type: string
                  description: |-
                    Specifies an alias for the custom11 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom12:
                  type: string
                  description: |-
                    Specifies an alias for the custom12 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom13:
                  type: string
                  description: |-
                    Specifies an alias for the custom13 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom14:
                  type: string
                  description: |-
                    Specifies an alias for the custom14 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom15:
                  type: string
                  description: |-
                    Specifies an alias for the custom15 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom16:
                  type: string
                  description: |-
                    Specifies an alias for the custom16 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom17:
                  type: number
                  description: |-
                    Specifies a value for the custom17 property field.
                  format: double
                custom18:
                  type: number
                  description: |-
                    Specifies a value for the custom18 property field.
                  format: double
                custom19:
                  type: number
                  description: |-
                    Specifies a value for the custom19 property field.
                  format: double
                custom20:
                  type: number
                  description: |-
                    Specifies a value for the custom20 property field.
                  format: double
                custom21:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies a value (in ISO 8601 format) for the custom21 property field.
                  example: "2020-01-28T06:54:18Z"
                custom22:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies a value (in ISO 8601 format) for the custom22 property field.
                  example: "2020-01-28T06:54:18Z"
                custom23:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies a value (in ISO 8601 format) for the custom23 property field.
                  example: "2020-01-28T06:54:18Z"
                custom24:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies a value (in ISO 8601 format) for the custom24 property field.
                  example: "2020-01-28T06:54:18Z"
                custom25:
                  type: boolean
                  description: |-
                    Specifies a value for the custom25 property field.
                custom26:
                  type: boolean
                  description: |-
                    Specifies a value for the custom26 property field.
                custom27:
                  type: boolean
                  description: |-
                    Specifies a value for the custom27 property field.
                custom28:
                  type: boolean
                  description: |-
                    Specifies a value for the custom28 property field.
                custom29:
                  type: string
                  description: |-
                    Specifies an alias for the custom29 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom30:
                  type: string
                  description: |-
                    Specifies an alias for the custom30 property field.<br><br>
                    This is a validated field and must be defined before assigning it to a template.
                custom31:
                  type: string
                  description: |-
                    Reserved. Do not use.
                declared_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |
                    Specifies the date (ISO 8601 format) when a template was declared as a record.<br><br>
                    A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
                    To specify that the template has been declared as a record, see the parameter `is_declared`.
                default_security:
                  default: "private"
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the template.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                is_declared:
                  type: boolean
                  description: |
                    Specifies the template is declared as a record.<br><br>
                    A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
                    If `true`, the template is declared as a record.<br>
                    If `false`, the template is not declared as a record.<br><br>
                    To specify the date it was declared, see the parameter `declared_date`.
                  default: false
                name:
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |+
                    Specifies a descriptive name assigned to the template.

                    This is a required field when creating a workspace template, and this field cannot be deleted.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                  example: |
                    "name" : "Matter 001abc documents"
                owner:
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |
                    Specifies the user ID of the owner of the template.<br><br>
                    The value can only be changed by an NRTADMIN.
                profile:
                  type: object
                  additionalProperties: true
                  description: |-
                    Specifies the set of name-value pair properties.
                project_custom1:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the template.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the template.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the template.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                retain_days:
                  type: integer
                  description: |-
                    Specifies the number of days before an inactive document within the resulting workspace becomes eligible for archiving.
                  format: int64
                  default: 365
                subclass:
                  type: string
                  description: |-
                    The subclass of the workspace.<br><br>
                    This is a validated field and must be a defined subclass alias of class WEBDOC.
              additionalProperties: true
              description: |-
                Represents an object for the creation of a new template.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: active_us!179199
                    wstype: workspace
                required:
                - data
                type: object
                properties: &id1274
                  data:
                    required:
                    - id
                    type: object
                    properties:
                      id:
                        type: string
                        description: |-
                          Indicates a template ID.
                        example: active!3843
                    additionalProperties: true
                    description: |-
                      Data envelope for the template create response.
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/templates/{templateId}:
    description: |-
      None
    put:
      tags:
      - Workspace Templates
    #- customers-{customerId}-libraries-{libraryId}-templates-{templateId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/templates/{templateId}
      summary: Update a workspace template
      description: |
        Updates the specified template.<br><br>

         The minimum access permission required on the library to implement this request: NRTADMIN.

        This request updates only the basic workspace template.
        The containers referenced within the template must be updated individually.

        Custom properties, such as custom1 or custom8, can have aliases added to the workspace template.
        That means, when a workspace is created from this workspace template, aliases for these custom properties are automatically applied to the workspace.
        Custom properties custom1 through custom16, custom29 and custom30 are validated fields.
        Aliases provided for the workspace template must be defined when the workspace template is created.
        If the alias is not defined, the request results in an error ("Document profile is invalid").

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates a workspace template:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/templates/active_us!73431`<br>
        Request body: See the **Request samples** section of the sample provided in the right pane.

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of workspace templates, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/templates">GET /customers/{customerId}/libraries/{libraryId}/templates</a>
        * To create a workspace template, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/templates">POST /customers/{customerId}/libraries/{libraryId}/templates</a>
        * To create a workspace from a template, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces">POST /customers/{customerId}/libraries/{libraryId}/workspaces</a>
        * To update a workspace template, see <a href="#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/templates/-templateId-">PUT /customers/{customerId}/libraries/{libraryId}/templates/{templateId}</a>
        * To delete a workspace template, see <a href="#delete-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-">DELETE /customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}</a>
        * To create a folder at the root level of a workspace, see <a href="#post-/work/api/v2/customers/customerId/libraries/-libraryId-/workspaces/-workspaceId-/folders">POST /customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders</a>
        * To create a tab at the root level of a workspace, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/tabs">POST /customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs</a>
        * To create a search folder at the root level of a workspace, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/search-folders">POST /customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders</a>
        * To create a folder within a container, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-/subfolders">POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders</a>
        * To create a search folder within another folder, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-/search-folders">POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders</a>
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_templates_{templateId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Merger Projects
                description: Use this template for each planned merger.
                custom1: '001'
              type: object
              properties: *id210
              additionalProperties: true
              description: |-
                Represents an object for the creation of a new template.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: templateId
      in: path
      description: |-
        Template ID to be used in the endpoints.
      required: true
      schema:
        example: Active!1234





# * To get a list of workspace templates, see GET `customers/{customerId}/libraries/{libraryId}/templates`
# * To create a workspace template, see POST `customers/{customerId}/libraries/{libraryId}/templates`
# * To create a workspace from a template, see POST `customer/{customerId}/libraries/{libraryId}/workspaces`
# * To update a workspace template, see PUT `customers/{customerId}/libraries/{libraryId}/templates/{templateId}`
# * To delete a workspace template use the template's `id` as the `workspaceId`, see DELETE `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}`
# * To create a folder at the root level of a workspace, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`
# * To create a tab at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
# * To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`
# * To create a folder within a container, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`
# * To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}:
    description: |-
      None
    get:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}
      summary: Get tab profile
      description: |
        Gets the profile of the specified tab.<br>

        Tabs can only exist at the root level of a workspace.
        They are intended to provide more precise organization of folders.
        Tabs can hold folders but not other tabs.
        Documents cannot be placed directly to a tab, although folders inside a tab can contain documents.
        In contrast, folders can hold documents but not tabs.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a new tab, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`<br>
        To get a list of folders and tabs from the root level of a specified workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}
      parameters:
      - *id004
      - name: include_operations
        in: query
        description: |
          Specifies to return a list of the user's allowed operations on the folder.<br><br>
          If `true`, returns a list of allowed operations for the user on the folder.<br>
          If `false`, does not return a list of allowed operations for the user on the folder.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Active
                    default_security: inherit
                    edit_date: '2007-06-13T16:53:48Z'
                    effective_security: full_access
                    folder_type: tab
                    id: Active!526
                    is_external_as_normal: false
                    name: Attorney Notes
                    operations:
                      add_custom_folders: true
                      add_folders: true
                      change_name: true
                      modify: true
                      remove: true
                      remove_folders: true
                      set_default_security: true
                      set_security: true
                      default_security_values:
                      - private
                      - view
                      - public
                      - inherit
                    owner: ADMINISTRATOR
                    owner_description: Administrator
                    owner_info:
                      allow_logon: true
                      is_external: false
                    parent_id: Active!522
                    profile:
                      class: A-NOTE
                      custom1: '1091'
                      custom1_description: McKellesson
                      custom2: '1'
                      custom2_description: General
                    subtype: Q
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: folder
                required:
                - data
                type: object
                properties: &id1272
                  data:
                    properties:
                      operations:
                        required:
                        - add_folders
                        - change_name
                        - modify
                        - remove
                        - remove_folders
                        - set_default_security
                        - set_security
                        type: object
                        properties:
                          add_custom_folders:
                            type: boolean
                            description: |
                              Indicates a user can upload a custom folder.<br><br>
                              If `true`, a user can upload a custom folder. This means that the tab was created from a template and flexible folders were enabled.<br>
                              If `false`, a user cannot upload a custom folder. This means that the folder not configured by a template.
                          add_folders:
                            type: boolean
                            description: |-
                              Indicates that folders can be added to the tab.
                          change_name:
                            type: boolean
                            description: |-
                              Indicates that the tab can be renamed.
                          modify:
                            type: boolean
                            description: |-
                              Indicates if any of the parameters of a tab can be modified.
                          remove:
                            type: boolean
                            description: |-
                              Indicates that the tab can be deleted.
                          remove_folders:
                            type: boolean
                            description: |-
                              Indicates that the folders under it can be deleted.
                          set_default_security:
                            type: boolean
                            description: |-
                              Indicates that the default security can be set on the tab. The valid values are inherit, public, view, and private.
                          set_security:
                            type: boolean
                            description: |-
                              Indicates if the security of a tab can be updated.
                          default_security_values:
                            type: array
                            items:
                              type: string
                            description: |
                              Indicates the default security setting.<br>

                              |Value|Description|
                              |:---|:---|
                              |inherit|The container or item inherits security settings from its parent container.|
                              |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                              |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                              |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                        additionalProperties: false
                      owner_info:
                        type: object
                        description: Information about the owner of this tab.
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      database: &id1237
                        type: string
                        description: |-
                          Name of iManage Work library where the tab is located.
                      default_security: &id1238
                        enum: ["inherit", "public", "view", "private"]
                        type: string
                        description: |-
                          The default access level.

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or document inherits security settings from its parent container.|
                          |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                          |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      inherited_default_security: &id1239
                        $ref: '#/components/schemas/Projects.accessRule'
                      description: &id1240
                        type: string
                        description: |-
                          Additional information about tab.
                      edit_date: &id1241
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Date when the content of tab was last edited.
                      effective_security: &id1242
                        $ref: '#/components/schemas/Projects.effectiveSecurity'
                      folder_type: &id1243
                        enum: ["tab"]
                        type: string
                      has_subfolders: &id1244
                        type: boolean
                        description: |
                          Indicates if the tab has child folders.<br><br>
                          If `true`, the tab has child folders.<br>
                          If `false`, the tab does not have child folders.
                      id: &id1245
                        type: string
                        description: |-
                          Unique ID of the tab.
                      is_external: &id1246
                        type: boolean
                        description: |-
                          Is `true` when the tab is shared with the external users.
                      is_external_as_normal: &id1247
                        type: boolean
                        description: |-
                          If `true`, the external user is treated as normal user and can access public folders.
                      name: &id1248
                        type: string
                        description: |-
                          Name of the tab.
                      owner: &id1249
                        type: string
                        description: |
                          Owner of the tab.<br><br>
                          This parameter value can be updated only by an NRTADMIN.
                      owner_description: &id1250
                        type: string
                        description: |-
                          Full name of the owner.
                      parent_id: &id1251
                        type: string
                        description: |-
                          ID of the parent workspace.
                      profile: &id1252
                        type: object
                        additionalProperties: true
                        description: |-
                          A set of arbitrary name-value pair properties.
                      project_custom1: &id1253
                        type: string
                        description: |
                          Indicates additional information about the workspace tab.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      project_custom2: &id1254
                        type: string
                        description: |
                          Indicates additional information about the workspace tab.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      project_custom3: &id1255
                        type: string
                        description: |
                          Indicates additional information about the workspace tab.<br><br>
                          This is descriptive text that does not have to be formatted, and is not validated.
                          This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                          <br>
                      subtype: &id1256
                        enum: ["Q"]
                        type: string
                        description: |-
                          Folder type.
                      workspace_id: &id1257
                        type: string
                        description: |-
                          Unique ID of the parent workspace.
                      workspace_name: &id1258
                        type: string
                        description: |-
                          Name of the parent workspace.
                      wstype: &id1259
                        enum: ["folder"]
                        type: string
                        description: |-
                          iManage Work object type.
                    additionalProperties: true
                    required:
                    - database
                    - default_security
                    - edit_date
                    - id
                    - is_external_as_normal
                    - name
                    - owner_description
                    - parent_id
                    - subtype
                    - workspace_id
                    - workspace_name
                    - wstype
                    type: object
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    delete:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}
      summary: Delete a tab
      description: |
        Deletes the specified tab.<br><br>
        The tab must either be empty, or each folders it contains must be empty.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}
      summary: Update tab profile
      description: |
        Updates the tab properties with the specified property values.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a new tab, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`<br>
        To get a list of folders and tabs from the root level of a specified workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                default_security: inherit
                name: observables
                owner: ACASE
                is_external_as_normal: true
              type: object
              properties: &id1273
                default_security:
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  maxLength: 254
                  type: string
                  description: |
                    Additional information about the tab to be updated.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                is_external_as_normal:
                  type: boolean
                  description: |-
                    If `true`, the external user is treated as normal user and can access public folders.
                  default: false
                name:
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |
                    Name of the tab.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                owner:
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |-
                    Owner of the tab. Administrative role required to update this property.
                profile:
                  type: object
                  description: Specifies the folder or tab profile information that
                    is applied to the documents automatically when they are uploaded
                    to the folder or tab.
                  properties:
                    author:
                      maxLength: 32
                      type: string
                      description: |-
                        The ID of the user who created the document.
                    class:
                      maxLength: 32
                      type: string
                      description: |
                        The class of the folder or tab.

                        This is a validated field and must be a defined alias of the property `class`.
                      example: Doc
                    subclass:
                      maxLength: 32
                      type: string
                      description: |
                        The subclass of the folder or tab.

                        This is a validated field and must be a defined alias of the property `subclass`.
                      example: Word2007
                    custom1:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom2:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom3:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom4:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom5:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom6:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom7:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom8:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom9:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom10:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom11:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom12:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom13:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom13 property.<br><br>Maximum length&colon; 96.
                    custom14:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom14 property.<br><br>Maximum length&colon; 96.
                    custom15:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom15 property.<br><br>Maximum length&colon; 96.
                    custom16:
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom16 property.<br><br>Maximum length&colon; 96.
                    custom17:
                      type: number
                      description: |-
                        A numeric value for the custom17 property.
                      format: double
                    custom18:
                      type: number
                      description: |-
                        A numeric value for the custom18 property.
                      format: double
                    custom19:
                      type: number
                      description: |-
                        A numeric value for the custom19 property.
                      format: double
                    custom20:
                      type: number
                      description: |-
                        A numeric value for the custom20 property.
                      format: double
                    custom21:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        Specifies a timestamp for the custom21 property (in ISO 8601 format).
                    custom22:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom22 property (in ISO 8601 format).
                    custom23:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom23 property (in ISO 8601 format).
                    custom24:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom24 property (in ISO 8601 format).
                    custom25:
                      type: boolean
                      description: |-
                        A boolean value for the custom25 property.
                    custom26:
                      type: boolean
                      description: |-
                        A boolean value for the custom26 property.
                    custom27:
                      type: boolean
                      description: |-
                        A boolean value for the custom27 property.
                    custom28:
                      type: boolean
                      description: |-
                        A boolean value for the custom28 property.
                    custom29:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom30:
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom31:
                      maxLength: 32
                      type: string
                      description: |-
                        Reserved. Do not use.
                    description:
                      maxLength: 254
                      type: string
                      description: |-
                        Reserved. Do not use.
                  additionalProperties: true
                project_custom1:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies additional information about the tab.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security-policy:
    description: |-
      None
    get:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-security-policy
  #summary: GET /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security-policy
      summary: Get tab security policy
      description: |
        Returns a list of denied and allowed users for the tab.<br>

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `tabs` is `false`, this request is not available.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_security-policy
      parameters:
      - *id004
      - name: spm_custom1
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      - name: spm_custom2
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Common.effectiveSecurityPolicy'
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security:
    description: |-
      None
    get:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security
      summary: Get tab security
      description: |
        Returns a list of users' and groups' default security for the specified tab.<br>

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `tabs` is `false`, this request is not available.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-security
  #summary: POST /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security
      summary: Update tab security
      description: |
        Updates a user or group default security of the tab.<br>

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `tabs` is `false`, this request is not available.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_security
      requestBody:
        content:
          application/json:
            schema:
              example:
                include:
                - access_level: full_access
                  id: ACASE
                  type: user
                - access_level: read
                  id: viewgroup
                  type: group
                remove:
                - id: nonviewgroup
                  type: group
                default_security: public
              type: object
              properties: *id100
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/operations:
    description: |-
      None
    get:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/operations
      summary: Get tab operations
      description: |
        Returns operations the current user is allowed to perform on the specified tab.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on tab active_us!8382:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/tabs/active_us!8382/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    add_custom_folders: true
                    add_folders: true
                    change_name: true
                    modify: true
                    remove: true
                    remove_folders: true
                    set_default_security: true
                    set_security: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
                required:
                - data
                type: object
                properties: &id1668
                  data:
                    required:
                    - add_folders
                    - change_name
                    - modify
                    - remove
                    - remove_folders
                    - set_default_security
                    - set_security
                    type: object
                    properties:
                      add_custom_folders:
                        type: boolean
                        description: |
                          Indicates a user can upload a custom folder.<br><br>
                          If `true`, a user can upload a custom folder. This means that the tab was created from a template and flexible folders were enabled.<br>
                          If `false`, a user cannot upload a custom folder. This means that the folder not configured by a template.
                      add_folders:
                        type: boolean
                        description: |-
                          Indicates that folders can be added to the tab.
                      change_name:
                        type: boolean
                        description: |-
                          Indicates that the tab can be renamed.
                      modify:
                        type: boolean
                        description: |-
                          Indicates if any of the parameters of a tab can be modified.
                      remove:
                        type: boolean
                        description: |-
                          Indicates that the tab can be deleted.
                      remove_folders:
                        type: boolean
                        description: |-
                          Indicates that the folders under it can be deleted.
                      set_default_security:
                        type: boolean
                        description: |-
                          Indicates that the default security can be set on the tab. The valid values are inherit, public, view, and private.
                      set_security:
                        type: boolean
                        description: |-
                          Indicates if the security of a tab can be updated.
                      default_security_values:
                        type: array
                        items:
                          type: string
                        description: |
                          Indicates the default security setting.<br>

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or item inherits security settings from its parent container.|
                          |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                          |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                    additionalProperties: false
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folder-shortcuts:
    description: |-
      None
    post:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-folder-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folder-shortcuts
      summary: Create folder shortcut in tab
      description: |
        Creates a folder shortcut under a tab.<br>

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `tabs` is `false`, this request is not available.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_folder-shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Automation vs Manual
                target:
                  database: Reactive
                  folder_type: regular
                  id: Reactive!496
                  wstype: folder
              required:
              - name
              - target
              type: object
              properties: &id1533
                name:
                  type: string
                target:
                  $ref: '#/components/schemas/Projects.Shortcuts.folderShortcutTarget'
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Reactive
                    default_security: inherit
                    edit_date: '2019-09-05T20:55:48Z'
                    effective_security: full_access
                    id: Reactive!43
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Customer Real Estate List
                    owner: MARIANNEDWARDS
                    owner_description: MARIANNEDWARDS
                    parent_id: Reactive!20
                    target:
                      database: Reactive
                      folder_type: regular
                      id: Reactive!496
                      wstype: folder
                    view_type: document
                    workspace_id: Reactive!20
                    workspace_name: Testing123
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: &id1534
                  data:
                    $ref: '#/components/schemas/Projects.Shortcuts.folderShortcut'
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders:
    description: |-
      None
    post:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-folders
  #summary: POST /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders
      summary: Create folder in tab
      description: |
        Creates a new folder under a tab.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        A folder can be created in one of the following three locations:<br>
        To create a folder in a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        To create a folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>
        To create a folder within a tab, see POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_folders
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Employee Agreements
                default_security: inherit
                description: Contract documents
                profile:
                  custom1: '001'
                  custom1_description: Microsoft
                group_trustees: []
                user_trustees:
                - id: CPIERCE
                  access_level: read_write
              required:
              - name
              type: object
              properties: *id211
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Active
                    default_security: inherit
                    edit_date: '2017-03-16T19:22:11Z'
                    effective_security: full_access
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!258111
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: confidential
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    profile:
                      custom1: 00100000001XD0Y
                      custom2: '177101'
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: New York Acquisitions
                    wstype: folder
                required:
                - data
                type: object
                properties: *id097
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/children:
    description: |-
      None
    get:
      tags:
      - Tabs
    #- customers-{customerId}-libraries-{libraryId}-tabs-{tabId}-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/children
      summary: Get tab's children
      description: |-
        Retrieves the children (folders and documents) contained in the tab.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_tabs_{tabId}_children
      parameters:
      - *id004
      - name: children_type
        in: query
        description: |
          Specifies the type of children to return.<br><br>
          Multiple values can be specified using a comma-separated list.
          For example: `children_type=folders`, or `children_type=folders,imanage_share_folders`.<br>
          The following are allowed values:<br>

          |Value|Description|
          |:---|:---|
          |folders|Returns regular folders and search folders.|
          |folder_shortcuts|Returns folder shortcuts and search folder shortcuts.|
          |imanage_share_folders|Returns iManage Share folders.|                  
          |all|Returns folders, folder_shortcuts and imanage_share_folders. This is the default value.|
        schema:
          type: string
          default: all
          example: folders
      - *id011
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Projects.folder'
                      - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-03-10T22:20:13Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!257918
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Enron Audit Engagement Contract
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!257177
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: Employment Agreements
                    wstype: folder
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:19:37Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2103642
                    edit_date: '2017-03-09T17:19:37Z'
                    edit_profile_date: '2017-03-09T17:19:37Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:19:37Z'
                    file_edit_date: '2017-03-09T17:19:37Z'
                    has_attachment: false
                    id: Active!2103642.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2103642&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:01:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100262
                    edit_date: '2017-03-09T17:01:16Z'
                    edit_profile_date: '2017-03-09T17:01:16Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:01:16Z'
                    file_edit_date: '2017-03-09T17:01:16Z'
                    has_attachment: false
                    id: Active!2100262.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100262&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-09T16:47:42Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100104
                    edit_date: '2017-03-09T16:47:42Z'
                    edit_profile_date: '2017-03-09T16:47:42Z'
                    extension: xml
                    file_create_date: '2017-03-09T16:47:42Z'
                    file_edit_date: '2017-03-09T16:47:42Z'
                    has_attachment: false
                    id: Active!2100104.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100104&&ver=1
                    last_user: ACASE
                    name: idp
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 12003
                    type: XML
                    version: 1
                    wstype: document
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-08T20:42:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2099849
                    edit_date: '2017-03-08T20:42:16Z'
                    edit_profile_date: '2017-03-08T20:42:16Z'
                    extension: xlsx
                    file_create_date: '2017-03-08T20:42:16Z'
                    file_edit_date: '2017-03-08T20:42:16Z'
                    has_attachment: false
                    id: Active!2099849.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2099849&&ver=1
                    last_user: ACASE
                    name: Copy of API Slices
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 34826
                    type: EXCELX
                    version: 1
                    wstype: document
                  total_count: 5
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tabId
      in: path
      description: |
        The tab ID.
      required: true
      schema:
        example: active_us!170149
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/supervised-workspaces:
    description: |-
      None
    post:
      tags:
      - Supervised Import
    #- customers-{customerId}-libraries-{libraryId}-supervised-workspaces
  #summary: POST /customers/{customerId}/libraries/{libraryId}/supervised-workspaces
      summary: Create supervised workspace
      description: |
        Creates a new workspace.<br><br>
        This API requires administrative privileges and allows to specify many system properties
        (`id`, `document_number`, `create_date`, `edit_date` and so on) that are not available with normal workspace create API.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_supervised-workspaces
      requestBody:
        content:
          application/json:
            schema:
              example:
                custom1: CONE
                custom2: MONE
                default_security: private
                document_number: 12345
                name: WorkOne
              properties: &id1349
                create_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |
                    Indicates the date (in ISO 8601 format) when the document was imported into the iManage Work system.<br><br>
                    This date can be different than the `file_create_date`.
                    The `file_create_date` is the date when the file was created, which could have been outside of the iManage Work system.
                document_number:
                  type: number
                  description: |-
                    Number for the document that is associated with workspace. If this document number is not available, the request will fail.
                  format: long
                edit_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Date when the workspace profile was last edited.
                id:
                  type: string
                  description: |-
                    ID for the workspace to be created. If there is already a workspace with this ID, the request will fail. For example, ACTIVE!12345.
                last_user:
                  type: string
                  description: |-
                    The user ID of the last user of the workspace.
                custom1: *id212
                custom2: *id213
                custom3: *id214
                custom4: *id215
                custom5: *id216
                custom6: *id217
                custom7: *id218
                custom8: *id219
                custom9: *id220
                custom10: *id221
                custom11: *id222
                custom12: *id223
                custom13: *id224
                custom14: *id225
                custom15: *id226
                custom16: *id227
                custom17: *id228
                custom18: *id229
                custom19: *id230
                custom20: *id231
                custom21: *id232
                custom22: *id233
                custom23: *id234
                custom24: *id235
                custom25: *id236
                custom26: *id237
                custom27: *id238
                custom28: *id239
                custom29: *id240
                custom30: *id241
                custom31: *id242
                declared_date: *id243
                default_security: *id244
                description: *id245
                is_declared: *id246
                is_external: *id247
                is_external_as_normal: *id248
                name: *id249
                owner: *id250
                profile: *id251
                project_custom1: *id252
                project_custom2: *id253
                project_custom3: *id254
                retain_days: *id255
                subclass: *id256
              additionalProperties: true
              required:
              - name
              - default_security
              type: object
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id084
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/streams/admin-import:
    description: |-
      None
    post:
      tags:
      - File Streams
    #- customers-{customerId}-libraries-{libraryId}-streams-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/streams/admin-import
      summary: Create a file stream
      description: |-
        Creates a stream with a given profile and byte stream.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_streams_admin-import
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - profile
              - file
              properties:
                profile:
                  example:
                    checksum: F0E4C2F76C58916EC258F246851BEA091D14D4247A2FC3E18694461B1816E13B
                    document_number: 123
                    edit_date: '2019-08-18T04:43:46Z'
                    name: simpleUploadDocumentStream.bin
                    size: 4
                    type: ocr
                    version: 1
                  required:
                  - name
                  - size
                  - type
                  type: object
                  properties: &id1624
                    checksum:
                      type: string
                      description: |-
                        The SHA-256 checksum of the stream.
                    document_number:
                      type: number
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      format: int64
                    edit_date:
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        Most recent date (in ISO 8601 format) when the document was edited.
                    name:
                      type: string
                      description: |-
                        File name of the stream.
                    size:
                      type: number
                      description: |-
                        Size of the stream in bytes.
                      format: int64
                    source_stream_id:
                      type: number
                      description: |-
                        Parent or reference stream identifier.
                      format: int64
                    type:
                      enum: [version, ocr]
                      type: string
                      description: |
                        The following are valid case-insensitive types:
                          - *version* denotes a new stream version for a given document number and document version
                          - *ocr* denotes an  version for a given document number and document version
                    version:
                      type: integer
                      description: |-
                        The document version of the associated document.
                file:
                  type: string
                  description: |-
                    File to be uploaded.
      responses:
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/streams/{streamId}:
    description: |-
      None
    get:
      tags:
      - File Streams
    #- customers-{customerId}-libraries-{libraryId}-streams-{streamId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/streams/{streamId}
      summary: Get file stream
      description: |-
        Gets the byte stream of the specified stream ID.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_streams_{streamId}
      responses:
        200:
          description: ''
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  File name of the stream.
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Length of the stream in bytes.
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Content type of the stream.
          content:
            application/octet-stream:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: streamId
      in: path
      description: |-
        ID of the target stream.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/security-policy:
    description: |-
      None
    get:
      tags:
      - Security Policy
    #- customers-{customerId}-libraries-{libraryId}-security-policy
  #summary: GET /customers/{customerId}/libraries/{libraryId}/security-policy
      summary: Get library security policy
      description: |-
        Gets the ACL and security policies for the given library.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_security-policy
      parameters:
      - *id004
      - name: spm_custom1
        in: query
        description: |-
          Custom parameter for the security policy.
        schema:
          type: string
      - name: spm_custom2
        in: query
        description: |-
          Custom parameter for the security policy.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Common.effectiveSecurityPolicy'
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}:
    description: |-
      None
    get:
      tags:
      - Search Folders
    #- customers-{customerId}-libraries-{libraryId}-search-folders-{search_folder_id}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}
      summary: Get search folders
      description: |
        Returns the search criteria for the specified search folder ID.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the details of search folder active_us!8731:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/search-folders/active_us!8731`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`<br>
        To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`<br>
        To list the children (containers and documents) at the root level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
        To list the children (including folders, search folders, and documents) of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`<br>
        To return a list of folders from a library, see GET `/customers/{customerId}/libraries/{libraryId}/folders`<br>
        To see the search criteria of a search folder, see GET `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folderId}`<br>
        To update the search criteria for a search folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{folderId}`<br>
        To delete any folder (including a search folder), see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_search-folders_{search_folder_id}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    content_saved_search_id: '6'
                    database: Active
                    default_security: inherit
                    edit_date: '2007-11-14T02:37:17Z'
                    effective_security: full_access
                    folder_type: search
                    has_subfolders: false
                    id: Active!9059
                    is_container_saved_search: true
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Your Matters
                    owner: ADMINISTRATOR
                    owner_description: Administrator
                    parent_id: Active!9057
                    searchprofile:
                      custom1: customvalue
                      custom12: OPEN
                      custom20: customvalue
                      custom21_from: -1d
                      custom22_from: -2w
                      custom23_from: -3m
                      custom24_from: -4y
                      custom21_to: -0d
                      custom22_to: -1w
                      custom23_to: -2m
                      custom24_to: -3y
                      custom25: true
                      custom29: LITIGATION
                      custom30: LIABILITY
                      docnum: '1'
                      version: '2'
                      name: docSearch
                      author: ACASE
                      operator: ACASE
                      class: Document
                      fulltext: fulltext
                      subclass: subclass
                      type: Document
                      checked_out: true
                      in_use: true
                      databases: DB1,DB2
                      container: Active!3
                      emails_only: false
                      documents_only: true
                      description_fulltext: desc
                      comments_fulltext: comment
                      comments_description_fulltext: commentsanddesc
                      body: body
                      description: desc
                      size: 10
                    view_type: document
                    workspace_id: Active!9056
                    workspace_name: External User
                    wstype: folder
                required:
                - data
                type: object
                properties: *id257
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Search Folders
    #- customers-{customerId}-libraries-{libraryId}-search-folders-{search_folder_id}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}
      summary: Update a search folder
      description: |
        Updates the search criteria for the specified search folder ID.<br>

        The contents of the `searchprofile` field completely replaces the existing search criteria.
        Therefore, care must be taken to include the updated fields along with the existing fields that are not updated.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the search criteria for search folder active_us!8731:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/search-folders/active_us!8731`<br>
        Request body:<br>
        ```
        {
          "database"         : "active_us",
          "default_security" : "inherit",
          "name"             : "Due Soon Documents",
          "searchprofile"    :
          {
            "default_security"  : "public",
            "databases"         : "active_us",
            "docnum"            : "3000-5000"
          }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`<br>
        To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`<br>
        To list the children (containers and documents) at the root level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
        To list the children (including folders, search folders, and documents) of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`<br>
        To return a list of folders from a library, see GET `/customers/{customerId}/libraries/{libraryId}/folders`<br>
        To see the search criteria of a search folder, see GET `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folderId}`<br>
        To update the search criteria for a search folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{folderId}`<br>
        To delete any folder (including a search folder), see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_search-folders_{search_folder_id}
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: WorksiteDB
                name: SearchFolder1
                default_security: inherit
                searchprofile:
                  custom1: customvalue
                  custom20: customvalue
                  custom21_from: fromvalue
                  custom22_from: fromvalue
                  custom23_from: fromvalue
                  custom24_from: fromvalue
                  custom21_to: tovalue
                  custom22_to: tovalue
                  custom23_to: tovalue
                  custom24_to: tovalue
                  custom25: true
                  custom30: customvalue
                  docnum: '1'
                  version: '2'
                  name: docSearch
                  author: ACASE
                  operator: ACASE
                  class: Document
                  fulltext: fulltext
                  subclass: subclass
                  type: Document
                  checked_out: true
                  in_use: true
                  databases: DB1,DB2
                  container: Active!3
                  emails_only: true
                  documents_only: true
                  description_fulltext: desc
                  comments_fulltext: comment
                  comments_description_fulltext: commentsanddesc
                  body: body
                  description: desc
                  size: 10
              type: object
              properties: &id1236
                database:
                  type: string
                  description: |-
                    iManage Work library name where the search folder is located.
                name:
                  maxLength: 254
                  type: string
                  description: |
                    Name of the search folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                default_security:
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description:
                  type: string
                  description: |
                    Additional information about the folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                owner:
                  type: string
                  description: |
                    The user ID of the folder owner.<br><br>
                    This value can be updated only by an NRTADMIN.
                project_custom1:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3:
                  type: string
                  description: |
                    Specifies additional information about the search folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                searchprofile:
                  type: object
                  properties: &id1235
                    alias:
                      type: string
                      description: |-
                        A string to be searched for in the alias of the documents.
                    author:
                      type: string
                      description: |
                        The user ID who created the document.<br><br>
                        Multiple values can be included using a comma-separated list.
                        For examples: `"name": "ACASE"` or `"name": "ACASE,CPIERCE"`
                    body:
                      type: string
                      description: |-
                        Text in the document's body.
                    class:
                      type: string
                      description: |-
                        The document's class.
                    comment:
                      type: string
                      description: |-
                        Text in the document's comment property.
                    comments_description_fulltext:
                      type: string
                      description: |-
                        Text in the document's description property.
                    comments_fulltext:
                      type: string
                      description: |-
                        Text in the document's full text comment property.
                    container:
                      type: integer
                      description: |-
                        The number of the container that contains the documents to be searched for.<br>
                        For example, if container ID is `ACTIVE_US!34572` then `ACTIVE_US` is the library name and `34572` is the container number.
                    content_type:
                      type: string
                      description: |
                        Specifies the HTTP content type.<br><br>
                        This is formatted as *type/subtype*.
                        Examples include *text/plain*, and *image/GIF*.<br><br>
                        This parameter is preferred instead of `contenttype`.
                    contenttype:
                      type: string
                      description: |
                        Specifies the HTTP content type.<br><br>
                        This is formatted as *type/subtype*.
                        Examples include *text/plain*, and *image/GIF*.<br><br>
                        This parameter is provided for compatibility.
                        The preferred content type parameter is `content_type`.
                    create_date_end:
                      type: string
                      description: |-
                        The search value set to find items created on or before this date (in ISO 8601 format).
                    create_date_relative:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                    create_date_start:
                      type: string
                      description: |-
                        The search value set to find items created on or after this date (in ISO 8601 format).
                    custom1:
                      type: string
                      description: |-
                        Alias for custom1 property.
                    custom10:
                      type: string
                      description: |-
                        Alias for custom10 property.
                    custom11:
                      type: string
                      description: |-
                        Alias for custom11 property.
                    custom12:
                      type: string
                      description: |-
                        Alias for custom12 property.
                    custom13:
                      type: string
                      description: |
                        The value of the custom16 property.<br><br>
                        For workspaces, the use of this property is customized for your iManage Work installation.
                    custom14:
                      type: string
                      description: |
                        The value of the custom16 property.<br><br>
                        For workspaces, the use of this property is customized for your iManage Work installation.
                    custom15:
                      type: string
                      description: |
                        The value of the custom16 property.<br><br>
                        For workspaces, the use of this property is customized for your iManage Work installation.
                    custom16:
                      type: string
                      description: |
                        The value of the custom16 property.<br><br>
                        For workspaces, the use of this property is customized for your iManage Work installation.
                    custom17:
                      type: string
                      description: |-
                        The value of the custom17 property.<br><br>The use of this property is customized for your iManage Work installation.
                    custom18:
                      type: string
                      description: |-
                        The value of the custom18 property.<br><br>The use of this property is customized for your iManage Work installation.
                    custom19:
                      type: string
                      description: |-
                        The value of the custom19 property.<br><br>The use of this property is customized for your iManage Work installation.
                    custom2:
                      type: string
                      description: |-
                        Alias for custom3 property.
                    custom20:
                      type: string
                      description: |-
                        The value of the custom20 property.<br><br>The use of this property is customized for your iManage Work installation.
                    custom21_from:
                      type: string
                      description: |
                        Returns items created on or after this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    custom21_to:
                      type: string
                      description: |
                        Returns items created on or before this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying `2018-05-24T00:00:00-08:00` (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or before 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example:<br>
                         `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                        This property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value like `2018-05-24T00:00:00-08:00`.
                    custom22_from:
                      type: string
                      description: |
                        Returns items created on or after this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    custom22_to:
                      type: string
                      description: |
                        Returns items created on or before this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying `2018-05-24T00:00:00-08:00` (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or before 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example:<br>
                         `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                        This property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value like `2018-05-24T00:00:00-08:00`.
                    custom23_from:
                      type: string
                      description: |
                        Returns items created on or after this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    custom23_to:
                      type: string
                      description: |
                        Returns items created on or before this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying `2018-05-24T00:00:00-08:00` (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or before 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example:<br>
                         `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                        This property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value like `2018-05-24T00:00:00-08:00`.
                    custom24_from:
                      type: string
                      description: |
                        Returns items created on or after this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the earliest value to search from.
                        For example, specifying 2018-05-24T00:00:00-08:00 (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or after 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no lower limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example, `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    custom24_to:
                      type: string
                      description: |
                        Returns items created on or before this date.<br><br>
                        This is applicable for each custom21, custom22, custom23, custom24.
                        When searching, this parameter specifies the latest value to search to.
                        For example, specifying `2018-05-24T00:00:00-08:00` (Saturday May 24, 2018 00:00:00 PST) returns only items
                        with a property value on or before 2018-05-24T00:00:00-08:00.
                        If omitted or is invalid, there will be no upper limit, returning items based on other search criteria.
                        You can specify a date/time range by using *property_name*_from for the lower limit and *property_name*_to for the upper limit.
                        For example:<br>
                         `custom21_from=2018-05-24T00:00:00-08:00&custom21_to=2018-11-24T00:00:00-08:00`.<br><br>
                        This property is not reserved by iManage Work and is not a validated value.
                        It is intended to be customized for your company's requirements.
                        This is a date/time property in an ISO 8601 format value like `2018-05-24T00:00:00-08:00`.
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom property.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom property.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom property.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom property.
                    custom29:
                      type: string
                      description: |-
                        Alias for custom29 property.
                    custom3:
                      type: string
                      description: |-
                        Alias for custom3 property.
                    custom30:
                      type: string
                      description: |-
                        Alias for custom30 property.
                    custom4:
                      type: string
                      description: |-
                        Alias for custom4 property.
                    custom5:
                      type: string
                      description: |-
                        Alias for custom5 property.
                    custom6:
                      type: string
                      description: |-
                        Alias for custom6 property.
                    custom7:
                      type: string
                      description: |-
                        Alias for custom7 property.
                    custom8:
                      type: string
                      description: |-
                        Alias for custom8 property.
                    custom9:
                      type: string
                      description: |-
                        Alias for custom9 property.
                    databases:
                      type: string
                      description: |-
                        The library to find the document from.
                    description_fulltext:
                      type: string
                      description: |-
                        A friendly description of purpose of the full text search.
                    description:
                      type: string
                      description: |-
                        Text to find in the description property of the document.
                    docnum:
                      type: string
                      description: |
                        Specifies or indicates the document number search criterion.<br><br>
                        The following are the allowed formats:

                        |Description|Meaning|
                        |:---|:---|
                        |An exact document number.|Specify the document number. For example: `"docnum": "25"`. Multiple values may not be specified.|
                        |Between two document numbers.|Specify the document range with a hyphen. For example: `"docnum": "25-100"`.|
                        |After a document number.|Specify the document range with a greater than sign. For example: `"docnum": ">100"`. The specified document number will not be included.|
                        |Before a document number.|Specify the document range with a less than sign. For example: `"docnum": "<100"`. The specified document number will not be included.|
                    document_detect_value:
                      type: string
                      description: |-
                        Deprecated. Do not use.
                    edit_date_end:
                      type: string
                      description: |-
                        The search value set to find items whose last edit was on or before this date (in ISO 8601 format).
                    edit_date_relative:
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                    edit_date_start:
                      type: string
                      description: |-
                        The search value set to find items whose last edit was on or after this date (in ISO 8601 format).
                    edit_profile_end_date:
                      type: string
                      description: |-
                        The search value set to find items whose last profile edit was on or before this date (in ISO 8601 format).
                    edit_profile_start_date:
                      type: string
                      description: |-
                        The search value set to find items whose last profile edit was on or after this date (in ISO 8601 format).
                    fulltext:
                      type: string
                      description: |-
                        Indicates text to find in the `description` field.
                    languageid:
                      type: string
                      description: |
                        Indicates the language by the ISO 639-1 language code identifier.<br><br>
                        The following are the allowed values:
                        * Chinese: zh-CN
                        * English: en-US
                        * German: de-DE
                        * French: fr-FR
                        * French (Canadian): fr-CA
                        * Japanese: ja-JP
                        * Spanish: es-ES
                        * Portuguese: pt-BR
                      example: en-US
                    name:
                      type: string
                      description: |
                        Specifies or indicates the name of the document.<br><br>
                        Searches:
                        * Are whole words only. For example, *depos* will not match *deposition*.
                        * Are case insensitive.
                        * Do not support the wildcard character (&ast;).

                        The following are the allowed formats:

                        |Description|Meaning|
                        |:---|:---|
                        |Contains a word(s)|Specify the word that must be included. For example: `"name": "Trial"`. Multiple terms may be included using a comma-separated list. For example: `"name": "Trial,Enron"`.|
                        |Contains exactly a word or phrase|Specify the exact word or phrase inside quotation marks that must be included. For examples: `"name": ""deposition""` or `"name": ""deposition of""`.|
                        |Does not contain a word|Specify the word that must be excluded in a NOT phrase. For example: `"name": "NOT (Trial)"`|
                    operator:
                      type: string
                      description: |-
                        The user ID of the document's operator.
                      example: ACASE
                    size:
                      type: integer
                      description: |-
                        The size of the document in bytes.
                      format: int64
                    subclass:
                      type: string
                      description: |-
                        The document's subclass.
                    type:
                      type: string
                      description: |-
                        The document's type.
                    version:
                      type: string
                      description: |-
                        The latest document version number.
                    checked_out:
                      type: boolean
                      description: |
                        Specifies the document is checked out.<br><br>
                        If `true`, the document is checked out.<br>
                        If `false`, the document is not checked out.<br><br>
                        To check if the document is in use, see the parameter `in_use`.
                    in_use:
                      type: boolean
                      description: |
                        Specifies the document is in use.<br><br>
                        If `true`, the document is in use.<br>
                        If `false`, the document is not in use.<br><br>
                        To check if the document is checked out, see the parameter `checked_out`.
                    documents_only:
                      type: boolean
                      description: |
                        Specifies to return only documents and not emails.<br><br>
                        If `true`, returns only documents and not emails.<br>
                        If `false`, returns documents and emails.<br><br>
                        To specify returning emails, see the parameter `emails_only`.
                    emails_only:
                      type: boolean
                      description: |
                        Specifies to return only emails and not documents.<br><br>
                        If `true`, returns only emails and not documents.<br>
                        If `false`, returns emails and documents.<br><br>
                        To specify returning documents, see the parameter `documents_only`.
                  additionalProperties: false
                  description: |-
                    A set of criteria to be used as the search.
              additionalProperties: false
              description: |-
                Search folder to be updated.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    content_saved_search_id: '6'
                    database: Active
                    default_security: inherit
                    edit_date: '2007-11-14T02:37:17Z'
                    effective_security: full_access
                    folder_type: search
                    has_subfolders: false
                    id: Active!9059
                    is_container_saved_search: true
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Your Matters
                    owner: ADMINISTRATOR
                    owner_description: Administrator
                    parent_id: Active!9057
                    searchprofile:
                      custom1: customvalue
                      custom12: OPEN
                      custom20: customvalue
                      custom21_from: -1d
                      custom22_from: -2w
                      custom23_from: -3m
                      custom24_from: -4y
                      custom21_to: -0d
                      custom22_to: -1w
                      custom23_to: -2m
                      custom24_to: -3y
                      custom25: true
                      custom29: LITIGATION
                      custom30: LIABILITY
                      docnum: '1'
                      version: '2'
                      name: docSearch
                      author: ACASE
                      operator: ACASE
                      class: Document
                      fulltext: fulltext
                      subclass: subclass
                      type: Document
                      checked_out: true
                      in_use: true
                      databases: DB1,DB2
                      container: Active!3
                      emails_only: false
                      documents_only: true
                      description_fulltext: desc
                      comments_fulltext: comment
                      comments_description_fulltext: commentsanddesc
                      body: body
                      description: desc
                      size: 10
                    view_type: document
                    workspace_id: Active!9056
                    workspace_name: External User
                    wstype: folder
                required:
                - data
                type: object
                properties: *id257
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: search_folder_id
      in: path
      description: |-
        The search folder ID.
      required: true
      schema:
        example: Active!1234
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles:
    description: |-
      None
    get:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles
  #summary: GET /customers/{customerId}/libraries/{libraryId}/roles
      summary: Get library roles
      description: |
        Gets all the library roles that match the specified criteria.<br><br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user does not require any special administrative privilege to execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        All the privileges are listed for each role, and each privilege is either set as `true` or `false`.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_roles
      parameters:
      - *id004
      - name: alias
        in: query
        description: |+
          Filters roles based on the specified role ID.<br><br>
          This search is case insensitive and matches the exact string. The wildcard character (&ast;) is not supported.
          To perform a partial match search, use the parameter `query`.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: description
        in: query
        description: |+
          Filters roles based on the specified `description` field.<br><br>
          This search is case insensitive and matches the exact string. The wildcard character (&ast;) is not supported.
          To use a partial match search, use the parameter `query`.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: external
        in: query
        description: |+
          Filters roles based on their `is_external` value.<br>

          If `true`, only roles assigned to external users are returned.<br>
          If `false`, only roles assigned to regular users are returned.<br>
          If omitted, both external and internal roles are returned.

          For more information, see <a href="#overview--external-users"> External users</a>.

        schema:
          type: boolean
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Filters roles based on the specified string in either the `id` or `description` fields.<br><br>
          This parameter value is case insensitive, and automatically includes a partial match search. That is, it allows the use of the wildcard character (&ast;).
        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - description: Role with minimum privileges
                    database: ACTIVE_UK
                    id: 0011cZf9UHnPZQvHqnSGOUWp7i0F6A2a
                    m1: 4
                    m1_bits:
                      edit_external_default_security_folder: false
                      delete_public_folder: false
                      edit_external_default_security: false
                      checkout: false
                      allow_index_search: false
                      release: true
                      delete: false
                      delete_public_search_folder: false
                      create_public_search_folder: false
                      view_public_folder: false
                      edit_previous_versions: false
                      display_public_documents: false
                      read_only: false
                      view_public_search_folder: false
                      create_public_folder: false
                      import: false
                    m2: 0
                    m2_bits:
                      document_view: false
                      external: false
                      use_admin_tool: false
                      use_import_tool: false
                      use_monitor_tool: false
                    m3: 192
                    m3_bits:
                      author_workspace: false
                      browse_workspace: false
                      create_template: true
                      customize_personal_views: false
                      customize_public_views: false
                      delete_workspace: true
                      search_workspace: false
                      share_workspace: false
                    m4_bits:
                      admin_custom: false
                      admin_tier_1: true
                      admin_tier_2: true
                      content_assistance: true
                      custom_metadata_management: true
                      dms_job_operations: true
                      govern_security_management: false
                      report: true
                      report_management: true
                      role_management: false
                      system_management: false
                      system_metadata_management: true
                      system_job_operations: false
                      tier: 2
                      trustee_assistance: true
                      trustee_management: false
                  - description: Role for partners
                    database: ACTIVE_UK
                    id: 7611cZf9jhO7PZQvHqnSGOUWpkd4n
                    m1: 6
                    m1_bits:
                      edit_external_default_security_folder: false
                      delete_public_folder: false
                      edit_external_default_security: false
                      checkout: true
                      allow_index_search: false
                      release: true
                      delete: false
                      delete_public_search_folder: false
                      create_public_search_folder: false
                      view_public_folder: false
                      edit_previous_versions: false
                      display_public_documents: false
                      read_only: false
                      view_public_search_folder: false
                      create_public_folder: false
                      import: false
                    m2: 8
                    m2_bits:
                      document_view: true
                      external: false
                      use_admin_tool: false
                      use_import_tool: false
                      use_monitor_tool: false
                    m3: 193
                    m3_bits:
                      author_workspace: false
                      browse_workspace: true
                      create_template: true
                      customize_personal_views: false
                      customize_public_views: false
                      delete_workspace: true
                      search_workspace: false
                      share_workspace: false
                    m4_bits:
                      admin_custom: false
                      admin_tier_1: true
                      admin_tier_2: false
                      content_assistance: true
                      custom_metadata_management: true
                      dms_job_operations: true
                      govern_security_management: false
                      report: true
                      report_management: true
                      role_management: false
                      system_management: false
                      system_metadata_management: true
                      system_job_operations: false
                      tier: 1
                      trustee_assistance: true
                      trustee_management: false
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1567
                  data:
                    type: array
                    description: Array of roles
                    items:
                      $ref: '#/components/schemas/Users.role'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
    post:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles
  #summary: POST /customers/{customerId}/libraries/{libraryId}/roles
      summary: Create a library role
      description: |
        Creates a role in the specified library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: Tier 2. <br>
        That means, to execute this request a user must be assigned to a library-level role that has the tier 2 administrative access enabled.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a global role, see POST `/customers/{customerId}/roles`

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * For each role, the role bits are set as `true` or `false`, indicating if they are enabled or disabled.
        * If a role bit is not included in the request body while creating a role, its default value is set as `false`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_roles
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: External role
                description: Role for external users
                m1_bits:
                  allow_index_search: false
                  checkout: false
                  create_public_folder: false
                  create_public_search_folder: false
                  delete: false
                  display_public_documents: false
                  delete_public_folder: false
                  delete_public_search_folder: false
                  edit_external_default_security: false
                  edit_external_default_security_folder: false
                  edit_previous_versions: false
                  import: true
                  read_only: false
                  release: false
                  view_public_folder: false
                  view_public_search_folder: false
                m1: 1
                m2_bits:
                  document_view: false
                  external: true
                  use_admin_tool: false
                  use_import_tool: false
                  use_monitor_tool: false
                m2: 0
                m3_bits:
                  author_workspace: false
                  browse_workspace: false
                  create_template: false
                  customize_personal_views: false
                  customize_public_views: false
                  delete_workspace: false
                  search_workspace: true
                  share_workspace: false
                m3: 2
                m4_bits:
                  admin_custom: true
                  admin_tier_1: true
                  admin_tier_2: true
                  content_assistance: true
                  custom_metadata_management: true
                  dms_job_operations: true
                  govern_security_management: true
                  report: true
                  report_management: true
                  role_management: true
                  system_job_operations: true
                  system_metadata_management: true
                  trustee_assistance: true
                  trustee_management: true
                  tier: 2
                database: ACTIVE_US
                nvps:
                - name: Maximum users
                  value: '50'
                profiles:
                - profile_id: string
                  search_access: R
                  search_value: string
                  set_access: R
                  set_value: string
              required:
              - id
              - m1
              - m2
              - m3
              - profiles
              type: object
              properties: &id259
                id:
                  maxLength: 32
                  type: string
                  description: |+
                    Specifies the role ID (also referred to as role name).<br><br>
                    This value must be unique among the other role IDs in the same library.
                    Spaces are allowed. Maximum length&colon; 32.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                description:
                  type: string
                  description: |+
                    Specifies the description of the role.<br><br>
                    Maximum length&colon; 1024.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                m1_bits:
                  type: object
                  description: Role bits for document and folder operations.
                  properties:
                    allow_index_search:
                      type: boolean
                      description: |-
                        Specifies if the user can perform full text search.

                        The full-text search locates documents by search terms provided by the user that
                        exist in the document content, document profile, or workspace profile in the full-text indexer search engine.
                    checkout:
                      type: boolean
                      description: |
                        Specifies if the user can check out documents.

                        If the parameter `read_only` is `true`, `checkout` is automatically set to `false` even if it is specified as `true`.
                        See `read_only` for additional details.
                    create_public_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can create a public folder.

                        That is, new folders with the default security as Public can be created.
                    create_public_search_folder:
                      type: boolean
                      description: |
                        Specifies if the user can save public searches in a folder and mark them as public.

                        That is, new folders with the default security as Public can be created.
                    delete:
                      type: boolean
                      description: |
                        Specifies if the user can delete a document.

                        Without this privilege, users cannot delete any documents or emails within iManage Work, including those to which they have full access.

                        If the parameter `read_only` is `true`, `delete` is automatically set to `false` even if it is specified as `true`.
                        See `read_only` for additional details.
                    display_public_documents:
                      type: boolean
                      description: |-
                        Specifies if the user can view public documents, that is, documents with the default security set to Public.
                    delete_public_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can delete public folders.
                    delete_public_search_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can delete public search folders.
                    edit_external_default_security:
                      type: boolean
                      description: |-
                        Specifies if the user can edit the default security settings of documents shared to external users.
                    edit_external_default_security_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can edit the default security settings of folders shared to external users.
                    edit_previous_versions:
                      type: boolean
                      description: |-
                        Specifies if the user can edit previous versions of a document.
                    import:
                      type: boolean
                      description: |
                        Specifies if the user is allowed to import documents to iManage Work.

                        The user can import documents, upload new document versions, and replace existing documents with new ones.
                        If the parameter `read_only` is `true`, `import` is automatically set to `false` even if it is specified as `true`.
                        See `read_only` for additional details.
                    read_only:
                      type: boolean
                      description: |
                        Specifies if the user has read only access to documents and containers.

                        If `true`, the user cannot modify documents, and the following parameters must be set to false: `import`, `checkout`, `release`, and `delete`.<br>
                        If `false`, the user can modify documents, subject to the restrictions allowed by the following parameters: `import`, `checkout`, `release`, and `delete`.
                    release:
                      type: boolean
                      description: |
                        Specifies if the user can unlock a checked-out document.

                        If the parameter `read_only` is `true`, `release` is automatically set to `false` even if it is specified as `true`.
                        See `read_only` for additional details.
                    view_public_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can view public folders.
                    view_public_search_folder:
                      type: boolean
                      description: |-
                        Specifies if the user can view public search folders.

                  additionalProperties: false
                m1:
                  type: integer
                  description: |-
                    Specifies the bit mask for document and folder operations.<br>
                    This value is considered only when `m1_bits` is not provided.<br>
                  default: 0
                m2_bits:
                  type: object
                  description: Role bits for iManage administrative operations.
                  properties:
                    document_view:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to view documents.

                        Without this privilege, NRTADMINs cannot view the contents of any documents or emails within iManage Work.

                        To allow an NRTADMIN user to view private documents, you must add the user to a role that has `document_view` privilege set to `true`. This is the default setting.<br>
                        To prevent an NRTADMIN user assigned to a specific role from viewing documents, set `false` for this privilege.
                        However, the user will still be able to search for private documents irrespective of this setting.
                    external:
                      type: boolean
                      description: |-
                        Specifies if the role is intended for external users such as a customer, part-time contractor, vendor, or partner.
                        For more information, see <a href="#overview--external-users"> External users</a>.
                    use_admin_tool:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to use iManage Work Database Administration (DBAdmin) tool.

                        The NRTADMIN group has this permission by default.<br>
                        For more information, see *iManage Work Server Administration Guide* in [iManage Help Center](https://help.imanage.com/).
                    use_import_tool:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to use iManage Work Import tool.

                        If `true`, it allows users to use the bulk Document Import tool.
                        The NRTADMIN group has this permission by default.<br>
                        For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).
                    use_monitor_tool:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to use iManage Work Monitor tool.

                        If `true`, it provides access to use the iManage Monitor to track library transactions.
                        This tool enables users to locate, relocate or delete documents, mark documents for archiving, or change document profile information.
                        The NRTADMIN group has this permission by default.<br>
                        For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).

                  additionalProperties: false
                m2:
                  type: integer
                  description: |-
                    Specifies the bit mask for administrative operations.<br>
                    This value is considered only when `m2_bits` is not provided.
                  default: 0
                m3_bits:
                  type: object
                  description: Role bits for web page operations.
                  properties:
                    author_workspace:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to create new workspaces.
                    browse_workspace:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to browse the content of workspaces.
                    create_template:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to create workspace templates.
                    customize_personal_views:
                      type: boolean
                      description: |-
                        Specifies if a user is allowed to customize the layout of workspace and folder properties for personal view in the legacy iManage Work Web application.
                    customize_public_views:
                      type: boolean
                      description: |-
                        Specifies if a user is allowed to customize the layout of workspace and folder properties for all users in the legacy iManage Work Web application.
                    delete_workspace:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to delete workspaces.
                    search_workspace:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to search for workspaces.
                    share_workspace:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to share workspaces with external users.
                  additionalProperties: false
                m3:
                  type: integer
                  description: |-
                    Specifies the bit mask for web page operations.<br>
                    This value is considered only when `m3_bits` is not provided.
                  default: 0
                m4_bits:
                  type: object
                  description: Role bits for other administrative operations.
                  properties:
                    admin_custom:
                      type: boolean
                      description: |-
                        Specifies if the user can manage custom tables Custom1-12 and 29-30.
                    admin_tier_1:
                      type: boolean
                      description: |-
                        Specifies if the user is a tier 1 administrator.
                    admin_tier_2:
                      type: boolean
                      description: |-
                        Specifies if the user is a tier 2 administrator.
                    content_assistance:
                      type: boolean
                      description: |
                        Specifies if the user is allowed to check the effective access of other users to documents and workspaces.<br><br>
                        The user can also review history of documents, unlock documents, search for documents and workspaces, and restore documents.

                    custom_metadata_management:
                      type: boolean
                      description: |-
                        Specifies if a user is allowed to add new values to the lookup lists of custom fields Custom1-12 and 29-30.

                        However, a user with this privilege cannot update or delete a custom value.<br>
                        To update or delete a custom value, a user must either have a role with `admin_custom` as `true`, or `tier` as 2 or higher.
                        For more information, see <a href="#tag--Custom-Properties">Custom Properties</a>.

                        An iManage system administrator can allow or deny users with this privilege to add new values to the lookup lists of custom fields
                        on a field-by-field basis. For example, if an administrator allows adding Custom1 and 2 only, then a user with this privilege will be able
                        to add new values only for Custom1 and 2, and not for any other fields.
                        This can be configured in iManage Control Center using the global setting **Allow to Create Metadata**.
                        For more information, see <a href="https://docs.imanage.com/cc-help/10.4.0/en/Global.html" target="_blank">Global settings</a>.

                    dms_job_operations:
                      type: boolean
                      description: |-
                        Specifies if the user can perform export or import of documents and workspaces.
                    govern_security_management:
                      type: boolean
                      description: |-
                        Specifies if the user can govern Security Policy Manager (SPM) settings for other users.

                        For more information, see <a href="#tag--Security-Policy">Security policies</a>.
                    report:
                      type: boolean
                      description: |-
                        Not in use currently. Specifies if the user can view a report. <br><br>For example, active users report.
                    report_management:
                      type: boolean
                      description: |-
                        Not in use currently. Specifies if the user has access to manage reports. This role privilege allows to generate, modify, and delete reports.
                    system_management:
                      type: boolean
                      description: |-
                        Reserved for future use. Specifies if the user can view and manage the statistics, logs, and performance, of the iManage Work system.
                    role_management:
                      type: boolean
                      description: |-
                        Specifies if the user can add, modify and remove roles, manage user privileges, and manage admininstration privileges.
                    system_job_operations:
                      type: boolean
                      description: |-
                        Specifies if the user can re-assign users, perform metadata sync and AD/LDAP Sync, refile documents, and so on.
                    system_metadata_management:
                      type: boolean
                      description: |-
                        Specifies if the user can modify system metadata management settings.

                        This privilege allows a user to edit captions, create classes, subclasses, document types, templates, and associate applications with document file types.
                    trustee_assistance:
                      type: boolean
                      description: |-
                        Specifies if the user is allowed to do the following:
                        * Reset other user's password.
                        * Configure if their password expires or not.
                        * Force user to change their password on next logon.
                        * Enable or disable user's sign-in.
                    trustee_management:
                      type: boolean
                      description: |-
                        Specifies if a user is allowed to manage other users and groups.
                        This role privilege allows to do the following:
                        * Create and update users.
                        * Create, update, and delete groups.
                        * Modify group memberships.
                        * Copy group members from one group to another.
                        * Perform an admin search of users.
                    tier:
                      type: integer
                      description: |-
                        Specifies if the tier category to which the user belongs.
                  additionalProperties: true
                database:
                  type: string
                  description: Specifies the name of the library (formerly called
                    a database) in which the role is to be created.
                nvps:
                  type: array
                  items:
                    required:
                    - name
                    - value
                    type: object
                    properties:
                      name:
                        type: string
                        description: |-
                          Specifies the name for the name-value pair.
                      value:
                        type: string
                        description: |-
                          Specifies the value of the name-value pair.
                  description: |-
                    List of the name-value pairs.

                    Name-value pairs are customized properties to store any additional information.
                    The information is stored as a dictionary pair in the format `"key_name": "value"`.
                    For example, the information about the project leader for a role can be saved as `"project_lead": "ACASE"`.
                profiles:
                  type: array
                  items:
                    required:
                    - profile_id
                    - search_access
                    - search_value
                    - set_value
                    type: object
                    properties:
                      profile_id:
                        type: string
                        description: The document profile field on which the restriction
                          is to be applied.
                      search_access:
                        enum: ["R", "W"]
                        type: string
                        description: The read or write permission to users on the
                          default value of the profile field for searching for documents.
                      search_value:
                        type: string
                        description: The default profile field value that can be used
                          for searching for documents.
                      set_access:
                        enum: ["R", "W"]
                        type: string
                        description: The read or write permission to users on the
                          default value of the profile field for creating or updating
                          document profiles.
                      set_value:
                        type: string
                        description: The default profile field value that can be used
                          for creating or updating document profiles.
                    additionalProperties: false
                  description: |-
                    List of profiles associated with the role.

                    Using these profiles, certain restrictions can be set on document profile fields for users assigned to this role.
                    The restrictions are applicable while searching for documents, or creating, updating or viewing the profile of a document.<br>
                    For example, if a role is to be restricted to search and create documents only for the client *Microsoft* with `custom1` as `1001`, then the profile can defined as:
                    ```
                    {
                    "profile_id": "custom1",
                    "search_access": "R",
                    "search_value": "1001",
                    "set_access": "R",
                    "set_value": "1001"
                    }
                    ```
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles/{alias}:
    description: |-
      None
    get:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/roles/{alias}
      summary: Get role details
      description: |-
        Gets the information about the role associated with the specified role ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user does not require any special administrative privilege to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_roles_{alias}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE
                    description: UpdateRole called by stest
                    id: STEST-ROLE-4856-1060
                    allow_index_search: true
                    checkout: true
                    create_public_folder: false
                    create_public_search_folder: true
                    display_public_documents: true
                    edit_external_default_security: false
                    edit_external_default_security_folder: false
                    delete: true
                    delete_public_folder: false
                    delete_public_search_folder: false
                    edit_previous_versions: false
                    import: true
                    read_only: false
                    release: true
                    view_public_folder: true
                    view_public_search_folder: true
                    document_view: false
                    external: false
                    use_admin_tool: false
                    use_import_tool: false
                    use_monitor_tool: true
                    author_workspace: false
                    browse_workspace: false
                    create_template: false
                    customize_personal_views: false
                    customize_public_views: false
                    delete_workspace: false
                    search_workspace: false
                    share_workspace: false
                    admin_custom: false
                    admin_tier_1: false
                    admin_tier_2: false
                    admin_tier_3: false
                    content_assistance: false
                    custom_metadata_management: false
                    dms_job_operations: false
                    govern_security_management: false
                    report: false
                    report_management: false
                    role_management: false
                    system_job_operations: false
                    system_management: false
                    system_metadata_management: false
                    tier: 0
                    trustee_assistance: false
                    trustee_management: false
                required:
                - data
                type: object
                properties: *id258
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/roles/{alias}
      summary: Update a role
      description: |-
        Updates the profile of the role associated with the specified role ID.

        The new profile must be provided as the request body.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to call this request: Tier 2.<br>
        That means, a user must be assigned to a role that has tier 2 administrative privileges.

      operationId: PUT_customers_{customerId}_libraries_{libraryId}_roles_{alias}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - id
              - m1
              - m2
              - m3
              - profiles
              type: object
              properties: *id259
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/roles/{alias}
      summary: Delete a role
      description: |-
        Deletes the role associated with the specified role ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to call this request: Tier 2.<br>
        That means, a user must be assigned to a role that has tier 2 administrative privileges

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_roles_{alias}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: alias
      in: path
      description: |-
        The role ID to be used as the request path parameter.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles/{alias}/users:
    description: |-
      None
    get:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}-users
  #summary: GET /customers/{customerId}/libraries/{libraryId}/roles/{alias}/users
      summary: Get users assigned to a role
      description: |-
        Gets the users who are assigned to the specified role.

        The user profiles are also returned in the response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to call this request: None.<br>
        The user does not required any privilege to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_roles_{alias}_users
      parameters:
      - *id004
      - *id085
      - *id086
      - *id087
      - *id088
      - *id089
      - *id011
      - *id090
      - *id260
      - *id006
      - *id091
      - *id092
      - name: query
        in: query
        example: ACASE
        schema:
          type: string
        description: |
          Filters users based on the string that matches the `id` and `full_name` of the users.

          * The wildcard character (&ast;) is supported.
          * To match partial fields, include the wildcard character (&ast;) at the beginning or end of the the query value.
          * If no wildcard character is included, only the users that match the exact string are returned.
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: *id093
                additionalProperties: false
        401: *id008
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: alias
      in: path
      description: |-
        The role ID to be used as the request path parameter.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/roles/{alias}/users/{userId}:
    description: |-
      None
    post:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}-users-{userId}
  #summary: POST /customers/{customerId}/libraries/{libraryId}/roles/{alias}/users/{userId}
      summary: Assign a role to a user
      description: |-
        Assigns a role to the specified user.
        All role privileges are automatically assigned to the user.

        This POST request does not have a request body as both the role alias and user ID are provided as request path parameters.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to call this request: Tier 2.<br>
        That means, a user must be assigned to a role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * A user can be assigned to only one role at a time.
        * Prior to executing this request to assign a role, a user must not be assigned to any other role except DEFAULT or DEFAULT_EXTERNAL.
        * An error occurs if an attempt is made to assign a role to a user who is already assigned to another role.
          To assign a new role, the user must be removed from the current role and and then assigned to the new one.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_roles_{alias}_users_{userId}
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Library Roles
    #- customers-{customerId}-libraries-{libraryId}-roles-{alias}-users-{userId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/roles/{alias}/users/{userId}
      summary: Remove user from a role
      description: |-
        Removes the specified user from the assigned role.
        All the role privileges are automatically revoked from the user.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to call this request: Tier 2.<br>
        That means, a user must be assigned to a role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * When a user is removed from a role, the default roles DEFAULT or DEFAULT_EXTERNAL
          are automatically assigned based on whether the user is internal or external, respectively.
        * This request throws an error if an attempt is made to remove a user from the default role.

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_roles_{alias}_users_{userId}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id008
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: alias
      in: path
      description: |-
        The role ID to be used as the request path parameter.
      required: true
      schema:
        example: HR_MANAGERS
    - $ref: '#/components/parameters/userId'

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-workspaces:
    description: |-
      None
    get:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-workspaces
  #summary: GET /customers/{customerId}/libraries/{libraryId}/recent-workspaces
      summary: Get recent workspaces
      description: |
        Returns a list of workspaces on which there has been any recent activity (within the last 30 days) from a specified library.<br><br>
        For a more a detailed recent workspaces search, or to provide more parameters conveniently, see POST `/customers/{customerId}/libraries/{libraryId}/recent-workspaces`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_recent-workspaces
      parameters:
      - *id004
      - name: activity
        in: query
        description: |-
          A list of activities that were performed on the workspace recently.<br><br>

          One or more of the following activity codes can be provided as a search filter.
          The values are case insensitive.
          Multiple values are separated by a comma.
          For example, document_actions,new_workspace.<br><br>

          The following are allowed values:<br><br>

          |Activity|Description|
          |---|---|
          |document_actions|Workspaces where a document under those was recently modified or newly created.|
          |new_workspace|Recently created workspaces.|
          |browse|Recently browsed workspaces [used by classic clients].|
        schema:
          type: string
          default: "document_actions,new_workspace"
      - *id261
      - *id262
      - *id263
      - *id264
      - *id265
      - *id266
      - *id267
      - *id268
      - *id269
      - *id270
      - *id271
      - *id272
      - *id273
      - *id274
      - *id275
      - *id276
      - *id277
      - *id278
      - *id279
      - *id280
      - *id281
      - *id282
      - *id283
      - *id284
      - *id285
      - *id286
      - *id287
      - *id288
      - *id289
      - *id290
      - *id291
      - *id292
      - *id293
      - *id294
      - *id295
      - *id296
      - *id297
      - *id298
      - *id299
      - name: facets
        in: query
        description: |
          Specifies which facets to return.

          Facets are a summary list of the most common occurrences for each facet type listed.
          For example, if `facets` specifies custom1, all items containing any value for custom1 are counted.
          The five items with the highest counts are returned.
          Facets allow users to anticipate selections, or to present a list of suggestions that the user will likely select.

          Multiple facets can be included using a comma-separated list.
          For example: `facets=custom1,custom2,custom9`.
          If this parameter is omitted, which is the default value, no facets are returned.
          Possible values are: custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.

          This parameter is often used along with the `results` parameter.
          If neither of the parameters are included, only the search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, no data of either type is returned. However, an empty response object is returned.<br>

          <font style="color:black;font-size: 15px;font-weight: bold;">Sample request</font><br>
          In this example, the search is GET `https://www.ajubalaw.com/work/api/v2/customers/100/recent-workspaces?results=false&facets=custom1,custom9`.
          The response JSON object does not include any search results.
          The facets section specified returning custom9 but there are no custom9 values to return.
          However, three custom1 values are returned, with *Microsoft* being the most common with 132 instances.

          <pre>
          {
            "data": {
              "facets": {
                "custom1": [
                  {
                    "alias"      : "Microsoft",
                    "count"      : 132,
                    "description": "Microsoft Corporation"
                  },
                  {
                    "alias"      : "Amazon",
                    "count"      : 20,
                    "description": "Amazon.com, Inc"
                  },
                  {
                    "alias"      : "Wallachs",
                    "count"      : 1,
                    "description": "Wallachs"
                  }
                ],
                "custom9": []
              }
            }
          }</pre>
        schema:
          type: string
      - name: limit
        in: query
        description: |
          Maximum number of items to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id300
      - *id301
      - *id006
      - *id302
      - *id029
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - name: userId
        in: query
        description: |
          The user ID who performed recent activities on a workspaces.<br><br>
          If this parameter is omitted, the currently signed in user ID is used.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-04-27T14:36:39-05:00'
                      author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2017-04-10T09:23:58-05:00'
                      custom1: '0999'
                      custom2: '0001'
                      custom3: ACTIVE
                      custom4: CA
                      database: Active
                      default_security: private
                      description: Pepsi vs. Coca Cola
                      document_number: 111347
                      edit_date: '2017-04-10T09:23:58-05:00'
                      edit_profile_date: '2017-04-26T12:17:49-05:00'
                      file_create_date: '2017-04-10T09:23:58-05:00'
                      file_edit_date: '2017-04-10T09:23:58-05:00'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!20213
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=111347&&ver=1
                      last_user: ACASE
                      location: DEFSERVER:\DOCS\ACTIVE\ACASE\37\1\111347.1
                      name: Daniels vs. Bell
                      operator: ACASE
                      owner: ACASE
                      owner_description: Andrew Case
                      project_custom1: '0999'
                      project_custom2: '0001'
                      project_custom3: ACTIVE
                      retain_days: 365
                      size: 0
                      subclass: MATTER
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!20213
                      wstype: workspace
                    - activity_date: '2017-04-27T14:29:01-05:00'
                      author: ACASE
                      class: WEBDOC
                      content_type: P
                      create_date: '2007-06-13T11:53:45-05:00'
                      custom1: '1086'
                      custom2: '1'
                      database: Active
                      default_security: public
                      document_number: 89
                      edit_date: '1999-07-02T07:11:53-05:00'
                      edit_profile_date: '2007-06-13T11:53:45-05:00'
                      file_create_date: '2007-06-13T11:53:45-05:00'
                      file_edit_date: '1999-07-02T07:11:53-05:00'
                      has_attachment: false
                      has_documents: false
                      has_subfolders: true
                      id: Active!492
                      in_use: false
                      indexable: false
                      is_checked_out: false
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      iwl: iwl:dms=ACTIVE&&lib=&&num=89&&ver=1
                      last_user: ADMINISTRATOR
                      location: DEFSERVER:\DOCS\Active\ADMINIST\0\1\89.1
                      name: 1086.1 - General
                      operator: ACASE
                      owner: ADMINISTRATOR
                      owner_description: Administrator
                      project_custom3: Active|87|8.2.14
                      retain_days: 365
                      size: 124
                      subclass: MATTER
                      subtype: work
                      type: XML
                      version: 1
                      workspace_id: Active!492
                      wstype: workspace
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                  total_count: 2
                required:
                - data
                type: object
                properties: *id027
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-workspaces
  #summary: POST /customers/{customerId}/libraries/{libraryId}/recent-workspaces
      summary: Scoped search for recent workspaces
      description: |
        ## POST customers/{customerId}/libraries/{libraryId}/recent-workspaces
        Returns a list of workspaces on which there has been any recent activity (within the last 30 days) from a specified library.<br><br>
        For a more generalized recent workspaces search, see GET `/customers/{customerId}/libraries/{libraryId}/recent-workspaces`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_recent-workspaces
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Workspace Request
              type: object
              properties: *id303
              example: *id304
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Workspace Response
                required:
                - data
                - overflow
                type: object
                properties: *id305
                example: *id306
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-workspaces/admin-import:
    description: |-
      None
    post:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-workspaces-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/recent-workspaces/admin-import
      summary: Add workspaces to Recent Workspaces list
      description: |
        Add workspaces to worklist.<br><br>
        This api requires administrative privileges and allows the administrator to populate matter worklist for any user.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_recent-workspaces_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                workspaces:
                - user_id: ACASE
                  id: Active!9192
                  activity: new_workspace
                  activity_date: '2018-12-18T10:01:30Z'
              required:
              - workspaces
              type: object
              properties: &id1626
                workspaces:
                  type: array
                  items:
                    required:
                    - user_id
                    - id
                    - activity_date
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: |-
                          User ID.
                      id:
                        type: string
                        description: |-
                          Unique ID of the workspace.
                        example: Active!5
                      activity:
                        type: string
                        enum: [new_workspace, browse]
                        default: new_workspace
                        description: |
                          A list of activities that were performed on the workspace.<br><br>

                          One of the following activity codes can be provided, if not the default, new_workspace, will be used.
                          The values are case insensitive.
                          For example, new_workspace.<br><br>
                          The following are allowed values:<br><br>

                          |Activity|Description|
                          |---|---|
                          |new_workspace|Recently created workspaces.|
                          |browse|Recently browsed workspaces [used by classic clients].|
                        example: activity=new_workspace
                      activity_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the workspace is added to the worklist.
                  description: |-
                    List of workspaces to be added to the worklist.
                import_id:
                  type: string
                  description: |-
                    Reserved for future use.
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: ''
                    task_id: ''
                    status: completed
                required:
                - data
                type: object
                properties: &id375
                  data:
                    required:
                    - status
                    type: object
                    properties:
                      import_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      task_id:
                        type: string
                        description: |-
                          Reserved for future use.
                      status:
                        enum: [queued, completed, failed]
                        type: string
                        description: |-
                          Indicates the status of import task.

                          |Status|Description|
                          |:---|:---|
                          | queued   | The import is in progress and in the queue.|
                          | completed| The import has completed.|
                          | failed   | The import has failed and needs investigation.|
                    additionalProperties: true
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-folders:
    description: |-
      None
    get:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-folders
  #summary: GET /customers/{customerId}/libraries/{libraryId}/recent-folders
      summary: Get recent folders
      description: |-
        Returns a list of folders on which there has been any recent activity (within the last 30 days) from a specified library.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_recent-folders
      parameters:
      - *id004
      - name: email_only
        in: query
        description: |-
          If `true`, returns recent folders with most recent email activities.
        schema:
          type: boolean
          default: false
      - name: exclude_emails
        in: query
        description: |-
          If `true`, returns recent folders with most recent document activities.
        schema:
          type: boolean
          default: false
      - *id011
      - *id006
      - *id029
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-03-27T02:56:29Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-02-04T07:08:23Z'
                      email: icc.Active@ajubalaw.com
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!17078
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: ICC
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!15680
                      workspace_id: Active!15680
                      workspace_name: Employment Agreements
                      wstype: folder
                    - activity_date: '2017-03-24T12:04:49Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-03-24T12:04:31Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!14345
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: test_create_folder
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!9472
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: folder
                    - activity_date: '2017-03-24T12:04:25Z'
                      database: Active
                      default_security: inherit
                      edit_date: '2017-03-24T12:03:38Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Active!16324
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Depositions
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!9192
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: folder
                    - activity_date: '2017-03-24T10:56:05Z'
                      database: Archive
                      default_security: inherit
                      edit_date: '2017-03-24T09:40:22Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Archive!25
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Folder with Shortcuts
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Archive!24
                      workspace_id: Archive!23
                      workspace_name: Shortcut City
                      wstype: folder
                    - activity_date: '2017-03-24T10:56:05Z'
                      database: Archive
                      default_security: inherit
                      edit_date: '2017-03-09T17:35:59Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: Archive!21
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Documents
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Archive!20
                      workspace_id: Archive!19
                      workspace_name: 112233.020 - Apple vs. Archive-imanage
                      wstype: folder
                  total_count: 120
                required:
                - data
                type: object
                properties: *id307
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-email:
    description: |-
      None
    get:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-email
  #summary: GET /customers/{customerId}/libraries/{libraryId}/recent-email
      summary: Get recent emails
      description: |
        Returns a list of emails that have had recent activity (activity within the last 30 days) from a specified library.<br><br>
        For a more a detailed recent email search, or to provide more parameters conveniently, see POST `/customers/{customerId}/libraries/{libraryId}/recent-emails`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_recent-email
      parameters:
      - *id004
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: boolean
          default: true
      - *id011
      - *id006
      - name: received_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: "-30:0d"
      - name: recipient
        in: query
        description: |-
          A string that appears in any of the recipient fields of the emails in the result.
        schema:
          type: string
          example: "current resident"
      - name: sender
        in: query
        description: |-
          A string that appears in the sender field of the emails in the result.
        schema:
          type: string
          example: "johnson"
      - name: sent_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: "-30:0d"
      - *id029
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
          example: -300
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    cc: Andrew Case <acase@ajubalaw.com>, Kelly Thompson <kthompson@ajubalaw.com>
                    conversation_count: 1
                    conversation_id: RndkOiBGdzogQ29udGluZW50YWwvRGVsdGEgbWVldGluZyByZXNjaGVkdWxlZCBmcm9tIEZlYiAxMXRoIHRvIEZlYiAxMnRoIGZyb20gMTozMC0zOjAwIFBNIGluIEVucm9uIEJ1aWxkaW5nIDMzMjE=
                    conversation_name: 'Fwd: Fw: Continental/Delta meeting rescheduled
                      from Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building
                      3321'
                    create_date: '2017-01-25T23:05:20-05:00'
                    custom13: Andrew Case <acase@ajubalaw.com>
                    custom14: Barbara Cummings <bcummings@ajubalaw.com>, Ed White
                      <ewhite@ajubalaw.com>
                    custom15: Andrew Case <acase@ajubalaw.com>, Kelly Thompson <kthompson@ajubalaw.com>
                    custom21: '2017-01-25T20:57:48-05:00'
                    custom22: '2017-01-25T21:14:41-05:00'
                    database: active_us
                    document_number: 108238
                    edit_date: '2017-01-25T23:05:20-05:00'
                    extension: eml
                    from: Andrew Case <acase@ajubalaw.com>
                    has_attachment: false
                    id: active_us!108238.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=active_us&&num=108238&&ver=1
                    last_user: ACASE
                    name: 'Fwd: Fw: Continental/Delta meeting rescheduled from Feb
                      11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                    operator: ACASE
                    received_date: '2017-01-25T21:14:41-05:00'
                    sent_date: '2017-01-25T20:57:48-05:00'
                    size: 64910
                    subject: 'Fwd: Fw: Continental/Delta meeting rescheduled from
                      Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                    to: Barbara Cummings <bcummings@ajubalaw.com>, Ed White <ewhite@ajubalaw.com>
                    type: EML
                    version: 1
                    workspace_id: active_us!15620
                    workspace_name: gfu
                    wstype: email
                  - author: ACASE
                    cc: Barbara Cummings; Ed White
                    conversation_count: 3
                    conversation_id: V2Vpw59lcyBLYW5pbmNoZW4=
                    conversation_name: Weißes Kaninchen
                    create_date: '2017-02-07T16:20:27-05:00'
                    custom13: Kelly Thompson
                    custom14: Barbara Cummings; Ed White
                    custom15: Andrew Case; Kelly Thompson
                    custom21: '2017-01-23T15:06:52-05:00'
                    custom22: '2017-01-23T15:06:57-05:00'
                    database: active_us
                    document_number: 108889
                    edit_date: '2017-02-07T16:20:27-05:00'
                    extension: msg
                    from: Kelly Thompson
                    has_attachment: false
                    id: active_us!108889.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=active_us&&num=108889&&ver=1
                    last_user: ACASE
                    name: Weißes Kaninchen
                    operator: ACASE
                    received_date: '2017-01-23T15:06:57-05:00'
                    sent_date: '2017-01-23T15:06:52-05:00'
                    size: 248320
                    subject: Weißes Kaninchen
                    to: Andrew Case; Kelly Thompson
                    type: MIME
                    version: 1
                    workspace_id: active_us!11429
                    workspace_name: 00000-0001-0002 Weisses Kaninchen
                    wstype: email
                  - author: ACASE
                    conversation_count: 1
                    conversation_id: S2VsbHkgVGhvbXBzb24gaGFzIHNoYXJlZCBhIGRvY3VtZW50IHdpdGggeW91ICBcdTA2MzMgXHUwNjQxIFx1MDZDQyBcdTA2MkYgIFx1MDYyRSBcdTA2MzEgXHUwNkFGIFx1MDY0OCBcdTA2MzQgZG9jeA==
                    conversation_name: Kelly Thompson has shared a document with you
                    create_date: '2016-10-31T20:24:39-05:00'
                    custom13: test
                    custom14: test
                    custom21: '2016-12-08T01:00:00-05:00'
                    custom22: '2016-12-09T01:00:00-05:00'
                    database: Archive
                    document_number: 81
                    edit_date: '2016-10-31T20:24:39-05:00'
                    extension: msg
                    from: test
                    has_attachment: false
                    id: Archive!81.1
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=MAIN&&lib=Archive&&num=81&&ver=1
                    last_user: KTHOMPSON
                    name: Kelly Thompson has shared a document with you
                    operator: KTHOMPSON
                    received_date: '2016-12-09T01:00:00-05:00'
                    sent_date: '2016-12-08T01:00:00-05:00'
                    size: 83968
                    subject: Kelly Thompson has shared a document with you
                    to: test
                    type: MIME
                    version: 1
                    workspace_id: Archive!32
                    workspace_name: 1080.1000 - Larry Johnson Lawsuit
                    wstype: email
                  total_count: 742
                required:
                - data
                type: object
                properties: *id308
                additionalProperties: false
                description: |-
                  Email response with flattened participant list.
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-email
  #summary: POST /customers/{customerId}/libraries/{libraryId}/recent-email
      summary: Scoped search for recent emails
      description: |
        Returns a list of emails that have had recent activity (activity within the last 30 days) from a specified library.<br><br>
        For a more generalized recent email search, see GET `/customers/{customerId}/libraries/{libraryId}/recent-email`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_recent-email
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Email Request
              type: object
              properties: *id309
              example: *id310
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Email Response
                required:
                - data
                - overflow
                type: object
                properties: *id311
                example: *id312
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-documents:
    description: |-
      None
    get:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/recent-documents
      summary: Get recent documents
      description: |
        Returns a list of documents that have had recent activity (activity within the last 30 days) from a specified library.<br><br>
        For a more a detailed recent documents search, or to provide more parameters conveniently, see POST `/customers/{customerId}/libraries/{libraryId}/recent-documents`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_recent-documents
      parameters:
      - *id004
      - name: activity
        in: query
        description: |
          A list of recent activities that have been performed on documents.<br><br>
          The values from the Common names in the table below are case insensitive.
          Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
          The following are the activity values and their descriptions&colon;
          * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
          * **Common Name** is the friendly name that appears in the response structure.
          * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
          * **Description** is the explanation of the activity.<br><br>

          |Activity|Common Name|Code|Description|
          |---|---|---|---|
          |LAUNCH|Open|0|Application was launched or opened.|
          |VIEW|View|1|The item was viewed.|
          |CHECKOUT|Checkout|2|The item was checked out.|
          |CHECKIN|Checkin|3|The item was checked in.|
          |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
          |DOCCLOSE|Close|5|The document was closed.|
          |NEWDOCUMENT|Create|6|The document was created.|
          |NEWDOCVER|Create Version|7|The document's version was updated.|
          |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
          |COPYDOC|Copy|9|The document was copied.|
          |PRINT|Print|10|The item was printed.|
          |MAIL|Mail|11|The item was mailed.|
          |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
          |DELETEDOC|Delete|13|The document was deleted.|
          |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
          |ARCHIVEDOC|Archive|15|The document was archived.|
          |RESTOREDOC|Restore|16|The document was restored.|
          |RELEASEDOC|Release|17|The document was released.|
          |EXPORT|Export|18|The item was imported.|
          |MODIFY|Modify|19|The item was modified.|
          |EDITTIME|Edit Time|20|The time spent editing the item.|
          |SHRED|Shred|21|The item was shredded.|
          |DECLARE|Declared|22|The item was declared for archiving.|
          |MIGRATED|Migrated|23|The item was migrated.|
          |UNDECLARE|Undeclared|24|The item was undeclared as record.|
          |RECONCILE|Reconciled|25|The item was reconciled.|
          |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
          |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
          |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
          |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
          |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
          |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
          |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
        schema:
          type: string
          default: view,edit
          example: activity=view,edit
      - name: activity_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - *id313
      - *id314
      - *id315
      - *id316
      - *id317
      - *id318
      - *id319
      - *id320
      - *id321
      - *id322
      - *id323
      - *id324
      - *id325
      - *id326
      - *id327
      - *id328
      - *id329
      - *id330
      - *id331
      - *id332
      - *id333
      - *id334
      - *id335
      - *id336
      - *id337
      - *id338
      - *id339
      - *id340
      - *id341
      - *id342
      - *id343
      - *id344
      - *id345
      - *id346
      - *id347
      - *id348
      - *id349
      - *id350
      - *id351
      - *id352
      - *id353
      - *id354
      - *id355
      - *id356
      - *id357
      - *id358
      - *id359
      - *id360
      - *id361
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: boolean
          default: true
      - *id362
      - *id363
      - *id364
      - *id365
      - name: limit
        in: query
        description: |
          Maximum number of items to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id006
      - *id366
      - *id367
      - *id368
      - name: results
        in: query
        description: |-
          Indicates whether to include search results.<br><br>
          If `true`, the search results are returned.<br>
          If `false`, no search results are returned.<br>
          The default value is `true`.<br><br>

          This parameter is often used along with the `facets` parameter.
          If neither of the parameters are included, only search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned.
          If both the parameters are specified, both facets and search results are returned.
          If `results=false` and no valid facets parameters are specified, then no data of either kind are returned.
        schema:
          type: boolean
          default: true
      - *id029
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - *id369
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - activity_date: '2017-03-17T04:10:38Z'
                      author: ACASE
                      class: DOC
                      comment: editing comments
                      create_date: '2017-03-14T21:57:40Z'
                      custom3: INPROGRESS
                      custom4: IL
                      database: Active
                      default_security: public
                      document_number: 110410
                      edit_date: '2017-03-14T21:57:40Z'
                      edit_profile_date: '2017-03-16T19:09:04Z'
                      extension: docx
                      file_create_date: '2017-03-14T21:57:37Z'
                      file_edit_date: '2017-03-14T21:57:37Z'
                      has_attachment: false
                      id: Active!110410.2
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=ACTIVE&&lib=Active&&num=110410&&ver=2
                      last_user: ACASE
                      name: Doc1
                      operator: ACASE
                      size: 16750
                      type: WORDX
                      version: 2
                      workspace_id: Active!11429
                      workspace_name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - activity_date: '2017-03-16T21:02:31Z'
                      author: ACASE
                      class: DOC
                      create_date: '2017-03-14T20:22:23Z'
                      custom1: '1086'
                      custom2: '1'
                      custom3: INPROGRESS
                      custom4: IL
                      database: Active
                      default_security: public
                      document_number: 110405
                      edit_date: '2017-03-14T20:22:23Z'
                      edit_profile_date: '2017-03-14T20:22:23Z'
                      extension: rtf
                      file_create_date: '2017-03-14T20:22:23Z'
                      file_edit_date: '2017-03-14T20:22:23Z'
                      has_attachment: false
                      id: Active!110405.1
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110405&&ver=1
                      last_user: ACASE
                      name: HP Branded EULA
                      operator: ACASE
                      size: 55791
                      type: RTF
                      version: 1
                      workspace_id: Active!11429
                      workspace_name: 00000-0001-0002 Stanford Vs. Weisses Kaninchen
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - activity_date: '2017-03-16T20:24:47Z'
                      author: ACASE
                      class: DOC
                      create_date: '2017-03-16T20:24:46Z'
                      custom1: '9999'
                      custom2: '1045'
                      custom29: LABOR
                      database: Active
                      default_security: public
                      document_number: 110477
                      edit_date: '2017-03-16T20:24:46Z'
                      edit_profile_date: '2017-03-16T20:24:46Z'
                      extension: docx
                      file_create_date: '2017-03-16T20:24:46Z'
                      file_edit_date: '2017-03-16T20:24:46Z'
                      has_attachment: false
                      id: Active!110477.1
                      in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_most_recent_activity: true
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110477&&ver=1
                      last_user: ACASE
                      name: SAMP Doc
                      operator: ACASE
                      size: 68761
                      type: WORDX
                      version: 1
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                  total_count: 224
                required:
                - data
                type: object
                properties: *id370
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-documents
  #summary: POST /customers/{customerId}/libraries/{libraryId}/recent-documents
      summary: Scoped search for recent documents
      description: |
        Returns a list of documents that have had recent activity (activity within the last 30 days) from a specified library.<br><br>
        For a more generalized recent documents search, see GET `/customers/{customerId}/libraries/{libraryId}/recent-documents`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_recent-documents
      requestBody:
        content:
          application/json:
            schema:
              title: Recent Documents Request
              type: object
              properties: *id371
              example: *id372
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Recent Documents Response
                required:
                - data
                - overflow
                type: object
                properties: *id373
                example: *id374
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/recent-documents/admin-import:
    description: |-
      None
    post:
      tags:
      - Recent Items
    #- customers-{customerId}-libraries-{libraryId}-recent-documents-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/recent-documents/admin-import
      summary: Add documents to Recent Documents list
      description: |
        Add documents to worklist.<br><br>
        This request requires administrative privileges and allows the administrator to populate a documents worklist for any user.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_recent-documents_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                documents:
                - user_id: ACASE
                  id: Active!123.1
                  activity: modify
                  activity_date: '2018-12-18T10:01:30Z'
              required:
              - documents
              type: object
              properties: &id1625
                documents:
                  type: array
                  items:
                    required:
                    - user_id
                    - id
                    - activity
                    - activity_date
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: |-
                          User ID.
                      id:
                        type: string
                        description: |-
                          ID of the document.
                        example: Active!123.1
                      activity:
                        type: string
                        description: |-
                          A list of recent activities that can be performed on documents.
                          One of the following activity codes can be provided for a document.
                          The values are case insensitive.
                          The following are allowed values:

                          |Activity|Description|
                          |---|---|
                          |view|Recently viewed documents.|
                          |checkout|Recently checked out documents.|
                          |new_document|Recently created documents.|
                          |new_version|Recently created versions.|
                          |copy_document|Recently copied documents.|
                          |print|Recently printed documents.|
                          |mail|Recently emailed documents.|
                          |export|Recently downloaded documents.|
                          |modify|Recently modified documents.|
                        example: activity=view
                      activity_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the document is added to the worklist.
                  description: |-
                    List of documents to be added to the worklist.
                import_id:
                  type: string
                  description: |-
                    Reserved for future use.
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: ''
                    task_id: ''
                    status: completed
                required:
                - data
                type: object
                properties: *id375
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/operations:
    description: |-
      None
    get:
      tags:
      - Libraries
  #- customers-{customerId}-libraries-{libraryId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/operations
      summary: Get library operations
      description: |
        Returns operations the current user is allowed to perform on the specified library.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on library active_us:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    description: The role for Administrators
                    id: ADMIN
                    m1: 2159
                    m1_bits:
                      allow_index_search: true
                      checkout: true
                      create_public_folder: true
                      create_public_search_folder: true
                      delete: true
                      delete_public_folder: false
                      delete_public_search_folder: false
                      display_public_documents: false
                      edit_external_default_security: false
                      edit_external_default_security_folder: false
                      edit_previous_versions: false
                      import: true
                      read_only: false
                      release: true
                      view_public_folder: false
                      view_public_search_folder: false
                    m2: 15
                    m2_bits:
                      document_view: true
                      external: false
                      use_admin_tool: true
                      use_import_tool: true
                      use_monitor_tool: true
                    m3: 206
                    m3_bits:
                      author_workspace: true
                      browse_workspace: false
                      create_template: true
                      customize_personal_views: false
                      customize_public_views: false
                      delete_workspace: true
                      search_workspace: true
                      share_workspace: true
                    m4_bits:
                      admin_custom: false
                      admin_tier_1: false
                      admin_tier_2: false
                      admin_tier_3: false
                      content_assistance: false
                      custom_metadata_management: false
                      dms_job_operations: false
                      govern_security_management: true
                      report: false
                      report_management: false
                      role_management: false
                      system_job_operations: false
                      system_management: false
                      system_metadata_management: false
                      tier: 0
                      trustee_assistance: false
                      trustee_management: false
                required:
                - data
                type: object
                properties: &id1480
                  data:
                    additionalProperties: false
                    required:
                    - id
                    - description
                    - m1
                    - m2
                    - m3
                    - m1_bits
                    - m2_bits
                    - m3_bits
                    - m4_bits
                    type: object
                    properties: &id1479
                      id:
                        type: string
                        description: |-
                          Alias
                      description:
                        type: string
                        description: |-
                          Description
                      m1:
                        type: integer
                        description: |-
                          Bit mask for document and folder operations.
                      m2:
                        type: integer
                        description: |-
                          Bit mask for administrative operations.
                      m3:
                        type: integer
                        description: |-
                          Bit mask for web page operations.
                      m4:
                        type: integer
                        description: |-
                          Bit mask for administrative roles.
                      m1_bits:
                        type: object
                        description: Role bits for document and folder operations.
                        properties: &id1473
                          allow_index_search:
                            type: boolean
                            description: |-
                              Specifies if the user can perform full text search.

                              The full-text search locates documents by search terms provided by the user that
                              exist in the document content, document profile, or workspace profile in the full-text indexer search engine.
                          checkout:
                            type: boolean
                            description: |
                              Specifies if the user can check out documents.

                              If the parameter `read_only` is `true`, `checkout` is automatically set to `false` even if it is specified as `true`.
                              See `read_only` for additional details.
                          create_public_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can create a public folder.

                              That is, new folders with the default security as Public can be created.
                          create_public_search_folder:
                            type: boolean
                            description: |
                              Specifies if the user can save public searches in a folder and mark them as public.

                              That is, new folders with the default security as Public can be created.
                          delete:
                            type: boolean
                            description: |
                              Specifies if the user can delete a document.

                              Without this privilege, users cannot delete any documents or emails within iManage Work, including those to which they have full access.

                              If the parameter `read_only` is `true`, `delete` is automatically set to `false` even if it is specified as `true`.
                              See `read_only` for additional details.
                          display_public_documents:
                            type: boolean
                            description: |-
                              Specifies if the user can view public documents, that is, documents with the default security set to Public.
                          delete_public_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can delete public folders.
                          delete_public_search_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can delete public search folders.
                          edit_external_default_security:
                            type: boolean
                            description: |-
                              Specifies if the user can edit the default security settings of documents shared to external users.
                          edit_external_default_security_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can edit the default security settings of folders shared to external users.
                          edit_previous_versions:
                            type: boolean
                            description: |-
                              Specifies if the user can edit previous versions of a document.
                          import:
                            type: boolean
                            description: |
                              Specifies if the user is allowed to import documents to iManage Work.

                              The user can import documents, upload new document versions, and replace existing documents with new ones.
                              If the parameter `read_only` is `true`, `import` is automatically set to `false` even if it is specified as `true`.
                              See `read_only` for additional details.
                          read_only:
                            type: boolean
                            description: |
                              Specifies if the user has read only access to documents and containers.

                              If `true`, the user cannot modify documents, and the following parameters must be set to false: `import`, `checkout`, `release`, and `delete`.<br>
                              If `false`, the user can modify documents, subject to the restrictions allowed by the following parameters: `import`, `checkout`, `release`, and `delete`.
                          release:
                            type: boolean
                            description: |
                              Specifies if the user can unlock a checked-out document.

                              If the parameter `read_only` is `true`, `release` is automatically set to `false` even if it is specified as `true`.
                              See `read_only` for additional details.
                          view_public_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can view public folders.
                          view_public_search_folder:
                            type: boolean
                            description: |-
                              Specifies if the user can view public search folders.

                        additionalProperties: false
                      m2_bits:
                        type: object
                        description: Role bits for iManage administrative operations.
                        properties: &id1474
                          document_view:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to view documents.

                              Without this privilege, NRTADMINs cannot view the contents of any documents or emails within iManage Work.

                              To allow an NRTADMIN user to view private documents, you must add the user to a role that has `document_view` privilege set to `true`. This is the default setting.<br>
                              To prevent an NRTADMIN user assigned to a specific role from viewing documents, set `false` for this privilege.
                              However, the user will still be able to search for private documents irrespective of this setting.
                          external:
                            type: boolean
                            description: |-
                              Specifies if the role is intended for external users such as a customer, part-time contractor, vendor, or partner.
                              For more information, see <a href="#overview--external-users"> External users</a>.
                          use_admin_tool:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to use iManage Work Database Administration (DBAdmin) tool.

                              The NRTADMIN group has this permission by default.<br>
                              For more information, see *iManage Work Server Administration Guide* in [iManage Help Center](https://help.imanage.com/).
                          use_import_tool:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to use iManage Work Import tool.

                              If `true`, it allows users to use the bulk Document Import tool.
                              The NRTADMIN group has this permission by default.<br>
                              For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).
                          use_monitor_tool:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to use iManage Work Monitor tool.

                              If `true`, it provides access to use the iManage Monitor to track library transactions.
                              This tool enables users to locate, relocate or delete documents, mark documents for archiving, or change document profile information.
                              The NRTADMIN group has this permission by default.<br>
                              For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).

                        additionalProperties: false
                      m3_bits:
                        type: object
                        description: Role bits for web page operations.
                        properties: &id1475
                          author_workspace:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to create new workspaces.
                          browse_workspace:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to browse the content of workspaces.
                          create_template:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to create workspace templates.
                          customize_personal_views:
                            type: boolean
                            description: |-
                              Specifies if a user is allowed to customize the layout of workspace and folder properties for personal view in the legacy iManage Work Web application.
                          customize_public_views:
                            type: boolean
                            description: |-
                              Specifies if a user is allowed to customize the layout of workspace and folder properties for all users in the legacy iManage Work Web application.
                          delete_workspace:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to delete workspaces.
                          search_workspace:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to search for workspaces.
                          share_workspace:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to share workspaces with external users.
                        additionalProperties: false
                      m4_bits:
                        type: object
                        description: Role bits for other administrative operations.
                        properties: &id1476
                          admin_custom:
                            type: boolean
                            description: |-
                              Specifies if the user can manage custom tables Custom1-12 and 29-30.
                          admin_tier_1:
                            type: boolean
                            description: |-
                              Specifies if the user is a tier 1 administrator.
                          admin_tier_2:
                            type: boolean
                            description: |-
                              Specifies if the user is a tier 2 administrator.
                          content_assistance:
                            type: boolean
                            description: |
                              Specifies if the user is allowed to check the effective access of other users to documents and workspaces.<br><br>
                              The user can also review history of documents, unlock documents, search for documents and workspaces, and restore documents.

                          custom_metadata_management:
                            type: boolean
                            description: |-
                              Specifies if a user is allowed to add new values to the lookup lists of custom fields Custom1-12 and 29-30.

                              However, a user with this privilege cannot update or delete a custom value.<br>
                              To update or delete a custom value, a user must either have a role with `admin_custom` as `true`, or `tier` as 2 or higher.
                              For more information, see <a href="#tag--Custom-Properties">Custom Properties</a>.

                              An iManage system administrator can allow or deny users with this privilege to add new values to the lookup lists of custom fields
                              on a field-by-field basis. For example, if an administrator allows adding Custom1 and 2 only, then a user with this privilege will be able
                              to add new values only for Custom1 and 2, and not for any other fields.
                              This can be configured in iManage Control Center using the global setting **Allow to Create Metadata**.
                              For more information, see <a href="https://docs.imanage.com/cc-help/10.4.0/en/Global.html" target="_blank">Global settings</a>.

                          dms_job_operations:
                            type: boolean
                            description: |-
                              Specifies if the user can perform export or import of documents and workspaces.
                          govern_security_management:
                            type: boolean
                            description: |-
                              Specifies if the user can govern Security Policy Manager (SPM) settings for other users.

                              For more information, see <a href="#tag--Security-Policy">Security policies</a>.
                          report:
                            type: boolean
                            description: |-
                              Not in use currently. Specifies if the user can view a report. <br><br>For example, active users report.
                          report_management:
                            type: boolean
                            description: |-
                              Not in use currently. Specifies if the user has access to manage reports. This role privilege allows to generate, modify, and delete reports.
                          system_management:
                            type: boolean
                            description: |-
                              Reserved for future use. Specifies if the user can view and manage the statistics, logs, and performance, of the iManage Work system.
                          role_management:
                            type: boolean
                            description: |-
                              Specifies if the user can add, modify and remove roles, manage user privileges, and manage admininstration privileges.
                          system_job_operations:
                            type: boolean
                            description: |-
                              Specifies if the user can re-assign users, perform metadata sync and AD/LDAP Sync, refile documents, and so on.
                          system_metadata_management:
                            type: boolean
                            description: |-
                              Specifies if the user can modify system metadata management settings.

                              This privilege allows a user to edit captions, create classes, subclasses, document types, templates, and associate applications with document file types.
                          trustee_assistance:
                            type: boolean
                            description: |-
                              Specifies if the user is allowed to do the following:
                              * Reset other user's password.
                              * Configure if their password expires or not.
                              * Force user to change their password on next logon.
                              * Enable or disable user's sign-in.
                          trustee_management:
                            type: boolean
                            description: |-
                              Specifies if a user is allowed to manage other users and groups.
                              This role privilege allows to do the following:
                              * Create and update users.
                              * Create, update, and delete groups.
                              * Modify group memberships.
                              * Copy group members from one group to another.
                              * Perform an admin search of users.
                          tier:
                            type: integer
                            description: |-
                              Specifies if the tier category to which the user belongs.
                        additionalProperties: true
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts
      summary: Create object shortcut in My Favorites
      description: |
        Creates a shortcut for a document, folder, or workspace at the root level of the My Favorites folder.<br><br>
        The shortcut is created directly in the My Favorites folder.<br>

        For example, to create a shortcut for a workspace within the My Favorites folder, the following is information is required:
        * category ID: The `categoryId` parameter of the request's endpoint, and is the target container to create the shortcut in.
        * workspace ID: The `id` parameter in the body, and is the source container to create the shortcut for.
        In this case, it's a workspaceId but the same ID format is used for other containers.<br>

        The request is:<br>
        POST `{hostname}/work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts`<br>
        For example:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/shortcuts`<br>
        with the body<br>
        ```
        {
          "id": "active!1512629",
          "name": "Ajubalaw Client"
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a shortcut for a document, folder, or workspace in the specified container within My Favorites, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/shortcuts`<br>
        To get a list of contents from the root level of the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`<br>
        To get a list of contents from any other container from within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/children`<br>
        To delete a document shortcut, see DELETE `/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{documentId}`<br>
        To delete a folder or workspace shortcut, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "id": "Active!1024.1",
                  "name": "Shortcut to the Document"
                }
              required:
              - id
              - name
              type: object
              properties: *id122
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcutResponseSingle'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcutResponseSingle'
                  - $ref: '#/components/schemas/Shortcuts.workspaceShortcutResponseSingle'
        401: *id002
        409: &id379
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    - messages
                    type: object
                    properties:
                      code:
                        enum: ["NRC_DUP_RECORD"]
                        type: string
                        description: |-
                          Error code.
                      code_message:
                        type: string
                        description: |-
                          Description of the error.
                      dms_version:
                        type: string
                        description: |-
                          The DMS version.
                      transaction:
                        type: string
                        description: |-
                          Transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          - data
                          type: object
                          properties:
                            audit:
                              type: object
                              description: |
                                Indicates additional details about the error.<br><br>
                                This is returned in the POST ../history routes.
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              type: object
                              description: |-
                                Provides existing duplicate shortcut detail.
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_DUP_RECORD
                    code_message: Record already exists
                    messages:
                    - data:
                        database: active_us
                        id: active_us!513937
                        iwl: iwl:dms=ajubalaw&&lib=active&&num=439292&&ver=1
                        name: Insurance Policy for Acme
                        parent_id: active_us!846
                        target:
                          database: active_us
                          document_number: 439292
                          id: active_us!439292.1
                          type: WORDX
                          version: 1
                          wstype: document
                        wstype: document_shortcut
                      code: NRC_DUP_RECORD
                      code_message: Record already exists
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts/{shortcutId}:
    description: |-
      None
    delete:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-shortcuts-{shortcutId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts/{shortcutId}
      summary: Delete object shortcut from My Favorites
      description: |-
        Deletes the shortcut with the specified shortcut ID.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_my-favorites_shortcuts_{shortcutId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
      parameters:
      - *id004
    patch:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-shortcuts-{shortcutId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts/{shortcutId}
      summary: Update object shortcut in My Favorites
      description: |-
        Updates the shortcut with JSON for the specified shortcut ID.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_my-favorites_shortcuts_{shortcutId}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              - wstype
              type: object
              properties: *id376
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/children:
    description: |

    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/children
      summary: Get My Favorites children
      description: |
        Returns a list of children from the root level of My Favorites.<br><br>
        Children are:<br>
        * Categories. A category is a container. It is the only container allowed in My Favorites, and they can be nested inside other categories.
        * Shortcuts. These include shortcuts to documents, containers, and workspaces.

        See the parameter `children_type` for a complete list of children types.<br>

        Each category returned must be queried individually if additional information is required, such as for nested categories or documents.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        This example queries the root level of My Favorites. It then queries one of the categories found.<br>

        To return the children from the root level of My Favorites:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/children`<br>
        The request returns the children from the root level of My Favorites of library active_us, in this case as just one, abbreviated here for demonstation purposes:<br>

        ```
        {
            "data":
            [
                {
                    "category_type": "my_favorites",
                    "folder_project_type": "category",
                    "folder_type": "category",
                    "has_subfolders": true,
                    "id": "active_us!4532",
                    "name": "Current Cases",
                }
            ]
        }
        ```

        <br>To see the contents of category active_us!4532:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4532/children`<br>

        ```
        {
            "data": [
                {
                    "category_type": "my_favorites",
                    "folder_type": "category",
                    "id": "active_us!237",
                    "name": "001abc",
                    "parent_id": "active_us!4532",
                    "target": {
                        "database": "active_us",
                        "id": "active_us1512629",
                        "subtype": "work",
                        "wstype": "workspace"
                    },
                    "view_type": "document",
                    "wstype": "workspace_shortcut"
                },
                {
                    "id": "active_us!23707",
                    "name": "Claims due for October",
                    "target": {
                        "database": "active_us",
                        "document_number": 379,
                        "id": "active_us!379.1",
                        "type": "WORDX",
                        "version": 1,
                        "wstype": "document"
                    },
                    "wstype": "document_shortcut"
                }
            ]
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all containers from within a container, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/children`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_children
      parameters:
      - *id004
      - name: children_type
        in: query
        description: |
          Specifies the type of children to return.<br><br>
          Multiple values can be included using a comma-separated list.
          For example: `children_type=categories`, or `children_type=categories,workspaces`.<br>
          The following are allowed values:<br>

          |Value|Description|
          |:---|:---|
          |documents|Returns document shortcuts.|
          |emails|Returns email shortcuts.|
          |categories|Returns categories.|
          |workspaces|Returns workspace shortcuts.|
          |containers|Returns workspace shortcuts, folder shortcuts, search folder shortcuts|
          |all|Returns documents, emails, categories, workspaces and containers. This is the default value.|
        schema:
          type: string
          default: all
          example: documents,emails
      - name: libraries
        in: query
        description: |
          Specifies libraries holding the containers.<br><br>
          Multiple libraries can be specified using a comma-separated list.
          For example, `libraries=active,archived`.
          If empty, containers from all libraries the user is assigned to are returned.
        schema:
          type: string
      - *id011
      - *id006
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
          example: -300
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                      - anyOf:
                        - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                        - anyOf:
                          - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
                          - $ref: '#/components/schemas/Projects.category'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9454
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Andrew Case - Personal
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      id: Active!6780
                      subtype: work
                      wstype: workspace
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: workspace_shortcut
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9435
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: _Benefits
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      folder_type: regular
                      id: Active!9434
                      subtype: O
                      wstype: folder
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: folder_shortcut
                  - database: Active
                    folder_type: tab
                    has_documents: true
                    has_subfolders: true
                    id: Active!261821
                    name: Customized
                    parent_id: Active!9014
                    wstype: folder
                  - name: 中國國際航空公司 [Itinerary]
                    parent_id: '13'
                    id: Active!34664
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!78886.1
                      type: NOTES
                      wstype: document
                    wstype: document_shortcut
                  - name: Ajuba Law 2018 Firm Holidays
                    parent_id: '23'
                    id: Active!7553
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!33021.1
                      type: WORDX
                      wstype: document
                    wstype: document_shortcut
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/container-shortcuts/{shortcutId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/container-shortcuts/{shortcutId}/move:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-container-shortcuts-{shortcutId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/container-shortcuts/{shortcutId}/move
      summary: Move container shortcut to a category
      description: |-
        Moves the current shortcut to the specified category in my-favorites or the my-favorites root.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_container-shortcuts_{shortcutId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: Active!123456
              required:
              - destination_id
              type: object
              properties: &id1683
                destination_id:
                  type: string
                  description: |
                    Destination to move the container shortcut.
                    Container shortcuts may be moved to my-favorites root or a category. If it is a workspace shortcut it may also be moved to a my-matters root or category of any user provided the caller has read/write access to that location.

                    The possible values are:<br>
                    * **Category Id**: id of the category where the shortcut should be moved ( in my-favorites or my-matters).
                    * **my-favorites**: indicates that the shortcut should be moved to my-favorites root.
                    * **my-matters**: indicates that the workspace shortcut should be moved to my-matters root of the user specified in destination_user_id parameter.
                  example: "Active!123 | my-favorites"
                destination_user_id:
                  type: string
                  description: |
                    The user ID of the destination my-matters.

                    This parameter is ignored unless destination_id is 'my-matters'.
                  default: userId of logged in User
                  example: ACASE
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_uk
                    default_security: inherit
                    edit_date: '2020-04-26T18:41:18Z'
                    effective_security: full_access
                    id: active_uk!9435
                    name: _Benefits
                    owner: ACASE
                    parent_id: active_uk!9014
                    target:
                      database: active_uk
                      id: active_uk!9434
                      subtype: S
                      wstype: folder
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: *id377
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/container-shortcuts/{shortcutId}/operations:
    description: |-
      None
    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-container-shortcuts-{shortcutId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/container-shortcuts/{shortcutId}/operations
      summary: Get My Favorites' container shortcut operations
      description: |
        Returns operations the current user is allowed to perform on the specified container shortcut within My Favorites.<br>

        Container shortcuts also includes category.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform container shortcut active_us!541:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/container-shortcuts/active_us!541/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_container-shortcuts_{shortcutId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    change_name: true
                    move: true
                    remove: true
                required:
                - data
                type: object
                properties: *id378
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/document-shortcuts/{shortcutId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/document-shortcuts/{shortcutId}/move:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-document-shortcuts-{shortcutId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/document-shortcuts/{shortcutId}/move
      summary: Move document shortcut to a category
      description: |-
        Moves the current shortcut to the specified category in my-favorites or the my-favorites root.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_document-shortcuts_{shortcutId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: active_us!123456
              required:
              - destination_id
              type: object
              properties: &id1682
                destination_id:
                  type: string
                  description: |-
                    Specifies the destination container to move the document shortcut to.<br><br>

                    |Value|Description|
                    |:---|:---|
                    |container ID|The container ID is the destination container to move the document shortcut to. For example, active_us!5446|
                    |my-favorites|The My Favorites folder is the destination container to move the document shortcut to. This value is the literal *my-favorites*.|
                  example: "active_us!123 | my-favorites"
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    id: active_us!513937.1
                    iwl: iwl:dms=ajubalaw&&lib=active&&num=513937&&ver=1
                    name: Enron Audit Engagement Contract.docx
                    parent_id: active_us!846
                    target:
                      database: active_us
                      document_number: 439292
                      id: active_us!439292.1
                      name: Enron Audit Engagement Contract.docx
                      type: WORDX
                      version: 1
                      wstype: document
                    wstype: document_shortcut
                required:
                - data
                type: object
                properties: &id397
                  data:
                    $ref: '#/components/schemas/Projects.Shortcuts.documentShortcut'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id379
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/document-shortcuts/{shortcutId}/operations:
    description: |-
      None
    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-document-shortcuts-{shortcutId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/document-shortcuts/{shortcutId}/operations
      summary: Get My Favorites' document shortcut operations
      description: |
        Returns operations the current user is allowed to perform on the specified document shortcut within My Favorites.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on document shortcut active_us!6272:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/document-shortcuts/active_us!6272/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_document-shortcuts_{shortcutId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    update: true
                    move: true
                    remove: true
                required:
                - data
                type: object
                properties: &id535
                  data:
                    required:
                    - update
                    - remove
                    - move
                    type: object
                    properties:
                      update:
                        type: boolean
                        description: |-
                          Indicates that the user can update the shortcut.
                      remove:
                        type: boolean
                        description: |-
                          Indicates that the user can remove a shortcut.
                      move:
                        type: boolean
                        description: |-
                          Indicates that the user can move a shortcut from its current parent.
                    additionalProperties: true
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/categories
      summary: Create category in My Favorites
      description: |
        Creates a category at the root level of the My Favorites folder.<br><br>
        A category is a container that is used only in My Favorites and My Matters.
        A category can contain only other categories or shortcuts.
        The type of shortcuts it can contain depends on where the category exists.
        If used within My Favorites, it can contain folder and workspace shortcuts.
        If used within My Matters, it can contain only workspace shortcuts.<br><br>
        A category can contain other categories. These are called subcategories.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all categories and other containers within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`<br>
        To create a subcategory, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/categories`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_categories
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: *id102
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id103
                additionalProperties: false
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}:
    description: |-
      None
    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}
      summary: Get My Favorites category details
      description: |
        Returns details of the specified category.<br><br>
        A category is a folder specific to My Favorites and My Matters.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns details of category active_us!156751:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/categories/active_us!156751`<br>
        Response body:<br>

        ```
        {
            "data": {
                "category_type": "my_favorites",
                "edit_date": "2018-12-05T15:15:37.923Z",
                "folder_type": "category",
                "has_documents": true,
                "has_subfolders": true,
                "id": "active_us!156751",
                "name": "Current Cases",
                "owner_description": "Andrew Case",
                "owner": "ACASE",
                "parent_id": "active_us!157452",
                "view_type": "document",
                "wstype": "folder"
            }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of children items from the root level of My Favorites, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`<br>
        To get a list of children items from a specified container, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`<br>
        To create a category, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id380
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
    delete:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}
      summary: Delete a category in My Favorites
      description: |
        Deletes the specified category.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes category active_us!156751:<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/categories/active_us!156751`<br>
        Request body: None.<br>
        No response object is returned for a successful completion.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all categories and other containers within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`.<br>
        To create a category, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories`
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
      parameters:
      - *id004
    patch:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}
      summary: Update a category My Favorites
      description: |
        Updates the category name.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the name of category active_us!156751:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/categories/active_us!156751`<br>
        Request body:<br>

        ```
        {
          "name": "Due Documents"
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all categories and other containers within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`<br>
        To create a category, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories`
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: *id102
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - id
                - name
                type: object
                properties: *id381
                additionalProperties: true
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/move:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/move
      summary: Move My Favorites category
      description: |-
        Moves the current category to the specified category or my-favorites.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}_move
      requestBody:
        content:
          application/json:
            schema:
              required:
              - destination_id
              type: object
              properties: &id1681
                destination_id:
                  type: string
                  description: |
                    Destination to move the category.

                    The possible values are:<br>
                    * **Category Id**: id of the category where the category should be moved.
                    * **my-favorites**: indicates that the category should be moved to my-favorites root.
                  example: "Active!123 | my-favorites"
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id103
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/shortcuts:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/shortcuts
      summary: Create category in My Favorites
      description: |
        Creates a category at the root level of the My Favorites folder.<br><br>
        A category is a container that is used only in My Favorites and My Matters.
        A category can contain only other categories or shortcuts.
        The type of shortcuts it can contain depends on where the category exists.
        If used within My Favorites, it can contain folder and workspace shortcuts.
        If used within My Matters, it can contain only workspace shortcuts.<br><br>
        A category can contain other categories. These are called subcategories.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all categories and other containers within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`.<br>
        To create a subcategory, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/categories`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a shortcut for a document, folder, or workspace at the root level of the My Favorites folder, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/shortcuts`<br>

        To get a list of contents from the root level of the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`<br>
        To get a list of contents from any other container from within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/children`<br>

        To delete a document shortcut, see DELETE `/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{documentId}`<br>
        To delete a folder or workspace shortcut, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}_shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "id": "active!1024.1",
                  "name": "Shortcut to the Document"
                }
              required:
              - id
              - name
              type: object
              properties: *id122
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                - anyOf:
                  - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                  - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
        401: *id002
        409: *id379
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/operations:
    description: |-
      None
    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/operations
      summary: Get category operations
      description: |
        Returns operations the current user is allowed to perform on the specified category within My Favorites.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on category active_us!7483:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/categories/active_us!7483/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    add_categories: true
                    add_shortcuts: true
                    change_name: true
                    modify: true
                    remove: true
                    move: true
                    remove_categories: true
                    remove_shortcuts: true
                    set_default_security: true
                    set_security: true
                    update_content_shortcut: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
                required:
                - data
                type: object
                properties: *id382
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/children:
    description: |
      My Favorites contains shortcuts to workspaces, folders, and documents that are selected by the user.
      It is used to navigate to frequently used workspaces, folders, and documents.<br>

      Users can save shortcuts to those items.
      There can be additional subfolders, called categories, to better organize the user’s links.
      However, any items in My Favorites are only links to those items and not the actual documents or containers.<br>

      My Favorites items are explicitly bookmarked by the user.
      Unlike a "recently used" list, no items are automatically included in My Favorites.
    get:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/children
      summary: Get category children
      description: |
        Returns a list of children from a category within My Favorites.<br><br>
        Children are:<br>
        * Categories. A category is a container. It is the only container allowed in My Favorites, and they can be nested inside other categories.
        * Shortcuts. These include shortcuts to documents, containers, and workspaces.

        See the parameter `children_type` for a complete list of children types.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        To return a list of children from the category active_us!346:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/my-favorites/categories/active_us!346/children`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of containers from the root level of the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}_children
      parameters:
      - *id004
      - name: children_type
        in: query
        description: |
          Specifies the type of children to return.<br><br>
          Multiple values can be included using a comma-separated list.
          For example: `children_type=categories`, or `children_type=categories,workspaces`.<br>
          The following are allowed values:<br>

          |Value|Description|
          |:---|:---|
          |documents|Returns document shortcuts.|
          |emails|Returns email shortcuts.|
          |categories|Returns categories.|
          |workspaces|Returns workspace shortcuts.|
          |containers|Returns workspace shortcuts, folder shortcuts, search folder shortcuts|
          |all|Returns documents, emails, categories, workspaces and containers. This is the default value.|
        schema:
          type: string
          default: all
          example: documents,emails
      - *id011
      - *id006
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
          example: -300
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/Shortcuts.documentShortcut'
                      - anyOf:
                        - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                        - anyOf:
                          - $ref: '#/components/schemas/Shortcuts.workspaceResponseShortcut'
                          - $ref: '#/components/schemas/Projects.category'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9454
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Andrew Case - Personal
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      id: Active!6780
                      subtype: work
                      wstype: workspace
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: workspace_shortcut
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    id: Active!9435
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: _Benefits
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!9014
                    target:
                      database: Active
                      folder_type: regular
                      id: Active!9434
                      subtype: O
                      wstype: folder
                    view_type: document
                    workspace_id: Active!9014
                    workspace_name: My Favorites
                    wstype: folder_shortcut
                  - database: Active
                    folder_type: tab
                    has_documents: true
                    has_subfolders: true
                    id: Active!261821
                    name: Customized
                    parent_id: Active!9014
                    wstype: folder
                  - name: 中國國際航空公司 [Itinerary]
                    parent_id: '13'
                    id: Active!34664
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!78886.1
                      type: NOTES
                      wstype: document
                    wstype: document_shortcut
                  - name: Ajuba Law 2018 Firm Holidays
                    parent_id: '23'
                    id: Active!7553
                    database: Active
                    default_security: inherit
                    edit_date: '2017-04-26T18:41:18Z'
                    owner: ACASE
                    owner_description: Andrew Case
                    target:
                      database: Active
                      id: Active!33021.1
                      type: WORDX
                      wstype: document
                    wstype: document_shortcut
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/categories:
    description: |-
      None
    post:
      tags:
      - My Favorites
    #- customers-{customerId}-libraries-{libraryId}-my-favorites-categories-{categoryId}-categories
  #summary: POST /customers/{customerId}/libraries/{libraryId}/my-favorites/categories/{categoryId}/categories
      summary: Create My Favorites subcategory
      description: |
        Creates a subcategory under the My Favorites folder.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get a list of all categories within the My Favorites folder, see GET `/customers/{customerId}/libraries/{libraryId}/my-favorites/children`.<br>
        To create a category at the root level of the My Favorites folder, see POST `/customers/{customerId}/libraries/{libraryId}/my-favorites/categories`.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_my-favorites_categories_{categoryId}_categories
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Category"
                }
              required:
              - name
              type: object
              properties: *id102
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id103
                additionalProperties: false
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: categoryId
      in: path
      description: |-
        The category ID of the container.
      required: true
      schema:
        example: active_us!157452
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups:
    get:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups
  #summary: GET /customers/{customerId}/libraries/{libraryId}/groups
      summary: Get library groups
      description: |-
        Gets all the groups from a library that match the specified criteria.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_groups
      parameters:
      - *id004
      - *id126
      - *id127
      - *id128
      - *id129
      - *id130
      - *id131
      - *id011
      - *id132
      - *id006
      - name: query
        in: query
        description: |
          Filters groups based on the string that matches the `id` and `full_name` of the groups.

          * The wildcard character (&ast;) is supported.
          * To match partial fields, include the wildcard character (&ast;) at the beginning or end of the the query value.
          * If no wildcard character is included, only the groups that match the exact string are returned.
        schema:
          type: string
      - *id133
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Matters Related Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  - database: ACTIVE_UK
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Case Management Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  total_count: 2
                required:
                - data
                type: object
                properties: *id125
                additionalProperties: true
        401: *id002
        404: *id005
    post:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups
  #summary: POST /customers/{customerId}/libraries/{libraryId}/groups
      summary: Create a group
      description: |-
        Creates a new library group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: Tier 2.<br>
        That means, a user must be assigned to a library role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        If the group already exists, it is updated with the field values provided in the request body.
        If it does not exist, a new group is created with the field values provided in the request body.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_groups
      requestBody:
        content:
          application/json:
            schema:
              example:
                distinguished_name: cn=all hrs,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                enabled: true
                full_name: HR Managers level 1
                group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                group_nos: 6
                id: HR GROUP
                is_external: false
                sync_id: 2wd61edr-abb0-4648-aac1-795f942be4
              required:
              - id
              type: object
              properties: &id383
                distinguished_name:
                  maxLength: 254
                  type: string
                  example: cn=username,dc=example,dc=ajubalaw,dc=com
                  description: |
                    Specifies the name of the group that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
                enabled:
                  type: boolean
                  description: |-
                    Specifies if the group is enabled or disabled.<br>

                    If `true`, the group is enabled.<br>
                    If `false`, the group is disabled.
                full_name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the name of the group.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                group_domain:
                  type: string
                  description: |
                    Specifies  the fully qualified domain name for the group's directory service.

                    It is the metadata from LDAP server that determines the unit to which the group belongs to.
                    This information is mainly used by iManage system administrators.
                  example: cn=Users,dc=ajubalaw,dc=com
                group_nos:
                  type: integer
                  description: |-
                    Specifies the type of group.

                    The following are valid nos values for groups:

                    | Value | Description |
                    | :-: | - |
                    | 2 | Group for virtual users.|
                    | 6 | Group for enterprise users. |
                id:
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the group ID.

                    * The group ID can contain spaces.
                    * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                is_external:
                  type: boolean
                  description: |
                    Specifies  if the group is intended for external users.

                    If `true`, the group is intended for external users.<br>
                    If `false`, the group is intended for regular users (non-external users).

                    For more information, see <a href="#overview--external-users"> External users</a>.
                ssid:
                  type: number
                  format: long
                  description: Specifies the unique ID of the group that was generated
                    by iManage Work.
                sync_id:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.
                  example: cn=username,dc=example,dc=ajubalaw,dc=com
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  group_number: 327585
                required:
                - group_number
                type: object
                properties: &id1651
                  group_number:
                    type: integer
                    description: Unique group number assigned by iManage Work Server
                      to the group.
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/admin-import:
    description: |-
      None
    post:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/groups/admin-import
      summary: Import groups in library
      description: |
        Create a batch of groups.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_groups_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                import_id: 123abc
                groups:
                - profile:
                    database: ACTIVE
                    enabled: true
                    full_name: nrtadmin
                    group_nos: 2
                    id: NRTADMIN
                    is_external: false
                  members:
                  - userId1
                  - userId2
                - profile:
                    database: ACTIVE
                    distinguished_name: cn=all corporate,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: false
                    full_name: All Corporate
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    id: ALL CORPORATE
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: a9236a2b-abb0-4648-aac1-795f942be45f
                  members:
                  - userId1
                  - userId2
                - profile:
                    database: ACTIVE
                    full_name: virtualadmin
                    group_nos: 2
                    id: VIRTUALADMIN
                    is_external: false
                  members:
                  - userId2
                  - userId3
                - profile:
                    database: ACTIVE
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: false
                    full_name: All External
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    id: ALL EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be45f
                  members:
                  - userId4
                  - userId5
                overwrite: false
              required:
              - import_id
              - groups
              - overwrite
              type: object
              properties: &id552
                import_id:
                  type: string
                  description: |
                    (Intended for future use, once the Admin Import API is made asynchronous)<br>
                    The identifier provided by client for this import request.
                groups:
                  type: array
                  items:
                    $ref: '#/components/schemas/Groups.adminImportRequestGroup'
                  description: |-
                    A list of groups to be imported.
                overwrite:
                  type: boolean
                  description: |
                    If set to `true`, allows to overwrite the existing groups in iManage Work if they are also present in the current import request.
                    If set to `false`, the existing groups cannot be overwritten.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: 123abc
                    task_id: 456def
                    status: successful
                    groups:
                    - id: NRTADMIN
                      ssid: oisd98rfh23
                    - id: ALL CORPORATE
                      ssid: oj2e8f2kjd8
                  warnings:
                  - data:
                      profile:
                        database: active_us
                        full_name: virtualadmin
                        group_nos: 2
                        id: VIRTUALADMIN
                        is_external: false
                      members:
                      - userId2
                      - userId3
                    code: NRC_INVALID_PARAM
                    error: Missing enabled flag
                    field: enabled
                  - data:
                      profile:
                        database: ACTIVE
                        distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                        enabled: false
                        full_name: All External
                        group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                        group_nos: 6
                        id: ALL EXTERNAL
                        is_external: true
                        last_sync_ts: '2018-05-01T10:15:29Z'
                        sync_id: b9236a2b-abb0-4648-aac1-795f942be45f
                      members:
                      - userId4
                      - userId5
                    code: NRC_DUP_RECORD
                    error: The group was not migrated as it already exists
                    field: sync_id
                required:
                - data
                type: object
                properties: &id553
                  data:
                    required:
                    - import_id
                    - task_id
                    - status
                    - groups
                    type: object
                    properties:
                      import_id:
                        type: string
                        description: |
                          (Intended for future use, once the Admin Import API is made asynchronous)<br>
                          The identifier provided by client for this import request.
                      task_id:
                        type: string
                        description: |
                          (Intended for future use) <br>
                          An identifier for the task triggered by this import request. Initial implementation is synchronous and does not create tasks.
                      status:
                        enum: ["waiting", "in-progress", "successful", "failed", "cancelled"]
                        type: string
                        description: |
                          (Intended for future use)
                          The status of the task triggered by this import request. Initial implementation is synchronous and the status that can be ignored.
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/Groups.adminImportResponseGroup'
                    description: |-
                      Import information about successfully imported groups.
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Groups.warning'
                    description: |-
                      Array of warning messages indicating import errors.
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}:
    get:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/groups/{groupId}
      summary: Get group details
      description: |-
        Gets details of the specified group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_groups_{groupId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: External Users
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 2
                    group_number: 171135823649979709
                    id: EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                required:
                - data
                type: object
                properties: &id384
                  data:
                    $ref: '#/components/schemas/groupLibrary'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/groups/{groupId}
      summary: Update group details
      description: |-
        Updates the details of the specified group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: Tier 2.<br>
        That means, a user must be assigned to a library role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The group ID must be provided in the request body.
        * The field values provided in the request body are updated in the group profile.
          However, the fields for which no value is provided are set to NULL, except `database`, `group_number`, `is_external`, and `ssid`.

      operationId: PUT_customers_{customerId}_libraries_{libraryId}_groups_{groupId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                full_name: External Users
                group_nos: 2
                id: EXTERNAL
                is_external: true
              required:
              - id
              type: object
              properties: *id383
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: External Users
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 2
                    group_number: 171135823649979709
                    id: EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                required:
                - data
                type: object
                properties: *id384
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}/members:
    get:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}-members
  #summary: GET /customers/{customerId}/libraries/{libraryId}/groups/{groupId}/members
      summary: Get members of a library group
      description: |-
        Gets the profiles of all users who belong to the specified library group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user does not require to have any special privileges to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_groups_{groupId}_members
      parameters:
      - *id004
      - *id085
      - *id086
      - *id087
      - *id088
      - *id089
      - *id011
      - *id090
      - *id260
      - *id006
      - *id091
      - name: preferred_library
        in: query
        example: ACTIVE_UK
        schema:
          type: string
        description: |-
          Filters users based on their preferred library.

          This search:
          * does not support multiple values using a comma-separated list.
          * is case insensitive. For example: *Active_uk* matches *ACtive_UK*.
          * supports the wildcard character (&ast;).
          * matches the exact string if no wildcard character is included. For example: *Active* does not match *Active_uk*.
      - name: query
        in: query
        example: ACASE
        schema:
          type: string
        description: |
          Filters users based on the string that matches the `id` and `full_name` of the users.

          * The wildcard character (&ast;) is supported.
          * To match partial fields, include the wildcard character (&ast;) at the beginning or end of the the query value.
          * If no wildcard character is included, only the users that match the exact string are returned.
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    custom1: HR Specialist
                    custom2: 1027j02
                    custom3: Recruitment
                    database: ACTIVE_UK
                    doc_server: DEFSERVER
                    distinguished_name: cn=cpierce,dc=example,dc=ajubalaw,dc=com
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: CPIERCE@AJUBALAW.COM
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    is_tier1: true
                    is_tier2: false
                    is_tier3: false
                    is_virtual_user: false
                    last_sync_ts: '2020-11-14T04:28:29.071Z'
                    location: Chicago
                    preferred_library: ACTIVE_UK
                    ssid: '171135823650325126'
                    sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                    user_id_ex: CPiErce
                    user_nos: 6
                    user_num: 87782
                  - allow_logon: true
                    database: ACTIVE_UK
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: ACASE@AJUBALAW.COM
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    is_tier1: false
                    is_tier2: true
                    is_tier3: false
                    is_virtual_user: true
                    location: Chicago
                    preferred_library: ACTIVE_UK
                    ssid: '931135823650820'
                    user_id_ex: ACASE
                    user_nos: 2
                    user_num: 87782
                  total_count: 2
                required:
                - data
                type: object
                properties: &id385
                  data:
                    type: array
                    description: Array of users. <br> This request returns two types
                      of user profiles based on the <a href="#get-/work/api/v2/customers/-customerId-/features">
                      global_users value</a> in your environment.<br><br>

                    items:
                      anyOf:
                      - $ref: '#/components/schemas/userProfileWithGlobalUsersFeatureOn'
                      - $ref: '#/components/schemas/userProfileWithGlobalUsersFeatureOff'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        401: *id002
        404: *id005
    put:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}-members
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/groups/{groupId}/members
      summary: Add users to or remove them from a library group
      description: |-
        Adds users to a library group, or removes them from it.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: Tier 2.<br>
        That means, a user must be assigned to a library role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * In a single request, users can either be added or removed.
        * If a group to which a user belongs to is updated to add/remove the user, then the groups's access on all documents or containers is
        immediately updated to grant/deny the access to the user, respectively.

      operationId: PUT_customers_{customerId}_libraries_{libraryId}_groups_{groupId}_members
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: ACTIVE_UK
                data_type: users
                data:
                - ACASE
                action: add
                ds_members_hash: 2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              required:
              - action
              - data_type
              - data
              type: object
              properties: &id555
                database:
                  type: string
                  description: |-
                    Specifies the name of the library where the group exists to which the user is to be added or removed.
                action:
                  enum: [add, delete]
                  type: string
                  description: |-
                    Specifies the type of operation to be performed on the group (add or remove users).
                data_type:
                  enum: [users]
                  type: string
                  description: |-
                    Specifies the type of data.
                data:
                  type: array
                  items:
                    type: string
                  description: |-
                    Specifies the IDs of users to be added to or removed from the group.
                ds_members_hash:
                  type: string
                  description: |-
                    Specifies a hash that represents the group's membership as a whole.
                    It is intended to be used by the directory sync, for the purpose of detecting whether there is a
                    difference in the group membership between iManage Work and an external directory.<br>
                    For more information, see  <a href="#tag--#tag--Directory-Sync-Groups-and-Users">Directory Sync for Groups and Users</a>.

              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}-members
  #summary: POST /customers/{customerId}/libraries/{libraryId}/groups/{groupId}/members
      summary: Copy group members
      description: |-
        Copies all the members of a group to the target group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The minimum access level required to execute this request: Tier 2.<br>
        That means, a user must be assigned to a library role that has tier 2 administrative privileges.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The request removes all the existing members of the group and adds members from the specified group to it.
        * In a single request, the members of only one group can be copied.
        * The group ID to which the members are to be copied is specified as the path parameter.
        * The group ID from which the members are to be copied is specified in the request body.
        * The members can be copied from one group to another only within the same library.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_groups_{groupId}_members
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: ACTIVE_UK
                data_type: groups
                data:
                - HRGROUP
              required:
              - data_type
              - data
              type: object
              properties: &id1652
                database:
                  type: string
                  description: |-
                    Specifies the name of the library on which to perform the operation.
                data_type:
                  enum: [groups]
                  type: string
                  description: |-
                    Specifies the type of the data.
                data:
                  type: array
                  items:
                    type: string
                  description: |-
                    Specifies the group ID from which the members are to be copied.

                    Only the first element in the data array is honored and the rest are ignored.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/groups/{groupId}/non-members:
    get:
      tags:
      - Library Groups
    #- customers-{customerId}-libraries-{libraryId}-groups-{groupId}-non-members
  #summary: GET /customers/{customerId}/libraries/{libraryId}/groups/{groupId}/non-members
      summary: Get non-members of a group
      description: |-
        Gets the profiles of all users who do not belong to the specified library group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special administrative privileges to execute this request.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_groups_{groupId}_non-members
      parameters:
      - *id004
      - *id085
      - *id086
      - *id087
      - *id088
      - *id089
      - *id011
      - *id090
      - *id260
      - *id006
      - *id091
      - name: preferred_library
        in: query
        example: ACTIVE_UK
        schema:
          type: string
        description: |-
          Filters users based on their preferred library.

          This search:
          * does not support multiple values using a comma-separated list.
          * is case insensitive. For example: *Active_uk* matches *ACtive_UK*.
          * supports the wildcard character (&ast;).
          * matches the exact string if no wildcard character is included. For example: *Active* does not match *Active_uk*.
      - name: query
        in: query
        example: ACASE
        schema:
          type: string
        description: |
          Filters users based on the string that matches the `id` and `full_name` of the users.

          * The wildcard character (&ast;) is supported.
          * To match partial fields, include the wildcard character (&ast;) at the beginning or end of the the query value.
          * If no wildcard character is included, only the users that match the exact string are returned.
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    custom1: HR Specialist
                    custom2: 1027j02
                    custom3: Recruitment
                    database: ACTIVE_UK
                    doc_server: DEFSERVER
                    distinguished_name: cn=cpierce,dc=example,dc=ajubalaw,dc=com
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: CPIERCE@AJUBALAW.COM
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    is_tier1: true
                    is_tier2: false
                    is_tier3: false
                    is_virtual_user: false
                    last_sync_ts: '2020-11-14T04:28:29.071Z'
                    location: Chicago
                    preferred_library: ACTIVE_UK
                    ssid: '171135823650325126'
                    sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                    user_id_ex: CPiErce
                    user_nos: 6
                    user_num: 87782
                  - allow_logon: true
                    database: ACTIVE_UK
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: ACASE@AJUBALAW.COM
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    is_tier1: false
                    is_tier2: true
                    is_tier3: false
                    is_virtual_user: true
                    location: Chicago
                    preferred_library: ACTIVE_UK
                    ssid: '931135823650820'
                    user_id_ex: ACASE
                    user_nos: 2
                    user_num: 87782
                  total_count: 2
                required:
                - data
                type: object
                properties: *id385
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/forms:
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/forms/visible-fields:
    description: |-
      None
    get:
      tags:
      - Forms
    #- customers-{customerId}-libraries-{libraryId}-forms-visible-fields
  #summary: GET /customers/{customerId}/libraries/{libraryId}/forms/visible-fields
      summary: Get visible form fields
      description: |
        Returns the set of fields that are visible in the field specification for a form type.<br>

        This list excludes the mandatory default fields. The query parameter `form_type` is required.<br>

        The following request returns a list of the visible form fields associated with document and email profiles.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/forms/visible-fields?form_type=edit_document`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of fields currently used in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To update the fields in the field specification for a form type, see UPDATE `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To return the system default fields in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default`<br>
        To return the complete of fields that are available for use in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/available-fields`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_forms_visible-fields
      parameters:
      - *id004
      - name: form_type
        in: query
        description: |
          Indicates the form type.<br>

          Only one form type may be specified for each request.<br><br>
          The following are allowed values:

          |Value|Description|
          |:---------|:--|
          |edit_workspace|The set of properties associated with a workspace.|
          |new_document|The set of properties associated with a folder.|
          |edit_document|The set of properties associated with a document or email.|
          |search|The set of properties associated with the document and email search dialog.|
          |search_workspaces|The set of properties associated with the workspace search dialog.|

           For example, the request GET `/customers/{customerId}/libraries/{libraryId}/forms/edit_document`
           gets the field specification associated with a document or email.<br><br>
           This set can also be seen in iManage Control Center, at **Settings > Forms > Document and Email Properties**.<br>
        schema:
          enum: ["search", "new_document", "edit_document", "search_workspaces", "edit_workspace"]
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items: &id1123
                      $ref: '#/components/schemas/Forms.formField'
                example:
                  data:
                  - author
                  - class
                  - comments
                  - create_date
                  - custom1
                  - custom2
                  - custom21
                  - custom22
                  - custom23
                  - custom24
                  - custom29
                  - custom3
                  - custom30
                  - custom4
                  - custom5
                  - document_number
                  - edit_date
                  - last_user
                  - name
                  - operator
                  - size
                  - subclass
                  - type
                  - version
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/forms/{formType}:
    description: |-
      None

    get:
      tags:
      - Forms
    #- customers-{customerId}-libraries-{libraryId}-forms-{formType}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/forms/{formType}
      summary: Get form fields
      description: |
        Returns a list of fields currently used in the field specification for a form type.<br>

        The following request returns a list of the form fields associated with document and email profiles.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/forms/edit_document`<br>
        There are no query parameters for this request.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To update the fields in the field specification for a form type, see UPDATE `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To return the set of fields that are visible in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/visible-fields`<br>
        To return the system default fields in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default`<br>
        To return the complete of fields that are available for use in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/available-fields`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_forms_{formType}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    description: Search
                    field_spec:
                    - version: '1'
                      fields:
                      - id: name
                        group: 1
                        deletable: true
                      - id: owner
                        group: 1
                        deletable: true
                required:
                - data
                type: object
                properties: &id388
                  data:
                    required:
                    - description
                    - field_spec
                    type: object
                    properties: &id386
                      description:
                        type: string
                        description: |-
                          Indicates the description of this form type.
                      field_spec:
                        type: array
                        items:
                          required:
                          - version
                          - fields
                          type: object
                          properties: &id1122
                            version:
                              type: string
                              description: |
                                Indicates the version number of the field specification.<br><br>
                                The value may contain a decimal point.
                                For example, the value can be "1" or "1.1".
                            fields:
                              type: array
                              items:
                                required:
                                - id
                                type: object
                                properties:
                                  id:
                                    type: string
                                    description: |-
                                      Indicates the identifier or name for this field.
                                  group:
                                    type: integer
                                    description: |
                                      Indicates the group numbered that this field belongs to.<br><br>
                                      This is used to prioritize or to group properties.
                                  deletable:
                                    type: boolean
                                    description: |
                                      Indicates that the field can be deleted from the form.<br><br>
                                      If `true`, the field can be deleted from the form.<br>
                                      If `false`, the field cannot be deleted from the form.
                                    default: false
                              description: |-
                                Indicates the set of fields in use for this form.
                        description: |
                          Indicates the field specifications for this form.<br><br>
                          There can be multiple field specification arrays because of backward compatibility with previous versions.
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Forms
    #- customers-{customerId}-libraries-{libraryId}-forms-{formType}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/forms/{formType}
      summary: Update form fields
      description: |
        Updates the fields in the field specification for a form type.<br>

        The request body will include all the fields the new field specification.
        The fields may be selected from the available fields, see GET `/customers/{customerId}/libraries/{libraryId}/forms/available-fields`<br>

        The minimum access permission required on the library to implement this request: NRTADMIN.

        The following request updates the fields in the field specification associated with the document and email form type.<br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/forms/edit_document`<br>
        Content-Type: text/json.<br>
        ```
        {
          "description":"Document and email - Barron's Guidelines",
          "field_spec" :
          [
            {
              "version":"1",
              "fields":
              [
                {"id":"custom16", "group":1, "deletable": true},
                {"id":"custom17", "group":1, "deletable": true}
              ]
            }
          ]
        }
        ```

        <br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of fields currently used in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To return the set of fields that are visible in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/visible-fields`<br>
        To return the system default fields in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default`<br>
        To return the complete of fields that are available for use in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/available-fields`
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_forms_{formType}
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Search
                field_spec:
                - version: '1'
                  fields:
                  - id: name
                    group: 1
                    deletable: true
                  - id: owner
                    group: 1
                    deletable: true
              required:
              - description
              - field_spec
              type: object
              properties: *id386
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    description: Search
                    field_spec:
                    - version: '1'
                      fields:
                      - id: name
                        group: 1
                        deletable: true
                      - id: owner
                        group: 1
                        deletable: true
                required:
                - data
                type: object
                properties: &id387
                  data:
                    required:
                    - description
                    - field_spec
                    type: object
                    properties: *id386
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    description: Search
                    field_spec:
                    - version: '1'
                      fields:
                      - id: name
                        group: 1
                        deletable: true
                      - id: owner
                        group: 1
                        deletable: true
                required:
                - data
                type: object
                properties: *id387
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: formType
      in: path
      description: |
        Indicates the form type.<br>

        Only one form type may be specified for each request.<br><br>
        The following are allowed values:

        |Value|Description|
        |:---------|:--|
        |edit_workspace|The set of properties associated with a workspace.|
        |new_document|The set of properties associated with a folder.|
        |edit_document|The set of properties associated with a document or email.|
        |search|The set of properties associated with the document and email search dialog.|
        |search_workspaces|The set of properties associated with the workspace search dialog.|

        For example, the request GET `/customers/{customerId}/libraries/{libraryId}/forms/edit_document`
        returns the field specification associated with a document or email.<br><br>
        This set can also be seen in iManage Control Center, at **Settings > Forms > Document and Email Properties**.
      required: true
      schema:
        x-inherit:
          $ref: '#/components/schemas/Forms.formType'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/forms/{formType}/available-fields:
    description: |-
      None
    get:
      tags:
      - Forms
    #- customers-{customerId}-libraries-{libraryId}-forms-{formType}-available-fields
  #summary: GET /customers/{customerId}/libraries/{libraryId}/forms/{formType}/available-fields
      summary: Get available form fields
      description: |
        Returns the complete set of fields that are available for use in the field specification for a form type.<br>

        The set includes the fields that are currently in use.<br>

        The following request returns a list of default form fields associated with document and email profiles.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/forms/edit_document/available-fields`<br>
        There are no query parameters for this request.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of fields currently used in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To update the fields in the field specification for a form type, see UPDATE `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To return the set of fields that are visible in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/visible-fields`<br>
        To return the system default fields in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_forms_{formType}_available-fields
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Forms.formField'
                    description: |-
                      All fields available for display and/or editing for the specified type of form.
                example:
                  data:
                  - alias
                  - author
                  - checked_out
                  - checkout_location
                  - class
                  - comments
                  - container_where_used
                  - create_date
                  - custom1
                  - custom2
                  - custom3
                  - custom4
                  - custom5
                  - custom6
                  - custom7
                  - custom8
                  - custom9
                  - custom10
                  - custom11
                  - custom12
                  - custom13
                  - custom14
                  - custom15
                  - custom16
                  - custom17
                  - custom18
                  - custom19
                  - custom20
                  - custom21
                  - custom22
                  - custom23
                  - custom24
                  - custom25
                  - custom26
                  - custom27
                  - custom28
                  - custom29
                  - custom30
                  - default_security
                  - description
                  - document_number
                  - edit_date
                  - file_target
                  - is_archived
                  - is_declared
                  - keyword
                  - last_user
                  - name
                  - operator
                  - owner
                  - related_documents
                  - size
                  - subclass
                  - type
                  - version
                  - where_used
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: formType
      in: path
      description: |
        Indicates the form type.<br>

        Only one form type may be specified for each request.<br><br>
        The following are allowed values:

        |Value|Description|
        |:---------|:--|
        |edit_workspace|The set of properties associated with a workspace.|
        |new_document|The set of properties associated with a folder.|
        |edit_document|The set of properties associated with a document or email.|
        |search|The set of properties associated with the document and email search dialog.|
        |search_workspaces|The set of properties associated with the workspace search dialog.|

        For example, the request GET `/customers/{customerId}/libraries/{libraryId}/forms/edit_document`
        returns the field specification associated with a document or email.<br><br>
        This set can also be seen in iManage Control Center, at **Settings > Forms > Document and Email Properties**.
      required: true
      schema:
        x-inherit:
          $ref: '#/components/schemas/Forms.formType'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default:
    description: |-
      None
    get:
      tags:
      - Forms
    #- customers-{customerId}-libraries-{libraryId}-forms-{formType}-default
  #summary: GET /customers/{customerId}/libraries/{libraryId}/forms/{formType}/default
      summary: Get default form fields
      description: |
        Returns the system default fields in the field specification for a form type.<br>

        This is the default set of fields, or the original set, defined by the iManage Work system at the time it was deployed or last updated.
        Fields marked as `"deletable": false` cannot be deleted.
        All other fields may be deleted, and new fields may be added. See see UPDATE `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>

        The following request returns a list of default form fields associated with document and email profiles.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/forms/edit_document/default`<br>
        There are no query parameters for this request.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of fields currently used in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To update the fields in the field specification for a form type, see UPDATE `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`<br>
        To return the set of fields that are visible in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/visible-fields`<br>
        To return the complete of fields that are available for use in the field specification for a form type, see GET `/customers/{customerId}/libraries/{libraryId}/forms/available-fields`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_forms_{formType}_default
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    description: Search
                    field_spec:
                    - version: '1'
                      fields:
                      - id: name
                        group: 1
                        deletable: true
                      - id: owner
                        group: 1
                        deletable: true
                required:
                - data
                type: object
                properties: *id388
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: formType
      in: path
      description: |
        Indicates the form type.<br>

        Only one form type may be specified for each request.<br><br>
        The following are allowed values:

        |Value|Description|
        |:---------|:--|
        |edit_workspace|The set of properties associated with a workspace.|
        |new_document|The set of properties associated with a folder.|
        |edit_document|The set of properties associated with a document or email.|
        |search|The set of properties associated with the document and email search dialog.|
        |search_workspaces|The set of properties associated with the workspace search dialog.|

        For example, the request GET `/customers/{customerId}/libraries/{libraryId}/forms/edit_document`
        returns the field specification associated with a document or email.<br><br>
        This set can also be seen in iManage Control Center, at **Settings > Forms > Document and Email Properties**.
      required: true
      schema:
        x-inherit:
          $ref: '#/components/schemas/Forms.formType'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders:
    description: |
      iManage Work organizes its content in a hierarchical container tree structure, similar to many computer operating systems, such as Microsoft Windows.
      In iManage Work, the tree structure is formed by two types of containers: Workspaces and Folders.
      * A workspace is a root-level container that can only be created at the library level. A workspace can contain only folders and tabs,
        but not documents or other workspaces.
      * A folder is created under a workspace or any other folder. It can contain subfolders and documents. A folder may contain any number of
        subfolders and be structured as needed. A folder created directly under a workspace is called a root-level folder. <br>
        Each folder is assigned a container ID which is a combination of its library name and a number. For example: active_uk!4532, where
        `active_uk` is the library name and 4532 is container number.

      The Folders collection includes requests to list folders, create folders, delete folders, modify profile properties and security,
      search for folders, and create subfolders.
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders
      summary: Get library folders
      description: |
        Returns a list of folders from the specified library.<br>

        If no query parameter is included, all the available folders are returned.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the folders from the library active_uk: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/folders`<br>
        **NOTE**: When the `limit` parameter is not specified, the response is restricted to 25 folders by default.<br>

        The following request returns first 50 folders found under the container active_uk!19523,
        as the query parameters `container_id` and `limit` are specified:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/folders?container_id=active_uk!19523&limit=50`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list multi-library folders, see <a href="#get-/work/api/v2/customers/-customerId-/folders">GET customers/{customerId}/folders </a>
        * To list properties of a single folder, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-">GET customers/{customerId}/libraries/{libraryId}/folders/{folderId} </a>
        * To create a folder, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/folders">POST customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders</a>
        * To delete a folder, see <a href="#delete-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-">DELETE customers/{customerId}/libraries/{libraryId}/folders/{folderId}</a>
        * To update folder properties, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-"> PATCH customers/{customerId}/libraries/{libraryId}/folders/{folderId}

      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders
      parameters:
      - *id004
      - name: container_id
        in: query
        description: |
          Specifies the container ID of a workspace or a folder to return folders from.<br>

          If the container ID is specified, only the folders under it are returned.<br>
          If the container ID is not specified, all the folders from the library are returned.<br>
          Only one container ID can be specified. Multiple values cannot be specified.
        schema:
          type: string
          example: active_uk!2222
      - *id083
      - &id556
        name: description
        in: query
        description: |+
          Specifies a value to be found in the `description` property of the folder.<br><br>
          This parameter is case insensitive and matches whole fields.<br>
          To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: contract
      - &id557
        name: email
        in: query
        description: |
          Specifies the email address to match with the folder email address.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        schema:
          type: string
          example: email1234@ajubalaw.com
      - name: include_ids
        in: query
        description: |
          Specifies to return folders only from the list of folder IDs provided.<br>

          For example, `include_ids=Active_uk!2222`.<br>
          Multiple folders can be included using a comma-separated list. For example, `include_ids=active_uk!22,active_uk!55,active_uk!401`.<br><br>
          If this parameter is omitted, all the folders from the library are returned.
        schema:
          type: string
      - *id134
      - &id559
        name: name
        in: query
        description: |+
          Specifies a value to be found in the `name` property of the folder.<br><br>
          This parameter is case insensitive and matches whole fields.
          To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.<br>
          Multiple names can be included using a comma-separated list.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: contract
      - &id560
        name: name_or_description
        in: query
        description: |+
          Specifies the text to search for in the `name` or `description` fields of iManage Work object.<br>

          * This parameter is case insensitive.<br>
          * Matches whole fields only and partial matches are not supported.
            For example, for an object named *Enron Completion*, the search `name_or_description=Enron` does not match.
            It must be specified as `name_or_description=Enron Completion`.
          * The wildcard character (&ast;) is supported, and matches any number of contiguous characters, including spaces.<br>
            To match partial fields, include the wildcard character (&ast;) before, after, or at both ends of the term.<br>
            For example, all the following searches match with `litigation`:
            * `name_or_description=litigation`
            * `name_or_description=*gation`
            * `name_or_description=litiga*`.


          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - *id006
      - &id561
        name: owner
        in: query
        description: |
          Specifies the owner's name for this folder.<br><br>
          This parameter is case insensitive and matches whole fields.
          To match partial fields, include the wildcard character (&ast;) before, after, or both the ends of a search term.
        schema:
          type: string
          example: ACASE
      - name: paging_mode
        in: query
        description: |-
          Specifies the paging mode to be used to retrieve the result set.

          The following are allowed values:

          * standard_cursor - Specifies the query parameter `cursor`can be used to identify the first item to return.
          The cursor is a value that specifies an item by an ID within the results set to start returning from.
          It is not an ordinal position as `offset` is for the standard paging mode.
          For a subsequent search, set `cursor` to the cursor value returned in the previous search.
          Do not modify the cursor value in anyway.
          The standard_cursor mode is the preferred paging mode, as it is quicker and less stressful on system performance.
          The parameter `offset` is ignored in this mode.<br>

          * standard -  Specifies the query parameter `offset` can be used to identify the first item to return.
          The offset is a value that specifies the position of an item within the results set to start returning from.
          This is relative to zero, or the absolute start of the list.
          An offset value of zero starts at the beginning of the results set.
          An offset value of 5, starts with the fifth item in the results set.
          The parameter `cursor` is ignored in this mode.<br><br>
        schema:
          enum: [standard, standard_cursor]
      - &id562
        name: reference_database
        in: query
        description: |-
          Specifies the target library to which the folder shortcuts and workspace shortcuts contained in the folder are pointing to.
        schema:
          type: string
          example: active_uk
      - name: sort_order
        in: query
        description: |-
          The sort order to be used when the paging mode is set to use a cursor.<br>

          The following are allowed values:

          |Value|Description|
          |:---|:---|
          |asc|The items are listed in ascending order either alphabetically or numerically.|
          |desc|The items are listed in descending order either alphabetically or numerically.|

          If omitted, items are returned in the order they are found.
        schema:
          enum: [asc, desc]
          type: string
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - &id563
        name: workspace_name
        in: query
        description: |
          Specifies the name of the parent workspace to which the folder belongs to.<br><br>
          This parameter is case insensitive and matches whole fields.<br>
          To match partial fields, include the wildcard character (&ast;) before, after, or both the ends of a search term.
        schema:
          type: string
          example: Microsoft Vs Google
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!108
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Administrative Record
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!109
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Agency Petitions
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!110
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Agreements
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                  total_count: 5000
                required:
                - id
                type: object
                properties: &id1233
                  container_saved_search_id:
                    type: string
                    description: |-
                      Indicates the search folder ID that saves the folder search results.<br>
                      This property is returned only if the property `is_container_saved_search` is `true`.
                  content_saved_search_id:
                    type: string
                    description: |-
                      Indicates the ID assigned to a search folder to save the document search results.<br><br>
                      This property is returned only if the property `is_content_saved_search` is `true`.
                  database:
                    type: string
                    description: |-
                      Indicates the name of the library where the folder is located.
                  default_security:
                    enum: ["inherit", "public", "view", "private"]
                    type: string
                    description: |-
                      The default access level.

                      |Value|Description|
                      |:---|:---|
                      |inherit|The container or document inherits security settings from its parent container.|
                      |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                      |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                      |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                  description:
                    type: string
                    description: |-
                      Indicates any additional information about the folder.<br><br>
                      This property is returned only if a description is set for the folder.
                  edit_date:
                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                    type: string
                    description: |-
                      Indicates the date (in ISO 8601 format) when the folder profile or its content was last edited.
                  effective_security:
                    $ref: '#/components/schemas/Projects.effectiveSecurity'
                  email:
                    type: string
                    maxLength: 254
                  folder_type:
                    $ref: '#/components/schemas/Projects.folderType'
                  has_documents:
                    type: boolean
                    description: |-
                      Indicates if the folder contains documents.<br><br>
                      If `true`, the folder contains documents.<br>
                      If `false`, the folder does not contain documents.
                  has_subfolders:
                    type: boolean
                    description: |
                      Indicates the folder contains subfolders.<br><br>
                      If `true`, the folder contains subfolders.<br>
                      If `false`, the folder does not contain subfolders.
                  id:
                    type: string
                    description: |-
                      Indicates the folder ID.
                  inherited_default_security:
                    $ref: '#/components/schemas/Projects.accessRule'
                  is_container_saved_search:
                    type: boolean
                    description: |
                      Indicates the folder search is saved in this folder.<br><br>
                      If `true`, the folder search is saved in this folder.<br>
                      If `false`, folder search is not saved in this folder.
                  is_content_saved_search:
                    type: boolean
                    description: |
                      Indicates the document search is saved in this folder.<br><br>
                      If `true`, the document search is saved in this folder.<br>
                      If `false`, the document search is not saved in this folder.
                  is_external:
                    type: boolean
                    description: |
                      Indicates the folder is shared with external users.<br><br>
                      If `true`, the folder is shared with external users.<br>
                      If `false`, the folder is not shared with external users.
                  is_external_as_normal:
                    type: boolean
                    description: |-
                      Indicates if the external folder is treated as a normal folder.<br><br>
                      If `true`, the current user's `is_external` value does not affect the access permissions the user has on the folder.
                      That is, all the users can access the content of a folder according to their access permission. <br>
                      If `false`, the external users can access only the folder content they have been permitted to. <br>

                      If it is `true` and `default_security` of folder is not `private`, the property `is_external` is set to `true`.<br>
                      If it is `false` and `default_security` of folder is not `private`, the property `is_external` is set to `false`.
                  name:
                    type: string
                    description: |-
                      Indicates name of the folder.
                  owner:
                    type: string
                    description: |
                      Indicates the user ID of the folder owner.
                  owner_description:
                    type: string
                    description: |-
                      Indicates full name of the owner.
                  parent_id:
                    type: string
                    description: |-
                      Indicates the parent folder ID.
                  project_custom1:
                    type: string
                    description: |
                      Indicates additional information about the folder.<br><br>
                      This is descriptive text that does not have to be formatted, and is not validated.
                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                      <br>
                  project_custom2:
                    type: string
                    description: |
                      Indicates additional information about the folder.<br><br>
                      This is descriptive text that does not have to be formatted, and is not validated.
                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                      <br>
                  project_custom3:
                    type: string
                    description: |
                      Indicates additional information about the folder.<br><br>
                      This is descriptive text that does not have to be formatted, and is not validated.
                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                      <br>
                  security_policy:
                    type: string
                    $ref: '#/components/schemas/Common.securityPolicyType'
                  subtype:
                    enum: ["Q", "C", "S", "F", "T", "N", "E", "D", "template", "work",
                      "imanage_share_folder"]
                    type: string
                    description: |+
                      Indicates the subtype of the container.

                      |Value|Description|
                      |:---|:---|
                      |Q|Tab|
                      |C|Search folder.|
                      |S|If the container is at the root level of a workspace, it is My Matters. If the container has a valid parent container, it is a category.|
                      |F|My Favorites container|
                      |T|Task|
                      |N|Note|
                      |E|Event|
                      |D|Discussion|
                      |work|Workspace|
                      |imanage_share_folder|iManage Share folder|
                      |template|Workspace template|

                  view_type:
                    enum: ["none", "document", "email", "email_search", "document_search",
                      "linksite", "imanage_share"]
                    type: string
                    description: |-
                      The folder view type based on its content.<br><br>
                      The display in client application is customized for each content type.
                      For example, when a document folder (type *document*) is selected, the display is customized for
                      displaying documents and their properties such as file name, size, and location.

                      The following are folder view types based on the type of content they hold:

                      |View Type|Description|
                      |:---|:---|
                      |document|For document folders and document search folders.|
                      |email| For email folders and email search folders.|
                      |imanage_share|For iManage Share folder shortcuts.|
                  workspace_id:
                    type: string
                    description: |-
                      Indicates the parent workspace ID.
                  workspace_name:
                    type: string
                    description: |-
                      Indicates the name of the parent workspace.
                  wstype:
                    $ref: '#/components/schemas/Projects.wsType'
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to a customer.<br><br>
        The customer ID can be retrieved using the discovery request GET `https://{hostname}/api`.<br>
        The returned JSON field **data > user > customer_id** contains the customer ID.<br>
        This unique value is permanently assigned to the iManage Work system, and needs to be checked only once when the application runs the first time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/search:
    description: |
      The folder search request returns all folders that match the specified search criteria. 

      Only the specified folder profile fields are returned in the response.
      This facilitates to retrieve only the information that is relevant and useful.

    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-search
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/search
      summary: Scoped search for folders
      description: |
        Returns all folders in the library that match the specified search criteria.<br>

        Only the specified folder profile fields are returned in the response.<br>
        This facilitates to retrieve only the information that is relevant and useful.<br>

        By default, the response includes `id`, and `wstype`.<br>
        The request body parameter `filters` specifies the search criteria. <br>
        The `profile_fields` parameter specifies the set of fields to return in the response object.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns 5 folders of owner ACASE with the specified `profile_fields` in the response:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/search`<br>
        Request body:
        ```
        {
           "profile_fields":{
              "folder":[
                 "name",
                 "folder_type",
                 "has_subfolders",
                 "parent_id"
              ]
           },
           "filters":{
              "owner":"ACASE"
           },
           "limit":5
        }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To get a list of all folders from all libraries, see GET `/customers/{customerId}/folders`
        * To get a list of all folders in a library, see GET `/customers/{customerId}/libraries/{libraryId}/folders`

      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_search
      requestBody:
        content:
          application/json:
            schema:
              title: Folder Search Request
              type: object
              properties: &id1608
                limit:
                  type: integer
                  description: |
                    Specifies the maximum number of folders to include in the response.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    folder:
                      type: array
                      items:
                        type: string
                      description: |
                        Up to 15 folder profile properties to include in the response.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    container_id:
                      type: string
                      description: |
                        Specifies the workspace ID or folder ID to return folders from. For example, *active_uk!22*, or *Integration!1*.
                        If this parameter is defined, it returns folders only from the specified container ID.
                        If this parameter is not defines, all the folders from all the available libraries are returned.
                        This property cannot be comma-separated.
                    email:
                      type: string
                      maxLength: 254
                    include_ids:
                      type: string
                      description: |
                        Specifies to return folders only from the list of folder IDs provided.
                        For example, `include_ids=active_uk!22`
                        Multiple folders can be included using comma-separated list.
                        For example, `include_ids=active_uk!22,active_uk!55,active_uk!401`
                        If this parameter is omitted, the folders from all the available libraries are returned.
                    name:
                      type: string
                      description: |
                        Specifies a value to be found in the `name` property of the folder.<br><br>
                        This parameter is case insensitive and matches whole fields.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.<br>
                        Multiple search terms can be included using a comma-separated list.
                    description:
                      type: string
                      description: |
                        Specifies a value to be found in the `description` property of the folder.<br><br>
                        This parameter is case insensitive and matches whole fields.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.
                    name_or_description:
                      type: string
                      description: |
                        Specifies a value to be found in the 'name' or `description` property of the folder.<br><br>
                        This parameter is case insensitive and matches whole fields.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.
                    owner:
                      type: string
                      description: |
                        Specifies the string to match with the owner associated with the folder.
                    reference_database:
                      type: string
                      description: |-
                        Specifies a library to which the folder is associated with.
                  description: |
                    Specifies the filter criteria to search for folders.<br><br>
                    If `filters` parameter is not included, all items are returned.
                    If `filters` parameter is included, only items matching all the filters are returned.<br>

                    The valid filters are: `container_id`, `email`, `include_ids`, `name`, `description`, `name_or_description`, `owner`, and `reference_database`.

                    Any field that is invalid but included in the filters list is ignored.<br>

                    The following request is the minimum body JSON to be included.
                    It returns all the folders from all the libraries up to the `limit` parameter value.

                    ```
                    {
                    	"filters": {}
                    }
                    ```

                    The following request specifies that only the folders matching the `name` and `owner` field values are returned.

                    ```
                    {
                      "filters": {
                        "name": "Briefing",
                        "owner": "CPIERCE"
                      }
                    }```
              example: &id1609
                profile_fields:
                  folder:
                  - name
                  - owner
                filters:
                  name_or_description: Briefing
                  owner: CPIERCE
                limit: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Folder Search Response
                required:
                - data
                - overflow
                type: object
                properties: &id564
                  data:
                    type: array
                    description: Array of folder objects
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id565
                  data:
                  - activity_date: '2017-03-24T12:04:49Z'
                    database: active_us
                    default_security: inherit
                    edit_date: '2017-03-24T12:04:31Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: active_us!14345
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Employee Engagements
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!9472
                    workspace_id: active_us!9192
                    workspace_name: Labor Practice
                    wstype: folder
                  - activity_date: '2017-03-24T12:04:25Z'
                    database: active_us
                    default_security: inherit
                    edit_date: '2017-03-24T12:03:38Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: active_us!16324
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Depositions
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!9192
                    workspace_id: active_us!9192
                    workspace_name: Labor Practice
                    wstype: folder
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}:
    description: |-
      None
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}
      summary: Get folder profile
      description: |
        Returns the folder profile of the specified folder ID. <br><br>
        This request returns one of two types of profile in the response depending upon the type of folder: regular folder and folder shortcut.<br>

        The regular folder profile consists of its various properties - for example, name, owner, custom properties, and default security.<br>

        The folder shortcut profile consists of additional information about the target folder - for example, target folder ID, library, folder type, and subtype.<br>

        If the query parameter `include_operations` is `true`, it also returns the list of operations allowed on the folder,
        such as moving the folder, deleting its content, and updating the default security. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the profile of folder active_us!4754 and the operations allowed on it:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4754?include_operations=true`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list multi-library folders, see <a href="#get-/work/api/v2/customers/-customerId-/folders">GET customers/{customerId}/folders </a>
        * To list library folders, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders">GET customers/{customerId}/libraries/{libraryId}/folders </a>
        * To create a folder, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/folders">POST customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders</a>
        * To delete a folder, see <a href="#delete-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-">DELETE customers/{customerId}/libraries/{libraryId}/folders/{folderId}</a>
        * To update folder properties, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-"> PATCH customers/{customerId}/libraries/{libraryId}/folders/{folderId}
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}
      parameters:
      - *id004
      - name: include_operations
        in: query
        description: |
          Specifies to return a list of operations allowed on a folder by the current user.<br><br>
          If `true`, returns a list of operations allowed on a folder by the user.<br>
          If `false`, does not return list of operations allowed on a folder by the user.<br>
          If omitted, the value is `false`.
        schema:
          type: boolean
          default: false
      - *id389
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    project_custom3: active_uk|91|522
                    database: active_uk
                    default_security: inherit
                    edit_date: '2017-06-13T16:53:48Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: active_uk!526
                    inherited_default_security: public
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Attorney Notes
                    operations:
                      add_content: true
                      add_custom_folders: true
                      add_folders: true
                      change_name: true
                      modify: true
                      modify_layout: true
                      remove: true
                      remove_content: true
                      remove_folders: true
                      set_default_security: true
                      set_security: true
                      update_content_shortcut: true
                      default_security_values:
                      - private
                      - view
                      - public
                      - inherit
                    owner: ADMINISTRATOR
                    owner_description: Administrator
                    owner_info:
                      allow_logon: true
                      is_external: false
                    parent_id: active_uk!522
                    profile:
                      class: A-NOTE
                      custom1: '1091'
                      custom1_description: McKellesson
                      custom2: active_uk
                      custom2_description: General
                    view_type: document
                    wstype: folder
                type: object
                required:
                - data
                properties: &id1207
                  data:
                    anyOf:
                    - $ref: '#/components/schemas/Projects.folderWithAdditionalInfo'
                    - $ref: '#/components/schemas/Shortcuts.folderShortcutWithAdditionalInfo'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    delete:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/folders/{folderId}
      summary: Delete a folder
      description: |
        Deletes the specified folder.
        A successful delete folder request does not return a response object.<br>

        A delete request fails if the following conditions are not satisfied:<br>

        1. The folder must not contain any child items.
        Folders being deleted independently or as part of a workspace deletion, cannot contain any subfolders or documents.
        Check for the folder children using the request:<br>
        GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`

        2. The user must have the minimum of read/write access permission to that item and to all other attached items.
        This applies to all create, delete, and modify operations and is not unique to this operation.
        Check access permission for each library with the operations call:<br>
        GET `/customers/{customerId}/libraries/{libraryId}/operations`

        Therefore, on encountering an error while deleting a folder, check the above conditions to determine the source of error.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes the folder active_us!4960:<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4960`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list multi-library folders, see <a href="#get-/work/api/v2/customers/-customerId-/folders">GET customers/{customerId}/folders </a>
        * To list library folders, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders">GET customers/{customerId}/libraries/{libraryId}/folders </a>
        * To create a folder, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/folders">POST customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders</a>
        * To update folder properties, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-"> PATCH customers/{customerId}/libraries/{libraryId}/folders/{folderId}
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_folders_{folderId}
      parameters:
      - *id004
      - name: folderId
        in: path
        description: |-
          The folder ID of target folder to be deleted.
        required: true
        schema:
          example: "active_us!4960"
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
    patch:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/folders/{folderId}
      summary: Update folder properties
      description: |
        Updates the folder properties with the specified properties. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the name and default security of the folder active_us!4754:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4754`

        Request body:
        ```
        {
        	"name": "Updated Folder Name",
        	"default_security": "public"
        }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list multi-library folders, see <a href="#get-/work/api/v2/customers/-customerId-/folders">GET customers/{customerId}/folders </a>
        * To list library folders, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders">GET customers/{customerId}/libraries/{libraryId}/folders </a>
        * To create a folder, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/workspaces/-workspaceId-/folders">POST customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders</a>
        * To delete a folder, see <a href="#delete-/work/api/v2/customers/-customerId-/libraries/-libraryId-/folders/-folderId-">DELETE customers/{customerId}/libraries/{libraryId}/folders/{folderId}</a>
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_folders_{folderId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                default_security: inherit
                name: Revisions
                owner: andrew.case
                project_custom1: '1004'
                project_custom2: '001'
                project_custom3: LITIGATE
                is_external_as_normal: true
                profile:
                  custom3: LITIGATE
              type: object
              properties: &id1221
                default_security: &id1222
                  enum: ["inherit", "public", "view", "private"]
                  type: string
                  description: |-
                    The default access level.

                    |Value|Description|
                    |:---|:---|
                    |inherit|The container or document inherits security settings from its parent container.|
                    |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                    |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                description: &id1223
                  maxLength: 254
                  nullable: true
                  type: string
                  description: |+
                    Specifies additional information about the folder.<br><br>
                    Maximum length is 254 characters.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                email: &id1224
                  nullable: true
                  description: |
                    Specifies the email address of the folder.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                is_external_as_normal: &id1225
                  type: boolean
                  description: |-
                    Specifies if an external user is treated as a normal user, and can access public folders along with the folders permitted to access.<br><br>
                    If `true`, the external user is treated as normal user, and can access public folders.<br>
                    If `true`, the external user is not treated as normal user, and cannot access public folders.<br>

                    This property can be set to `true` only if the container's default security is not `inherit`. Otherwise, it is not updated and remains `false`.
                name: &id1226
                  maxLength: 254
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  type: string
                  description: |+
                    Specifies name of the folder.<br><br>
                    Maximum length is 254 characters.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                owner: &id1227
                  type: string
                  maxLength: 63
                  pattern: |-
                    ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                  description: |
                    Specifies user ID of the folder owner.<br><br>
                    This parameter value can be updated only by an NRTADMIN.
                parent_id: &id1228
                  type: string
                  description: |-
                    Specifies the parent folder ID.<br><br>
                    If `parent_id` is updated, the folder moves to the new parent folder whose ID is specified as `parent_id`.
                profile: &id1229
                  type: object
                  description: Folder profile information that is applied on the documents
                    automatically when they are uploaded to the folder.
                  properties:
                    custom1:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom2:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom3:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom4:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom5:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom6:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom7:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom8:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom9:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom10:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom11:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom12:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom13:
                      nullable: true
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom13 property.<br><br>Maximum length&colon; 96.
                    custom14:
                      nullable: true
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom14 property.<br><br>Maximum length&colon; 96.
                    custom15:
                      nullable: true
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom15 property.<br><br>Maximum length&colon; 96.
                    custom16:
                      nullable: true
                      maxLength: 96
                      type: string
                      description: |-
                        A string value for the custom16 property.<br><br>Maximum length&colon; 96.
                    custom17:
                      nullable: true
                      type: number
                      description: |-
                        A numeric value for the custom17 property.
                      format: double
                    custom18:
                      nullable: true
                      type: number
                      description: |-
                        A numeric value for the custom18 property.
                      format: double
                    custom19:
                      nullable: true
                      type: number
                      description: |-
                        A numeric value for the custom19 property.
                      format: double
                    custom20:
                      nullable: true
                      type: number
                      description: |-
                        A numeric value for the custom20 property.
                      format: double
                    custom21:
                      nullable: true
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        Specifies a timestamp for the custom21 property (in ISO 8601 format).
                    custom22:
                      nullable: true
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom22 property (in ISO 8601 format).
                    custom23:
                      nullable: true
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom23 property (in ISO 8601 format).
                    custom24:
                      nullable: true
                      pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                      type: string
                      description: |-
                        A timestamp for the custom24 property (in ISO 8601 format).
                    custom25:
                      nullable: true
                      type: boolean
                      description: |-
                        A boolean value for the custom25 property.
                    custom26:
                      nullable: true
                      type: boolean
                      description: |-
                        A boolean value for the custom26 property.
                    custom27:
                      nullable: true
                      type: boolean
                      description: |-
                        A boolean value for the custom27 property.
                    custom28:
                      nullable: true
                      type: boolean
                      description: |-
                        A boolean value for the custom28 property.
                    custom29:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom30:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
                    custom31:
                      nullable: true
                      maxLength: 32
                      type: string
                      description: |-
                        Reserved. Do not use.
                  additionalProperties: true
                project_custom1: &id1230
                  maxLength: 254
                  nullable: true
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom2: &id1231
                  maxLength: 254
                  nullable: true
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                project_custom3: &id1232
                  maxLength: 254
                  nullable: true
                  type: string
                  description: |
                    Specifies additional information about the folder.<br><br>
                    This is descriptive text that does not have to be formatted, and is not validated.
                    This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                    <br>

                    The text restrictions are:

                    |Term|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id097
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders:
    description: |
      A subfolder is folder created within another folder.

      The following can be done while creating a subfolder:<br>
      * Set the profile fields.
      * Inherit security from the parent folder.
      * Specify the default security.
      * Assign access permissions to users and groups.
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-subfolders
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders
      summary: Create subfolders
      description: |
        Creates a folder within another folder known as subfolder.<br>

        The minimum access permission required to a folder to add a subfolder is read_write.<br>

        A user can configure the following while creating a subfolder:<br>
        * Set the profile fields.
        * Inherit security from the parent folder.
        * Specify the default security.
        * Assign access permissions to users and groups.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a subfolder within folder active_us!4567:<br>

        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4567/subfolders`<br>

        Request body:
        ```
        {
           "name":"Employee Agreements",
           "default_security":"inherit",
           "description":"Contract documents",
           "profile":{
              "custom1":"001",
              "custom1_description" : "Microsoft"
           },
           "group_trustees":[ ],
           "user_trustees":[
              {
                 "id":"CPIERCE",
                 "access_level":"read_write"
              }
           ]
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        A folder can be created using the following requests:<br>
        * To create a folder in a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`<br>
        * To create a folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>
        * To create a folder within a tab, see POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_subfolders
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Employee Agreements
                default_security: inherit
                description: Contract documents
                profile:
                  custom1: '001'
                  custom1_description: Microsoft
                group_trustees: []
                user_trustees:
                - id: CPIERCE
                  access_level: read_write
              required:
              - name
              type: object
              properties: *id211
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Active
                    default_security: inherit
                    edit_date: '2017-03-16T19:22:11Z'
                    effective_security: full_access
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!258111
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: confidential
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    profile:
                      custom1: 00100000001XD0Y
                      custom2: '177101'
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: New York Acquisitions
                    wstype: folder
                required:
                - data
                type: object
                properties: *id097
                additionalProperties: false
        400: *id003
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security-policy:
    description: |
      iManage Security Policy Manager assigns security policies to clients and matters and in turn to the associated folders and documents.
      Based on the security policy, users and groups are either provided permissions to access these clients and matters and their contents
      or restricted from accessing the same.<br>

      This request may not be available for all environments. <br>
      To check its availability, use GET `/customers/{customerId}/features`.<br>
      If the field `spm` is set to `true`, this feature is enabled.

    get:
      tags:
      - Security Policy
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-security-policy
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security-policy
      summary: Get folder security policy
      description: |
        Returns the list of users who are allowed or restricted to access a folder. <br>

        This list of users is defined by the security policy for the client-matter to which the folder belongs to.<br>

        iManage Security Policy Manager assigns security policies to clients and matters and in turn to the associated folders and documents.
        Based on the security policy, users and groups are either provided permissions to access these clients and matters and their contents
        or restricted from accessing the same.<br>

        This request may not be available for all environments. <br>
        To check its availability, use GET `/customers/{customerId}/features`.<br>
        If the field `spm` is set to `true`, this feature is enabled.

        The following security policies are available:<br>
        * `exclusionary` - It contains a deny_list of the users who cannot access the folder.
        * `restricted` - It contains an allow_list of the users who can access the folder.
        If a user is assigned both the policies, then exclusionary setting takes the precedence.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the security policy defined for the folder active_us!4567: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4567/security-policy`

      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_security-policy
      parameters:
      - *id004
      - name: spm_custom1
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      - name: spm_custom2
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Common.effectiveSecurityPolicy'
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security:
    description: |

    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security
      summary: Get folder security
      description: |
        Returns the access permission and default security of a folder.<br>

        The folder security requests return or update the following security properties of a folder:
        * default security
        * access permission to users and groups

        **Default security**<br>
        The folders in iManage Work library are assigned with default security.<br>
        The following default security settings are available: <br>

        |Value|Description|
        |:---|:---|
        |inherit|The container or documents inherits security settings from its parent container.|
        |private|Only the user who created the container, and users and groups who are explicitly granted access permission, can access it.|
        |view|All users can access the container but cannot add or remove documents from the container unless explicitly assigned access permission.|
        |public|All users can access the container unless explicitly excluded. Users need to have the proper authority to create a public folder, or to change the security level to public.|

        **Access permission**<br>
        The owner of a document or a user with full access can assign specific access permission to individual users and groups.<br>
        When a group is granted access to a document, the same access permission are applied to all users who are members of the group.<br>

        Level of access permission assigned to users or groups to perform various actions on the object.<br>
        See the <a href="#overview--privileges">Privileges</a> section of the overview.

        The following are the possible values:

        |Term|Value|Description|
        |:---|:---|:---|
        |no_access|0|The user has no access, or any permissions to the container or document.|
        |read|1|The user can access the container, or read the document but cannot add or remove documents from the container unless explicitly assigned access permission.|
        |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|3|The user has complete access to the container or document, and may read, edit, or delete the document. The user may grant permissions to other users/groups, and can edit the document default security levels.|

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the default security of folder active_us!4567, and the access permission on it to users and groups:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4567/security`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To update the access permission and default security of a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-security
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security
      summary: Update folder security
      description: |
        Updates the access permission and default security of a folder.<br>

         <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the default security of the folder active_us!4567 to `public`, and provides
        `read_write` access permission on it to user ID CPIERCE:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4567/security`

        Request body:
        ```
        {
           "include": [
              {
                 "access_level":"read_write",
                 "id":"CPIERCE",
                 "type":"user"
              }
           ],
           "default_security":"public"
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return the access permission and default security of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/security`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_security
      requestBody:
        content:
          application/json:
            schema:
              example:
                include:
                - access_level: full_access
                  id: acase
                  type: user
                - access_level: read
                  id: viewgroup
                  type: group
                remove:
                - id: nonviewgroup
                  type: group
                default_security: public
              type: object
              properties: *id100
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                properties: *id094
                required:
                - data
                type: object
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders:
    description: |
      A search folder is a container that automatically performs a search when it is opened.
      When the folder is first created, search criteria is specified, and this criteria can be updated as needed.
      Each time the search folder is opened, it performs the search and displays the results as links to those items documents.
      The folder does not hold actual documents but instead holds links to those items found from the search.
      A search folder can contain other folders and search folders.
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-search-folders
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders
      summary: Create a search folder
      description: |
        Creates a new search folder within another folder.<br>

        A search folder is a container that does not hold actual documents but instead holds links to the documents found from a search.
        When a search folder is first created, a search criteria is specified to search for documents. This criteria can be updated as needed.
        Each time the search folder is opened, it performs the search per the defined criteria and displays the results as links to the searched documents.
        A search folder can contain other folders and search folders, but not actual documents.<br>

        To create search folders at the root level of a workspace, use POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`<br>

        The search criteria is specified using the `searchprofile` field.
        To modify the search criteria after the search folder is created, use PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folder_id}`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a search folder in folder active_us!7324, and creates a search for documents whose document number is exclusively between 3000 and 5000.
        The response body includes the details for the newly-created search folder.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!7324/search-folders`<br>
        Request body:<br>

        ```
        {
          "database"         : "active_us",
          "default_security" : "inherit",
          "name"             : "Due Soon Documents",
          "description"      : "Due soon. Check daily."
          "searchprofile"    :
          {
            "contenttype"       : "D,5",
            "databases"         : "active_us",
            "docnum"            : "3000-5000"
          }
        }
        ```

        <br><font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a search folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/search-folders`<br>
        * To create a search folder at the root level of a workspace, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/search-folders`<br>
        * To list the children (containers and documents) at the root level of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/children`<br>
        * To list the children (including folders, search folders, and documents) of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children`<br>
        * To return a list of folders from a library, see GET `/customers/{customerId}/libraries/{libraryId}/folders`<br>
        * To see the search criteria of a search folder, see GET `/customers/{customerId}/libraries/{libraryId}/search-folders/{search_folderId}`<br>
        * To update the search criteria for a search folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/search-folders/{folderId}`<br>
        * To delete any folder (including a search folder), see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_search-folders
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: WorksiteDB
                name: SearchFolder1
                default_security: inherit
                group_trustees: []
                searchprofile:
                  docnum: '1'
                  version: '2'
                  name: docSearch
                  author: ACASE
                  operator: ACASE
                  class: Document
                  fulltext: fulltext
                  subclass: subclass
                  type: Document
                  checked_out: true
                  in_use: true
                  emails_only: false
                  documents_only: true
                  description_fulltext: desc
                  comments_fulltext: comment
                  comments_description_fulltext: commentsanddesc
                  body: body
                  description: desc
                  size: 10
                user_trustees: []
              required:
              - database
              - name
              - default_security
              - searchprofile
              type: object
              properties: *id390
              additionalProperties: false
              description: |-
                Search folder to create.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    content_saved_search_id: '53498'
                    database: Active
                    default_security: inherit
                    edit_date: '2017-05-03T19:36:48Z'
                    effective_security: full_access
                    folder_type: search
                    has_documents: false
                    has_subfolders: false
                    id: Active!262143
                    is_container_saved_search: false
                    is_content_saved_search: true
                    is_external_as_normal: false
                    name: SearchFolder1
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    searchprofile:
                      author: ACASE
                      body: body
                      checked_out: true
                      class: Document
                      comments_description_fulltext: commentsanddesc
                      comments_fulltext: comment
                      description: desc
                      description_fulltext: desc
                      docnum: '1'
                      documents_only: true
                      emails_only: true
                      fulltext: fulltext
                      in_use: true
                      name: docSearch
                      operator: ACASE
                      size: 10
                      subclass: subclass
                      type: Document
                      version: '2'
                    view_type: email
                    workspace_id: Active!14696
                    workspace_name: Evaluation Space
                    wstype: folder
                required:
                - data
                type: object
                properties: *id257
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/path:
    description: |
      Folders in iManage Work are created in hierarchical order. The folder path can be retrieved using this request.
      It returns the hierarchy of folders starting from the parent workspace traversing through all its folders and subfolders until the specified folder.
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-path
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/path
      summary: Get folder path
      description: |
        Returns the path of the specified folder. <br><br>
        This request lists the folders and their properties in the hierarchical structure from the parent
        workspace traversing through all its folders and subfolders until the specified folder.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the path of folder active_us!20631:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!20631/path`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_path
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2019-12-09T14:16:55.925Z'
                    database: active_us
                    default_security: private
                    edit_date: '2019-12-09T15:46:05.925Z'
                    has_subfolders: true
                    id: active_us!15289
                    is_external: false
                    is_external_as_normal: false
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Google vs Microsoft
                    owner: ACASE
                    owner_description: Andrew Case
                    document_number: 100001083027
                    is_declared: false
                    is_hipaa: false
                    iwl: iwl:dms=ajubalaw.com&&lib=active_us&&num=100001083027&&ver=1
                    retain_days: 365
                    version: 1
                    wstype: workspace
                  - database: active_us
                    default_security: inherit
                    edit_date: '2020-01-17T22:01:44.643Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!17218
                    inherited_default_security: private
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Administrative Record
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!15289
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                  - database: active_us
                    default_security: public
                    edit_date: '2020-06-05T03:09:09.933Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!20631
                    inherited_default_security: public
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Employment Agreements
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!17218
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                required:
                - data
                type: object
                properties: &id536
                  data:
                    description: |-
                      Array of folders forming the folder path.
                    type: array
                    items:
                      $ref: '#/components/schemas/Projects.project'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/operations:
    description: |-
      None
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/operations
      summary: Get folder operations
      description: |
        Returns operations the current user is allowed to perform on the specified folder.<br>

        The list of folder operations include moving or deleting a folder, adding or deleting its content,
        updating default security, updating profile properties.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on folder active_us!7483:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!7483/operations`

      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    add_content: true
                    add_custom_folders: true
                    add_folders: true
                    change_name: true
                    modify: true
                    modify_layout: true
                    remove: true
                    move: true
                    remove_content: true
                    remove_folders: true
                    set_default_security: true
                    set_security: true
                    update_content_shortcut: true
                    default_security_values:
                    - private
                    - view
                    - public
                    - inherit
                required:
                - data
                type: object
                properties: &id1650
                  data:
                    required:
                    - add_content
                    - remove_content
                    - add_folders
                    - remove_folders
                    - change_name
                    - modify
                    - remove
                    - set_default_security
                    - set_security
                    - update_content_shortcut
                    type: object
                    description: |
                      Folder operations
                    properties:
                      add_content:
                        type: boolean
                        description: |
                          Indicates that documents can be added to the folder.<br><br>
                          If `true`, documents can be added to the folder.<br>
                          If `false`, documents cannot be added to the folder.
                      add_custom_folders:
                        type: boolean
                        description: |
                          Indicates a user can create a custom folder.<br><br>
                          Custom folders are those that are not defined by a workspace template, or not enforced by flexible folders.
                          This parameter applies only to a folder that has been created from a workspace template and the flexible folders option is currently enabled.
                          For more information on workspace template, see the <a href="#tag--Workspace-Templates">Workspace Templates</a> collection.<br><br>
                          If `true`, users can create custom folders.<br>
                          If `false`, users cannot create custom folders.<br><br>
                          If the folder was not created from a workspace template, users can create standard folders according their access permission.
                      add_folders:
                        type: boolean
                        description: |
                          Indicates subfolders can be added to the folder.<br><br>
                          If `true`, subfolders can be added to the folder.<br>
                          If `false`, subfolders cannot be added to the folder.
                      change_name:
                        type: boolean
                        description: |
                          Indicates the folder can be renamed.<br><br>
                          If `true`, the folder can be renamed.<br>
                          If `false`, the folder cannot be renamed.
                      default_security_values:
                        type: array
                        items:
                          enum: ["private", "view", "public", "inherit"]
                          type: string
                        description: |
                          Indicates the default security setting.<br>

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or item inherits security settings from its parent container.|
                          |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                          |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      modify:
                        type: boolean
                        description: |
                          Indicates the folder profile can be modified.<br><br>
                          If `true`, the folder profile can be modified.<br>
                          If `false`, the folder profile cannot be modified.
                      move:
                        type: boolean
                        description: |
                          Indicates the folder can be moved.<br><br>
                          If `true`, the folder can be moved.<br>
                          If `false`, the folder cannot be moved.
                      remove_content:
                        type: boolean
                        description: |
                          Indicates documents in the folder can be deleted.<br><br>
                          If `true`, documents in the folder can be deleted.<br>
                          If `false`, documents in the folder cannot be deleted.
                      remove_folders:
                        type: boolean
                        description: |
                          Indicates subfolders can be deleted.<br><br>
                          If `true`, subfolders can be deleted.<br>
                          If `false`, subfolders cannot be deleted.<br>
                          A subfolder can be deleted only if it is empty.
                      remove:
                        type: boolean
                        description: |
                          Indicates the folder can be deleted.<br><br>
                          If `true`, the folder can be deleted.<br>
                          If `false`, the folder cannot be deleted.<br>
                          A folder can be deleted only if it is empty.
                      set_default_security:
                        type: boolean
                        description: |
                          Indicates the default security of the folder can be updated.<br><br>
                          If `true`, the default security of the folder can be updated.<br>
                          If `false`, the default security of the folder cannot be updated.
                      set_security:
                        type: boolean
                        description: |
                          Indicates the security of the folder can be updated.<br><br>
                          If `true`, the security of the folder can be updated.<br>
                          If `false`, the security of the folder cannot be updated.
                      update_content_shortcut:
                        type: boolean
                        description: |
                          Indicates if the user can update the `name` property of document shortcuts in this folder.<br><br>
                          If `true`, the user can update the `name` property of document shortcuts in this folder.<br>
                          If `false`, the user cannot update the `name` property of document shortcuts in this folder.
                    additionalProperties: true
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs:
    description: |
      Name-value pairs are customized properties for a folder and tab to store additional information.<br>

      Name-value pairs allow the storage of any additional information about the folder.
      These are in addition to the system-provided properties, and are saved separately from them.
      These properties are not validated by iManage Work system.
      They are different from custom fields, and are not a part of the object model, or a part of the object profile.
      The information is stored as a dictionary pair in the format `"key_name": "value"`.
      Any number of pairs can be stored.<br>

      Name-value pairs are allowed with the following object types:
      * Documents
      * Folders and tabs
      * Workspaces

      For example, the folder owner may need to store a trial or court date.
      As there is no property for this, a name-value pair can be created as `"trial_date": "2021-01-15T15:00:00.000000Z"`.<br>

      <font style="color:black;size:5">Using name-value-pairs requests</font><br><br>
      To return a list of name-value pair properties of a folder, use GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br><br>
      The following request returns all the name-value pairs of the specified folder:<br>
      GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!123/name-value-pairs`<br>
      Response body:<br>
       ```
      {
         "trial_date": "2021-01-15T15:00:00.000000Z",
         "prefix_document_name": "true"
      }
      ```

      <br>To create a new name-value pair, to modify the value of an existing one, or to delete a pair, use PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br><br>
      This example continues the one above.
      * The first entry creates a new name-value pair `project_lead` with `ACASE` as the value.
      * The second entry modifies the existing `trial_date` to `2021-02-15T15:00:00.000000Z`.
      * The third entry deletes `prefix_document_name` by setting it to null.
      * The fourth entry attempts to delete a name-value pair that does not exist.
      No error occurs if deleting a name-value pair that is not already present.

      PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!123/name-value-pairs`<br>
      Request body:<br>

      ```
      {
        "project_lead": "ACASE",
        "trial_date": "2021-02-15T15:00:00.000000Z",
        "is_prefix_set": null,
        "deadline_required": null
      }
      ```
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-name-value-pairs
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs
      summary: Get folder name-value pairs
      description: |
        Returns a list of the name-value pairs properties of a folder.<br><br>
        There are no query parameters.<br>

        Name-value pairs allow the storage of any additional information about the folder.
        These are in addition to the system-provided properties, and are saved separately from them.
        These properties are not validated by iManage Work system.
        They are different from custom fields, and are not a part of the object model, or a part of the object profile.
        The information is stored as a dictionary pair in the format `"key_name": "value"`.
        Any number of pairs can be stored.<br>

        For example, the folder owner may need to store a trial or court date.
        As there is no property for this, a name-value pair can be created as `"trial_date": "2021-01-15T15:00:00.000000Z"`.<br>

        Name-value pairs are allowed with the following object types:
        * Documents
        * Folders and tabs
        * Workspaces

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the name-value pairs of the folder active_us!123:<br>

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!123/name-value-pairs`<br>
        Response body:<br>
         ```
        {
           "trial_date": "2021-01-15T15:00:00.000000Z",
           "prefix_document_name": "true"
        }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To update, create, or delete name-value pairs from a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        * To return a list of the name-value pairs properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        * To update, create, or delete name-value pairs from a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        * To return a list of the name-value pairs properties of a document, see GET `https://{hostname}/work/api/{version}/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`<br>
        * To update, create, or delete name-value pairs from a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_name-value-pairs
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    trial_date: '2021-01-15T15:00:00.000000Z'
                    prefix_document_name: 'true'
                type: object
                properties: *id391
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-name-value-pairs
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs
      summary: Update folder name-value pairs
      description: |
        ## PATCH customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs
        Creates, updates, or deletes name-value pairs from a folder.<br><br>
        The following actions are available:<br>
        * To create a name-value pair, include the new pair of name and value. If the key name already exists, it updates the value.
        * To update a name-value pair, include the existing key name with its new value. If the key name does not already exist, it creates the name-value pair.
        * To delete a name-value pair, include the existing key name with the value as null.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br> 
        The sample PATCH request performs the following actions:<br>
        * The first entry creates a new name-value pair `project_lead` with `ACASE` as the value.
        * The second entry modifies an existing `trial_date` to `2021-02-15T15:00:00.000000Z`.
        * The third entry deletes `is_prefix_set` by setting it to null.
        * The fourth entry `deadline_required` attempts to delete a name-value pair that does not exist.
        No error occurs if deleting a name-value pair that does not exist.

        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!123/name-value-pairs`<br>
        Request body:<br>

        ```
        {
          "project_lead": "ACASE",
          "trial_date": "2021-02-15T15:00:00.000000Z",
          "is_prefix_set": null,
          "deadline_required": null
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br> 
        * To return a list of the name-value pairs properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        * To update, create, or delete name-value pairs from a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        * To return a list of the name-value pairs properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        * To return a list of the name-value pairs properties of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`<br>
        * To update, create, or delete name-value pairs from a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_name-value-pairs
      requestBody:
        content:
          application/json:
            schema:
              description: |
                The following examples are to create, update, and delete the name-value of a folder respectively.<br>
                The create example assumes the key name does not already exist.<br>
                The update example assumes the key name exists, and its current value is replaced with the new one.<br>
                The delete example assumes the key name exists. However, no error is generated if it is not present.
              example:
                project_lead: ACASE
                trial_date: '2021-02-15T15:00:00.000000Z'
                is_prefix_set:
                deadline_required:
              type: object
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/move:
    description: |
      Users can move document folders or search folders from one location to another. 

      The following are limitations on moving a folder:
      * A folder can be moved only within a library.
      * A folder cannot be moved to a location where a workspace template is enabled, as it allows only the folder structure defined in the template.
        For more information on workspace templates, see `/customers/{customerId}/libraries/{libraryId}/templates`.
      * A folder cannot be moved under a search folder.

    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/move
      summary: Move a folder
      description: |
        Moves the current folder to the specified folder, and applies the destination folder profile to it.<br><br>
        The destination folder ID must be provided in the request body.

        The following are limitations on moving a folder:
        * A folder can be moved only within the same library.
        * A folder cannot be moved to a location where a workspace template is enabled, as it allows only the folder structure defined by the template.
          For more information on workspace templates, see the <a href="#tag--Workspace-Templates">`Workspace Templates</a> collection.
        * A folder cannot be moved under a search folder.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request moves the folder active_uk!7498 under the folder active_us!4265: <br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_uk!7498/move`<br>

        Request body:
        ```
          {
            "destination_id": "active_us!4265"
          }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
        * To create a folder, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/folders`
        * To delete a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
        * To update folder properties, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: Active!257177
              type: object
              properties: &id1649
                destination_folder_id:
                  type: string
                  description: |-
                    Deprecated. Do not use.
                destination_id:
                  type: string
                  description: |
                    Destination folder ID.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Active
                    default_security: inherit
                    edit_date: '2017-03-16T19:22:11Z'
                    effective_security: full_access
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!258111
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: confidential
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!14696
                    profile:
                      custom1: 00100000001XD0Y
                      custom2: '177101'
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: New York Acquisitions
                    wstype: folder
                description: Folder
                $ref: '#/components/schemas/Projects.folderResponseSingle'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/folder-shortcuts:
    description: |
      A folder shortcut is the hyperlink to a folder in any iManage Work library. <br><br>
      Users can place shortcuts to frequently used folders at the desired locations.
      This allows them to quickly access these folders, and to better organize the data.<br>
      A folder can be linked within another folder by creating a folder shortcut.
      A link to this folder appears in the destination folder. When the user clicks the folder shortcut, it opens the folder to which it points to.

      The following minimum access permissions are required for the user:
      * Read/write on the destination folder where the folder shortcut is created.
      * Read access to the target folder to which the shortcut points to.

      The user who creates a folder shortcut becomes the owner of the shortcut with full rights to change the name or description of it.
      If the properties of a shortcut are edited, the target folder does not change.

    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-folder-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/folder-shortcuts
      summary: Create folder shortcut
      description: |-
        Creates a new folder shortcut. <br><br>

        A folder shortcut is the hyperlink created to another folder belonging to any iManage Work library.

        A folder can be linked within another folder by creating a folder shortcut.
        The shortcut link to a source folder appears in the destination folder.
        When the user clicks the folder shortcut, it opens the source folder to which it points to.<br>
        Users can place shortcuts to frequently used folders at their desired locations.
        This allows quick access these folders, and better organization of the content.<br>

        To create a folder shortcut, the following minimum access permissions are required for the user:
        * Read/write access on the destination folder where the folder shortcut is created.
        * Read access to the target folder to which the shortcut points to.

        The user who creates a folder shortcut becomes the owner of the shortcut with full rights to change the name or description of it.
        If the properties of a folder shortcut are updated, the target folder does not change.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a shortcut inside the folder active_uk!7498 for the folder active_us!4265: <br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_uk!7498/folder-shortcuts`<br>

        Request body:
        ```
          {
            "name"  : "Shortcut to the folder",
            "target": {
              "database"         : "active_us",
              "id"               : "active_us!4265",
              "folder_type"      : "regular",
              "wstype"           : "folder"
            }
          }
        ```

      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_folder-shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Employment Agreements
                target:
                  database: active_uk
                  id: active_uk!19598
                  folder_type: imanage_share_folder
                  wstype: folder
                  imanage_share_eid: X4LuVCmhYFCsXYW4HFb3Y-odk7QlolAnsL4IDmtt3ds
              required:
              - name
              - target
              type: object
              properties: *id392
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: Pepsi
                    default_security: inherit
                    edit_date: '2017-09-05T20:55:48Z'
                    effective_security: full_access
                    id: Pepsi!43
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: custom1.custom2
                    owner: MARCIEDAVENPORT
                    owner_description: MARCIEDAVENPORT
                    parent_id: Pepsi!20
                    target:
                      database: hl1gbp6l3
                      folder_type: imanage_share_folder
                      id: hl1gbp6l3!752157283
                      imanage_share_eid: X4LuVCmhYFCsXYW4HFb3Y-odk7QlolAnsL4IDmtt3ds
                      wstype: folder
                    view_type: imanage_share
                    workspace_id: Pepsi!20
                    workspace_name: Testing123
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: *id393
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/email/conversation/{conversationId}:
    description: |-
      None
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-email-conversation-{conversationId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/email/conversation/{conversationId}
      summary: Get email conversations
      description: |
        Returns the profiles of all the emails of a conversation thread in a folder with the specified conversation ID.<br><br>
        The profile contains the detail, such as document and version numbers, subject, sender, and recipients. <br>
        For more information, see the **Responses** section.<br>

        An email conversation thread is includes a running list of all the succeeding replies starting with the original email.
        All the emails belonging to the same conversation are grouped together and assigned a common conversation ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the profiles of all the emails that are part of the conversation ID `TWljcm9zb2Z0IFZzIEdvb2dsZQ==` in the folder active_us!789:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/folders/active_us!789/email/conversation/TWljcm9zb2Z0IFZzIEdvb2dsZQ==`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return the profiles of all the emails in a conversation thread, GET `/customers/{customerId}/libraries/{libraryId}/email/conversation/{conversationId}`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_email_conversation_{conversationId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                    conversation_name: 'Fw: Please review documents for McCarthy Insanity
                      Case'
                    items:
                    - author: BCUMMINGS
                      cc: Ed White; Andrew Case
                      conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                      conversation_name: 'Fw: Please review documents for McCarthy
                        Insanity Case'
                      custom13: Andrew Case
                      custom14: kthompson@ajubalaw.com
                      custom15: Ed White; Andrew Case
                      custom21: '2016-01-28T20:50:42Z'
                      custom22: '2016-01-28T20:50:42Z'
                      database: Active_uk
                      document_number: 78529
                      from: Andrew Case
                      has_attachment: false
                      is_hipaa: false
                      is_checked_out: false
                      id: Active_uk!78529.1
                      iwl: iwl:dms=MAIN&&lib=Active_uk&&num=78529&&ver=1
                      name: 'Fw: Please review documents for McCarthy Insanity Case'
                      received_date: '2016-01-28T20:50:42Z'
                      sent_date: '2016-01-28T20:50:42Z'
                      subject: 'Fw: Please review documents for McCarthy Insanity
                        Case'
                      to: kthompson@ajubalaw.com
                      type: MIME
                      size: 74111
                      version: 1
                      wstype: email
                    - author: BCUMMINGS
                      cc: Ed White; Andrew Case
                      conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                      conversation_name: 'Fw: Please review documents for McCarthy
                        Insanity Case'
                      custom13: Andrew Case
                      custom14: kthompson@ajubalaw.com
                      custom15: Ed White; Andrew Case
                      custom21: '2016-01-28T20:50:42Z'
                      custom22: '2016-01-28T20:50:42Z'
                      database: Active_uk
                      document_number: 78530
                      from: Andrew Case
                      has_attachment: false
                      is_hipaa: false
                      is_checked_out: false
                      id: Active_uk!78530.1
                      iwl: iwl:dms=MAIN&&lib=Active_uk&&num=78530&&ver=1
                      name: 'Fw: Please review documents for McCarthy Insanity Case'
                      received_date: '2016-01-29T19:21:10Z'
                      sent_date: '2016-01-29T19:21:10Z'
                      subject: 'Fw: Please review documents for McCarthy Insanity
                        Case'
                      to: kthompson@ajubalaw.com
                      type: MIME
                      size: 74111
                      version: 1
                      wstype: email
                required:
                - data
                type: object
                properties: &id400
                  data:
                    required:
                    - conversation_id
                    - conversation_name
                    - items
                    type: object
                    properties:
                      conversation_id:
                        type: string
                        description: Conversation ID for a conversation thread.
                      conversation_name:
                        type: string
                        description: The header name for a conversation thread.
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailWithFlattenedParticipants'
                        description: |-
                          Group of emails forming a conversation.
                      total_count:
                        type: integer
                        description: |
                          Indicates the total number of items found.<br>
                    additionalProperties: false
                additionalProperties: false
                description: |-
                  Email conversation response.
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
    - name: conversationId
      in: path
      description: |
        Conversation ID assigned to all the messages that are part of the same email conversation thread. <br><br>
        It is a serialized form of the email's normalized subject header generated by iManage Work Server to identify an email conversation thread.<br>
        For example, base64-encoded.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents:
    description: |
      The documents are managed by organizing them under different folders for an organization.<br>
      The folder property `doctype` defines the specific document type for a folder.
      Two doctypes are available by default: Document and Email. <br>
      * For a folder of doctype Document, the display is customized for documents, showing other properties, such as file name,
      size, and location.
      * For a folder of doctype Email, the display is customized for emails, showing other properties such as email title, when
      sent, sender and recipient name, and size.

      The following folder requests for documents are available:<br>
      * To list documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
      * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
      * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
      * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`
      * To move a document to another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents
      summary: Get folder documents
      description: |
        Returns a list of documents contained in a folder.<br>

        Documents are managed by organizing them under different folders for an organization.<br>
        The folder property `doctype` defines the specific document type for a folder.<br>

        Two doctypes are available by default: Document and Email. <br>
        * For a folder of doctype Document, the display is customized for documents, showing other properties such as file name,
        size, and location.
        * For a folder of doctype Email, the display is customized for emails, showing other properties such as email title, when
        sent, sender and recipient name, and size.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the documents contained in the folder active_us!4960:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4960/documents`

         <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
         * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
         * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
         * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`
         * To move a document to another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:19:37Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2103642
                    edit_date: '2017-03-09T17:19:37Z'
                    edit_profile_date: '2017-03-09T17:19:37Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:19:37Z'
                    file_edit_date: '2017-03-09T17:19:37Z'
                    has_attachment: false
                    id: Active!2103642.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2103642&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:01:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100262
                    edit_date: '2017-03-09T17:01:16Z'
                    edit_profile_date: '2017-03-09T17:01:16Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:01:16Z'
                    file_edit_date: '2017-03-09T17:01:16Z'
                    has_attachment: false
                    id: Active!2100262.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100262&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-09T16:47:42Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100104
                    edit_date: '2017-03-09T16:47:42Z'
                    edit_profile_date: '2017-03-09T16:47:42Z'
                    extension: xml
                    file_create_date: '2017-03-09T16:47:42Z'
                    file_edit_date: '2017-03-09T16:47:42Z'
                    has_attachment: false
                    id: Active!2100104.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100104&&ver=1
                    last_user: ACASE
                    name: idp
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 12003
                    type: XML
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-08T20:42:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2099849
                    edit_date: '2017-03-08T20:42:16Z'
                    edit_profile_date: '2017-03-08T20:42:16Z'
                    extension: xlsx
                    file_create_date: '2017-03-08T20:42:16Z'
                    file_edit_date: '2017-03-08T20:42:16Z'
                    has_attachment: false
                    id: Active!2099849.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2099849&&ver=1
                    last_user: ACASE
                    name: Copy of apiSlices
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 34826
                    type: EXCELX
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  total_count: 4
                required:
                - data
                type: object
                properties: &id407
                  data: &id810
                    type: array
                    items:
                      type: object
                      properties:
                        checkout_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the document was last checked out.
                        subject:
                          type: string
                          description: |-
                            Indicates the subject header of the email. Only applicable to emails.
                        author: &id408
                          type: string
                          description: |-
                            Indicates the user ID who created the document.
                        author_description: &id409
                          type: string
                          description: |-
                            Indicates additional information about the document's author.
                        checksum: &id410
                          type: string
                          description: |
                            Indicates the value of the document's checksum.

                            The document checksum is a calculated value based the document's content.
                            It is used to verify the integrity of a document content during transfer.

                            During a file upload, the checksum of the content is calculated and saved along with the document profile.
                            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
                            If the checksum values do not match, the request fails.
                            If the document profile in the request does not include checksum property, the comparison is not performed.

                            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                        class: &id411
                          type: string
                          description: |
                            Indicates the document's class.<br><br>
                            Document class is categorized by genre, department, region, and so on.<br>
                            To get the document's subclass, see the parameter `subclass`.
                        class_description: &id412
                          type: string
                          description: |-
                            Indicates additional information about the document class.
                        comment: &id413
                          type: string
                          description: |
                            Indicates additional information about the document.
                        content_type: &id414
                          type: string
                          description: |-
                            Indicates the document content type.
                            * `D` represnts normal documents.
                            * `5` represents OLE documents.
                        create_date: &id415
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the document was imported into the iManage Work system.<br><br>
                            This date can be different than `file_create_date`.
                            The `file_create_date` is the date when the file was created, which could have been outside of the iManage Work system.
                        custom1: &id416
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom1_description: &id417
                          type: string
                          description: |-
                            Indicates additional information about the `custom1` property.
                        custom2: &id418
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom2_description: &id419
                          type: string
                          description: |-
                            Indicates additional information about the `custom2` property.
                        custom3: &id420
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom3_description: &id421
                          type: string
                          description: |-
                            Indicates additional information about the `custom3` property.
                        custom4: &id422
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom4_description: &id423
                          type: string
                          description: |-
                            Indicates additional information about the `custom4` property.
                        custom5: &id424
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom5_description: &id425
                          type: string
                          description: |-
                            Indicates additional information about the `custom5` property.
                        custom6: &id426
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom6_description: &id427
                          type: string
                          description: |-
                            Indicates additional information about the `custom6` property.
                        custom7: &id428
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom7_description: &id429
                          type: string
                          description: |-
                            Indicates additional information about the `custom7` property.
                        custom8: &id430
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom8_description: &id431
                          type: string
                          description: |-
                            Indicates additional information about the `custom8` property.
                        custom9: &id432
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom9_description: &id433
                          type: string
                          description: |-
                            Indicates additional information about the `custom9` property.
                        custom10: &id434
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom10_description: &id435
                          type: string
                          description: |-
                            Indicates additional information about the `custom10` property.
                        custom11: &id436
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom11_description: &id437
                          type: string
                          description: |-
                            Indicates additional information about the `custom11` property.
                        custom12: &id438
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom12_description: &id439
                          type: string
                          description: |-
                            Indicates additional information about the `custom12` property.
                        custom13: &id440
                          type: string
                          description: |-
                            Indicates the value of `custom13` property.
                        custom14: &id441
                          type: string
                          description: |-
                            Indicates the value of `custom14` property.
                        custom15: &id442
                          type: string
                          description: |-
                            Indicates the value of `custom15` property.
                        custom16: &id443
                          type: string
                          description: |-
                            Indicates the value of `custom16` property.
                        custom17: &id444
                          type: number
                          description: |-
                            Indicates the value of `custom17` property.
                          format: double
                        custom18: &id445
                          type: number
                          description: |-
                            Indicates the value of `custom18` property.
                          format: double
                        custom19: &id446
                          type: number
                          description: |-
                            Indicates the value of `custom19` property.
                          format: double
                        custom20: &id447
                          type: number
                          description: |-
                            Indicates the value of `custom20` property.
                          format: double
                        custom21: &id448
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the value of `custom21` property in ISO 8601 date format.
                        custom22: &id449
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the value of `custom22` property in ISO 8601 date format.
                        custom23: &id450
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the value of `custom23` property in ISO 8601 date format.
                        custom24: &id451
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the value of `custom24` property in ISO 8601 date format.
                        custom25: &id452
                          type: boolean
                          description: |-
                            Indicates the boolean value of `custom25` property.
                        custom26: &id453
                          type: boolean
                          description: |-
                            Indicates the boolean value of `custom26` property.
                        custom27: &id454
                          type: boolean
                          description: |-
                            Indicates the boolean value of `custom27` property.
                        custom28: &id455
                          type: boolean
                          description: |-
                            Indicates the boolean value of `custom28` property.
                        custom29: &id456
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom29_description: &id457
                          type: string
                          description: |-
                            Indicates additional information about the `custom29` property.
                        custom30: &id458
                          type: string
                          description: |
                            Indicates the alias for this custom property.
                        custom30_description: &id459
                          type: string
                          description: |-
                            Indicates additional information about the `custom30` property.
                        custom31: &id460
                          type: string
                          description: |-
                            Reserved. Do not use.
                        custom31_description: &id461
                          type: string
                          description: |-
                            Reserved. Do not use.
                        database: &id462
                          type: string
                          description: |-
                            Indicates the library (formerly called a database) where the document is stored.
                        declared_date: &id463
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
                            A record can no longer be edited or deleted, except by an iManage system administrator.
                        default_security: &id464
                          enum: ["public", "view", "private"]
                          type: string
                          description: |
                            Indicates the default security level of a document.

                            |Value|Description|
                            |---|---|
                            |view|All users have read-only access to the document, unless they are explicitly denied access (`no_access`) or granted access level of `read_write` or `full_access`.|
                            |private|Only viewable by the user who created the document, and other users or groups to whom access is granted explicitly.|
                            |public|All users can view and edit the document unless explicitly excluded.|
                        document_number: &id465
                          type: integer
                          description: |-
                            Indicates the document number of a document.

                            Document number is the number assigned to a document when it is imported to iManage Work,
                            and appears as part of the document ID.<br>
                            Document ID is the combination of library ID, document number, and document version.<br>
                            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                        edit_date: &id466
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the most recent date (in ISO 8601 format) when the document was edited.
                        edit_profile_date: &id467
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the document profile was last changed.
                        extension: &id468
                          type: string
                          description: |
                            Indicates the file name extension, also called the application extension, of the document.<br><br>
                            For example: doc, xls, pdf.
                        file_create_date: &id469
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
                            The file could have been created outside of the iManage Work system.
                            This date can be different than `create_date`.
                            The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
                        file_edit_date: &id470
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the file was last edited.<br><br>
                            The file could have been edited before being uploaded into the iManage Work system.
                        id: &id471
                          type: string
                          description: |-
                            Indicates the document ID.
                        is_in_use: &id472
                          type: boolean
                          description: |
                            Indicates if the document is in use.<br><br>
                            If `true`, the document is in use.<br>
                            If `false`, the document is not in use.
                        in_use_by: &id473
                          type: string
                          description: |
                            Indicates the user ID who is currently working on the document or has it checked out.<br><br>
                            If empty, the document is not currently being worked on, or is not checked out.
                        in_use_by_description: &id474
                          type: string
                          description: |-
                            Indicates additional information or notes about the user who is currently working on the document or who has it checked out.
                        is_checked_out: &id475
                          type: boolean
                          description: |
                            Indicates if the document is checked out.<br><br>
                            If `true`, the document is checked out.<br>
                            If `false`, the document is not checked out.
                        is_declared: &id476
                          type: boolean
                          description: |
                            Indicates if the document has been declared as a record.<br><br>
                            A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br>

                            If `true`, the document is declared as a record.<br>
                            If `false`, the document is not declared as a record.<br><br>
                            For the date when the document was declared, see the field `declared_date`.
                        is_external: &id477
                          type: boolean
                          description: |
                            Indicates if the document is visible to external users.<br><br>
                            If `true`, the document is visible to external users.<br>
                            If `false`, the document is not visible to external users.
                        is_external_as_normal: &id478
                          type: boolean
                          description: |
                            Indicates if the document is external as normal.<br><br>
                            If `true`, the document is external as normal.<br>
                            If `false`, the document is not external as normal, and is considered a normal document.
                        is_hipaa: &id479
                          type: boolean
                          description: |-
                            Indicates the document is encrypted.<br><br>
                            If `true`, the document is encrypted.<br>
                            If `false`, the document is not encrypted.

                            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                        is_related: &id480
                          type: boolean
                          description: |
                            Indicates the document is related to another document.<br><br>
                            If `true`, the document is related to another document.<br>
                            If `false`, the document is not related to another document.
                        is_restorable: &id481
                          type: boolean
                          description: |
                            Indicates that the document can be restored if archived.<br><br>
                            If `true`, the archived document can be restored.<br>
                            If `false`, the archived document cannot be restored.
                        iwl: &id482
                          type: string
                          description: |
                            Indicates the iManage Work Link (iWL) for the document.<br><br>
                            This is used to open it in Protected View Mode by the user who has Read/Write or Full Access.
                        last_user: &id483
                          type: string
                          description: |-
                            Indicates the user ID who most recently edited the document.
                        last_user_description: &id484
                          type: string
                          description: |-
                            Indicates additional information about the last user.
                        name: &id485
                          type: string
                          description: |
                            Indicates the file name of the document.<br><br>
                            It is excluded from administrator search results.
                        operator: &id486
                          type: string
                          description: |-
                            Indicates the user ID who has checked out the document or is currently editing its profile.
                        operator_description: &id487
                          type: string
                          description: |-
                            Indicates additional information about the operator.
                        retain_days: &id488
                          type: integer
                          description: |-
                            Indicates the number of days before the inactive document is eligible for archiving.
                        size: &id489
                          type: integer
                          description: |-
                            Indicates the size of the document in bytes.
                        subclass: &id490
                          type: string
                          description: |
                            Indicates the document's subclass.<br><br>
                            For example, 'Employment Letter' can be a subclass of the 'Human Resources' document class.<br>
                            To get the document's class, see the parameter `class`.
                        subclass_description: &id491
                          type: string
                          description: |-
                            Indicates additional information about the document's subclass.
                        type: &id492
                          type: string
                          description: |
                            Indicates the document type.<br><br>
                            For example, WORD for Microsoft Word.
                        type_description: &id493
                          type: string
                          description: |-
                            Indicates additional information about the document's type.
                        version: &id494
                          type: integer
                          description: |-
                            Indicates the version number of the document.
                        workspace_id: &id495
                          type: string
                          description: |-
                            Indicates the workspace ID where the document is located.
                        workspace_name: &id496
                          type: string
                          description: |-
                            Indicates the name of the workspace where the document is located.
                        wstype: &id497
                          $ref: '#/components/schemas/Documents.wsType'
                        bcc: &id498
                          type: string
                          description: |-
                            Only applicable to emails. Indicates recipients to whom the email is blind carbon copied.
                        cc: &id499
                          type: string
                          description: |-
                            Only applicable to emails. Indicates recipients to whom the email is carbon copied.
                        conversation_id: &id500
                          type: string
                          description: |-
                            Indicates the conversation ID of the email. Only applicable to emails.
                        conversation_name: &id501
                          type: string
                          description: |-
                            Indicates the user-friendly name of the email conversation thread. Only applicable to emails.
                        from: &id502
                          type: string
                          description: |-
                            Indicates the sender of the email. Only applicable to emails.
                        has_attachment: &id503
                          type: boolean
                          description: |
                            Indicates if the email has attachments. Only applicable to emails.

                            If `true`, the email has at least one attachment.<br>
                            If `false`, the email has no attachments.
                        received_date: &id504
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Only applicable to emails. The date (in ISO 8601 format) when the email was received.
                        sent_date: &id505
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Only applicable to emails. The date (in ISO 8601 format) when the email was sent.
                        to: &id506
                          type: string
                          description: |-
                            Indicates the recipient of the email. Only applicable to emails.
                        lock_type: &id507
                          type: string
                          enum: ["S", "E"]
                          description: |-
                            Indicates the type of lock applied when the document was checked out.
                            This field is applicable only to checked out documents.

                            |Value|Lock Type|Description|
                            |---|---|---|
                            |S|Shared|The document was locked for a co-authoring session.|
                            |E|Exclusive|The document was locked for editing by a single user.|
                        co_authors: &id508
                          type: array
                          description: |-
                            Indicates a list of co-authors of a document that was checked out for a co-authoring session.

                            This field is applicable only when the document is locked for co-authoring.
                          items:
                            type: string
                        wopi_file_size_limit: &id509
                          type: integer
                          description: |-
                            Indicates the maximum file size (in bytes) supported for co-authoring.
                        wopi_file_size_warning: &id510
                          type: boolean
                          description: |-
                            Indicates if the file size is approaching its upper limit for co-authoring.

                            If `true`, the file size is approaching its upper limit.<br>
                            If `false`, the file size is well within the upper limit.
                      additionalProperties: true
                      required:
                      - author
                      - create_date
                      - database
                      - default_security
                      - document_number
                      - extension
                      - file_create_date
                      - file_edit_date
                      - id
                      - is_hipaa
                      - iwl
                      - size
                      - type
                      - version
                  total_count: &id811
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id137
      - *id138
      - *id139
      - *id140
      - *id141
      - *id142
      - *id143
      - *id144
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - *id188
      - *id189
      - *id190
      - *id191
      - *id192
      - *id193
      - *id194
      - *id195
      - *id011
      - *id196
      - *id006
      - *id197
      - *id198
      - *id199
      - *id200
      - *id201
      - *id202
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - *id007
      - *id208
      - *id209
    put:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents
      summary: Add a document reference to a folder
      description: |
        Adds a reference to a document that already exists in another folder to the specified folder.<br><br>
        If a document needs to be available in different locations in iManage Work, it can be added to multiple folders as a reference using this request.

        Following are the characteristics of a document reference:
        * A reference is a pointer to a document, and does not create a new copy of it in the folder.
        * The same document is linked from multiple folder locations. Hence, when a document is added to multiple folders, the document number remains the same.
        * A document is added as a reference when both the document and target folder are in the same database.
        When the document and folder are in different databases, a shortcut is created instead of a reference. <br>
        For more information, see the request `POST https://{hostname}/work/api/{version}/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts`
        * If the document properties or its content are updated in one folder, it is automatically reflected across all the document references in different folders.
        * When you restore a deleted document from trash, it is restored to all the locations it resided before the deletion.
        * A checked out document can also be added to folders.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request adds the document active_us!123.1 to the folder active_us!4960:<br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4960/documents`<br>

        Request body:
        ```
          {
            "document_id": "active_us!123.1"
          }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`
        * To move a document to another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`

      operationId: PUT_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents
      requestBody:
        content:
          application/json:
            schema:
              example:
                document_id: active_us!123.1
              required:
              - document_id
              type: object
              properties: &id1627
                document_id:
                  type: string
                  description: |
                    The document ID to be added as a reference to a folder.<br>
                  example: active_us!188240.1
              additionalProperties: false
              description: |-
                Adds an existing document as reference to the specified folder.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents
      summary: Upload document to folder
      description: |
        Uploads a new document to the specified folder. <br><br>
        The order of the multipart/form-data request body must be document profile followed by the file content.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request uploads a new document to the folder active_us!7498:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!7498/documents`<br>

        Request body:<br>
        The document `profile` and `file` path must be provided as `multipart/form-data` request body.<br>
        ```
           {
              profile:
              {
                 "doc_profile":{
                    "access":"full_access",
                    "comment":"New document",
                    "database":"Active_us",
                    "default_security":"public",
                    "name":"Agreement",
                    "size":119354,
                    "type":"WORDX",
                    "type_description":"WORD 2010",
                    "wstype":"document"
                 },
                 "warnings_for_required_and_disabled_fields":true
              },
              "file": "C:\files\Agreement.docx"
           }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`
        * To move a document to another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - profile
              - file
              properties:
                profile:
                  example:
                    doc_profile:
                      access: full_access
                      comment: New document
                      database: active_uk
                      default_security: public
                      name: Agreement between Microsoft and Google
                      size: 119354
                      type: WORDX
                      type_description: WORD 2010
                      wstype: document
                      custom1: '1001'
                      custom2: '0001'
                      custom17: '110'
                    keep_locked: false
                    audit:
                      comments: New upload
                    user_trustees:
                    - id: CPIERCE
                      access_level: '0'
                    group_trustees:
                    - id: HR
                      access_level: read_write
                    warnings_for_required_and_disabled_fields: true
                  required:
                  - doc_profile
                  type: object
                  properties: &id792
                    warnings_for_required_and_disabled_fields:
                      type: boolean
                      description: |
                        Specifies to include warnings if required fields are missing, or disabled fields are included.<br><br>
                        If `true`, warnings are included, and the request will attempt to complete.<br>
                        If `false`, warnings are not included, and the request will fail if any are present.
                      default: false
                    keep_locked:
                      type: boolean
                      description: |-
                        Specifies whether to lock a document or not.

                        If `true`, the document should be kept as locked after uploading.<br>
                        If `false, the document should not be unlocked after uploading.
                      default: false
                    audit:
                      $ref: '#/components/schemas/Documents.auditEntryPartial'
                    inherit_profile_from_folder:
                      type: boolean
                      description: |
                        Specifies to inherit profile data from parent folder.<br><br>
                        If `true`, the missing profile fields in the document profile are copied from its parent folder. <br>
                        If `false`, the missing profile fields are not copied from the parent folder to the document.
                      default: true
                    doc_profile:
                      required:
                      - name
                      type: object
                      properties:
                        name:
                          type: string
                          description: |-
                            Specified name of the document.
                        extension:
                          type: string
                          description: |
                            Specifies the file name extension, also called the application extension, of the document.<br><br>
                            For example: doc, xls, pdf.
                            At least one of the parameters `extension` or `type` must be provided.
                        type:
                          type: string
                          description: |
                            The file handler type of the document.
                            This value associates the document type with an application that can open it.<br><br>
                            For example, WORD for Microsoft Word.<br><br>
                            At least one of the parameters `extension` or `type` must be provided.
                        size:
                          type: integer
                          description: |-
                            Size of the document in bytes.
                        author:
                          type: string
                          description: |-
                            ID of the user who created the document.
                        checksum:
                          type: string
                          description: |
                            Indicates the value of the document's checksum.

                            The document checksum is a calculated value based the document's content.
                            It is used to verify the integrity of a document content during transfer.

                            During a file upload, the checksum of the content is calculated and saved along with the document profile.
                            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
                            If the checksum values do not match, the request fails.
                            If the document profile in the request does not include checksum property, the comparison is not performed.

                            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                        class:
                          type: string
                          description: |-
                            Classification for identifying and differentiating the document. Document class is categorized by genre, department, region, and so on.
                        content_type:
                          enum: ["D", "5"]
                          type: string
                          description: |-
                            Document content type.
                        default_security:
                          description: |-
                            The default access level.

                            |Value|Description|
                            |:---|:---|
                            |inherit|The container or document inherits security settings from its parent container.|
                            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                          enum: [public, view, private]
                          type: string
                        file_create_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Specifies the date (in ISO 8601 format) when the file was created.<br><br>
                            The file could have been created outside of the iManage Work system.
                            This date can be different than `create_date`.
                            The `create_date` is the date when file was created in, or imported to, the iManage Work system.
                        file_edit_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
                            The file could have been edited before being uploaded into the iManage Work system.
                        is_hipaa:
                          type: boolean
                          description: |-
                            Specifies the document is to be encrypted.<br><br>
                            If `true`, the document is to be encrypted.<br>
                            If `false`, the document is not to be encrypted.

                            This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                            Documents and emails can be encrypted by different sources.
                            Therefore, even if this value is false, the document and email could still be encrypted.
                            Being identified by more than one source has no additional effect on encryption.
                        retain_days:
                          type: integer
                          description: |-
                            Specifies the number of days a document must be inactive before marking it for archiving.
                        operator:
                          type: string
                          description: |-
                            Specifies the user ID who checked out the document or is currently editing its profile.
                      additionalProperties: true
                    user_trustees:
                      type: array
                      items: &id394
                        $ref: '#/components/schemas/userSecurityItem'
                      description: |-
                        List of users and their access permissions.
                    group_trustees:
                      type: array
                      items: &id395
                        $ref: '#/components/schemas/groupSecurityItem'
                      description: |-
                        List of groups and their access permissions.
                  additionalProperties: true
                file:
                  type: string
                  description: |-
                    File to be uploaded.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: ACASE
                    author_description: Andrew Case
                    checksum: SHA256:3C5D84EFC1929CDA429766DF8252B697F6BCA82AD1F486F8CBA85C1035342B04
                    class: DOC
                    class_description: Document
                    comment: New upload
                    content_type: D
                    create_date: '2020-10-22T08:09:31.235Z'
                    custom1: '1001'
                    custom2: '0001'
                    custom17: 110.0
                    custom1_description: Microsoft Corporation
                    custom2_description: Google
                    database: active_uk
                    default_security: public
                    document_number: 100001714996
                    edit_date: '2020-10-22T08:09:31.235Z'
                    edit_profile_date: '2020-10-22T08:09:31.235Z'
                    email_type: false
                    extension: docx
                    file_create_date: '2020-10-22T08:09:31.235Z'
                    file_edit_date: '2020-10-22T08:09:31.235Z'
                    id: active_uk!100001714996.1
                    in_use_by: ACASE
                    indexable: false
                    is_checked_out: true
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_in_use: true
                    is_restorable: true
                    iwl: iwl:dms=ajubalaw.imanage.com&&lib=Active_uk&&num=31833&&ver=1
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Agreement between Microsoft and Google
                    operator: ACASE
                    operator_description: Andrew Case
                    retain_days: 100
                    size: 119354
                    type: WORDX
                    type_description: WORD 2010
                    version: 1
                    workspace_id: active_uk!2378364
                    workspace_name: Microsoft vs Google
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  warnings:
                  - field: custom3
                    error: required
                required:
                - data
                type: object
                properties: &id396
                  data:
                    $ref: '#/components/schemas/Documents.document'
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.warning'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/supervised:
    description: |-
      None
    post:
      tags:
      - Supervised Import
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents-supervised
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/supervised
      summary: Import documents in supervised mode
      description: |
        Uploads a document to a folder in the supervised import mode.<br>

        This is a special mode that provides the option to set some of the document profile properties during import that are not available in the regular import.
        These properties include author, operator, owner, create_date, edit_date, edit_profile_date, file_create_date, file_edit_date, and document_number.

        The following are the features of Supervised import mode:
         * The minimum access permission required on the library to implement this request: NRTADMIN.
         * Import method is based on the value set for the parameter `supervised_import_type` as any of the following:
           * `new_doc_num` - Import the document with the new document number.
           * `specify_doc_num` - Specify the document number to be assigned. This mode requires additional document profile properties: `document_number` and `version`.
           The imported document is assigned with the document number and version provided by the user.
           *  `overwrite_doc` - Overwrite the existing document in the folder by the imported document.
           This mode requires additional document profile properties: `document_number` and `version`.
           The imported document overwrites the document whose document_number and version are provided by the user.
         * It allows to specify nearly all the profile fields in the request body including author, operator, create_date, edit_date, and so on.
         For the complete list of fields, see the *Body* section.
         * It allows to create document history entry for the document being uploaded, specified as `supervised_history`. This is an array of history fields.
        The order of the multipart/form-data must be document profile followed by the file content in the request body.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request uploads a document with new document number to the folder active_us!456:<br>
        The response returns the newly uploaded document's profile details.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!456/documents/supervised` <br>

        Request body:
        ```
        {
           "profile":{
              "doc_profile":{
                 "database":"active_us",
                 "name":"Audit Engagement Contract",
                 "author":"NRTADMIN",
                 "operator":"NRTADMIN",
                 "type":"WORDX",
                 "class":"DOC",
                 "edit_date":"2016-05-17T19:11:55Z",
                 "create_date":"2016-05-17T19:11:55Z",
                 "size":119354,
                 "default_security":"private",
                 "last_user":"NRTADMIN",
                 "extension":"docx",
                 "has_attachment":false
              },
              "warnings_for_required_and_disabled_fields":true,
              "supervised_import_type":"new_doc_num",
              "supervised_history":[
                 {
                    "activity":"new_version",
                    "activity_code":6,
                    "application_name":"Work Web",
                    "activity_date":"2017-03-17T04:10:38Z",
                    "comments":"Imported in supervised mode",
                    "duration":0
                 }
              ],
              "user_trustees":[ ],
              "group_trustees":[ ]
           },
           "file":"C:\files\Agreement.docx"
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`
        * To move a document to another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents_supervised
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - profile
              - file
              properties:
                profile:
                  example:
                    doc_profile:
                      database: Active
                      name: Coca-Cola-Co_SWOT_Analysis
                      author: ACASE
                      operator: ACASE
                      type: ACROBAT
                      class: DOC
                      edit_date: '2016-05-17T19:11:55Z'
                      create_date: '2016-05-17T19:11:55Z'
                      size: 984675
                      default_security: private
                      last_user: ACASE
                      extension: pdf
                      has_attachment: false
                    warnings_for_required_and_disabled_fields: true
                    supervised_import_type: new_doc_num
                    supervised_history:
                    - activity: new_version
                      activity_code: 6
                      application_name: Work Web
                      activity_date: '2017-03-17T04:10:38Z'
                      comments: Sent for review.
                      duration: 0
                    user_trustees: []
                    group_trustees: []
                  required: &id986
                  - doc_profile
                  - supervised_import_type
                  properties: &id987
                    supervised_history:
                      type: array
                      items:
                        required:
                        - activity
                        type: object
                        properties:
                          document_number:
                            type: integer
                            description: |-
                              Indicates the document number of a document.

                              Document number is the number assigned to a document when it is imported to iManage Work,
                              and appears as part of the document ID.<br>
                              Document ID is the combination of library ID, document number, and document version.<br>
                              For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                          version:
                            type: integer
                            description: |-
                              Version number of the document.
                          activity:
                            type: string
                            description: |
                              A list of recent activities that have been performed on documents.<br><br>
                              The values from the Common names in the table below are case insensitive.
                              Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
                              The following are the activity values and their descriptions&colon;
                              * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
                              * **Common Name** is the friendly name that appears in the response structure.
                              * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
                              * **Description** is the explanation of the activity.<br><br>

                              |Activity|Common Name|Code|Description|
                              |---|---|---|---|
                              |LAUNCH|Open|0|Application was launched or opened.|
                              |VIEW|View|1|The item was viewed.|
                              |CHECKOUT|Checkout|2|The item was checked out.|
                              |CHECKIN|Checkin|3|The item was checked in.|
                              |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
                              |DOCCLOSE|Close|5|The document was closed.|
                              |NEWDOCUMENT|Create|6|The document was created.|
                              |NEWDOCVER|Create Version|7|The document's version was updated.|
                              |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
                              |COPYDOC|Copy|9|The document was copied.|
                              |PRINT|Print|10|The item was printed.|
                              |MAIL|Mail|11|The item was mailed.|
                              |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
                              |DELETEDOC|Delete|13|The document was deleted.|
                              |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
                              |ARCHIVEDOC|Archive|15|The document was archived.|
                              |RESTOREDOC|Restore|16|The document was restored.|
                              |RELEASEDOC|Release|17|The document was released.|
                              |EXPORT|Export|18|The item was imported.|
                              |MODIFY|Modify|19|The item was modified.|
                              |EDITTIME|Edit Time|20|The time spent editing the item.|
                              |SHRED|Shred|21|The item was shredded.|
                              |DECLARE|Declared|22|The item was declared for archiving.|
                              |MIGRATED|Migrated|23|The item was migrated.|
                              |UNDECLARE|Undeclared|24|The item was undeclared as record.|
                              |RECONCILE|Reconciled|25|The item was reconciled.|
                              |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
                              |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
                              |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
                              |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
                              |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
                              |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
                              |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
                            default: view,edit
                            example: activity=view,edit
                          application_name:
                            type: string
                            description: |-
                              Name of the application associated with the document to integrate with iManage Work Server.
                          activity_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              The date (in ISO 8601 format) on which an activity was performed on a document.
                          duration:
                            type: integer
                            description: |-
                              Number of seconds the user spent working on the document.
                          pages_printed:
                            type: integer
                            description: |-
                              Count of the number of document pages printed when open in certain integrated applications such as Microsoft Word.
                          user:
                            type: string
                            description: |-
                              The user who performed the operation.
                          activity_code:
                            type: integer
                            description: |
                              The code to identify the type of activity on the document. For example, 0 for Open, 1 for View, and so on.
                              For the complete list of activity codes, see the parameter `activity` in this table.
                          location:
                            type: string
                            description: |-
                              The hostname or IP address of the computer through which the user performed the operation.
                          comments:
                            type: string
                            description: |-
                              Additional comments noted in iManage Work library as part of the operation.
                          data1:
                            type: string
                            description: |-
                              Custom string field (maximum 254 chars).
                          data2:
                            type: string
                            description: |-
                              Custom string field (maximum 254 chars).
                          num1:
                            type: string
                            description: |-
                              Custom number field.
                          num2:
                            type: string
                            description: |-
                              Custom number field.
                          num3:
                            type: string
                            description: |-
                              Custom number field.
                          sid:
                            type: integer
                            description: |-
                              Security identifier of the document.
                          has_journal:
                            type: boolean
                            description: |-
                              Indicates whether the document has journal entry.
                          user_fullname:
                            type: string
                            description: |-
                              The full name of a user.
                          database:
                            type: string
                            description: |-
                              iManage library name where the document is stored.
                          document_id:
                            type: string
                            description: |
                              The fully qualified identifier of the document.
                              The document_id is the combination of library name, the document number, and a version number.
                              For example, *Active!188240.1*.
                        additionalProperties: false
                    supervised_import_type:
                      enum: [new_doc_num, overwrite_doc, specify_doc_num]
                      type: string
                      description: |
                        This indicates how document numbers are handled during a supervised import.
                    warnings_for_required_and_disabled_fields: &id793
                      type: boolean
                      description: |
                        Specifies to include warnings if required fields are missing, or disabled fields are included.<br><br>
                        If `true`, warnings are included, and the request will attempt to complete.<br>
                        If `false`, warnings are not included, and the request will fail if any are present.
                      default: false
                    keep_locked: &id794
                      type: boolean
                      description: |
                        Specifies if the document should be kept as locked.<br><br>
                        If `true`, the document should be kept as locked.<br>
                        If `false`, the document should not be kept as locked.
                      default: false
                    doc_profile: &id795
                      $ref: '#/components/schemas/Documents.supervisedDocProfile'
                    user_trustees: &id796
                      type: array
                      items: *id394
                      description: |-
                        List of users and their access permissions.
                    group_trustees: &id797
                      type: array
                      items: *id395
                      description: |-
                        List of groups and their access permissions.
                  additionalProperties: true
                  type: object
                file:
                  type: string
                  description: |-
                    File to be uploaded.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: KTHOMPSON
                    author_description: Kelly Thompson
                    class: PLEADING
                    create_date: '1999-10-16T12:11:53Z'
                    custom1: '1000'
                    custom1_description: Enron Corporation
                    custom2: '001'
                    custom25: false
                    custom26: false
                    custom27: false
                    custom28: false
                    custom29: BANK
                    custom29_description: Bankruptcy
                    custom2_description: Chapter 11 Bankruptcy
                    custom3: OPEN
                    custom30: '106'
                    custom30_description: Chapter 11
                    custom3_description: Open
                    custom4: TX
                    custom4_description: Texas
                    database: Active
                    default_security: public
                    document_number: 31833
                    edit_date: '2007-08-16T20:10:51Z'
                    edit_profile_date: '2016-11-16T17:52:00Z'
                    extension: pdf
                    file_create_date: '2007-08-16T20:10:51Z'
                    file_edit_date: '1999-10-16T12:11:53Z'
                    has_attachment: false
                    id: Active!31833.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=31833&&ver=1
                    last_user: KTHOMPSON
                    last_user_description: Kelly Thompson
                    name: Motion for Joint Administration filed by Brian S. Rosen
                      on behalf of Enron Corp
                    operator: KTHOMPSON
                    operator_description: Kelly Thompson
                    size: 18528
                    type: ACROBAT
                    version: 1
                    workspace_id: Active!11448
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id396
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}:
    description: |-
      None
    delete:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents-{documentId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}
      summary: Remove document from folder
      description: |
        Deletes the specified document from the folder.<br><br>
        A document reference can also be deleted using this request.
        If a document reference in a folder is specified for deletion, it does not delete it from all other folders where it resides.<br>
        For more information on document reference, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes the document active_us!123.1 from the folder active_us!456:<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/folders/active_us!456/documents/active_us!123.1`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To list the documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To move a document from one folder to another, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move`

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents_{documentId}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
    - name: documentId
      in: path
      description: |-
        The document ID of the document to be deleted.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move:
    description: |
      Documents can be moved from one folder to another for user's convenience in accessing and handling them.<br>
      The minimum permissions level required to implement this request: Tier 1.<br>
      A document can be moved to a folder within a library. It cannot be moved between two different libraries.

    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-documents-{documentId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}/move
      summary: Move document to another folder
      description: |
        Moves a document from the current folder to the specified destination folder.<br>
        The minimum permissions level required to implement this request: Tier 1.<br>

        Documents can be moved to the folders within a library, and cannot be moved between two different libraries.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request moves the document active_us!123.1 from source folder active_us!456 to destination folder active_us!789:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!456/documents/active_us!123.1/move`<br>

        Request body:
        The following request body parameters can be specified to update the profile and security of the document:<br>
        * `update_profile` - If this parameter is set to `true`, and a document that is not checked out or locked is moved to another folder, its profile changes according to that of the parent destination folder.
          If the document is checked out or locked, its profile does not change.
        * `update_security` - If this parameter is set to `true` while moving a document, the security is copied from the parent destination folder.
          This parameter is applicable only when `update_profile` is set to `true`.

        ```
          {
            "audit": {
              "comments": "Moved document"
            },
            "destination_id": "active_us!789",
            "update_profile": true,
            "update_security": true
          }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        The following folder requests for documents are available:<br>
        * To list documents in a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To upload a new document to a folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To add a document reference to a folder, see PUT `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents`
        * To remove a document from a folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/documents/{documentId}`

      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_documents_{documentId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_folder_id: active_us!257177
              type: object
              properties: &id1644
                audit:
                  description: |-
                    Audit information.
                  type: object
                  properties:
                    comments:
                      type: string
                      description: |-
                        Additional information about the update.
                  additionalProperties: true
                destination_folder_id:
                  type: string
                  description: |-
                    Deprecated. Do not use.
                destination_id:
                  type: string
                  description: |
                    The destination folder ID to which the document is to be moved.
                update_profile:
                  type: boolean
                  description: |-
                    Indicates if the document profile should be updated with destination folder profile.
                  default: false
                update_security:
                  type: boolean
                  description: |
                    Indicates if the document security should be updated with destination folder security.<br><br>
                    This is applicable only when 'update_profile' is `true`.
                  default: false
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: MODERSKY
                    author_description: Martin Odersky
                    class: DOC
                    create_date: '2017-04-20T21:59:09Z'
                    custom1: '10004'
                    custom1_description: Scala-Lang.Org
                    custom2: '001'
                    custom2_description: Scala-Long.Org
                    custom6: DRAFT
                    custom6_description: Draft
                    database: active_us
                    default_security: public
                    document_number: 2156393
                    edit_date: '2017-04-20T21:59:09Z'
                    edit_profile_date: '2017-04-21T17:12:18Z'
                    extension: DOC
                    file_create_date: '2017-04-20T21:59:09Z'
                    file_edit_date: '2017-04-20T21:59:09Z'
                    has_attachment: false
                    id: active_us!2156393.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=2192BCH3DMS01&&lib=active_us&&num=2156393&&ver=1
                    last_user: MODERSKY
                    name: Upcoming Compiler Optimizations.doc
                    operator: MODERSKY
                    operator_description: Martin Odersky
                    size: 99118
                    type: DOC
                    version: 1
                    workspace_id: active_us!14696
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  warnings:
                  - field: custom3
                    error: required
                required:
                - data
                type: object
                properties: *id396
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
    - name: documentId
      in: path
      description: |-
        Document ID of the target document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts:
    description: |
      A document shortcut is the hyperlink to a document in any iManage Work library. <br><br>
      Users can place shortcuts to frequently used documents at the desired locations. This allows them to quickly access these documents, and to better organize the data.<br>

      When a document is contained in a folder, it can be linked to another folder by creating a document shortcut.
      A link to the document appears in the destination folder, and it points to the document in source folder.
      When the user clicks the document shortcut, it opens the document to which it points to.

      The following minimum access permissions are required for the user:
      * Read/write on the destination folder.
      * Read access to the target document.

      The user who creates a document shortcut becomes the owner of the shortcut with full rights to change the name or description of it.
      If the properties of a shortcut are edited, the target document does not change.
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-document-shortcuts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts
      summary: Create document shortcut
      description: |
        Creates a new document shortcut. <br><br>
        A document shortcut can point to a document in a different library.

        A document shortcut is the hyperlink to a document in any iManage Work library. <br><br>
        Users can place shortcuts to frequently used documents at the desired locations.
        This allows them to quickly access these documents, and to better organize the data.<br>

        When a document is contained in a folder, it can be linked to another folder by creating a document shortcut.
        A link to the document appears in the destination folder, and it points to the document in source folder.
        When the user clicks the document shortcut, it opens the document to which it points to.

        The following minimum access permissions are required for the user to create a document shortcut:
        * Read/write on the destination folder.
        * Read access to the target document.

        The user who creates a document shortcut becomes the owner of the shortcut with full rights to change its name or description.
        If the properties of a shortcut are edited, the target document does not change.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a shortcut inside the folder active_uk!7498 for the document active_us!4265.1 :
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_uk!7498/document-shortcuts`<br>

        Request body:
          ```
          {
            "name": "Shortcut to Staffing Roster",
            "target": {
              "id": "active_us!4265.1",
              "type": "EXCELX"
            }
          }
          ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_document-shortcuts
      requestBody:
        content:
          application/json:
            schema:
              example: |
                {
                  "name": "Shortcut to Staffing Roster",
                  "target": {
                    "id": "Active!1024.1",
                    "type": "ACROBAT"
                  }
                }
              required:
              - name
              - target
              type: object
              properties: &id1646
                name:
                  type: string
                  description: |-
                    Name of the document shortcut.
                target:
                  required:
                  - id
                  type: object
                  properties:
                    id:
                      type: string
                      description: |-
                        Document ID to which a shortcut is to be created.
                    type:
                      type: string
                      description: |-
                        Document type.
                  additionalProperties: true
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    id: active_us!513937
                    iwl: iwl:dms=ajubalaw&&lib=active&&num=439292&&ver=1
                    name: Insurance Policy for Acme
                    parent_id: active_us!846
                    target:
                      database: active_us
                      document_number: 439292
                      id: active_us!439292.1
                      type: WORDX
                      version: 1
                      wstype: document
                    wstype: document_shortcut
                required:
                - data
                type: object
                properties: *id397
                additionalProperties: false
        400: *id003
        409: *id379
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts/{shortcutId}:
    description: |-
      None
    delete:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-document-shortcuts-{shortcutId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts/{shortcutId}
      summary: Delete document shortcut in folder
      description: |-
        Deletes the shortcut with the specified ID.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_document-shortcuts_{shortcutId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
      parameters:
      - *id004
    patch:
      tags:
      - Folders
   #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-document-shortcuts-{shortcutId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/document-shortcuts/{shortcutId}
      summary: Update document shortcut in folder
      description: |-
        Updates the shortcut with the JSON for the specified ID.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_document-shortcuts_{shortcutId}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              - id
              - database
              - target
              - wstype
              type: object
              properties: &id398
                name:
                  type: string
                  description: |-
                    Indicates the name of the document shortcut.
                parent_id:
                  type: string
                  description: |
                    Indicates the container ID where the shortcut was created.<br><br>
                    This value is null if the iManage Work environment does not require this parameter.
                id:
                  type: string
                  description: |-
                    Indicates the document shortcut ID.
                iwl:
                  type: string
                  description: |-
                    Indicates the iManage Work Link (iWL) of a document which is used to open it in Protected View Mode by the user who has read/write or full access.
                database:
                  type: string
                  description: |-
                    Indicates the library that the document shortcut was created in.
                target:
                  $ref: '#/components/schemas/Projects.Shortcuts.documentShortcutTarget'
                wstype:
                  enum:
                  - "user"
                  - "workspace_shortcut"
                  - "folder_shortcut"
                  - "email"
                  - "workspace"
                  - "folder"
                  - "document"
                  - "document_shortcut"
                  type: string
                  description: |
                    Indicates the iManage Work object type.

                    |Value|Description|
                    |:---|:---|
                    |document|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |email|An email object.|
                    |document_shortcut|A shortcut to the document object.|
                    |folder_shortcut|A shortcut to the folder object.|
                    |workspace_shortcut|A shortcut to the workspace object.|
                    |user|A user object.|
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - name
                - id
                - database
                - target
                - wstype
                type: object
                properties: *id398
                additionalProperties: true
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children:
    description: |-
      The children of a folder include subfolders and documents present at its root level.
    get:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-children
  #summary: GET /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children
      summary: Get folder content
      description: |
        Returns content of the specified folder.<br><br>
        The content directly from the root level of the specified folder are returned.<br>
        The content of a folder includes its subfolders and documents.
        The profiles of subfolders and documents are also listed.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns subfolders and documents present in the folder active_us!4754:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4754/children`

        Response body:
        ```
            {
                "data": [
                    {
                        "database": "active_us",
                        "default_security": "inherit",
                        "edit_date": "2020-05-19T08:08:12.123Z",
                        "folder_type": "regular",
                        "has_documents": false,
                        "has_subfolders": false,
                        "id": "active_us!47821",
                        "inherited_default_security": "public",
                        "is_container_saved_search": false,
                        "is_content_saved_search": false,
                        "is_external": false,
                        "is_external_as_normal": false,
                        "name": "Enron Audit Engagement Contract",
                        "owner_description": "Andrew Case",
                        "owner": "ACASE",
                        "parent_id": "active_us!4754",
                        "view_type": "document",
                        "workspace_id": "active_us!1951",
                        "workspace_name": "Employment Agreements",
                        "wstype": "folder"
                    },
                    {
                        "author": "ACASE",
                        "author_description": "Andrew Case",
                        "checksum": "SHA256:BAD125759B024DF32A8A3A43774AF9D0AEE635C84A6C4623C98939F182864BEE",
                        "class_description": "Document",
                        "class": "DOC",
                        "create_date": "2020-03-27T21:02:06.708Z",
                        "database": "active_us",
                        "default_security": "private",
                        "document_number": 380867,
                        "edit_date": "2020-03-27T21:02:06.708Z",
                        "edit_profile_date": "2020-03-27T21:02:06.708Z",
                        "file_create_date": "2020-03-27T21:02:06.708Z",
                        "file_edit_date": "2020-03-27T21:02:06.708Z",
                        "id": "active_us!380867.1",
                        "iwl": "iwl:dms=atldev1.imanagelabs.com&&lib=autodb_unicode&&num=100001380867&&ver=1",
                        "last_user": "ACASE",
                        "last_user_description": "Andrew Case",
                        "name": "BcuHLl213C9mGcCyi83ZY6d5Wr1Levsw",
                        "operator_description": "Andrew Case",
                        "operator": "ACASE",
                        "retain_days": 10,
                        "size": 36610,
                        "subclass_description": "",
                        "type": "WORDX",
                        "extension": "DOCX",
                        "type_description": "WORD 2007",
                        "version": 1,
                        "workspace_name": "Employment Agreements",
                        "workspace_id": "active_us!1951",
                        "wstype": "document"
                    }
                ]
            }
        ```


      operationId: GET_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_children
      parameters:
      - *id004
      - *id137
      - *id138
      - *id139
      - *id140
      - *id141
      - *id142
      - *id143
      - *id144
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - *id188
      - name: exclude_docs
        in: query
        description: |
          Specifies to exclude documents from the results set.<br>

          If `true`, excludes documents from the results set.<br>
          If `false`, includes documents in the results set.<br>

          See `email_only` parameter to include only emails in the results set.
          See `exclude_emails` to exclude emails from the results set.
        schema:
          type: boolean
          default: false
      - *id189
      - *id190
      - *id191
      - *id192
      - *id193
      - *id194
      - *id195
      - *id011
      - *id196
      - *id006
      - *id197
      - *id198
      - *id199
      - *id200
      - *id201
      - *id202
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - *id208
      - *id209
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: Active
                    default_security: inherit
                    edit_date: '2017-03-10T22:20:13Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: Active!257918
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Enron Audit Engagement Contract
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: Active!257177
                    view_type: document
                    workspace_id: Active!14696
                    workspace_name: Employment Agreements
                    wstype: folder
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:19:37Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2103642
                    edit_date: '2017-03-09T17:19:37Z'
                    edit_profile_date: '2017-03-09T17:19:37Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:19:37Z'
                    file_edit_date: '2017-03-09T17:19:37Z'
                    has_attachment: false
                    id: Active!2103642.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2103642&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    conversation_id: U3RyYXRlZ3kgUGxhbg==
                    conversation_name: Strategy Plan
                    create_date: '2017-03-09T17:01:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100262
                    edit_date: '2017-03-09T17:01:16Z'
                    edit_profile_date: '2017-03-09T17:01:16Z'
                    extension: eml
                    file_create_date: '2017-03-09T17:01:16Z'
                    file_edit_date: '2017-03-09T17:01:16Z'
                    has_attachment: false
                    id: Active!2100262.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100262&&ver=1
                    last_user: ACASE
                    name: Strategy Plan
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 5020
                    subject: Strategy Plan
                    type: EML
                    version: 1
                    wstype: email
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-09T16:47:42Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2100104
                    edit_date: '2017-03-09T16:47:42Z'
                    edit_profile_date: '2017-03-09T16:47:42Z'
                    extension: xml
                    file_create_date: '2017-03-09T16:47:42Z'
                    file_edit_date: '2017-03-09T16:47:42Z'
                    has_attachment: false
                    id: Active!2100104.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2100104&&ver=1
                    last_user: ACASE
                    name: idp
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 12003
                    type: XML
                    version: 1
                    wstype: document
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-08T20:42:16Z'
                    custom1: '10004'
                    custom1_description: Exxon Mobile
                    custom2: '001'
                    custom2_description: Exxon Mobile
                    custom6: DRAFT
                    custom6_description: Draft
                    database: Active
                    default_security: view
                    document_number: 2099849
                    edit_date: '2017-03-08T20:42:16Z'
                    edit_profile_date: '2017-03-08T20:42:16Z'
                    extension: xlsx
                    file_create_date: '2017-03-08T20:42:16Z'
                    file_edit_date: '2017-03-08T20:42:16Z'
                    has_attachment: false
                    id: Active!2099849.1
                    in_use: false
                    is_checked_out: false
                    is_hipaa: false
                    iwl: iwl:dms=2192BCH3DMS02&&lib=Active&&num=2099849&&ver=1
                    last_user: ACASE
                    name: Copy of API Slices
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 34826
                    type: EXCELX
                    version: 1
                    wstype: document
                  total_count: 5
                required:
                - data
                type: object
                properties: &id1173
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Projects.childOfFolder'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children/browse:
    description: |-
      None
    post:
      tags:
      - Folders
    #- customers-{customerId}-libraries-{libraryId}-folders-{folderId}-children-browse
  #summary: POST /customers/{customerId}/libraries/{libraryId}/folders/{folderId}/children/browse
      summary: Browse folder content
      description: |
        Returns the content of a folder with the specified profile fields in the response. <br>
        The content of a folder includes its subfolders and documents.<br>
        This POST search request provides the option to specify only the fields of interest to return in the response. <br>

        Based on the content type, the response includes the following default profile fields:
        * Subfolders - `id` and `wstype`
        * Documents - `id`, `wstype`, and `iwl`

        The other fields are returned by specifying them in the `profile_fields` parameter.
        This parameter is optional. If omitted, only the default fields are returned.<br>
        The search criteria is defined using the `filters` parameter.
        All the subfolders and documents matching the filter criteria are listed in the result. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns both subfolders and documents, that are present in the folder active_us!4754
        and edited in last 30 days, with the specified `profile_fields` and default fields in the response: <br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!4754/children/browse`

        Request body:<br>
        ```
          {
             "profile_fields":{
                "document":[
                   "name",
                   "file_edit_date",
                   "author"
                ],
                "folder":[
                   "name",
                   "description",
                   "owner"
                ]
             },
             "filters":{
                "edit_date": "-30:0d",
                "exclude_docs":false,
                "include_folders":true
             }
          }
        ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_folders_{folderId}_children_browse
      requestBody:
        content:
          application/json:
            schema:
              title: Folder Children Request
              type: object
              properties: &id1118
                limit:
                  type: integer
                  description: |-
                    Maximum number of children to include in the response.
                  default: 5000
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    document:
                      type: array
                      items:
                        type: string
                      description: |
                        Specifies up to 15 document profile fields to include in the response.
                    folder:
                      type: array
                      items:
                        type: string
                      description: |
                        Specifies up to 15 folder profile fields to include in the response.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |
                        Returns documents that were edited on or after this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                        If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |
                        Returns documents that were edited on or before this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                        If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    exclude_emails:
                      type: boolean
                      description: |
                        Specifies to include only documents in the results set.<br><br>
                        If `true`, only documents are returned.<br>
                        If `false`, emails and documents are returned.<br><br>
                        This parameter allows for a document-only return list.
                        For an email-only return list, see the `email_only` parameter.
                      default: false
                    email_only:
                      type: boolean
                      description: |
                        Specifies to include only emails in the results set.<br><br>
                        If `true`, only emails are included.<br>
                        If `false`, documents may also be included.<br><br>
                        This parameter allows for an email-only return list.
                        For a document-only return list, see the `exclude_emails` parameter.
                      default: false
                    anywhere:
                      type: string
                      description: |-
                        A string to be searched anywhere in the document profile or contents.<br><br>This does not apply to folder searches.
                      example: litigation
                    user:
                      type: string
                      description: |-
                        ID of the user.
                    author:
                      type: string
                      description: |-
                        The user ID of the document's author.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        The user ID of the operator of the documents.
                      example: MARCIEDAVENPORT
                    owner:
                      type: string
                      description: |-
                        The user ID of the author or operator of the documents.
                      example: CPIERCE
                    comments:
                      type: string
                      description: |-
                        A string that appears in the comments of the results.
                      example: confidential
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |-
                        Alias for Custom2 field.
                    custom3:
                      type: string
                      description: |-
                        Alias for Custom3 field.
                    custom4:
                      type: string
                      description: |-
                        Alias for Custom4 field.
                    custom5:
                      type: string
                      description: |-
                        Alias for Custom5 field.
                    custom6:
                      type: string
                      description: |-
                        Alias for Custom6 field.
                    custom7:
                      type: string
                      description: |-
                        Alias for Custom7 field.
                    custom8:
                      type: string
                      description: |-
                        Alias for Custom8 field.
                    custom9:
                      type: string
                      description: |-
                        Alias for Custom9 field.
                    custom10:
                      type: string
                      description: |-
                        Alias for Custom10 field.
                    custom11:
                      type: string
                      description: |-
                        Alias for Custom11 field.
                    custom12:
                      type: string
                      description: |-
                        Alias for Custom12 field.
                    custom13:
                      type: string
                      description: |-
                        Contents of custom13 field.
                    custom14:
                      type: string
                      description: |-
                        Contents of custom14 field.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 field.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 field.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from field.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from field.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from field.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from field.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to field.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to field.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to field.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to field.
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom21_relative field.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Contents of custom22_relative field.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom23, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        Date range within custom24, in the format [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom29:
                      type: string
                      description: |-
                        Alias for custom29 field.
                    custom30:
                      type: string
                      description: |-
                        Alias for custom30 field.
                    name:
                      type: string
                      description: |-
                        A string to be searched in the name of the documents.
                      example: contract
                    document_number:
                      type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 1
                    document_version:
                      type: integer
                      description: |-
                        Specifies the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |-
                        Returns documents created on or after this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:01Z"
                    create_date_to:
                      type: string
                      description: |-
                        Returns documents created on or before this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:02Z"
                    sent_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: "-30:0d"
                    received_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                    has_attachment:
                      type: boolean
                      description: |-
                        Indicates whether to return emails that have attachments.<br><br>
                        If `true`, the email item must have at least one attachment.<br>
                        If `false`, the email item cannot have any attachments.<br>
                        If this parameter is omitted, then that attachment status is ignored.
                    subject:
                      type: string
                      description: |-
                        A string that appears in the subject of the email.
                      example: important
                    sender:
                      type: string
                      description: |-
                        A string that appears in the sender field of the email.
                      example: johnson
                    recipient:
                      type: string
                      description: |-
                        A string that appears in any of the recipient fields of emails.
                      example: current resident
                    last_user:
                      type: string
                      description: |-
                        The user ID of the last user for the documents.
                      example: ACASE
                    checked_out:
                      type: boolean
                      description: |
                        Specifies to include checked out documents.<br><br>
                        If `true`, includes checked out documents.<br>
                        If `false`, excludes checked out documents.<br>
                        If omitted, the search ignores the checked out status and includes all the documents.
                    in_use_by:
                      type: string
                      description: |-
                        Includes only documents in use by the provided user ID.
                      example: ACASE
                    in_use:
                      type: boolean
                      description: |-
                        Includes only documents in use.
                    email:
                      type: string
                      maxLength: 254
                    file_target:
                      type: string
                      description: |
                        String to be found in a subset of properties defined in the index.<br><br>
                        These fields are custom1, custom2, custom29, custom30, and workspace name.
                    reference_database:
                      type: string
                      description: |-
                        Specifies the database, also called a library, that the item is associated with.
                    exclude_shortcuts:
                      type: boolean
                      description: |
                        Specifies to exclude shortcuts to the folder.<br><br>
                        If `true`, exclude instances that are shortcuts to the folder.<br>
                        If `false`, include instances that are shortcuts to the folder.
                      default: false
                    exclude_docs:
                      type: boolean
                      description: |
                        Specifies to exclude documents from the results set.<br><br>
                        If `true`, exclude documents from the results set.<br>
                        If `false`, includes documents in the result set.<br>
                      default: false
                    include_folders:
                      type: boolean
                      description: |
                        Specifies to include folders in the results set.<br><br>
                        If `true`, includes folders in the result.<br>
                        If `false`, excludes folders from the result.
                      default: true
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id1119
                limit: 500
                timezone_offset: 300
                profile_fields:
                  document:
                  - name
                  - file_edit_date
                  folder:
                  - name
                  - description
                filters:
                  edit_date: -30:0d
                  type: WORD
                  author: ACASE
                  exclude_docs: false
                  include_folders: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Folder Children Response
                required:
                - data
                - overflow
                type: object
                properties: &id1120
                  data:
                    type: array
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id1121
                  data:
                  - id: Active_us!10000
                    wstype: folder
                    folder_type: normal
                    name: Career
                    description: Job search documents
                  - id: Active_us!10100
                    wstype: folder
                    folder_type: normal
                    name: Archive
                    description: Old stuff
                  - id: Active_us!10001
                    wstype: document
                    name: Cover Letter
                    file_edit_date: '2018-06-04T12:11:53Z'
                  - id: Active_us!10002
                    wstype: document
                    name: Resume
                    file_edit_date: '2018-02-17T06:50:00Z'
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: folderId
      in: path
      description: |-
        The folder ID of the target folder.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/filing-folders:
    get:
      tags:
      - Filing Folders
    #- customers-{customerId}-libraries-{libraryId}-filing-folders
  #summary: GET /customers/{customerId}/libraries/{libraryId}/filing-folders
      summary: Get email filing folders
      description: |
        Returns a list of iManage Work filing folders created in the specified library. <br><br>
        It returns all the filing folders in a library created by all users.
        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the filing folders in the library active_uk:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/filing-folders`
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To create a filing folder, see POST `/customers/{customerId}/libraries/{libraryId}/filing-folders`
        To delete a filing folder, see DELETE `/customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}`
        To update a filing folder, see PUT `/customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}`

      operationId: GET_customers_{customerId}_libraries_{libraryId}_filing-folders
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - change_when: '2018-02-22T13:19:56Z'
                    client_type: 3
                    database: active
                    enabled: N
                    filing_option: 1
                    filters:
                    - 1
                    - 2
                    - 3
                    folder_guid: ''
                    folder_id: 48199
                    folder_name: E-mails
                    folder_path: ''
                    frequency: 0
                    locale: en
                    mailbox_folder_id: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF0000000001730000
                    mailbox_id
                    mailbox_owner: ACASE
                    operator: user6
                    properties:
                      PR_OPERATOR: KTHOMPSON
                      email-searchkey: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF00003759158F0000
                    request_type: 1
                    share_access: 0
                    sid: 424
                    status: OK
                    status_description: Status description
                    sync_cookie: ''
                    sync_when: '2018-02-22T13:19:56Z'
                required:
                - data
                type: object
                properties: &id1117
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilingFolders.filingFolder'
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Filing Folders
    #- customers-{customerId}-libraries-{libraryId}-filing-folders
  #summary: POST /customers/{customerId}/libraries/{libraryId}/filing-folders
      summary: Create email filing folder
      description: |-
        ## POST customers/{customerId}/libraries/{libraryId}/filing-folders
        Creates a filing folder in the specified library.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_filing-folders
      requestBody:
        content:
          application/json:
            schema:
              example:
                change_when: '2018-02-22T13:19:56Z'
                client_type: 3
                database: active
                enabled: N
                filing_option: 1
                filters:
                - 1
                - 2
                - 3
                folder_guid: ''
                folder_id: 48199
                folder_name: E-mails
                folder_path: ''
                frequency: 0
                locale: en
                mailbox_folder_id: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF0000000001730000
                mailbox_id
                mailbox_owner: ACASE
                operator: user6
                properties:
                  PR_OPERATOR: KTHOMPSON
                  email-searchkey: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF00003759158F0000
                request_type: 1
                share_access: 0
                sid: 424
                status: OK
                status_description: Status description
                sync_cookie: ''
                sync_when: '2018-02-22T13:19:56Z'
              type: object
              properties: &id399
                change_when:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Change when date (in ISO 8601 format).
                client_type:
                  type: integer
                  description: |
                    Client application used for filing an email. For example, Microsoft Outlook.
                database:
                  type: string
                  description: |
                    Name of the library where the iManage Work folder mapping or folder exists.
                enabled:
                  enum: ["Y", "N"]
                  type: string
                  description: |
                    Indicates the folder mapping between client application mailbox and iManage Work folder is enabled.<br><br>
                    If `Y`, the folder mapping between client application mailbox and iManage Work folder is enabled.<br>
                    If `N`, the folder mapping between client application mailbox and iManage Work folder is disabled.
                filing_option:
                  type: integer
                  description: |
                    Indicates the filing options available for filing an email. <br>

                    The following options are available:<br>
                    * Delete - Delete the emails from Outlook that are filed to iManage Work.
                    * Private - Mark the emails as private that are filed to iManage Work.
                    * Print - Print the emails that are filed to iManage Work.
                filters:
                  type: array
                  items:
                    type: integer
                  description: |-
                    Filter information to be applied on the imported email.
                folder_guid:
                  type: string
                  description: |-
                    Folder GUID.
                folder_id:
                  type: integer
                  description: |-
                    iManage Work folder ID.
                  format: int64
                folder_name:
                  type: string
                  description: |-
                    Name of the iManage Work folder.
                folder_path:
                  type: string
                  description: |-
                    Folder path.
                frequency:
                  type: integer
                  description: |-
                    Syncing frequency.
                locale:
                  type: string
                  description: |-
                    Locale.
                mailbox_folder_id:
                  type: string
                  description: |
                    Client application mailbox folder ID (for example, Outlook folder ID).
                mailbox_id:
                  type: string
                  description: |-
                    Unique entry ID of the client mailbox.
                mailbox_owner:
                  type: string
                  description: |-
                    iManage Work user ID.
                operator:
                  type: string
                  description: |-
                    The user ID of the item's operator.
                properties:
                  type: object
                  additionalProperties: true
                  description: |-
                    Profile information to be applied on the imported email.
                request_type:
                  type: integer
                  description: |-
                    Type of filing request. For example, individual email filing, and folder filing.
                share_access:
                  type: integer
                  description: |-
                    Share access.
                sid:
                  type: integer
                  description: |
                    Security identifier of iManage Work folder.
                  format: int64
                status:
                  enum: ["OK", "Pending", "Error"]
                  type: string
                status_description:
                  type: string
                  description: |-
                    Description of status.
                sync_cookie:
                  type: string
                  description: |-
                    Sync cookie.
                sync_when:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Sync when date (in ISO 8601 format).
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  sid: 256
                type: object
                properties: *id399
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}:
    description: |-
      None
    put:
      tags:
      - Filing Folders
    #- customers-{customerId}-libraries-{libraryId}-filing-folders-{sid}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}
      summary: Update email filing folder
      description: |-
        Updates a filing folder entry for the specified SID.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_filing-folders_{sid}
      requestBody:
        content:
          application/json:
            schema:
              example:
                change_when: '2018-02-22T13:19:56Z'
                client_type: 3
                database: active
                enabled: N
                filing_option: 1
                filters:
                - 1
                - 2
                - 3
                folder_guid: ''
                folder_id: 48199
                folder_name: E-mails
                folder_path: ''
                frequency: 0
                locale: en
                mailbox_folder_id: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF0000000001730000
                mailbox_id: 0000000038A1BB1005E5101AA1BB08002B2A56C20000454D534D44422E444C4C00000000000000001B55FA20AA6611CD9BC800AA002FC45A0C0000005573657236406578646576323031362E6C6F63616C002F6F3D4578446576323031362F6F753D45786368616E67652041646D696E6973747261746976652047726F7570202846594449424F484632335350444C54292F636E3D526563697069656E74732F636E3D39323564393439653961383034636137396235376434313337353665353962662D557365723600E94632F43E00000002000000100000005500730065007200360040006500780064006500760032003000310036002E006C006F00630061006C0000000000
                mailbox_owner: ACASE
                operator: user6
                properties:
                  PR_OPERATOR: KTHOMPSON
                  email-searchkey: 00000000C8D48C0C13F3D5419096EB08FBF55EA101007AC71826517D384D906F511ED07675AF00003759158F0000
                request_type: 1
                share_access: 0
                sid: 424
                status: OK
                status_description: Status description
                sync_cookie: ''
                sync_when: '2018-02-22T13:19:56Z'
              type: object
              properties: *id399
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Filing Folders
    #- customers-{customerId}-libraries-{libraryId}-filing-folders-{sid}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}
      summary: Delete email filing folder
      description: |
        Deletes a filing folder from a library.<br>

        A filing folder is identified by its security identifier (SID) and it is specified in the request URL.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes the filing folder with the SID 573 from active_uk library: <br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/filing-folders/573`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return filing folders in a library, see GET `/customers/{customerId}/libraries/{libraryId}/filing-folders/`
        To create a filing folder, see POST `/customers/{customerId}/libraries/{libraryId}/filing-folders`
        To update a filing folder, see PUT `/customers/{customerId}/libraries/{libraryId}/filing-folders/{sid}`

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_filing-folders_{sid}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                description: This can be any type
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: sid
      in: path
      description: |-
        Security identifier of folder to use in endpoints.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email:
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/filing-request:
    description: |-
      None
    post:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-filing-request
  #summary: POST /customers/{customerId}/libraries/{libraryId}/email/filing-request
      summary: Create email filing request
      description: |-
        Submits an email filing request to save Microsoft Outlook emails to iManage Work. 

        iManage Work Desktop for Windows provides the feature Email Management for Outlook that enables users to file emails from Outlook mailbox to iManage Work.
        For more information, see Email Management for Outlook (https://docs.imanage.com/work-help/10.2.6/en/Email_Management_for_Outlook.html)

        This request submits an email filing request. However, the email is actually filed when the request is successful, as filing
        is an asynchronous process by iManage Work Communication Server. <br>

        The following are email filing scenarios for users:
        * File an email to an iManage Work folder when sending it from Outlook.
        * File an existing email from an Outlook folder to iManage Work.
        * File an email automatically when moving it to an Outlook filing folder that is linked with iManage Work filing folder.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create an iManage Work filing folder, see POST `/customers/{customerId}/libraries/{libraryId}/filing-folders`
        * To get all email filing folders, see GET `/customers/{customerId}/libraries/{libraryId}/filing-folders`

      operationId: POST_customers_{customerId}_libraries_{libraryId}_email_filing-request
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Emails.emailFilingRequestPostRequest'
              example:
              - doc_profile:
                  database: Active
                properties:
                  email-searchkey: 5B81A46F48EC614E860C13E9C4B4A4D5
                  PR_X-AUTHN_GUID: bf35be5e-38d5-4968-a752-f7f8d5f373a4
                  PR_OPERATOR: ACASE
                email_profile:
                  client_type: 3
                  folder_id: 000000007AD3E26F58409348880B90BC2D200DC0010091790995D5D59D4E903B2F8D480DCC7400000050F7A30000
                  locale: en
                  mailbox_id: 0000000038A1BB1005E5101AA1BB08002B2A56C20000454D534D44422E444C4C00000000000000001B55FA20AA6611CD9BC800AA002FC45A0C000000455843484732303130002F6F3D616A7562616C61772F6F753D45786368616E67652041646D696E6973747261746976652047726F7570202846594449424F484632335350444C54292F636E3D526563697069656E74732F636E3D456420576869746500
                  msg_id: 00000000C8D48C0C13F3D5419096EB08FBF55EA107007AC71826517D384D906F511ED07675AF00000000010C00007AC71826517D384D906F511ED07675AF00007F20958A0000
                  options: 2
                  project_id: 97
                  retry_count: 5
                  shared_access: 1
                  status: 0
                  submit_date: '2016-05-17T19:11:55Z'
                  type: 1
                  user: ACASE
              - doc_profile:
                  database: Active
                properties:
                  email-searchkey: 5B81A46F48EC614E860C13E9C4B4A4D5
                  PR_X-AUTHN_GUID: bf35be5e-38d5-4968-a752-f7f8d5f373a4
                  PR_OPERATOR: ACASE
                email_profile:
                  client_type: 3
                  folder_id: 000000007AD3E26F58409348880B90BC2D200DC0010091790995D5D59D4E903B2F8D480DCC7400000050F7A30000
                  locale: en
                  mailbox_id: 0000000038A1BB1005E5101AA1BB08002B2A56C20000454D534D44422E444C4C00000000000000001B55FA20AA6611CD9BC800AA002FC45A0C000000455843484732303130002F6F3D616A7562616C61772F6F753D45786368616E67652041646D696E6973747261746976652047726F7570202846594449424F484632335350444C54292F636E3D526563697069656E74732F636E3D456420576869746500
                  msg_id: 00000000C8D48C0C13F3D5419096EB08FBF55EA107007AC71826517D384D906F511ED07675AF00000000010C00007AC71826517D384D906F511ED07675AF00007F20958A0000
                  options: 2
                  project_id: 97
                  retry_count: 5
                  shared_access: 1
                  status: 0
                  submit_date: '2016-05-17T19:11:55Z'
                  type: 1
                  user: ACASE
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - hipaa
                - indexable
                - subclass_required
                type: object
                properties: &id1104
                  id:
                    type: string
                    description: |-
                      Indicates the document ID of the filed email.
                  description:
                    type: string
                    description: |-
                      Indicates any additional information about the email.
                  hipaa:
                    type: boolean
                    description: |-
                      Indicates the document is encrypted.<br><br>
                      If `true`, the document is encrypted.<br>
                      If `false`, the document is not encrypted.

                      Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                      Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                      This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                    default: false
                  indexable:
                    type: boolean
                    description: |-
                      Is `true` if the email can be indexed.
                    default: false
                  default_security:
                    enum: ["public", "private", "view"]
                    type: string
                    description: |-
                      The default access level.

                      |Value|Description|
                      |:---|:---|
                      |inherit|The container or document inherits security settings from its parent container.|
                      |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                      |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                      |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                  subclass_required:
                    type: boolean
                    description: |-
                      Indicates that a document subclass alias is required.<br><br>
                      If `true`, a document subclass alias is required.<br>
                      If `false`, a document subclass alias is not required.
                    default: false
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/conversation:
    description: |
      An email conversation or thread is an email message that includes a running list of all the succeeding replies starting with the original email.
      All the emails belonging to the same conversation are grouped together and assigned a common conversation ID.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/conversation/{conversationId}:
    description: |-
      None
    get:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-conversation-{conversationId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/email/conversation/{conversationId}
      summary: Get library emails
      description: |
        Returns the profiles of all the emails in a conversation thread with the specified conversation ID.<br><br>
        The profile contains the details such as document and version numbers, subject, sender, and recipients.
        For more information, see the **Response** section.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the profiles of all the emails that are part of the conversation ID `TWljcm9zb2Z0IFZzIEdvb2dsZQ==`:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/conversation/TWljcm9zb2Z0IFZzIEdvb2dsZQ==`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_conversation_{conversationId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                    conversation_name: 'Fw: Please review documents for McCarthy Insanity
                      Case'
                    items:
                    - author: BCUMMINGS
                      cc: Ed White; Andrew Case
                      conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                      conversation_name: 'Fw: Please review documents for McCarthy
                        Insanity Case'
                      custom13: Andrew Case
                      custom14: kthompson@ajubalaw.com
                      custom15: Ed White; Andrew Case
                      custom21: '2016-01-28T20:50:42Z'
                      custom22: '2016-01-28T20:50:42Z'
                      database: Active_uk
                      document_number: 78529
                      from: Andrew Case
                      has_attachment: false
                      is_hipaa: false
                      is_checked_out: false
                      id: Active_uk!78529.1
                      iwl: iwl:dms=MAIN&&lib=Active_uk&&num=78529&&ver=1
                      name: 'Fw: Please review documents for McCarthy Insanity Case'
                      received_date: '2016-01-28T20:50:42Z'
                      sent_date: '2016-01-28T20:50:42Z'
                      subject: 'Fw: Please review documents for McCarthy Insanity
                        Case'
                      to: kthompson@ajubalaw.com
                      type: MIME
                      size: 74111
                      version: 1
                      wstype: email
                    - author: BCUMMINGS
                      cc: Ed White; Andrew Case
                      conversation_id: Rnc6IFBsZWFzZSByZXZpZXcgZG9jdW1lbnRzIGZvciBNY0NhcnRoeSBJbnNhbml0eSBDYXNl
                      conversation_name: 'Fw: Please review documents for McCarthy
                        Insanity Case'
                      custom13: Andrew Case
                      custom14: kthompson@ajubalaw.com
                      custom15: Ed White; Andrew Case
                      custom21: '2016-01-28T20:50:42Z'
                      custom22: '2016-01-28T20:50:42Z'
                      database: Active_uk
                      document_number: 78530
                      from: Andrew Case
                      has_attachment: false
                      is_hipaa: false
                      is_checked_out: false
                      id: Active_uk!78530.1
                      iwl: iwl:dms=MAIN&&lib=Active_uk&&num=78530&&ver=1
                      name: 'Fw: Please review documents for McCarthy Insanity Case'
                      received_date: '2016-01-29T19:21:10Z'
                      sent_date: '2016-01-29T19:21:10Z'
                      subject: 'Fw: Please review documents for McCarthy Insanity
                        Case'
                      to: kthompson@ajubalaw.com
                      type: MIME
                      size: 74111
                      version: 1
                      wstype: email
                required:
                - data
                type: object
                properties: *id400
                additionalProperties: false
                description: |-
                  Email conversation response.
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: conversationId
      in: path
      description: |
        Conversation ID assigned to all the messages that are part of the same email conversation thread. <br><br>
        It is a serialized form of the email's normalized subject header generated by iManage Work Server to identify an email conversation thread.<br>
        For example, base64-encoded.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}:
    description: |-
      None
    get:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/email/{docId}
      summary: Get email profile
      description: |
        Returns profile information of the specified email. <br><br>
        The profile contains details such as document number, details of the user who sent email, email recipient list, subject and attachment details.
        For the detailed list of available profile properties, see **Response** section. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the profile of email active_uk!123.1: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_{docId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    attachments:
                    - id: '0'
                      name: Affirmation of Mark I. Bane Pursuant to Local Rule of
                        Bankruptcy Procedure 9077-1.PDF
                      size: 73111
                    author: BCUMMINGS
                    database: Active
                    document_number: 50137
                    is_checked_out: false
                    is_hipaa: false
                    received_date: '2012-02-29T13:59:18Z'
                    sent_date: '2012-02-29T13:58:53Z'
                    subject: 'RE: Please review documents for McCarthy Insanity Case'
                    to:
                    - address: acase@ajubalaw.com
                      name: Andrew Case
                    - address: ewhite@ajubalaw.com
                      name: Ed White
                    - address: ppeters@ajubalaw.com
                      name: Pam Peters
                    - address: bcummings@ajubalaw.com
                      name: Barbara Cummings
                    size: 74111
                    version: 1
                    wstype: email
                required:
                - data
                type: object
                properties: &id1108
                  data:
                    properties: &id1109
                      bcc:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailParticipant'
                        description: |-
                          Indicates the list of bcc recipients of the email and their details.
                      cc:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailParticipant'
                        description: |-
                          Indicates the list of cc recipients of the email and their details.
                      from:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailParticipant'
                        description: |-
                          Indicates the details of sender of the email.
                      to:
                        type: array
                        items:
                          $ref: '#/components/schemas/Emails.emailParticipant'
                        description: |-
                          Indicates the list of recipients of the email and their details.
                      attachments: &id991
                        type: array
                        items:
                          required:
                          - id
                          - size
                          type: object
                          properties:
                            attachment_id:
                              type: string
                              description: |-
                                The document ID if the attachment is in the library. Currently it applies to *.nrl files.
                            id:
                              type: string
                              description: |-
                                Unique identifier for the attachment.
                            name:
                              type: string
                              description: |-
                                File name of the attachment.
                            size:
                              type: integer
                              description: |-
                                Size of the attachment in bytes.
                              format: int64
                          additionalProperties: false
                          description: |-
                            Document Attachment
                      access: &id992
                        type: string
                        description: |
                          Current status of an email.<br><br>
                          For example, if it is checked out, available, or declared as a record, and so on.
                      access_time: &id993
                        type: string
                        description: |-
                          Date when an activity was performed on an email.<br><br>The activity can be view, create version, edit, print, and so on.
                      activity_date: &id994
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Activity date on the recent emails.
                      arch_req: &id995
                        type: string
                        description: |
                          Indicates if the email is marked for archive.<br><br>
                          If `true`, indicates that the email is marked for archive.<br>
                          If `false`, indicates that the email is not marked for archive.
                      archived: &id996
                        type: boolean
                        description: |
                          Indicates that the email has been archived.<br><br>
                          If `true`, the email is marked for archive.<br>
                          If `false`, the email is marked for archive.
                      author: &id997
                        type: string
                        description: |-
                          The user ID of the user who created the email.
                      author_description: &id998
                        type: string
                        description: |-
                          Full name of the user who created the email.
                      checkout_comment: &id999
                        type: string
                        description: |-
                          Additional information provided by the user when the email is checked out.
                      checkout_date: &id1000
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was last checked out.
                      checkout_due_date: &id1001
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Due date (in ISO 8601 format) for checkout.<br><br>The email should be checked in before this due date.
                      checkout_path: &id1002
                        type: string
                        description: |
                          Path where the email is checked out.<br><br>
                          The default paths are:
                          * the NRPortbl folder for iManage DeskSite or FileSite clients.
                          * the user_profile/roaming/recent folder for iManage Work clients.
                      class: &id1003
                        type: string
                        description: |-
                          Classification for identifying and differentiating the document.<br><br>A class is categorized by genre, department, region, and so on.
                      class_description: &id1004
                        type: string
                        description: |-
                          Additional information about document class of the email.
                      comment: &id1005
                        type: string
                        description: |-
                          Additional information about the document.<br><br> It is fully searchable. Maximum length&colon; 8,000.
                      create_date: &id1006
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was imported to iManage Work Server.
                      custom1: &id1007
                        type: string
                        description: |-
                          Alias for custom1 metadata property. Custom1 is parent of custom2 metadata property.
                      custom1_description: &id1008
                        type: string
                        description: |-
                          Additional information about the custom1 property.
                      custom2: &id1009
                        type: string
                        description: |-
                          Alias for custom2 metadata property.
                      custom2_description: &id1010
                        type: string
                        description: |-
                          Additional information about the custom2 property.
                      custom3: &id1011
                        type: string
                        description: |-
                          Alias for custom3 metadata property.
                      custom3_description: &id1012
                        type: string
                        description: |-
                          Additional information about the custom3 property.
                      custom4: &id1013
                        type: string
                        description: |-
                          Alias for custom4 metadata property.
                      custom4_description: &id1014
                        type: string
                        description: |-
                          Additional information about the custom4 property.
                      custom5: &id1015
                        type: string
                        description: |-
                          Alias for custom5 metadata property.
                      custom5_description: &id1016
                        type: string
                        description: |-
                          Additional information about the custom5 property.
                      custom6: &id1017
                        type: string
                        description: |-
                          Alias for custom6 metadata property.
                      custom6_description: &id1018
                        type: string
                        description: |-
                          Additional information about the custom6 property.
                      custom7: &id1019
                        type: string
                        description: |-
                          Alias for custom7 metadata property.
                      custom7_description: &id1020
                        type: string
                        description: |-
                          Additional information about the custom7 property.
                      custom8: &id1021
                        type: string
                        description: |-
                          Alias for custom8 metadata property.
                      custom8_description: &id1022
                        type: string
                        description: |-
                          Additional information about the custom8 property.
                      custom9: &id1023
                        type: string
                        description: |-
                          Alias for custom9 metadata property.
                      custom9_description: &id1024
                        type: string
                        description: |-
                          Additional information about the custom9 property.
                      custom10: &id1025
                        type: string
                        description: |-
                          Alias for custom10 metadata property.
                      custom10_description: &id1026
                        type: string
                        description: |-
                          Additional information about the custom10 property.
                      custom11: &id1027
                        type: string
                        description: |-
                          Alias for custom11 metadata property.
                      custom11_description: &id1028
                        type: string
                        description: |-
                          Additional information about the custom11 property.
                      custom12: &id1029
                        type: string
                        description: |-
                          Alias for custom12 metadata property.
                      custom12_description: &id1030
                        type: string
                        description: |-
                          Additional information about the custom12 property.
                      custom13: &id1031
                        type: string
                        description: |-
                          Alias for custom13 metadata property.
                      custom14: &id1032
                        type: string
                        description: |-
                          Alias for custom14 metadata property.
                      custom15: &id1033
                        type: string
                        description: |-
                          Alias for custom15 metadata property.
                      custom16: &id1034
                        type: string
                        description: |-
                          Alias for custom16 metadata property.
                      custom17: &id1035
                        type: number
                        description: |-
                          Alias for custom17 metadata property.
                        format: double
                      custom18: &id1036
                        type: number
                        description: |-
                          Alias for custom18 metadata property.
                        format: double
                      custom19: &id1037
                        type: number
                        description: |-
                          Alias for custom19 metadata property.
                        format: double
                      custom20: &id1038
                        type: number
                        description: |-
                          Alias for custom20 metadata property.
                        format: double
                      custom21: &id1039
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Alias for custom21 metadata property.
                      custom22: &id1040
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Alias for custom22 metadata property.
                      custom23: &id1041
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Alias for custom23 metadata property.
                      custom24: &id1042
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Alias for custom24 metadata property.
                      custom25: &id1043
                        type: boolean
                        description: |-
                          Alias for custom25 metadata property.
                      custom26: &id1044
                        type: boolean
                        description: |-
                          Alias for custom26 metadata property.
                      custom27: &id1045
                        type: boolean
                        description: |-
                          Alias for custom27 metadata property.
                      custom28: &id1046
                        type: boolean
                        description: |-
                          Alias for custom28 metadata property.
                      custom29: &id1047
                        type: string
                        description: |-
                          Alias for custom29 metadata property. Custom29 is the parent of custom30.
                      custom29_description: &id1048
                        type: string
                        description: |-
                          Additional information about the custom29 property.
                      custom30: &id1049
                        type: string
                        description: |-
                          Alias for custom30 metadata property.
                      custom30_description: &id1050
                        type: string
                        description: |-
                          Additional information about the custom30 property.
                      custom31: &id1051
                        type: string
                        description: |-
                          Reserved. Do not use.
                      custom31_description: &id1052
                        type: string
                        description: |-
                          Reserved. Do not use.
                      database: &id1053
                        type: string
                        description: |-
                          The library (formerly called a database) where the email is stored.
                      declared_date: &id1054
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email is declared as a record, and can no longer be edited or deleted, except by an administrator.
                      default_security: &id1055
                        enum: ["inherit", "public", "view", "private"]
                        type: string
                        description: |-
                          The default access level.

                          |Value|Description|
                          |:---|:---|
                          |inherit|The container or document inherits security settings from its parent container.|
                          |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                          |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                          |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                      document_number: &id1056
                        type: integer
                        description: |-
                          Indicates the document number of a document.

                          Document number is the number assigned to a document when it is imported to iManage Work,
                          and appears as part of the document ID.<br>
                          Document ID is the combination of library ID, document number, and document version.<br>
                          For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      edit_date: &id1057
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Most recent date (in ISO 8601 format) when the email was edited.
                      edit_profile_date: &id1058
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format)  of the last change to the email profile.
                      effective_security: &id1059
                        enum: ["full_access", "read_write", "read", "no_access"]
                        type: string
                        description: |-
                          A user's access permission on the email.
                      extension: &id1060
                        type: string
                        description: |-
                          File format of the email. For example, .msg.
                      file_create_date: &id1061
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was initially created before uploading to the iManage Work Server.
                      file_edit_date: &id1062
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was edited before uploading to the iManage Work Server.
                      has_attachment: &id1063
                        type: boolean
                        description: |
                          Indicated that the email has an attachment.<br><br>
                          If `true`, the email has an attachment.<br>
                          If `false`, the email does not have an attachment.
                      id: &id1064
                        type: string
                        description: |
                          The email ID assigned to the email by iManage Work Server.<br><br>
                          the email ID is a combination of one or more properties of a document such as document number, library name, and version number.
                          For example, *Reactive!154811.1* where *Reactive* is name of the library, *154811* is the document number, and *1* is the version number.
                      in_use: &id1065
                        type: boolean
                        description: |
                          Indicated that a user is working on the email.<br><br>
                          If `true`, a user is working on the email.<br>
                          If `false`, a user is not working on the email.
                      in_use_by: &id1066
                        type: string
                        description: |-
                          ID of the user who is currently working on the email or has checked it out.
                      in_use_by_description: &id1067
                        type: string
                        description: |-
                          Full name of the user who is currently working on the email or has checked it out.
                      is_declared: &id1068
                        type: boolean
                        description: |-
                          Is `true` when the email is declared as a record.
                      is_checked_out: &id1069
                        type: boolean
                        description: |-
                          Indicates if the email is currently checked out.<br><br>
                          If `true`, it is checked out.<br>
                          If `false`, it is not checked out.
                      is_external: &id1070
                        type: boolean
                        description: |-
                          Is `true` when the document is shared with the external users.
                      is_external_as_normal: &id1071
                        type: boolean
                        description: |-
                          If `true`, the external user is treated as normal user and can access public document.
                      is_hipaa: &id1072
                        type: boolean
                        description: |-
                          Indicates the document is encrypted.<br><br>
                          If `true`, the document is encrypted.<br>
                          If `false`, the document is not encrypted.

                          Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                          Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                          This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                      is_latest: &id1073
                        type: boolean
                        description: |-
                          Is `true` when it is latest version of the email.
                      is_most_recent_activity: &id1074
                        type: boolean
                        description: |
                          Indicates if this email is the most recently edited version by another user.<br><br>
                          If `true`, this is the most recently edited version by another user.<br>
                          If `false`, this is not the most recently edited version by another user.
                      is_related: &id1075
                        type: string
                        description: |
                          Indicates if an email is related to another document.<br><br>
                          If `true`, the email is related to another document.<br>
                          If `false`, the email is not related to another document.
                      is_restorable: &id1076
                        type: boolean
                        description: |
                          Indicates if an archived email can be restored.<br><br>
                          If `true`, an archived email can be restored.<br>
                          If `false`, an archived email cannot be restored.
                      iwl: &id1077
                        type: string
                        description: |
                          The iManage Work Link (iWL) of the email.<br><br>
                          This link is used to open the email in Protected View Mode by a user who has Read/Write or Full Access.
                      last_user: &id1078
                        type: string
                        description: |-
                          The user ID of the user who most recently edited the email within iManage Work.
                      last_user_description: &id1079
                        type: string
                        description: |-
                          Full name of the user who most recently edited the email in iManage Work.
                      share_url: &id1080
                        type: string
                        description: |-
                          The secure document URL created by the LinkSite application.
                      msg_id: &id1081
                        type: string
                        description: |
                          A message ID generated for the email.<br><br>
                          Each Microsoft Outlook email is assigned a message ID that is used for filing operations.
                      name: &id1082
                        type: string
                        description: |-
                          Name of the email.
                      operator: &id1083
                        type: string
                        description: |-
                          The user ID of the user who has checked out the email or is currently editing its profile.
                      operator_description: &id1084
                        type: string
                        description: |-
                          Full name of the operator.
                      retain_days: &id1085
                        type: integer
                        description: |-
                          Number of days before an email is eligible for archiving.
                      size: &id1086
                        type: integer
                        description: |-
                          Size of the email in bytes.
                      subclass: &id1087
                        type: string
                        description: |
                          Subcategory of the document class.<br><br>
                          For example, *Employment Letter* can be a subclass of *HR* document class.
                      subclass_description: &id1088
                        type: string
                        description: |-
                          Additional information about the subclass.
                      type: &id1089
                        type: string
                        description: |
                          Type of the document which is used by the iManage Work Server to associate it to an application to open and edit.<br><br>
                          For example, *WORD* for Microsoft Word.
                      type_description: &id1090
                        type: string
                        description: |-
                          Description of the document type.
                      version: &id1091
                        type: integer
                        description: |-
                          Version number of the document.
                      workspace_id: &id1092
                        type: string
                        description: |-
                          The workspace ID where the email is located.
                      workspace_name: &id1093
                        type: string
                        description: |-
                          Name of the parent workspace where the email is located.
                      wstype: &id1094
                        type: string
                        description: |
                          iManage Work object type.
                          <br><br>For example, document, folder, email, and so on.
                      conversation_count: &id1095
                        type: integer
                        description: |-
                          The number of emails that are part of the same conversation thread.<br><br>Returned only for email folder children and recent emails.
                      conversation_id: &id1096
                        type: string
                        description: |-
                          Serialized form of the email's normalized subject header to identify an email thread.<br><br>For example, base64-encoded.
                      conversation_name: &id1097
                        type: string
                        description: |-
                          Normalized subject header of the email with "RE:" and "FWD:" stripped. Note that this is language specific.
                      received_date: &id1098
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was received.
                      sent_date: &id1099
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the email was sent
                      subject: &id1100
                        type: string
                        description: |-
                          Email subject header.
                    additionalProperties: false
                    required:
                    - author
                    - database
                    - document_number
                    - is_checked_out
                    - is_hipaa
                    - size
                    - version
                    - wstype
                    type: object
                additionalProperties: false
                description: |-
                  Email response with detailed participant list.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/reply:
    description: |-
      None
    post:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}-reply
  #summary: POST /customers/{customerId}/libraries/{libraryId}/email/{docId}/reply
      summary: Send an email reply
      description: |
        Sends a reply for an email.<br><br>
        The reply is sent to email addresses specified in the request body.<br>

        This request may not be available for all environments.
        Prior to executing the email reply request, check GET `/customers/{customerId}/features`.<br>
        To execute email reply request, the `email_reply` feature must be `true`.
        If `email_reply` is `false`, the feature to reply to emails is not available.
        For more information, see **Features and Capabilities** section in the [Overview](#/docs/documentation-0) page.<br>

        * The list of email addresses can be specified in `to`, `bcc` and `cc` fields in the request body.
        * A customized message can be provided in the `body` field.
        * When replying to an email saved to a workspace folder, copy of the email can be sent to the same workspace folder,
          if a valid iManage Work Communications Server for Exchange email address is assigned to it.
          Specify the folder email address in the field `file_to_folder`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request sends a reply to email active_uk!123.1 to the email addresses specified in `to` and `cc` fields:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1/forward` <br>

        Request body in `raw/JSON` format:
          ```
            {
               "to":[
                  {
                     "address":"bcummings@ajubalaw.com"
                  }
               ],
               "cc":[
                  {
                     "address": "acase@ajubalaw.com"
                  }
               ],
               "bcc":[ ],
               "subject":"Re: Details of Microsoft Vs Google lawsuit",
               "body":"<p>Hi Barbara,</p><p>Here is the detailed study.</p><p>Thanks,</p><p>Carla Pierce</p>"
            }
          ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To forward to an email, see POST `/customers/{customerId}/libraries/{libraryId}/email/{docId}/forward`
        * To preview an email, see GET `/customers/{customerId}/libraries/{libraryId}/email/{docId}/preview`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_email_{docId}_reply
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                Request sent by iManage Work when replying to an email.
              required:
              - subject
              - body
              type: object
              properties: &id1107
                to: &id401
                  type: array
                  items:
                    $ref: '#/components/schemas/Emails.emailParticipant'
                  description: |-
                    Specifies an array of email addresses of the recipients.
                cc: &id402
                  type: array
                  items:
                    $ref: '#/components/schemas/Emails.emailParticipant'
                  description: |-
                    Specifies an array of email addresses of recipients to whom the email is carbon copied.
                bcc: &id403
                  type: array
                  items:
                    $ref: '#/components/schemas/Emails.emailParticipant'
                  description: |-
                    Specifies an array of email addresses of recipients to whom the email is blind carbon copied.
                subject: &id404
                  type: string
                  description: |-
                    Specifies subject of the email.
                body: &id405
                  type: string
                  description: |-
                    Specifies body of the email.
                file_to_folder: &id406
                  type: string
                  description: |
                    Specifies the folder to which a new email is filed using iManage Work Communication Server. <br>
                    This folder must have a designated email address.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/preview:
    description: |-
      None
    get:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}-preview
  #summary: GET /customers/{customerId}/libraries/{libraryId}/email/{docId}/preview
      summary: Preview an email
      description: |
        This request returns the preview of an email that is readable on the device accessing it.

        Depending upon the environment, it returns an email in following formats:
        * In some environments, an email in the MSG format is returned in the EML format.<br>
          When a user files an email from Microsoft Outlook, it is uploaded to iManage Work in the MSG format.
          Natively, iOS devices do not support opening the MSG file type. A document of this type needs to be converted
          to the EML format in order to render it on an iOS device.<br>

        * In other environments, emails in both MSG and EML formats are returned in the HTML format to be read on a web browser.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request displays the message of email active_uk!123.1 in the EML format:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1/preview`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To forward to an email, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/email/-docId-/forward">POST /customers/{customerId}/libraries/{libraryId}/email/{docId}/forward</a>
        * To reply to an email, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/email/-docId-/reply">POST /customers/{customerId}/libraries/{libraryId}/email/{docId}/reply</a>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_{docId}_preview
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
            text/html:
              schema:
                type: string
        404: *id005
        400: *id003
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/forward:
    description: |-
      None
    post:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}-forward
  #summary: POST /customers/{customerId}/libraries/{libraryId}/email/{docId}/forward
      summary: Forward an email
      description: |
        Forwards an email to the email addresses specified in the request body.<br>

        This request may not be available for all environments. <br>
        Prior to executing the email forward request, check GET `/customers/{customerId}/features`.<br>
        To execute email forward request, the `email_reply` feature must be `true`.
        If `email_reply` is `false`, the feature to forward email is not available.

        For more information, see **Features and Capabilities** section in the [Overview](#/docs/documentation-0) page.<br>

        * The list of email addresses can be specified in `to`, `bcc` and `cc` fields in the request body.
        * A customized message can be provided in the `body` field.
        * To include the attachments from the original email, set the field `include_attachments` field to `true`.
        * When forwarding an email saved to a workspace folder, copy of the email can be sent to the same workspace folder,
          if a valid iManage Work Communications Server for Exchange email address is assigned to it.
          Specify the folder email address in the field `file_to_folder`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request forwards email active_uk!123.1 to email addresses specified in `to` and `cc` fields:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1/forward` <br>

        Request body in `raw/JSON` format:
        ```
          {
             "to":[
                {
                   "address":"bcummings@ajubalaw.com"
                }
             ],
             "cc":[
                {
                   "address": "acase@ajubalaw.com"
                }
             ],
             "bcc":[ ],
             "subject":"Fw: Details of Microsoft Vs Google lawsuit",
             "body":"<p>Hi Barbara,</p><p>Here is the detailed study.</p><p>Thanks,</p><p>Carla Pierce</p>",
             "include_attachments":true
          }
        ```
        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To reply to an email, see POST `/customers/{customerId}/libraries/{libraryId}/email/{docId}/reply`
        * To preview an email, see GET `/customers/{customerId}/libraries/{libraryId}/email/{docId}/preview`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_email_{docId}_forward
      requestBody:
        content:
          application/json:
            schema:
              required: &id1105
              - body
              - subject
              - include_attachments
              properties: &id1106
                include_attachments:
                  type: boolean
                  description: |
                    Specifies to include attachments from the original email.<br><br>
                    If `true`, attachments from the original email are included.<br>
                    If `false`, attachments from the original email are not included.
                to: *id401
                cc: *id402
                bcc: *id403
                subject: *id404
                body: *id405
                file_to_folder: *id406
              additionalProperties: false
              description: |-
                Request sent by iManage Work when forwarding to an email.
              type: object
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments:
    description: |-
      The email attachments can be downloaded to local machine with a file name provided by iManage Work Server or a user provided file name.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}:
    description: |-
      None
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: attachmentId
      in: path
      description: |-
        The attachment ID of the email attachment.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/rendition:
    description: |-
      None
    get:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}-attachments-{attachmentId}-rendition
      summary: Render an email attachment
      description: |-
        Renders the email attachment. Images and HTML are currently supported.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_{docId}_attachments_{attachmentId}_rendition
      responses:
        200:
          description: Renders the given email attachment
          content:
            application/octet-stream:
              schema:
                description: This can be any type
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: attachmentId
      in: path
      description: |-
        The attachment ID of the email attachment.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/download:
    description: |-
      None
    get:
      tags:
      - Emails
    #- customers-{customerId}-libraries-{libraryId}-email-{docId}-attachments-{attachmentId}-download
  #summary: GET /customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/download
      summary: Download email attachment
      description: |
        Downloads an email attachment with the specified attachment ID. <br><br>
        The attachment is saved with a random name generated by iManage Work Server. For example, e56aa706-e57f-49d3-9107-be83838df9c0.
        Both the document ID of email and the attachment ID must be provided to execute the request.<br>
        An email can have multiple attachments. Each attachment can be downloaded individually.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request downloads the attachment 1 of email active_uk!123.1 to local machine with a random name provided by iManage Work Server:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1/attachments/1/download`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To download an attachment with a name provided by the user, see GET `/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/download/{user_provided_filename}`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_{docId}_attachments_{attachmentId}_download
      responses:
        200:
          description: Requested email attachment.
          content:
            application/octet-stream:
              schema:
                description: This can be any type
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: attachmentId
      in: path
      description: |-
        The attachment ID of the email attachment.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/download/{filename}:
    description: |-
      None
    get:
      tags:
      - Emails

      summary: Download email attachment with filename
      description: |
        Downloads the specified email attachment and saves it with the filename provided by the user.<br><br>
        The following must be specified to execute this request:
        * Document ID of the email.
        * Attachment ID of the email attachment.
        * File name for the attachment.

        An email can have multiple attachments. Each attachment can be downloaded individually.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request downloads the attachment 1 of email active_uk!123.1 to the user's local computer with the name Compensation.docx:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/email/active_uk!123.1/attachments/1/download/Compensation.docx`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To download an attachment with a name provided by iManage Work Server, see GET `/customers/{customerId}/libraries/{libraryId}/email/{docId}/attachments/{attachmentId}/download`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_email_{docId}_attachments_{attachmentId}_download_{filename}
      responses:
        200:
          description: Requested email attachment.
          content:
            application/octet-stream:
              schema:
                type: string
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: attachmentId
      in: path
      description: |-
        The attachment ID of the email attachment.
      required: true
      schema:
        description: needs defining
    - name: filename
      in: path
      description: |-
        File name provided by user to save an attachment.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents:
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents
      summary: Get library documents
      description: |
        Gets all documents that match the specified search criteria.

        For more information on defining search criteria, see <a href="#overview--crafting-searches">Crafting Searches</a>.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents
      parameters:
      - *id004
      - *id137
      - *id138
      - *id139
      - *id140
      - *id141
      - name: container_id
        in: query
        description: |
          Filters documents only from the specified container.<br><br>
          The specified container ID can be of a workspace or a folder.
          For example, *ACTIVE_US!222* where "ACTIVE_US" is the library ID and 222 is the container number.
          Multiple container IDs cannot be specified using a comma-separated list.
        schema:
          type: string
      - *id142
      - *id143
      - *id144
      - *id083
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - name: email_only
        in: query
        description: |
          Filters documents to return only emails.<br><br>
          If `true`, only emails are returned.<br>
          If `false`, documents are also returned along with emails.

          For a document-only return list, see the `exclude_emails` query parameter.
        schema:
          type: boolean
          default: false
      - *id189
      - *id190
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: boolean
          default: false
      - *id191
      - *id192
      - *id193
      - *id194
      - name: include_subtree
        in: query
        description: |
          Specifies whether to search for documents in the specified container and its subtree, or only in the specified container.<br><br>
          If `true`, search in the specified container and its entire subtree.<br>
          If `false`, search only in the specified container.

          This parameter is used only in conjunction with the `container_id` parameter.
        schema:
          type: boolean
          default: true
      - *id073
      - *id195
      - name: latest
        in: query
        description: |
          Specifies to return only the latest version of each document that is accessible to the user making the request.<br><br>
          If `true`, only the current or latest version is returned.<br>
          If `false`, older versions of documents are also returned.
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        description: |
          Specifies the maximum number of documents to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id196
      - *id006
      - *id197
      - *id198
      - name: paging_mode
        in: query
        description: |-
          Specifies the paging mode to be used to retrieve the result set.

          The following are allowed values:

          - standard_cursor - Specifies the query parameter `cursor`can be used to identify the first item to return.
          The cursor is a value that specifies an item by an ID within the results set to start returning from.
          It is not an ordinal position as `offset` is for the standard paging mode.
          For a subsequent search, set `cursor` to the cursor value returned in the previous search.
          Do not modify the cursor value in anyway.
          The standard_cursor mode is the preferred paging mode, as it is quicker and less stressful on system performance.
          The parameter `offset` is ignored in this mode.<br> **Note**: In this mode the search term must match the document name exactly.
          For example, when searching for `name=warrant`, documents with the name "warranty agreement" will not be included in the results.<br>

          - standard -  Specifies the query parameter `offset` can be used to identify the first item to return.
          The offset is a value that specifies the position of an item within the results set to start returning from.
          This is relative to zero, or the absolute start of the list.
          An offset value of zero starts at the beginning of the results set.
          An offset value of 5, starts with the fifth item in the results set.
          The parameter `cursor` is ignored in this mode.<br> **Note**: In this mode the search term can match the document name partially.
          For example, when searching for `name=warrant`, documents with the name "warranty agreement" will be included in the results.<br><br>
        schema:
          enum: [standard, standard_cursor]
          type: string
      - name: personalized
        in: query
        description: |
          Filters documents to include only the ones that a user accessed in matters in the past 30 days.<br><br>
          If `true`, retrieves the documents from a user's Recent Matters list.<br>
          If `false`, retrieves the documents from all sources available to the user.
        schema:
          type: boolean
          default: false
      - *id199
      - *id200
      - *id201
      - *id202
      - name: results
        in: query
        description: |-
          Specifies whether or not to return search results.

          If `true`, search results are returned.
          If `false`, search results are not returned.<br>
          This parameter is usually used along with `facets`. If the search is intended to return only `facets`, then `results` should be set to `false`.
        schema:
          type: boolean
          default: true
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - *id208
      - *id209
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  cursor: '110478'
                  data:
                    results:
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:22:10-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: public
                      document_number: 105895
                      edit_date: '2016-12-02T04:34:17-05:00'
                      edit_profile_date: '2016-12-02T04:34:17-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:19:50-05:00'
                      file_edit_date: '2016-12-02T04:34:29-05:00'
                      has_attachment: false
                      id: Active!105895.2
                      is_in_use: true
                      in_use_by: ACASE
                      is_declared: false
                      is_checked_out: true
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                      last_user: ACASE
                      name: microsoft_manual_of_style_fourth_edition_Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 10003063
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:00:23-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105892
                      edit_date: '2016-12-02T04:10:19-05:00'
                      edit_profile_date: '2016-12-02T04:10:20-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:02:16-05:00'
                      file_edit_date: '2016-12-02T04:02:16-05:00'
                      has_attachment: false
                      id: Active!105892.2
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                      last_user: ACASE
                      name: ACME 2014 Audit Engagement Contract (1) Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 422553
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T00:27:24-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105893
                      edit_date: '2016-12-02T00:28:30-05:00'
                      edit_profile_date: '2016-12-02T00:28:30-05:00'
                      extension: pdf
                      file_create_date: '2016-11-29T14:15:18-05:00'
                      file_edit_date: '2016-11-29T14:15:18-05:00'
                      has_attachment: false
                      id: Active!105893.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                      last_user: ACASE
                      name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                        as Copy'
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 419637
                      type: ACROBAT
                      version: 1
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      conversation_id: RndkOiBGdzogQ29udGluZW50YWwvRGVsdGEgbWVldGluZyByZXNjaGVkdWxlZCBmcm9tIEZlYiAxMXRoIHRvIEZlYiAxMnRoIGZyb20gMTozMC0zOjAwIFBNIGluIEVucm9uIEJ1aWxkaW5nIDMzMjE=
                      conversation_name: 'Fwd: Fw: Continental/Delta meeting rescheduled
                        from Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building
                        3321'
                      create_date: '2016-11-29T14:40:56-05:00'
                      custom13: Andrew Case
                      custom14: Barbara Cummings
                      custom21: '2016-11-25T12:50:51-05:00'
                      custom22: '2016-11-25T12:50:54-05:00'
                      database: Active
                      default_security: private
                      document_number: 105634
                      edit_date: '2016-11-29T14:40:56-05:00'
                      edit_profile_date: '2016-11-29T14:40:56-05:00'
                      extension: msg
                      file_create_date: '2016-11-29T14:40:56-05:00'
                      file_edit_date: '2016-11-29T14:40:56-05:00'
                      from: Andrew Case
                      has_attachment: false
                      id: Active!105634.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=MAIN&&lib=Active&&num=105634&&ver=1
                      last_user: ACASE
                      name: 'Fwd: Fw: Continental/Delta meeting rescheduled from Feb
                        11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                      operator: ACASE
                      operator_description: Andrew Case
                      received_date: '2016-11-25T12:50:54-05:00'
                      sent_date: '2016-11-25T12:50:51-05:00'
                      size: 97280
                      subject: 'Fwd: Fw: Continental/Delta meeting rescheduled from
                        Feb 11th to Feb 12th from 1:30-3:00 PM in Enron Building 3321'
                      to: Barbara Cummings
                      type: MIME
                      version: 1
                      workspace_id: Active!11559
                      workspace_name: testWS001
                      wstype: email
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      cc: Ed White; Barbara Cummings
                      class: E-Mail
                      conversation_id: UmU6IEN0cmwgJiBEcmFn
                      conversation_name: 'Re: Ctrl & Drag'
                      create_date: '2015-12-21T11:31:58-05:00'
                      custom1: '1000'
                      custom13: Andrew Case
                      custom14: Andrew Case; Kelly Thompson
                      custom15: Ed White; Barbara Cummings
                      custom1_description: Enron Corporation
                      custom2: '004'
                      custom21: '2015-12-21T11:31:58-05:00'
                      custom22: '2015-12-21T11:31:13-05:00'
                      custom29: BANK
                      custom29_description: Bankruptcy
                      custom2_description: Enron v. Markham
                      custom3: ACTIVE
                      custom30: '106'
                      custom30_description: Chapter 11
                      custom3_description: Active
                      custom4: TX
                      custom4_description: Texas
                      database: Active
                      default_security: public
                      document_number: 53332
                      edit_date: '2015-12-21T11:31:58-05:00'
                      edit_profile_date: '2015-12-21T11:31:58-05:00'
                      extension: msg
                      file_create_date: '2015-12-21T11:31:58-05:00'
                      file_edit_date: '2015-12-21T11:31:13-05:00'
                      from: Andrew Case
                      has_attachment: false
                      id: Active!53332.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=MAIN&&lib=Active&&num=53332&&ver=1
                      name: 'Re: Ctrl & Drag'
                      operator: ACASE
                      operator_description: Andrew Case
                      received_date: '2015-12-21T11:31:13-05:00'
                      sent_date: '2015-12-21T11:31:58-05:00'
                      size: 24576
                      subject: 'Re: Ctrl & Drag'
                      to: Andrew Case; Kelly Thompson
                      type: MIME
                      version: 1
                      workspace_id: Active!6987
                      workspace_name: 1000.004 - Enron v. Markham
                      wstype: email
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                required:
                - data
                type: object
                properties: *id407
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/check-profile:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-check-profile
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/check-profile
      summary: Check document profile
      description: |
        Checks the provided profile for missing required properties and disabled properties.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_check-profile
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Andrew Case Employment Agreement.pdf
                alias: Andrews Case
                operator: ACASE
                author: ACASE
                class: DOC
                subclass: SUBDOC
                retain_days: 120
                default_security: private
                custom1: '0999'
                custom3: ACTIVE
                custom4: CA
              type: object
              properties: &id805
                author:
                  type: string
                  description: |-
                    ID of the user who created the document.
                class:
                  type: string
                  description: |-
                    Classification for identifying and differentiating the document. Documents are categorized by genre, department, region, and so on.
                alias:
                  type: string
                  description: |-
                    This property is used as either a reference to a migrated document identifier or the document name. Classic clients use this property as the document name.
                name:
                  type: string
                  description: |-
                    File name of the document.
                operator:
                  type: string
                  description: |-
                    ID of the user who has checked out the document or is currently editing its profile.
                subclass:
                  type: string
                  description: |-
                    Sub category of the document class. For example, 'Employment Letter' is a subclass of 'HR' document class.
                retain_days:
                  type: integer
                  description: |-
                    Number of days before the inactive document is eligible for archiving.
                is_declared:
                  type: boolean
                  description: |
                    Indicates if the document has been declared as a record.
                    A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
                    If `true`, the document is declared as a record.<br>
                    If `false`, the document is declared as a record. <br><br>
                    This field is used with `declared_date`.
                default_security:
                  $ref: '#/components/schemas/Documents.accessRule'
                custom1:
                  type: string
                  description: |-
                    Alias of custom1 property. Custom1 is parent of custom2 property.
                custom2:
                  type: string
                  description: |-
                    Alias of custom2 property. Custom2 is child of custom1 property.
                custom3:
                  type: string
                  description: |-
                    Alias for custom3 property.
                custom4:
                  type: string
                  description: |-
                    Alias for custom4 property.
                custom5:
                  type: string
                  description: |-
                    Alias for custom5 property.
                custom6:
                  type: string
                  description: |-
                    Alias for custom6 property.
                custom7:
                  type: string
                  description: |-
                    Alias for custom7 property.
                custom8:
                  type: string
                  description: |-
                    Alias for custom8 property.
                custom9:
                  type: string
                  description: |-
                    Alias for custom9 property.
                custom10:
                  type: string
                  description: |-
                    Alias for custom10 property.
                custom11:
                  type: string
                  description: |-
                    Alias for custom11 property.
                custom12:
                  type: string
                  description: |-
                    Alias for custom12 property.
                custom13:
                  type: string
                  description: |-
                    Contents of custom13 property.
                custom14:
                  type: string
                  description: |-
                    Contents of custom14 property.
                custom15:
                  type: string
                  description: |-
                    Contents of custom15 property.
                custom16:
                  type: string
                  description: |-
                    Contents of custom16 property.
                custom17:
                  type: number
                  description: |-
                    Contents of custom17 property.
                  format: double
                custom18:
                  type: number
                  description: |-
                    Contents of custom18 property.
                  format: double
                custom19:
                  type: number
                  description: |-
                    Contents of custom19 property.
                  format: double
                custom20:
                  type: number
                  description: |-
                    Contents of custom20 property.
                  format: double
                custom21:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Contents of custom21 property.
                custom22:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Contents of custom22 property.
                custom23:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Contents of custom23 property.
                custom24:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Contents of custom24 property.
                custom25:
                  type: boolean
                  description: |-
                    Boolean value of custom25 property.
                custom26:
                  type: boolean
                  description: |-
                    Boolean value of custom26 property.
                custom27:
                  type: boolean
                  description: |-
                    Boolean value of custom27 property.
                custom28:
                  type: boolean
                  description: |-
                    Boolean value of custom28 property.
                custom29:
                  type: string
                  description: |-
                    Alias of custom29 property. Custom29 is the parent of custom30 property.
                custom30:
                  type: string
                  description: |-
                    Alias of custom30 property. Custom30 is the child of custom29 property.
                custom31:
                  type: string
                  description: |-
                    Reserved. Do not use.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400:
          description: ''
          content:
            application/json:
              schema:
                required:
                - error
                type: object
                properties:
                  error:
                    required:
                    - code
                    type: object
                    properties:
                      code:
                        enum: ["NRC_INVALID_PARAM", "NRC_INDEX_PROMISCUOUS", "NRC_INVALID_PROFILE",
                          "NRC_INVALID_DOCUMENT_TYPE", "NRC_INVALID_FOLDER_TYPE"]
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.
                      dms_version:
                        type: string
                        description: |-
                          Indicates the DMS version.
                      transaction:
                        type: string
                        description: |-
                          Indicates transaction name on which an error occurred.
                      messages:
                        type: array
                        items:
                          required:
                          - code
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error code.
                            code_message:
                              type: string
                              description: |-
                                Indicates a description of the error.
                            field:
                              type: string
                              description: |-
                                Indicates the field that contains the error associated with document profiles.
                            data:
                              anyOf:
                              - type: object
                              - type: array
                                items: {}
                              - type: string
                              - type: integer
                              description: |-
                                Indicates detailed JSON structure related to the failed data.
                          additionalProperties: false
                        description: |-
                          Indicates additional details about the error for the request or for fields.
                    additionalProperties: false
                additionalProperties: false
                example:
                  error:
                    code: NRC_INVALID_PROFILE
                    code_message: Document profile is invalid
                    messages:
                    - code: NRC_INVALID_PROFILE
                      code_message: required
                      field: custom1
                    - code: NRC_INVALID_PROFILE
                      code_message: required
                      field: custom2
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/admin-search:
    description: |
      An iManage Work system administrator may require to search for documents in a library to perform certain administrative tasks.
      For example, the tasks performed in iManage Control Center, such as unlocking a checked out document, checking the
      effective access of users, version and history details.
      However, they may not be allowed to view the confidential information about the documents such as document names or their content.<br><br>
      The admin-search request provides a way to search the library without returning confidential information.<br>
      The minimum permissions level required to implement this request: Tier 1.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-admin-search
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/admin-search
      summary: Admin search for documents
      description: |
        Returns all documents with the properties that an iManage Work system administrator is allowed to view.<br><br>

        The minimum access permission required to implement this request: Tier 1. <br><br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the documents and their properties that an iManage Work system administrator is allowed to view:<br>

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/admin-search`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_admin-search
      parameters:
      - *id004
      - name: ascending
        in: query
        description: |
          Indicates to return the documents in the ascending order of document numbers.<br><br>
          If `true`, returns the documents in the ascending order.<br>
          If `false`, returns the documents in any order.
        schema:
          type: boolean
          default: false
      - name: container_id
        in: query
        description: |
          Returns documents only from the specified container.<br><br>
          The specified container ID can be of a workspace or folder. For example, *Archive!22*, or *Integration!1*.
          Multiple query parameters cannot be specified as a comma-separated list.
        schema:
          type: string
      - name: email_only
        in: query
        description: |
          Indicates whether to search for documents in the entire subtree of the specified container ID.<br><br>
          If true, searches for documents in the entire subtree of the specified container ID.<br>
          If false, search for documents only in the specified container ID.<br><br>
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: boolean
          default: false
      - name: include_subtree
        in: query
        description: |
          Indicates whether to include single level of the container_id.<br><br>
          If `true`, search the entire subtree of the specified container_id.<br>
          If `false`, search a single level of the container_id.
        schema:
          type: boolean
          default: true
      - name: latest
        in: query
        description: |
          Indicates to include only the latest version of each document.<br><br>
          If `true`, only the current or latest version is included.<br>
          If `false`, older versions of documents are also included.
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        description: |
          The maximum number of documents to include in the response.
        schema:
          type: integer
      - name: nvp_name
        in: query
        schema:
          type: string
          default: "*"
      - name: nvp_op
        in: query
        description: |-
          Deprecated. Do not use.
        schema:
          type: string
      - name: nvp_value
        in: query
        schema:
          type: string
          default: "*"
      - name: paging_mode
        in: query
        description: |-
          Specifies the paging mode to be used to retrieve the result set.

          The following are allowed values:

          - standard_cursor - Specifies the query parameter `cursor`can be used to identify the first item to return.
          The cursor is a value that specifies an item by an ID within the results set to start returning from.
          It is not an ordinal position as `offset` is for the standard paging mode.
          For a subsequent search, set `cursor` to the cursor value returned in the previous search.
          Do not modify the cursor value in anyway.
          The standard_cursor mode is the preferred paging mode, as it is quicker and less stressful on system performance.
          The parameter `offset` is ignored in this mode.<br> **Note**: In this mode the search term must match the document name exactly.
          For example, when searching for `name=warrant`, documents with the name "warranty agreement" will not be included in the results.<br>

          - standard -  Specifies the query parameter `offset` can be used to identify the first item to return.
          The offset is a value that specifies the position of an item within the results set to start returning from.
          This is relative to zero, or the absolute start of the list.
          An offset value of zero starts at the beginning of the results set.
          An offset value of 5, starts with the fifth item in the results set.
          The parameter `cursor` is ignored in this mode.<br> **Note**: In this mode the search term can match the document name partially.
          For example, when searching for `name=warrant`, documents with the name "warranty agreement" will be included in the results.<br><br>
        schema:
          enum: [standard, standard_cursor]
          type: string
      - name: personalized
        in: query
        description: |
          The content that the user has accessed from My Matters in the past 30 days.<br><br>
          If `true`, retrieves the documents from a user's Recent Matters list.<br>
          If `false`, retrieves the documents from all sources available to the user.
        schema:
          type: boolean
          default: false
      - name: results
        in: query
        description: |-
          Indicates whether to include search results.
        schema:
          type: boolean
          default: true
      - name: sort_order
        in: query
        description: |-
          The sort order to be used when the paging mode is set to use a cursor.<br>

          The following are allowed values:

          |Value|Description|
          |:---|:---|
          |asc|The items are listed in ascending order either alphabetically or numerically.|
          |desc|The items are listed in descending order either alphabetically or numerically.|

          If omitted, items are returned in the order they are found.
        schema:
          enum: ["asc", "desc"]
          type: string
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      responses:
        200:
          description: Custom metadata descriptions are redacted for Tier 1 admin
            users
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      facets:
                        $ref: '#/components/schemas/Documents.searchFilter'
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Documents.document-admin-search'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - author: MARCIEDAVENPORT
                    class: DOC
                    content_type: D
                    create_date: '2018-03-02T22:27:41Z'
                    custom21: '2017-05-02T19:19:02Z'
                    custom22: '2017-05-10T19:19:02Z'
                    custom23: '2017-05-02T19:19:02Z'
                    custom24: '2017-05-10T19:19:02Z'
                    library: Archive
                    declared: false
                    default_security: private
                    document_number: 1077
                    edit_date: '2018-03-02T22:27:41Z'
                    edit_profile_date: '2018-03-02T22:27:14Z'
                    extension: props
                    file_create_date: '2018-03-02T22:27:14Z'
                    file_edit_date: '2018-03-02T22:27:14Z'
                    id: Archive!1077.2
                    in_use: false
                    is_checked_out: false
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_in_use: false
                    is_related: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW.imanage.com&&lib=Archive&&num=1077&&ver=2
                    last_user: MARCIEDAVENPORT
                    operator: MARCIEDAVENPORT
                    retain_days: 365
                    size: 238
                    type: PROPS
                    version: 2
                    workspace_id: Archive!108
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    class: DOC
                    content_type: D
                    create_date: '2018-03-01T18:08:36Z'
                    custom3: ACTIVE
                    library: Archive
                    declared: false
                    default_security: private
                    document_number: 1076
                    edit_date: '2018-03-01T18:08:36Z'
                    edit_profile_date: '2018-03-01T18:08:36Z'
                    extension: eml
                    file_create_date: '2018-03-01T18:08:36Z'
                    file_edit_date: '2018-03-01T18:08:36Z'
                    id: Archive!1076.1
                    in_use: false
                    is_checked_out: false
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_in_use: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW.imanage.com&&lib=Archive&&num=1076&&ver=1
                    last_user: ACASE
                    operator: ACASE
                    retain_days: 365
                    size: 743
                    type: EML
                    version: 1
                    workspace_id: Archive!522
                    wstype: email
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  total_count: 2
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/search:
    description: |
      This request returns all the documents that match the specified search criteria. <br><br>
      Also, only the specified document profile fields are returned in the response.
      This facilitates the users to retrieve only the information that they are interested in.
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-search
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/search
      summary: Scoped search for documents
      description: |
        Returns all the documents that match the search criteria, with only the specified document profile fields in the response.<br>

        By default, the response includes `id`, `wstype`, and `iwl`.<br>
        The request body parameter `filters` specifies the search criteria. <br>
        The `profile_fields` parameter specifies the set of fields to return in the response object.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the Microsoft Word documents of author ACASE with the specified `profile_fields` in the response:<br>

        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/search` <br>

        Request body: <br>
          ```
          {
            "profile_fields": {
              "document": [
                "name",
                "document_number",
                "size"
              ]
            },
            "filters": {
              "type": "WORD",
              "author": "ACASE"
            }
          }
          ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_search
      requestBody:
        content:
          application/json:
            schema:
              title: Document Search Request
              type: object
              properties: &id569
                limit:
                  maximum: 9999
                  minimum: 1
                  type: integer
                  description: |-
                    Specifies the maximum number of documents to include in the response.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    document:
                      type: array
                      items:
                        type: string
                      description: |
                        Up to 15 document profile properties to include in the response.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Returns documents that have been edited between two dates relative to the current date.<br><br>
                        The format is [begin]:[end][timescale]. The time scale is 'd' for days, 'm' for months, 'y' for years.
                        These dates are relative to each other, and do not refer to calendar dates.
                        For example, `-30:0d` indicates the beginning date is 30 days prior to the current date (noted by the negative sign),
                        and the end date is zero days from the current date, or from today. `-30:-7d` indicates the beginning date is 30 days
                        prior to the current date but that the end date is seven days prior to the current date.
                        A positive number indicates a date in the future and the search is limited to the current date as appropriate and should be avoided.
                        For example, `-30:+7d` indicates the end date is seven days after the current date, a week in the future.
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |
                        Returns documents that were edited on or after this date (in ISO 8601 format).<br><br>
                        The parameters `edit_date_from` and `edit_date_to` are used in combination to form a date range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` returns documents edited
                        on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                        If one parameter is omitted, the search assumes the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |
                        Returns documents that were edited on or before the date (in ISO 8601 format). <br><br>
                        The parameters `edit_date_from` and `edit_date_to` are used in combination to form a date range.
                        For example, `edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z` returns documents
                        edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                        If one parameter is omitted, the search assumes the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    exclude_emails:
                      type: boolean
                      description: |
                        Specifies to include only documents from the results set.<br><br>
                        If `true`, only documents are returned.<br>
                        If `false`, emails and documents are returned.<br><br>
                        This parameter allows for a document-only return list.
                        For an email-only return list, see the `email_only` parameter.
                      default: false
                    email_only:
                      type: boolean
                      description: |
                        Specifies to include only emails from the results set.<br><br>
                        If `true`, only emails are included.<br>
                        If `false`, documents may also be included.<br><br>
                        This parameter allows for an email-only return list.
                        For a document-only return list, see the `exclude_emails` parameter.
                      default: false
                    anywhere:
                      type: string
                      description: |-
                        Specifies string to be searched anywhere in the document profile or contents.
                      example: litigation
                    user:
                      type: string
                      description: |-
                        Specifies the document's user ID.
                    author:
                      type: string
                      description: |-
                        Specifies the user ID of the document's author.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        Specifies the user ID of the operator of the documents.
                      example: MARCIEDAVENPORT
                    owner:
                      type: string
                      description: |-
                        Specifies the user ID of the author or operator of the documents.
                      example: CPIERCE
                    comments:
                      type: string
                      description: |-
                        Specifies the text to be searched for in the comment field of the document profile.
                      example: confidential
                    container_id:
                      type: string
                      description: |
                        Returns documents or emails from the specified container_id only.
                        The container_id can be the ID of a workspace or folder. For example, *Archive!75645*, or *Integration!4564*.
                        Multiple parameter values cannot be specified using a comma-separated list.
                    include_subtree:
                      type: boolean
                      description: |
                        Specifies to search the subtree of the specified container ID.<br><br>
                        If `true`, returns documents from the entire subtree of the specified container ID.<br>
                        If `false`, returns documents only from the root level of the specified container ID.
                      default: true
                    personalized:
                      type: boolean
                      description: |
                        Specifies if this is a personalized search, that is, a search for content from user's Recent Matters (accessed in the past 30 days).<br><br>
                        If `true`, retrieve the documents from user's Recent Matters.<br>
                        If `false`, retrieve the documents from all the folders accessible to the user.
                      default: false
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                    custom2:
                      type: string
                      description: |-
                        Alias for Custom2 property.
                    custom3:
                      type: string
                      description: |-
                        Alias for Custom3 property.
                    custom4:
                      type: string
                      description: |-
                        Alias for Custom4 property.
                    custom5:
                      type: string
                      description: |-
                        Alias for Custom5 property.
                    custom6:
                      type: string
                      description: |-
                        Alias for Custom6 property.
                    custom7:
                      type: string
                      description: |-
                        Alias for Custom7 property.
                    custom8:
                      type: string
                      description: |-
                        Alias for Custom8 property.
                    custom9:
                      type: string
                      description: |-
                        Alias for Custom9 property.
                    custom10:
                      type: string
                      description: |-
                        Alias for Custom10 property.
                    custom11:
                      type: string
                      description: |-
                        Alias for Custom11 property.
                    custom12:
                      type: string
                      description: |-
                        Alias for Custom12 property.
                    custom13:
                      type: string
                      description: |-
                        Contents of Custom13 property.
                    custom14:
                      type: string
                      description: |-
                        Contents of Custom14 property.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 property.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 property.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from property.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from property.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from property.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from property.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to property.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to property.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to property.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to property.
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Specifies a date range to search for, relative to the current date.<br>

                        This parameter is in the format `[begin]:[end][time units]`.<br>
                        The values are relative to each other, and do not refer to calendar dates.
                        For example, `-30:0d`, indicates a date range from 30 days prior to today
                        and up through the user's current date, measured in days.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Specifies a date range to search for, relative to the current date.<br><br>
                        For more information, see similar parameter `custom21_relative`.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Specifies a date range to search for, relative to the current date.<br><br>
                        For more information, see similar parameter `custom21_relative`.
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Specifies a date range to search for, relative to the current date.<br><br>
                        For more information, see similar parameter `custom21_relative`.
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Specifies to match with custom25 boolean property.
                    custom26:
                      type: boolean
                      description: |-
                        Specifies to match with custom26 boolean property.
                    custom27:
                      type: boolean
                      description: |-
                        Specifies to match with custom27 boolean property.
                    custom28:
                      type: boolean
                      description: |-
                        Specifies to match with custom28 boolean property.
                    custom29:
                      type: string
                      description: |-
                        Alias for custom29 property.
                    custom30:
                      type: string
                      description: |-
                        Alias for custom30 property.
                    name:
                      type: string
                      description: |-
                        A string to be found in the name of the documents.
                      example: contract
                    name_comments:
                      type: string
                      description: |-
                        A string to be found in the name or comments of the documents.
                      example: contract
                    document_number:
                      anyOf:
                      - type: string
                      - type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 123 "123" "123,124"
                    document_version:
                      anyOf:
                      - type: string
                      - type: integer
                      description: |-
                        Specifies the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1 "1" "1,2"
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |-
                        Returns documents created on or after this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:00Z"
                    create_date_to:
                      type: string
                      description: |-
                        Returns documents created on or before the date (in ISO 8601 format).
                      example: "2017-09-18T00:00:00Z"
                    alias:
                      type: string
                      description: |-
                        A string to be found in the alias of the documents.
                      example: litigation
                    sent_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Returns documents that have been sent between two dates.
                        The format is [begin]:[end][timescale]. The time scale is `d` for days, `m` for months, `y` for years.
                        These dates are relative to each other, and do not refer to calendar dates.
                        For example, `-30:0d` indicates the beginning date is 30 days prior to the current date (noted by the negative sign), and the end date is zero days from the current date, or from today.
                        `-30:-7d` indicates the beginning date is 30 days prior to the current date and the end date is seven days prior to the current date.
                        A positive number indicates a date in the future and the search is limited to the current date as appropriate and should be avoided.
                        For example, `-30:+7d` indicates the end date is seven days after the current date, a week in the future.<br>

                        This date stamp is modified by the `offset` parameter.
                      example: -30:0d
                    received_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        Returns documents that have been received between two dates.
                        The format is [begin]:[end][timescale]. The time scale is `d` for days, `m` for months, `y` for years.
                        These dates are relative to each other, and do not refer to calendar dates.
                        For example, `-30:0d` indicates the beginning date is 30 days prior to the current date (noted by the negative sign), and the end date is zero days from the current date (today's date).
                        `-30:-7d` indicates the beginning date is 30 days prior to the current date but the end date is seven days prior to the current date.
                        A positive number indicates a date in the future and the search is limited to the current date as appropriate and should be avoided.
                        For example, `-30:+7d` indicates the end date is seven days after the current date, a week in the future.<br><br>
                      example: -30:0d
                    has_attachment:
                      type: boolean
                      description: |
                        Specifies to return emails that have attachments.<br><br>
                        If `true`, the email must have at least one attachment.<br>
                        If `false`, the email cannot have any attachments.<br>
                        If this parameter is omitted, then attachment status is ignored and emails of either status may be returned.
                    subject:
                      type: string
                      description: |-
                        Specifies the text in subject of the emails.
                      example: important
                    sender:
                      type: string
                      description: |-
                        Specifies the text that appears in the sender field of emails.
                      example: johnson
                    recipient:
                      type: string
                      description: |-
                        Specifies the user ID that appears in the recipient properties of emails.
                      example: current resident
                    email_addresses:
                      type: array
                      items:
                        type: string
                      description: |-
                        Specifies email addresses to search for in the email address fields: `to`, `from`, `cc`, and `bcc`.<br><br>
                        This request returns emails containing any specified email address in any of the address fields.<br><br>
                        For example, if acase@ajubalaw.com appears in the `to` field of email1, and kthompson@ajubalaw.com appears
                        in the `from` field of email2, then the search with both the email addresses returns email1 and email2.<br>

                        Example:<br>
                        `"email_addresses": ["acase@ajubalaw.com", "kthompson@ajubalaw.com"]`
                    last_user:
                      type: string
                      description: |-
                        Specifies the user ID of the last user of the documents.
                      example: ACASE
                    checked_out:
                      type: boolean
                      description: |
                        Specifies to include only checked out documents in the search result.<br><br>
                        If `true`, includes only checked out documents in the search result.<br>
                        If `false`, includes all the documents regardless of checked out status.
                    in_use_by:
                      type: string
                      description: |-
                        Specifies to include only the documents that are in use by the provided user ID.
                      example: ACASE
                    in_use:
                      type: boolean
                      description: |-
                        Specifies to include only the documents in use.
                    exclude_shortcuts:
                      type: boolean
                      description: |
                        Specifies to exclude shortcuts to the document.<br><br>
                        If `true`, exclude document shortcuts.<br>
                        If `false`, include document shortcuts.
                      default: false
                    is_declared:
                      type: boolean
                      description: |
                        Specifies to include only documents that are declared as record.<br><br>
                        If `true`, include only documents declared as record.<br>
                        If `false`, include only documents that are not declared as record.<br>
                        If this parameter is omitted, then declared as record status is ignored and documents of either status are returned.
                    body:
                      type: string
                      description: |-
                        Specifies to search a string in the document's content.
                      example: litigation
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id570
                profile_fields:
                  document:
                  - name
                  - file_edit_date
                filters:
                  edit_date: -30:0d
                  type: WORD
                  author: ACASE
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Document Search Response
                required:
                - data
                - overflow
                type: object
                properties: &id571
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.document'
                    description: |-
                      Array of document profile fields returned in the response that are specified in the request body.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id572
                  data:
                  - id: Active!10001
                    wstype: document
                    name: Cover Letter
                    file_edit_date: '2018-06-04T12:11:53Z'
                  - id: Active!10002
                    wstype: document
                    name: Resume
                    file_edit_date: '2018-02-17T06:50:00Z'
                  overflow: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/reserve:
    description: |
      iManage Work Server provides an option to reserve the current available document number and version for later use. <br><br>
      The reserved document number is skipped and the next number is available for use.

      The document number and version are reserved for a iManage Work client application that requires them before importing a document.
      The reserved document number and version is then used while importing the document.<br>
      For example, the document number and version is to be updated in the document header and footer.
      It requires the document number and version before creating the document in iManage Work.
      Therefore, they are reserved and assigned to the document while importing it.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-reserve
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/reserve
      summary: Reserve document number and version
      description: |
        Requests the iManage Work Server to reserve the current document number and version, and returns the next available number for the specified library.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/reserve`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_reserve
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    document_number: 123706
                    version: 1
                required:
                - data
                type: object
                properties: &id1632
                  data:
                    required:
                    - document_number
                    - version
                    type: object
                    properties:
                      document_number:
                        type: integer
                        description: |-
                          Indicates the document number of a document.

                          Document number is the number assigned to a document when it is imported to iManage Work,
                          and appears as part of the document ID.<br>
                          Document ID is the combination of library ID, document number, and document version.<br>
                          For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      version:
                        type: integer
                        description: |-
                          Version number of the document.
                    additionalProperties: false
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/my-checked-out:
    description: |-
      These requests return all the checked-out documents of the current user from the specified library. <br><br> All the documents that a user has checked out of iManage Work are listed under **Checked Out Documents** in the iManage Work application to help the user find them easily. By checking-out, it locks the document and prevents other users from editing or updating the document copy. These checked-out documents are marked as "in use" by the current user.
      <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br> * To get a list of current user's checked-out documents with customized response, see POST `/customers/{customerId}/libraries/{libraryId}/documents/my-checked-out` * To get a list of all the checked-out documents, see GET `/customers/{customerId}/libraries/{libraryId}/documents/checked-out`
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-my-checked-out
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/my-checked-out
      summary: Get user's checked-out library documents
      description: |
        Returns all the checked-out documents of the current user. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the Microsoft Word documents in the `active_us` library that are checked-out by the current user:<br>

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/my-checked-out?type=WORD`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_my-checked-out
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
      - name: type
        in: query
        description: |
          Specifies the document type of the checked-out documents to be retrieved.<br><br>
          For example, WORD for Microsoft Word.
        schema:
          type: string
          example: WORD
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: CPIERCE
                    author_description: Carla Pierce
                    checkout_date: '2018-08-17T18:03:13Z'
                    class: A-NOTE
                    com_index: false
                    content_type: D
                    create_date: '2018-08-17T18:03:00.093Z'
                    custom1: '1077'
                    custom2: '4'
                    database: active_us
                    default_security: public
                    document_number: 52397
                    edit_date: '2018-08-17T18:03:00.093Z'
                    edit_profile_date: '2018-08-17T18:03:00.093Z'
                    email_type: false
                    extension: json
                    file_create_date: '2018-08-17T18:03:00.093Z'
                    file_edit_date: '2018-08-17T18:03:00.093Z'
                    has_attachment: false
                    id: active_us!52397.1
                    in_use_by: CPIERCE
                    in_use_by_description: Carla Pierce
                    indexable: false
                    isIndexed: false
                    is_checked_out: true
                    is_declared: false
                    is_hipaa: false
                    is_in_use: true
                    is_restorable: true
                    is_secured: 0
                    iwl: iwl:dms=ac1-dms.service.ajubalaw:9007&&lib=active_us&&num=52397&&ver=1
                    last_user: CPIERCE
                    last_user_description: Carla Pierce
                    name: Merge Reviewes
                    operator: CPIERCE
                    operator_description: Carla Pierce
                    pending_close: false
                    pending_irm: 0
                    retain_days: 10
                    size: 160
                    stream_rssid: 97802552485352732
                    type: JSON
                    version: 1
                    workspace_id: active_us!14243
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: CPIERCE
                    author_description: Carla Pierce
                    checkout_date: '2018-08-17T18:00:20Z'
                    class: A-NOTE
                    com_index: false
                    content_type: D
                    create_date: '2018-08-17T18:00:06.711Z'
                    custom1: '1077'
                    custom2: '4'
                    database: active_us
                    default_security: public
                    document_number: 52395
                    edit_date: '2018-08-17T18:00:06.711Z'
                    edit_profile_date: '2018-08-17T18:00:06.711Z'
                    email_type: false
                    extension: json
                    file_create_date: '2018-08-17T18:00:06.711Z'
                    file_edit_date: '2018-08-17T18:00:06.711Z'
                    has_attachment: false
                    id: active_us!52395.1
                    in_use_by: CPIERCE
                    in_use_by_description: Carla Pierce
                    indexable: false
                    isIndexed: false
                    is_checked_out: true
                    is_declared: false
                    is_hipaa: false
                    is_in_use: true
                    is_restorable: true
                    is_secured: 0
                    iwl: iwl:dms=ac1-dms.service.ajubalaw:9007&&lib=active_us&&num=52395&&ver=1
                    last_user: CPIERCE
                    last_user_description: Carla Pierce
                    name: Suggested Case Reviewers
                    operator: CPIERCE
                    operator_description: Carla Pierce
                    pending_close: false
                    pending_irm: 0
                    retain_days: 10
                    size: 160
                    stream_rssid: 97802552485352731
                    type: JSON
                    version: 1
                    workspace_id: active_us!14241
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  total_count: 2
                required:
                - data
                properties: &id791
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.document'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        400: *id003
        401: *id002
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-my-checked-out
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/my-checked-out
      summary: Scoped search for checked-out library documents
      description: |
        ## POST customers/{customerId}/libraries/{libraryId}/documents/my-checked-out
        Returns all the checked-out documents of the current user with the specified document profile fields in the response. <br><br>
        The GET search returns many fields, and not all may be required.
        This POST search request provides the option to specify only the fields of interest to return in the response. <br>

        By default, the response includes `id`, `wstype`, and `iwl`.<br>
        The other fields are returned by setting the `profile_fields` parameter. This parameter is optional. If omitted, only the default fields are returned.<br>
        The search criteria is defined using the `filters` parameter. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns up to 25 checked-out documents having `custom1` as `001`, and the specified `profile_fields` in the response:<br>

        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/my-checked-out` <br>

        Request body:
        ```
          {
            "limit":25,
            "profile_fields": {
              "document":[
                "name",
                "class",
                "edit_date",
                "create_date",
                "size",
                "type"
              ]
            },
            "filters": {
              "custom1": "001"
            }
          }
        ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_my-checked-out
      requestBody:
        content:
          application/json:
            schema:
              title: Checked Out Documents Request
              type: object
              properties: &id574
                limit:
                  type: integer
                  description: |-
                    Maximum number of documents to include in the response.
                  default: 500
                timezone_offset:
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    document:
                      type: array
                      items:
                        type: string
                      description: |-
                        The document profile fields to include in the response.
                  description: |
                    Specifies which document profile fields are to be returned in the response.

                    For example, the following returns `name` and `edit_date` for each document in the response.

                    ```
                    {
                      "profile_fields": {
                        "document": [
                          "name",
                          "edit_date"
                        ]
                      }
                    }
                    ```

                    The profile fields `id`, `iwl` and `wstype` are returned by default and they cannot be excluded from the response.
                filters:
                  type: object
                  properties:
                    edit_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    edit_date_from:
                      type: string
                      description: |-
                        Returns documents that were edited on or after this date (in ISO 8601 format).<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range. For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z. If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    edit_date_to:
                      type: string
                      description: |-
                        Returns documents that were edited on or before this date (in ISO 8601 format) .<br><br>
                        The two parameters of `edit_date_from` and `edit_date_to` can be used in combination to form a range.
                        For example, **edit_date_from=2017-08-12T11:53:40-07:00&edit_date_to=2018-04-23T18:49:23Z** would return documents edited on or after 2017-08-12T11:53:40-07:00 but before 2018-04-23T18:49:23Z.
                        If one parameter is omitted, the search would assume the current date for the other, if appropriate.
                      example: "2017-09-18T00:00:00Z"
                    type:
                      type: string
                      description: |-
                        Specifies documents of the document type.<br><br>

                        Each iManage Work system has a customizable list of document types per the organizational requirements.
                        For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*. <br>
                        These values are not necessarily the same as the document type's extension field, which may be *doc*, *docx*, *pdf*, or *ppt*.<br>
                        Document type is not case sensitive, that is, *Word* matches with *word*.<br>
                        There is no stemming and the wildcard character (&ast;) is not supported.
                        For example, *acrob* or *acrob&#42;* does not match *acrobat*.<br>
                        Multiple document types can be included using a comma-separated list.
                        For example, *type=WORD,WORDX,WORDXT*

                        <br>
                        To get a complete list of document types for a library, see GET `/customers/{customerId}/libraries/{libraryId}/types`.
                      example: type=WORD, or type=WORD,WORDX
                    anywhere:
                      type: string
                      description: |-
                        A string to be searched anywhere in the document profile or contents. This does not apply to folder searches.
                      example: litigation
                    author:
                      type: string
                      description: |-
                        The user ID of the document's author.
                      example: ACASE
                    operator:
                      type: string
                      description: |-
                        The user ID of the operator of the documents.
                      example: MARCIEDAVENPORT
                    owner:
                      type: string
                      description: |-
                        The user ID of the author or operator of the documents.
                      example: CPIERCE
                    comments:
                      type: string
                      description: |-
                        A string that appears in the comments of the results.
                      example: confidential
                    libraries:
                      type: string
                      description: |
                        Specifies which libraries to limit the query to.<br><br>

                        For example, `libraries=archive` only searches the *archive* library.
                        Multiple libraries can be specified using a comma-separated list.
                        For example, `libraries=archive,active`, searches the *archive* and `active` libraries.<br><br>
                        Library names are case insensitive.<br>
                        Neither the wildcard character (&ast;) nor stemming is supported.<br>
                        For example, `libraries=acti` and `libraries=act*` are not valid searches.
                        Therefore, the complete library name must be provided.<br><br>
                        If omitted, all libraries accessible to the user are included.
                      example: libraries=ACTIVE,ARCHIVE
                    custom1:
                      type: string
                      description: |-
                        Specifies a property alias to match in this custom property.

                        A property alias is an entry for that custom property.
                        For example, `custom1` can be captioned as *Client*.
                        It can have multiple entries, such as 001, 001abc, 001001. These are known as aliases of clients.
                        These aliases can be associated with client descriptions such as Ajubalaw, Microsoft, and Wallachs.

                        * This search is not case-sensitive.
                        * Partial matches are not supported.
                        * The wildcard character (&ast;) is not supported.
                    custom2:
                      type: string
                      description: |-
                        Alias for Custom2 field.
                    custom3:
                      type: string
                      description: |-
                        Alias for Custom3 field.
                    custom4:
                      type: string
                      description: |-
                        Alias for Custom4 field.
                    custom5:
                      type: string
                      description: |-
                        Alias for Custom5 field.
                    custom6:
                      type: string
                      description: |-
                        Alias for Custom6 field.
                    custom7:
                      type: string
                      description: |-
                        Alias for Custom7 field.
                    custom8:
                      type: string
                      description: |-
                        Alias for Custom8 field.
                    custom9:
                      type: string
                      description: |-
                        Alias for Custom9 field.
                    custom10:
                      type: string
                      description: |-
                        Alias for Custom10 field.
                    custom11:
                      type: string
                      description: |-
                        Alias for Custom11 field.
                    custom12:
                      type: string
                      description: |-
                        Alias for Custom12 field.
                    custom13:
                      type: string
                      description: |-
                        Contents of custom13 field.
                    custom14:
                      type: string
                      description: |-
                        Contents of custom14 field.
                    custom15:
                      type: string
                      description: |-
                        Contents of custom15 field.
                    custom16:
                      type: string
                      description: |-
                        Contents of custom16 field.
                    custom17:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom17 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom17 value to be searched for. For example, *custom17=10335*.|
                        | &lt; | Less than | The custom17 value to be searched for is less than the given value. For example, *custom17=&lt;10335*.|
                        | &gt; | Greater than | The custom17 value to be searched for is greater than the given value. For example, *custom17=&gt;10335*.|
                        | - | Range | The range of custom17 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom17=10330-10400*.|
                    custom18:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom18 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom18 value to be searched for. For example, *custom18=10335*.|
                        | &lt; | Less than | The custom18 value to be searched for is less than the given value. For example, *custom18=&lt;10335*.|
                        | &gt; | Greater than | The custom18 value to be searched for is greater than the given value. For example, *custom18=&gt;10335*.|
                        | - | Range | The range of custom18 value. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom18=10330-10400*.|
                    custom19:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom19 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom19 value to be searched for. For example, *custom19=10335*.|
                        | &lt; | Less than | The custom19 value to be searched for is less than the given value. For example, *custom19=&lt;10335*.|
                        | &gt; | Greater than | The custom19 value to be searched for is greater than the given value. For example, *custom19=&gt;10335*.|
                        | - | Range | The range of custom19 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom19=10330-10400*.|
                    custom20:
                      anyOf:
                      - type: string
                      - type: number
                      description: |-
                        Specifies a value or a range of values of the custom20 property to match.<br><br>

                        |Symbol|Value|Description|
                        |:---|:----|:---|
                        | = | Equal to | The exact custom20 value to be searched for. For example, *custom20=10335*.|
                        | &lt; | Less than | The custom20 value to be searched for is less than the given value. For example, *custom20=&lt;10335*.|
                        | &gt; | Greater than | The custom20 value to be searched for is greater than the given value. For example, *custom20=&gt;10335*.|
                        | - | Range | The range of custom20 values. This search includes both the lower and higher values specified in the range. This range must be in ascending order. For example, *custom20=10330-10400*.|
                    custom21_from:
                      type: string
                      description: |-
                        Contents of custom21_from field.
                    custom22_from:
                      type: string
                      description: |-
                        Contents of custom22_from field.
                    custom23_from:
                      type: string
                      description: |-
                        Contents of custom23_from field.
                    custom24_from:
                      type: string
                      description: |-
                        Contents of custom24_from field.
                    custom21_to:
                      type: string
                      description: |-
                        Contents of custom21_to field.
                    custom22_to:
                      type: string
                      description: |-
                        Contents of custom22_to field.
                    custom23_to:
                      type: string
                      description: |-
                        Contents of custom23_to field.
                    custom24_to:
                      type: string
                      description: |-
                        Contents of custom24_to field.
                    custom21_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom22_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom23_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom24_relative:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |
                        A date range in which the activity must have occurred.<br><br>
                        See the *Date Range format* section earlier.
                        For example, the value `-30:0d` indicates the date range must be from up to 30 days ago, to up to and including the current date.
                      example: -30:0d
                    custom25:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom26:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom27:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom28:
                      type: boolean
                      description: |-
                        Boolean custom field.
                    custom29:
                      type: string
                      description: |-
                        Alias of custom29 field.
                    custom30:
                      type: string
                      description: |-
                        Alias of custom30 field.
                    name:
                      type: string
                      description: |-
                        A string to be found in the name of the documents.
                      example: contract
                    name_or_description:
                      type: string
                      description: |
                        Specifies the text to search for in the `name` or `description` fields of iManage Work object.<br>

                        * This parameter is case insensitive.<br>
                        * Matches whole fields only and partial matches are not supported.
                          For example, for an object named *Enron Completion*, the search `name_or_description=Enron` does not match.
                          It must be specified as `name_or_description=Enron Completion`.
                        * The wildcard character (&ast;) is supported, and matches any number of contiguous characters, including spaces.<br>
                          To match partial fields, include the wildcard character (&ast;) before, after, or at both ends of the term.<br>
                          For example, all the following searches match with `litigation`:
                          * `name_or_description=litigation`
                          * `name_or_description=*gation`
                          * `name_or_description=litiga*`.
                      example: contract
                    document_number:
                      type: integer
                      description: |-
                        Indicates the document number of a document.

                        Document number is the number assigned to a document when it is imported to iManage Work,
                        and appears as part of the document ID.<br>
                        Document ID is the combination of library ID, document number, and document version.<br>
                        For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      example: 1
                    document_version:
                      type: integer
                      description: |-
                        Specifies the document version number.<br><br>
                        The document version number is the number of times a document has been edited.
                        For example, if the document ID is `active!72634.3`, the document version number is 3.<br><br>

                        When specifying document version numbers, either a single value can be included (`document_number=1`), or
                        a comma-separated list may be used to specify multiple document version numbers (`document_number=1,3`).
                      example: 1
                    create_date:
                      pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
                      type: string
                      description: |-
                        The date range is specified with the daterange notation, such as -30:0d.
                        The notation is set of two dates offsets that are relative to the current date.
                        For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

                        The format is:<br>
                        `[-][begin]:[-][end][timescale]`<br>

                        | Notation | Description |
                        |:--- |:---|
                        | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
                        | begin | The number of units (see timescale) prior to the current date to begin the range from. |
                        | end | The number of units (see timescale) prior to the current date to end the date range.  |
                        | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

                        The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
                        Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

                        The following are incorrect notations that result in error:
                         * An addition sign, such as `-30:+1d`
                         * A fraction value, such as `-30.5:1d`
                         * An end date before the begin date, such as `-7:-30d`

                        Examples:

                        | Notation | Description |
                        |:---:|:---|
                        | -30:0d | The range is from 30 days prior to the current date through the current date. |
                        | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
                        | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
                      example: -30:0d
                    create_date_from:
                      type: string
                      description: |-
                        Returns documents created on or after this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:03Z"
                    create_date_to:
                      type: string
                      description: |-
                        Returns documents created on or before this date (in ISO 8601 format).
                      example: "2017-09-18T00:00:04Z"
                    last_user:
                      type: string
                      description: |-
                        The user ID of the last user for the documents.
                      example: ACASE
                  description: |-
                    Specifies the filters, or the search criteria.<br><br>
                    If a `filters` parameter is not included, all items are returned.
                    If a `filters` parameter is included, returns only items matching all the filters.
                    For example, the following returns only items with a custom1 alias of *Enron* and has the name of *Acquisitions*.<br><br>

                    ```
                      {
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                      }
                    ```

                    The parameter `filters` is often combined with the parameter `profile_fields`, which returns specified fields in the response object.
                    The following example returns documents that meet the `filters` requirements.
                    If this is a workspace object, it also returns the fields `name` and `owner` in the response.

                    ```
                    {
                        "profile_fields" :
                        {
                          "workspace" :
                          [
                            "name",
                            "owner"
                          ]
                        },
                        "filters" :
                        {
                          "custom1" : "Enron",
                          "name"    : "Acquisitions"
                        }
                    }
                    ```
              example: &id575
                limit: 500
                timezone_offset: 300
                profile_fields:
                  document:
                  - in_use_by
                  - edit_date
                  - create_date
                  - size
                  - name
                  - type
                filters:
                  custom1: '1001'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Checked Out Documents Response
                required:
                - data
                - overflow
                type: object
                properties: &id576
                  data:
                    type: array
                    items:
                      type: object
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id577
                  data:
                  - create_date: '2018-07-18T15:18:04Z'
                    database: Active
                    edit_date: '2018-07-18T15:18:05Z'
                    id: Active!181518.1
                    in_use_by: ACASE
                    iwl: iwl:dms=dms.company.com&&lib=Active&&num=181518&&ver=1
                    name: Insurance Policy for Acme
                    size: 79897
                    type: WORDX
                    wstype: document
                  - create_date: '2018-05-16T14:48:26Z'
                    database: Active
                    edit_date: '2018-05-16T14:48:26Z'
                    id: Active!181556.1
                    in_use_by: ACASE
                    iwl: iwl:dms=dms.company.com&&lib=Active&&num=181556&&ver=1
                    name: TEST_checkout
                    size: 5
                    type: ANSI
                    wstype: document
                  overflow: false
        400: *id003
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/parents:
    description: |-
      Returns all the immediate parent folder numbers of the documents in the specified workspace.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-parents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/parents
      summary: Get parent folders of all documents in a workspace
      description: |
        Returns all the immediate parent folders of the documents in the specified workspace.

        The pairs of all the document numbers and their immediate parent folder numbers are returned.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the document numbers and their immediate parent folder number under the workspace `active_uk!9462`

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/documents/parents?root_id=active_uk!9462`

        Consider that the workspace `active_uk!9462` contains folder 9463 that has the subfolder 9464.
        If the document 33117 is contained under folder 9463 and the document 33118 under folder 9464,
        then this request returns the following response:

        ```
        {
           "data":[
              {
                 "document":33117,
                 "folder":9463
              },
              {
                 "document":33118,
                 "folder":9464
              }
           ]
        }
        ```

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_parents
      parameters:
      - *id004
      - *id083
      - *id134
      - name: root_id
        in: query
        description: |-
          Specifies the workspace ID to retrieve its documents and their immediate parent folder.
        schema:
          type: string
          example: active_uk!4321
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                - cursor
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.parent'
                  cursor:
                    type: string
                    description: |
                      The next position of the cursor returned by iManage Work Server.

                      It points to the document number and parent folder number pair of the last document returned in the response.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                    example: "11550;2569"
                example:
                  cursor: 11550;2569
                  data:
                  - document: 2564
                    folder: 11550
                  - document: 2566
                    folder: 11550
                  - document: 2569
                    folder: 11550
        400: *id003
        401: *id002
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-parents
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/parents
      summary: Get parent folders of specified documents
      description: |
        Returns a list of immediate parent folders of the specified documents.

        A document-folder relation is created when a document is uploaded to a folder or added as a reference to it.
        The sample use case for this request would be to identify the documents that are referenced in multiple folders.

        Important characteristics of this request:

        * The document numbers are passed to retrieve the respective parent folder numbers. The document ID is not accepted by this request.
        * The response returns information only about the documents that exist, and have document-folder relations.
        * If a document is referred in multiple folders, each document-folder relation is returned in the response.
        * An empty response is returned if all the specified documents do not exist, or they do not have document-folder relations.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_parents
      requestBody:
        content:
          application/json:
            schema:
              required:
              - document_numbers
              type: object
              properties: &id980
                limit:
                  type: integer
                  minimum: 1
                  maximum: 1000
                  description: |-
                    Specifies the maximum number of items to include in the response.

                    The request returns either the actual number of items if there are fewer than or equal to the `limit` value,
                    or the `limit` value if there are more items than the `limit` value.
                    <br>
                    This parameter may be used in conjunction with pagination parameters. For more information, see <a href="#overview--pagination">Pagination</a>.
                  default: 25
                  example: 100
                cursor:
                  type: string
                  description: |
                    Specifies the cursor value for retrieving the next page.

                    If it is not specified, the return set starts from the beginning.
                    A new cursor value is returned on subsequent requests.
                    <br>
                    For more information, see <a href="#overview--pagination">Pagination</a>.
                  example: "1000001"
                document_numbers:
                  type: array
                  minItems: 1
                  maxItems: 250
                  items:
                    type: integer
                  description: |
                    A comma-separated list of document numbers to find their immediate parent folders.
                  example: [222, 333]
                relation_fields:
                  type: array
                  items:
                    enum: ["create_date"]
                    type: string
                  description: |
                    Specifies the additional fields that should be present for each document-folder relation in the response body.

                    The following fields are returned by default:
                    * `document` - The document number.
                    * `folder` - The folder number.

                    The optional field `create_date` represents the date (in ISO 8601 format) when a document was uploaded or added as a reference to the folder.
                  example: ["create_date"]
              additionalProperties: false
              description: |-
                Represents a request for retrieving the parents of a list of items.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  cursor: '2004001'
                  data:
                  - document: 222
                    folder: 111
                    create_date: '2017-03-13T20:40:34Z'
                  - document: 222
                    folder: 112
                    create_date: '2020-11-13T20:40:34Z'
                required:
                - data
                type: object
                properties: &id981
                  cursor:
                    type: string
                    description: |
                      The cursor value to be used for the subsequent request to get document-folder relations.
                      The cursor is present only if additional items are available.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                    example: "2004001"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.parent'
                    description: |
                      List of document-folder relation records.
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/checked-out:
    description: |
      The users can check out individual documents from a library for using them outside of the iManage Work system.

      For working on a document, it is checked out of iManage Work and a local copy of it is created in the specified location on the local or network drive.
      The user can edit it in the local applications, and then check it back into iManage Work.<br>

      When a document is checked out of a library, other users have read-only access to the document until it is checked in.
      The document can be checked in with the same version that was checked out by replacing the original, as a new version, or as a new document. <br>

      <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
      To get a list of all the checked out documents by the current user, see GET `/customers/{customerId}/libraries/{libraryId}/documents/my-checked-out`
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-checked-out
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/checked-out
      summary: Get checked-out library documents
      description: |
        Returns all the checked out documents by a user.<br><br>
        The following request returns all the checked out documents by user ID CPIERCE: <br>

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/checked-out?user=cpierce`<br>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_checked-out
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
      - name: type
        in: query
        description: |-
          Specifies the document type of the checked out documents.
        schema:
          type: string
          example: WORD
      - name: user
        in: query
        description: |-
          Specifies the user ID who checked out documents.
        schema:
          type: string
          example: ACASE
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.document-checked-out'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - author: ACASE
                    checkout_date: '2018-01-10T17:03:45Z'
                    class: PAGE_ICON
                    content_type: D
                    create_date: '2017-12-18T10:01:30Z'
                    custom1: '1022'
                    custom13: তুমি কেমন আছো
                    custom14: 你好嗎
                    custom15: ajubalaw.com
                    custom16: ನೀವು ಹೇಗಿದ್ದೀರಿ
                    custom17: 12
                    custom18: 33
                    custom2: '008'
                    custom21: '2011-01-03T22:00:00Z'
                    custom22: '2012-05-21T22:00:00Z'
                    custom23: '2017-02-03T22:00:00Z'
                    custom27: false
                    custom28: true
                    custom29: ENERGY
                    custom3: ACTIVE
                    custom5: CHE
                    library: Archive
                    declared: false
                    default_security: private
                    document_number: 945
                    edit_date: '2017-12-18T10:01:30Z'
                    edit_profile_date: '2018-02-28T21:47:59Z'
                    extension: docx
                    file_create_date: '2017-12-11T17:03:34Z'
                    file_edit_date: '2017-12-11T17:03:34Z'
                    id: Archive!945.1
                    in_use: true
                    in_use_by: ACASE
                    in_use_by_description: Andrew Case
                    is_checked_out: true
                    is_declared: false
                    is_external: true
                    is_external_as_normal: false
                    is_hipaa: false
                    is_in_use: true
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE.ajubalaw.com&&lib=Archive&&num=945&&ver=1
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: ACASE
                    operator: ACASE
                    retain_days: 365
                    size: 18403
                    subclass: STANDARD
                    type: WORDX
                    version: 1
                    workspace_id: Archive!32
                    workspace_name: 1080.1000 - Larry Johnson Lawsuit
                    wstype: document
                  - author: ACASE
                    checkout_date: '2017-11-28T21:59:31Z'
                    class: DOC
                    content_type: D
                    create_date: '2017-08-03T12:49:50Z'
                    library: Archive
                    declared: false
                    default_security: private
                    document_number: 749
                    edit_date: '2017-08-03T12:49:50Z'
                    edit_profile_date: '2017-08-03T05:31:21Z'
                    extension: docx
                    file_create_date: '2017-08-03T05:31:21Z'
                    file_edit_date: '2017-08-03T05:31:21Z'
                    id: Archive!749.4
                    in_use: true
                    in_use_by: ACASE
                    in_use_by_description: Andrew Case
                    is_checked_out: true
                    is_declared: false
                    is_external: false
                    is_external_as_normal: false
                    is_hipaa: false
                    is_in_use: true
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE.ajubalaw.com&&lib=Archive&&num=749&&ver=4
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Hardcoded Passwords
                    operator: ACASE
                    retain_days: 365
                    size: 602161
                    type: WORDX
                    version: 4
                    workspace_id: Archive!68
                    workspace_name: 1081.1002 - Samsung
                    wstype: document
                  total_count: 2
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/checked-out/admin-import:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-checked-out-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/checked-out/admin-import
      summary: Import checked-out documents
      description: |
        Imports new documents into the checked out documents worklist.<br><br>
        The request marks the documents included in the list as checked out, if they are not checked out already.
        This request requires administrative privileges and allows an iManage Work system administrator to checkout documents on behalf of any user. <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request checks out the document with ID active!123.1 specified in the request body and adds it to checked out documents worklist.<br>

        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/checked-out/admin-import` <br>

        ```
         {
         "documents":
         	[
             {
         			"document_id": "Active!123.1",
         			"checkout_due_date" : "2019-07-18T00:00:00Z",
         			"checkout_path" : "C:\\NRPortbl\\ACTIVE\\ACASE\\123_1.pdf",
         			"checkout_portable" : false,
         			"checkout_comment" : "",
         			"app_name" : "THINCLIENT",
         			"checkout_location" : "CLIENTHOST",
         			"in_use_by" : "NRTADMIN"
         		}
         	]
         }
         ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_checked-out_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                documents:
                - document_id: Active!123.1
                  checkout_date: '2019-06-18T00:00:00Z'
                  checkout_due_date: '2019-07-18T00:00:00Z'
                  checkout_path: C:\NRPortbl\ACTIVE\ACASE\123_1.pdf
                  checkout_portable: false
                  checkout_comment: ''
                  app_name: THINCLIENT
                  checkout_location: CLIENTHOST
                  in_use_by: ACASE
              required:
              - documents
              type: object
              properties: &id1684
                documents:
                  type: array
                  items:
                    required:
                    - app_name
                    - checkout_date
                    - checkout_due_date
                    - checkout_path
                    - checkout_location
                    - checkout_portable
                    - document_id
                    - in_use_by
                    type: object
                    properties:
                      app_name:
                        type: string
                        description: |-
                          The name of the application that checked out the document.
                        example: THINCLIENT
                      checkout_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          The date (in ISO 8601 format) when the document was last checked out.
                      checkout_due_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Due date (in ISO 8601 format) for checkout.<br><br>
                          The document should be checked in by this date.
                      checkout_path:
                        type: string
                        description: |-
                          Path of the folder where the document is checked out. By default, it is checked out to NRPortbl folder for iManage Work classic clients.
                      checkout_comment:
                        type: string
                        description: |-
                          Additional information provided by the user when the document is checked out.
                      checkout_location:
                        type: string
                        description: |-
                          Name of the system where the document is to be checked out.
                      checkout_portable:
                        type: boolean
                        description: |-
                          Indicates if the document can be checked out in portable mode on your local machine, so that you can work on it when disconnected from the network.
                      document_id:
                        type: string
                        description: |-
                          The fully qualified identifier of the document. The document_id is the document number along with a library and a version number.
                        example: Active!123.1
                      in_use_by:
                        type: string
                        description: |-
                          The user ID who is currently working on the document or has checked it checked out.
                        example: ACASE
                  description: |-
                    List of documents to be checked out.
                import_id:
                  type: string
                  description: |-
                    Reserved. Do not use.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: ''
                    task_id: ''
                    status: completed
                required:
                - data
                type: object
                properties: &id1685
                  data:
                    type: object
                    properties:
                      import_id:
                        type: string
                        description: |-
                          Reserved. Do not use.
                      task_id:
                        type: string
                        description: |-
                          Reserved. Do not use.
                      status:
                        enum: [queued, completed, failed]
                        type: string
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}
      summary: Get document profile
      description: |
        Returns the profile of the specified document.

        The profile consists of document properties such as author, class, custom properties, default security, and so on.<br>
        If the parameter `include_operations` is `true`, it also returns a list of operations that the current user is allowed to perform on the document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access on a document to read its profile.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          A unique identifier of the document.
          If the query parameter `is_latest` is `true`, the latest version of a document is returned irrespective 
          of the version in the document ID.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      - name: include_operations
        in: query
        description: |
          Specifies to return a list of the user's allowed operations on the document.<br><br>
          If `true`, returns a list of allowed operations for the user on the document.<br>
          If `false`, does not return a list of allowed operations for the user on the document.
        schema:
          type: boolean
          default: false
      - name: is_latest
        in: query
        description: |
          Specifies if the latest document version is to be returned.<br><br>
          If `true`, returns the latest profile regardless of the version number specified in the endpoint parameter `docId`.<br>
          If `false`, returns the profile of the version number specified in the endpoint parameter `docId`.
        schema:
          type: boolean
          default: false
      - name: parent_id
        in: query
        description: |
          Specifies the ID of the parent container.<br><br>
          This can be a folder ID or workspace ID.
          The parent container can affect the operations allowed to be performed on the document.
        schema:
          type: string
      - name: profile_check
        in: query
        description: |
          Specifies if warnings for the missing required properties and disabled properties based on the folder's class should be returned.<br><br>
          If `true`, returns warnings for missing required fields and disabled fields.<br>
          If `false`, does not return warnings for missing required fields and disabled fields.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: KTHOMPSON
                    author_description: Kelly Thompson
                    author_info:
                      allow_logon: true
                      is_external: false
                    class: PLEADING
                    create_date: '2007-08-16T20:10:51Z'
                    custom1: '1000'
                    custom1_description: Enron Corporation
                    custom2: '001'
                    custom25: false
                    custom26: false
                    custom27: false
                    custom28: false
                    custom29: BANK
                    custom29_description: Bankruptcy
                    custom2_description: Chapter 11 Bankruptcy
                    custom3: OPEN
                    custom30: '106'
                    custom30_description: Chapter 11
                    custom3_description: Open
                    custom4: TX
                    custom4_description: Texas
                    database: Active
                    default_security: public
                    document_number: 31833
                    edit_date: '1999-10-16T12:11:53Z'
                    edit_profile_date: '2016-11-16T17:52:00Z'
                    extension: pdf
                    file_create_date: '2007-08-16T20:10:51Z'
                    file_edit_date: '1999-10-16T12:11:53Z'
                    has_attachment: false
                    id: Active!31833.1
                    is_in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=31833&&ver=1
                    last_user: KTHOMPSON
                    last_user_description: Kelly Thompson
                    last_user_info:
                      allow_logon: true
                      is_external: false
                    name: Motion for Joint Administration filed by Brian S. Rosen
                      on behalf of Enron Corp
                    operations:
                      archive: true
                      copy: true
                      create_new_version: true
                      declare: true
                      delete: true
                      freeze: true
                      lock: true
                      move: true
                      relate: true
                      replace: true
                      restore: false
                      set_security: true
                      undeclare: false
                      unfreeze: false
                      unlock: false
                      update: true
                    operator: KTHOMPSON
                    operator_description: Kelly Thompson
                    operator_info:
                      allow_logon: true
                      is_external: false
                    size: 18528
                    type: ACROBAT
                    version: 1
                    workspace_id: active_us!11448
                    wstype: document
                    lock_type: S
                    co_authors:
                    - Andrew Case
                    - Kelly Thompson
                    - John Doe
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: &id812
                  data:
                    properties:
                      operations:
                        required:
                        - archive
                        - copy
                        - create_new_version
                        - declare
                        - delete
                        - freeze
                        - lock
                        - move
                        - relate
                        - replace
                        - restore
                        - set_security
                        - undeclare
                        - unfreeze
                        - unlock
                        - update
                        - wopi_lock
                        type: object
                        properties:
                          archive:
                            type: boolean
                            description: |
                              Indicates if a document can be marked for archive.<br><br>
                              If `true`, the document can be marked for archive. <br>
                              When a documents is archived, it is copied to an archive location and marked as archived in the database.
                              Archived documents are stored collectively in archive sets. Document profile information of the archived documents is not
                              deleted from the database. The documents are removed from the file server to free storage space.<br>
                              If `false`, the document cannot be archived.
                          copy:
                            type: boolean
                            description: |
                              Indicates if a copy of the document can be created in another folder.<br><br>
                              If `true`, a copy of the document can be created in another folder.<br>
                              If `false`, a copy of the document cannot be created.
                          create_new_version:
                            type: boolean
                            description: |
                              Indicates if a new version of the document can be created.<br><br>
                              If `true`, a new version of the document can be created.<br>
                              If `false`, a new version of the document can be created.
                          declare:
                            type: boolean
                            description: |
                              Indicates if a document can be declared as a record. A document that is a record can no longer be edited or deleted, except by an administrator.<br><br>
                              If `true`, the document can be declared as a record.<br>
                              If `false`, the document cannot be declared a record.
                          delete:
                            type: boolean
                            description: |
                              Indicates if the document can be deleted.<br><br>
                              If `true`, the document can be deleted.<br>
                              If `false`, the document cannot be deleted.
                          freeze:
                            type: boolean
                            description: |
                              Indicates that the document can be frozen and cannot be edited further.<br><br>
                              If `true`, the document can be frozen and cannot be edited further.<br>
                              If `false`, the document cannot be frozen.
                          lock:
                            type: boolean
                            description: |
                              Indicates that the document can be checked out and locked so that it is not available to other users.<br><br>
                              If `true`, the document can be checked out and locked so that it is not available to other users.<br>
                              If `false`, the document cannot be locked.
                          move:
                            type: boolean
                            description: |
                              Indicates that the document can be moved to another folder.<br><br>
                              If `true`, the document can be moved to another folder.<br>
                              If `false`, the document cannot be moved to another folder.
                          relate:
                            type: boolean
                            description: |
                              Indicates if the document can be related to another document.
                              Relations can be created between documents to keep related documents together, such as a contract and any addenda to that contract.<br><br>
                              If `true`, the document can be related to another document.<br>
                              If `false`, the document cannot be related to another document.
                          replace:
                            type: boolean
                            description: |
                              Indicates if the document can be replaced by another document.<br><br>
                              If `true`, the document can be replaced by another document.<br>
                              If `false`, the document cannot be replaced by another document.
                          restore:
                            type: boolean
                            description: |
                              Indicates if the document can be restored if deleted.<br><br>
                              If `true`, the document can be restored if deleted.<br>
                              If `false`, the document cannot be restored.
                          set_security:
                            type: boolean
                            description: |
                              Indicates that new security settings can be assigned to the document.<br><br>
                              If `true`, new security settings can be assigned to the document.<br>
                              If `false`, security settings of the document cannot be changed.
                          undeclare:
                            type: boolean
                            description: |
                              Indicates you can undeclare the document marked as record. Undeclaring a document restores its status prior to declaration, and you can change its profile information.<br><br>
                              If `true, the document marked as record can be undeclared.<br>
                              If `false', the document cannot be undeclared.
                          unfreeze:
                            type: boolean
                            description: |
                              Indicates that the document can be unfrozen and can be edited.<br><br>
                              If `true`, the document can be unfrozen and can be edited.<br>
                              If `false`, the document cannot be unfrozen.
                          unlock:
                            type: boolean
                            description: |
                              Indicates that the document can be unlocked.<br><br>
                              If `true`, the document can be unlocked.<br>
                              If `false`, the document cannot be unlocked.
                          update:
                            type: boolean
                            description: |
                              Indicates that the document can be updated.<br><br>
                              If `true`, the document can be updated.<br>
                              If `false`, the document cannot be updated.
                          wopi_lock:
                            type: boolean
                            description: |
                              Indicates if the document can be locked for a co-authoring session.<br><br>
                              If `true`, the document can be locked for a co-authoring session.<br>
                              If `false`, the document cannot be locked for a co-authoring session.
                        additionalProperties: false
                      author_info:
                        description: Information about the author of this document.
                        type: object
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      last_user_info:
                        description: Information about the last user of this document.
                        type: object
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      operator_info:
                        description: Information about the operator of this document.
                        type: object
                        properties:
                          is_external:
                            type: boolean
                            description: |+
                              Indicates that  the user is an external user.

                              If `true`, the user is an external user.<br>
                              If `false`, the user is not an external user, also called a regular user.

                              For more information, see <a href="#overview--external-users"> External users</a>.

                          allow_logon:
                            type: boolean
                            description: |
                              Indicates if the user is allowed to sign in.

                              If `true`, the user is allowed to sign in.<br>
                              If `false`, the user is not allowed to sign in.
                      access:
                        type: string
                        description: |
                          Indicates  the access permissions to a document or container that is set by the owner or a user with full access.

                          The following are the possible values:

                          |Term|Value|Description|
                          |:---|:---|:---|
                          |no_access|0|The user has no permissions to access the container or document.|
                          |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                          |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                          |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                          |change_security|4|Reserved for system use. Do not use.|
                          |unknown|4|This is an error if received.|
                      access_time:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the date (in ISO 8601 format) when an activity was performed on the document.
                      activity_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the date (in ISO 8601 format) of the most recent activity performed on the document.
                      author: *id408
                      author_description: *id409
                      checksum: *id410
                      class: *id411
                      class_description: *id412
                      comment: *id413
                      content_type: *id414
                      create_date: *id415
                      custom1: *id416
                      custom1_description: *id417
                      custom2: *id418
                      custom2_description: *id419
                      custom3: *id420
                      custom3_description: *id421
                      custom4: *id422
                      custom4_description: *id423
                      custom5: *id424
                      custom5_description: *id425
                      custom6: *id426
                      custom6_description: *id427
                      custom7: *id428
                      custom7_description: *id429
                      custom8: *id430
                      custom8_description: *id431
                      custom9: *id432
                      custom9_description: *id433
                      custom10: *id434
                      custom10_description: *id435
                      custom11: *id436
                      custom11_description: *id437
                      custom12: *id438
                      custom12_description: *id439
                      custom13: *id440
                      custom14: *id441
                      custom15: *id442
                      custom16: *id443
                      custom17: *id444
                      custom18: *id445
                      custom19: *id446
                      custom20: *id447
                      custom21: *id448
                      custom22: *id449
                      custom23: *id450
                      custom24: *id451
                      custom25: *id452
                      custom26: *id453
                      custom27: *id454
                      custom28: *id455
                      custom29: *id456
                      custom29_description: *id457
                      custom30: *id458
                      custom30_description: *id459
                      custom31: *id460
                      custom31_description: *id461
                      database: *id462
                      declared_date: *id463
                      default_security: *id464
                      document_number: *id465
                      edit_date: *id466
                      edit_profile_date: *id467
                      extension: *id468
                      file_create_date: *id469
                      file_edit_date: *id470
                      id: *id471
                      is_in_use: *id472
                      in_use_by: *id473
                      in_use_by_description: *id474
                      is_checked_out: *id475
                      is_declared: *id476
                      is_external: *id477
                      is_external_as_normal: *id478
                      is_hipaa: *id479
                      is_related: *id480
                      is_restorable: *id481
                      iwl: *id482
                      last_user: *id483
                      last_user_description: *id484
                      name: *id485
                      operator: *id486
                      operator_description: *id487
                      retain_days: *id488
                      size: *id489
                      subclass: *id490
                      subclass_description: *id491
                      type: *id492
                      type_description: *id493
                      version: *id494
                      workspace_id: *id495
                      workspace_name: *id496
                      wstype: *id497
                      bcc: *id498
                      cc: *id499
                      conversation_id: *id500
                      conversation_name: *id501
                      from: *id502
                      has_attachment: *id503
                      received_date: *id504
                      sent_date: *id505
                      to: *id506
                      lock_type: *id507
                      co_authors: *id508
                      wopi_file_size_limit: *id509
                      wopi_file_size_warning: *id510
                    additionalProperties: true
                    required:
                    - author
                    - create_date
                    - database
                    - default_security
                    - document_number
                    - extension
                    - file_create_date
                    - file_edit_date
                    - id
                    - is_hipaa
                    - iwl
                    - size
                    - type
                    - version
                    type: object
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.warning'
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    delete:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/documents/{docId}
      summary: Delete a document
      description: |-
        Deletes the document associated with the specified document ID.

        The following cannot be deleted:
        * A checked-out document.
        * A document that is declared as a record.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To be able to delete a document, the `delete` operation must be set to `true` for the user.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get the list of operations allowed on a document, see <a href="/#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/operations">GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/operations`

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_documents_{docId}
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          A unique identifier of the document.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
    patch:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/documents/{docId}
      summary: Update document profile
      description: |-
        Updates the profile of the specified document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To be able to update a document, the `update` operation must be set to `true` for the user.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The profile of a checked out document cannot be updated. Therefore, a document must not be in use while updating its profile.
        * The profile of a document that is declared as a record cannot be updated.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To get the list of operations allowed on a document, see <a href="/#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/operations">GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/operations`

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_documents_{docId}
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          A unique identifier of the document.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                author: ACASE
                class: DOC
                custom1: '0999'
                custom3: ACTIVE
                custom4: CA
                default_security: private
                extension: doc
                file_create_date: '2017-04-14T21:05:03Z'
                file_edit_date: '2017-04-14T21:05:03Z'
                is_declared: true
                is_checked_out: false
                is_hipaa: false
                name: Andrew Case Employment Agreement.pdf
                operator: ACASE
                warnings_for_required_and_disabled_fields: true
              type: object
              properties: &id806
                alias:
                  type: string
                  description: |-
                    Specifies either a reference to a migrated document identifier or the document name. <br>
                    iManage Classic client applications use this property as the document name.
                audit:
                  description: |-
                    Specifies the audit information. It is used to track the document history.
                  type: object
                  properties: &id699
                    comments:
                      type: string
                      description: |-
                        Additional information about the update.
                  additionalProperties: true
                author:
                  type: string
                  description: |-
                    Specifies the ID of the user who created the document.
                class:
                  type: string
                  description: |-
                    Specifies the classification for identifying and differentiating the document.<br>
                    Document class is categorized by genre, department, region, and so on.
                comment:
                  type: string
                  maxLength: 8000
                  description: |-
                    Specifies any additional information about the document.
                content_type:
                  type: string
                  description: |-
                    Specifies the document content type.
                      * `D` represents normal documents.
                      * `5` represents OLE documents.
                custom1:
                  type: string
                  description: |-
                    Specifies the alias for the `custom1` property. The `custom1` property is the parent of `custom2` property.
                custom2:
                  type: string
                  description: |-
                    Specifies the alias for the `custom2` property. The `custom2` property is the child of `custom1` property.
                custom3:
                  type: string
                  description: |-
                    Specifies the alias for the `custom3` property.
                custom4:
                  type: string
                  description: |-
                    Specifies the alias for the `custom4` property.
                custom5:
                  type: string
                  description: |-
                    Specifies the alias for the `custom5` property.
                custom6:
                  type: string
                  description: |-
                    Specifies the alias for the `custom6` property.
                custom7:
                  type: string
                  description: |-
                    Specifies the alias for the `custom7` property.
                custom8:
                  type: string
                  description: |-
                    Specifies the alias for the `custom8` property.
                custom9:
                  type: string
                  description: |-
                    Specifies the alias for the `custom9` property.
                custom10:
                  type: string
                  description: |-
                    Specifies the alias for the `custom10` property.
                custom11:
                  type: string
                  description: |-
                    Specifies the alias for the `custom11` property.
                custom12:
                  type: string
                  description: |-
                    Specifies the alias for the `custom12` property.
                custom13:
                  type: string
                  description: |-
                    Specifies the value of the `custom13` property.
                custom14:
                  type: string
                  description: |-
                    Specifies the value of the `custom14` property.
                custom15:
                  type: string
                  description: |-
                    Specifies the value of the `custom15` property.
                custom16:
                  type: string
                  description: |-
                    Specifies the value of the `custom16` property.
                custom17:
                  type: number
                  description: |-
                    Specifies the value of the `custom17` property.
                  format: double
                custom18:
                  type: number
                  description: |-
                    Specifies the value of the `custom18` property.
                  format: double
                custom19:
                  type: number
                  description: |-
                    Specifies the value of the `custom19` property.
                  format: double
                custom20:
                  type: number
                  description: |-
                    Specifies the value of the `custom20` property.
                  format: double
                custom21:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom21` property in ISO 8601 date format.
                custom22:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom22` property in ISO 8601 date format.
                custom23:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom22` property in ISO 8601 date format.
                custom24:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the value of the `custom24` property in ISO 8601 date format.
                custom25:
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom25` property.
                custom26:
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom26` property.
                custom27:
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom27` property.
                custom28:
                  type: boolean
                  description: |-
                    Specifies the boolean value of the `custom28` property.
                custom29:
                  type: string
                  description: |-
                    Specifies the alias of the `custom29` property. The `custom29` property is the parent of `custom30` property.
                custom30:
                  type: string
                  description: |-
                    Specifies the alias of the `custom30` property. The `custom30` property is the child of `custom29` property.
                custom31:
                  type: string
                  description: |-
                    Reserved. Do not use.
                default_security:
                  enum: ["public", "private", "view"]
                  type: string
                  description: |
                    Specifies the default security level of a document.

                    |Value|Description|
                    |---|---|
                    |view|All users have read-only access to the document, unless they are explicitly denied access (`no_access`) or granted access level of `read_write` or `full_access`.|
                    |private|Only viewable by the user who created the document, and other users or groups to whom access is granted explicitly.|
                    |public|All users can view and edit the document unless explicitly excluded.|
                extension:
                  type: string
                  description: |
                    Specifies the file name extension, also called the application extension, of the document.<br><br>
                    For example, doc, xls, pdf are some of the file extensions.
                file_create_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |
                    Specifies the date (in ISO 8601 format) when the file was created.<br><br>
                    The file could have been created outside of the iManage Work system.
                    This date can be different than the `create_date`.
                    The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
                file_edit_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |
                    Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
                    The file could have been edited before being uploaded into the iManage Work system.
                is_checked_out:
                  type: boolean
                  description: |
                    Specifies that the document is currently checked out.<br><br>
                    If `true`, the document is currently checked out.<br>
                    If `false`, the document is not currently checked out.
                is_declared:
                  type: boolean
                  description: |
                    Specifies to declare a document as a record.

                    A document that is declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br>
                    If `true`, the document is declared as a record and the field `declared_date` is automatically set to the current date.<br>
                    If `false`, the document is not declared as a record. <br><br>

                is_hipaa:
                  type: boolean
                  description: |-
                    Specifies the document is to be encrypted.<br><br>
                    If `true`, the document is to be encrypted.<br>
                    If `false`, the document is not to be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
                name:
                  type: string
                  description: |-
                    Specifies the file name of the document.
                operator:
                  type: string
                  description: |-
                    Specifies the ID of the user who has checked out the document or is currently editing its profile.
                retain_days:
                  type: integer
                  description: |-
                    Specifies the number of days before the inactive document is eligible for archiving.
                subclass:
                  type: string
                  description: |-
                    Specifies the sub-category of a document class.

                    For example, 'Employment Letter' can be a subclass of the 'Human Resources' document class.
                type:
                  type: string
                  description: |
                    Specifies the document type.

                    For example, WORD for Microsoft Word, PDF for Adobe Acrobat Reader, TXT for Windows ANSI Text, and so on.
                warnings_for_required_and_disabled_fields:
                  type: boolean
                  description: |
                    Specifies to include warnings if required fields are missing, or disabled fields are included.<br><br>
                    If `true`, warnings are included, and the request will attempt to complete.<br>
                    If `false`, warnings are not included, and the request will fail if any are present.
                  default: false
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:13:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: private
                    document_number: 110280
                    edit_date: '2017-03-13T21:14:43Z'
                    edit_profile_date: '2017-03-13T21:14:43Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.3
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE&&lib=Active&&num=110280&&ver=3
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 3
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  warnings:
                  - error: required
                    field: subclass
                required:
                - data
                type: object
                properties: *id396
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id511
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions:
    description: |
      iManage Work saves multiple versions of a document.<br><br>
      When a document is imported that already exists in iManage Work library, a new version is created for the imported document.
      iManage Work automatically checks out the existing document in order to create and check in the new version of a document.
      The existing document and new document retain the same document number with different version numbers.
      The next highest version number is assigned to the new version of the document.<br>
      For example, if version 1 of a document currently exists, then the new version of the document is created as version 2,
      but the document number remains same.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-versions
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions
      summary: Get document versions
      description: |
        Returns the profiles of all the versions of a document.<br><br>
        Regardless of the version number specified in the `docId` parameter, details about all the versions of a document are returned.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the versions of the document number `123` regardless of the version number specified in the `docId`:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.4/versions`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_versions
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:13:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: private
                    document_number: 110280
                    edit_date: '2017-03-13T21:14:43Z'
                    edit_profile_date: '2017-03-13T21:14:43Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.3
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=3
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 3
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:12:30Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:13:22Z'
                    edit_profile_date: '2017-03-13T21:13:22Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.2
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=2
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 2
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T20:40:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:12:14Z'
                    edit_profile_date: '2017-03-13T21:12:14Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.1
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=1
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id407
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    post:
      tags:
      - Documents
  #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-versions
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions
      summary: Create new version of document
      description: |
        Creates a new version of the document. <br><br>
        If the document profile in the request has a checksum value, it is compared with the newly generated checksum for new version of document. <br>
        If the checksum values do not match, the operation fails.
        If the document profile does not have a checksum, the validation is not performed.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a new version of document `Active!123.4` with document ID as `Active!123.5`:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.4/versions` <br>

        Request body:<br>
        The document `profile` and `file` path must be provided as `multipart/form-data`. The document is imported with new version as 4.<br>
        ```
        profile:
        {
           "doc_profile":{
              "access":"full_access",
              "author":"ACASE",
              "author_description":"Andrew Case",
              "class":"DOC",
              "class_description":"Document",
              "comment":"Version 3",
              "content_type":"D",
              "create_date":"2020-01-28T06:54:18Z",
              "database":"Active",
              "default_security":"public",
              "document_number":123,
              "email_type":false,
              "extension":"docx",
              "last_user":"ACASE",
              "last_user_description":"Andrew Case",
              "name":"Agreement",
              "retain_days":365,
              "size":119354,
              "type":"WORDX",
              "type_description":"WORD 2010",
              "version":3,
              "workspace_id":"Active!1528971",
              "workspace_name":"Labor Practice",
              "wstype":"document"
           },
           "warnings_for_required_and_disabled_fields":true
        },
        "file": "C:\files\Agreement.docx"
        }
        ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_versions
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - profile
              - file
              properties:
                profile:
                  example:
                    doc_profile:
                      author: MARCIEDAVENPORT
                      class: E-MAIL
                      extension: MSG
                      type: MIME
                    user_trustees: []
                    group_trustees: []
                    warnings_for_required_and_disabled_fields: true
                  required:
                  - doc_profile
                  - group_trustees
                  - user_trustees
                  type: object
                  properties: &id979
                    audit:
                      $ref: '#/components/schemas/Documents.auditEntryPartial'
                    doc_profile:
                      type: object
                      properties:
                        author:
                          type: string
                        checksum:
                          type: string
                          description: |
                            Indicates the value of the document's checksum.

                            The document checksum is a calculated value based the document's content.
                            It is used to verify the integrity of a document content during transfer.

                            During a file upload, the checksum of the content is calculated and saved along with the document profile.
                            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
                            If the checksum values do not match, the request fails.
                            If the document profile in the request does not include checksum property, the comparison is not performed.

                            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                        class:
                          type: string
                          description: |-
                            Classification for identifying and differentiating the document. Document class is categorized by genre, department, region, and so on.
                          example: EMAIL
                        extension:
                          type: string
                          description: |-
                            File extension of the document.
                          example: MSG
                        type:
                          type: string
                          description: |-
                            Type of the document which is used by the iManage Work Server to associate it to an application to open and edit. For example, WORD for Microsoft Word.
                          example: MIME
                      additionalProperties: false
                    group_trustees:
                      type: array
                      items: *id395
                      description: |-
                        List of groups and their access permissions.
                    keep_locked:
                      type: boolean
                      description: |-
                        Is `true` if the document should be kept as locked
                      default: false
                    user_trustees:
                      type: array
                      items: *id394
                      description: |-
                        List of users and their access permissions.
                    inherit_profile_from_previous_version:
                      type: boolean
                      description: |
                        Specifies to inherit profile data from the document version mentioned in the endpoint.<br><br>
                        If `true`, the missing fields in the document profile are copied from the document version specified in the endpoint. <br>
                        If `false`, the missing fields in the document profile are not copied from the previous version of the document.
                      default: true
                    warnings_for_required_and_disabled_fields:
                      type: boolean
                      description: |
                        Specifies to include warnings if required fields are missing, or disabled fields are included.<br><br>
                        If `true`, warnings are included, and the request will attempt to complete.<br>
                        If `false`, warnings are not included, and the request will fail if any are present.
                      default: false
                  additionalProperties: true
                  description: |-
                    Describes a create request for a new document version.
                file:
                  type: string
                  description: |-
                    The document to be uploaded.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:13:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: private
                    document_number: 110280
                    edit_date: '2017-03-13T21:14:43Z'
                    edit_profile_date: '2017-03-13T21:14:43Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.3
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=3
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 3
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:12:30Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:13:22Z'
                    edit_profile_date: '2017-03-13T21:13:22Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.2
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=2
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 2
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T20:40:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:12:14Z'
                    edit_profile_date: '2017-03-13T21:12:14Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.1
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=1
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id407
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/promote:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-versions-promote
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/promote
      summary: Promote document version
      description: |-
        Creates a new version of the document from an existing saved state of the contents of the document.

        This request may not be available for all environments.
        To check the availability of this feature, use GET `/customers/{customerId}/features`.<br>
        If `promote_journal` is `true`, this feature is available.<br>
        Additionally, if `copy_as_new_version` is `true`, this request can be used to copy an existing version as a new version.

        A document state can be promoted by specifying one of the following:
        * `journal_id` - the ID of an entry from the document's history.
        * `version`

        Note: One of these two parameters must be specified. Specifying both of these parameters is not allowed.

        If the promotion operation is delayed, the response may contain a `status` array. The entries in this array will be
        sent by the server one at a time - each one indicating the latest progress of the operation. Upon completion of
        the operation, the remainder of the response will be sent.

        **Promoting a document state using `journal_id`:**<br>
        Journaling preserves a copy of the document's contents for each change that is saved, regardless of whether a new
        version is created. Every saved state of a document's contents is a **journal**.

        Most actions performed on a document create history entries for that document. When retrieving a document's history,
        some entries will have the property `has_journal` equal to true. This means that the history entry is a reference to
        a journal. The ID of such a history entry is a `journal_id` and can be used with this request.

        The following operations in a document's history hold a reference to a journal
        * **Save and Sync** operation that overwrites the current version of the document
        * **Print** operation
        * **Edit** operation

        Note: A **Save and Sync** operation creates a new journal. However, the history entry created as a result of this
        operation points to the journal containing the document's contents as they were **prior** to the Save and Sync operation.
        In other words, it points to the previous journal. Hence, the intention of calling this request with a `journal_id` is
        to effectively revert the action referenced by the given `journal_id`.

        When promoting using `journal_id`, the new document profile will be constructed as follows:
        * `type` and `extension` will be inherited from the journal being promoted.
        * `operator` and `operator_description` will be the user making the promote request.
        * `last_user` and `last_user_description` will be the user making the promote request.
        * The following date/time fields will be set to the time of the request:
          * `create_date`
          * `edit_date`
          * `edit_profile_date`
          * `file_create_date`
          * `file_edit_date`
        * Values for all remaining profile fields can be provided using the `doc_profile` parameter of this request.
        If not provided, they will be inherited from the latest version visible to the user making the promote request.

        Users can promote a document's state using `journal_id` only if both of the conditions below are satisifed:
        * They have at least Read/Write access to the version of the document identified by the `journal_id`.
        * The latest version of the document is not checked out.

        *Example use case: promoting an un-versioned change*<br>
        A user has edited and saved a document multiple times, prior to checking it in as a new version. They now want
        to revert some of the last changes they saved before checking in. This can be accomplished through this request,
        by providing the `journal_id` of the earliest unwated change. A new version of the document will be created,
        whose contents will be the same as they were prior to the action referenced by the provided `journal_id`.

        **Promoting a document state using `version`:**<br>
        This is useful if the desired state of the document's contents is not an intermediate journal but an actual
        document version.

        When promoting using `version`, the new document profile will be constructed as follows:
        * `type` and `extension` will be inherited from the version being promoted.
        * `operator` and `operator_description` will be the user making the promote request.
        * `last_user` and `last_user_description` will be the user making the promote request.
        * The following date/time fields will be set to the time of the request:
          * `create_date`
          * `edit_date`
          * `edit_profile_date`
          * `file_create_date`
          * `file_edit_date`
        * Values for all remaining profile fields can be provided using the `doc_profile` parameter of this request.
        If not provided, they will be inherited from the version being promoted.

        Users can promote a document's state by version only if both of the conditions below are satisifed:
        * They have at least Read/Write access to the specified version of the document.
        * The latest version of the document is not checked out.

        *Example use case: promoting an older version*<br>
        An older version of the document has the desired state. This request can be used to promote that state to
        the latest verison.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To retrieve a document's history, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history`<br>
        To retrieve the document profiles of every version of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions`

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request promotes the specified journal entry as the latest version of document 123 in the active_us library:
        Note that the document version in the path is not relevant to this operation.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/active_us!123.2/versions/promote`<br>
        Request body:
        ```
        {
           "journal_id": "98771417969018171",
           "doc_profile": {
              "name": "Audit Engagement Contract",
              "comment": "Promoted the revision from June 18th at 2020-06-18T16:50:15.392+05:30 to latest version",
              "author": "ACASE",
              "class": "DOC",
              "default_security": "public"
           },
           "warnings_for_required_and_disabled_fields": true
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request promotes the specified version as the latest version of document 123 in the active_us library:
        Note that the document version in the URL path is not relevant to this operation. Only the version in the request body is used.<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/active_us!123.2/versions/promote`<br>
        Request body:
        ```
        {
           "version": 5,
           "doc_profile": {
              "name": "Audit Engagement Contract",
              "comment": "Promoted version 5 to latest version",
              "author": "ACASE",
              "class": "DOC",
              "default_security": "public"
           },
           "warnings_for_required_and_disabled_fields": true
        }
        ```

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_versions_promote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              anyOf:
              - &id800
                $ref: '#/components/schemas/Documents.documentDocIdVersionPromoteByJournalId'
              - &id801
                $ref: '#/components/schemas/Documents.documentDocIdVersionPromoteByVersion'
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: CPIERCE
                    author_description: Carla Pierce
                    class: DOC
                    class_description: Document
                    custom1: ACME
                    comment: Promoted the revision from Sept 19th. The version was
                      promoted at 2019-10-08 14:26Z
                    content_type: D
                    create_date: '2019-10-06T18:44:26Z'
                    database: Active
                    default_security: public
                    document_number: 52393
                    edit_date: '2019-10-07T18:44:26Z'
                    edit_profile_date: '2019-10-07T18:44:26Z'
                    email_type: false
                    extension: docx
                    file_create_date: '2019-10-05T18:44:26Z'
                    file_edit_date: '2019-10-05T18:44:26Z'
                    id: Active!52393.19
                    indexable: false
                    is_checked_out: false
                    is_declared: false
                    is_hipaa: false
                    is_in_use: false
                    is_related: false
                    is_restorable: true
                    iwl: iwl:dms=atlas.imanage.com&&lib=Active&&num=52393&&ver=19
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Trial Preparation Notes
                    operator: ACASE
                    operator_description: Andrew Case
                    retain_days: 365
                    size: 11653
                    type: WORDX
                    type_description: WORD 2010
                    version: 19
                    workspace_id: ACTIVE!14237
                    workspace_name: test
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  warnings:
                  - error: disabled
                    field: author
                required:
                - data
                type: object
                properties: &id802
                  data:
                    allOf:
                    - $ref: '#/components/schemas/Documents.document'
                    - type: object
                      properties:
                        status:
                          type: array
                          items:
                            required:
                            - bytes_copied
                            - file_size
                            type: object
                            properties:
                              bytes_copied:
                                type: integer
                                description: |-
                                  Number of bytes copied.
                              file_size:
                                type: integer
                                description: |-
                                  The source document stream's size in bytes.
                          description: |-
                            An array of document promotion status details.

                            If the operation is ongoing, this field will be present in order to indicate the operation's progress.
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.warning'
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453456.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/latest:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-versions-latest
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/latest
      summary: Get latest document version number
      description: |
        Returns the latest version of a document.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the latest version of the document: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.4/latest`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_versions_latest
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: Active!31869.17
                required:
                - data
                type: object
                properties: &id512
                  data:
                    required:
                    - id
                    type: object
                    properties:
                      id:
                        type: string
                        description: |
                          ID assigned to a document by iManage Work Server.<br>
                          A document ID is the combination of library name, document number, and the version number.
                          The library name and document number are separated by an exclamation mark. <br>
                          For example, *Active!188240.1* where library name is Active, document number is 188240, and version number is 1.
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/next:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-versions-next
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/versions/next
      summary: Get next document version number
      description: |
        Returns the next version for the document associated with the specified document ID.<br><br>
        The new value is based on the current latest version of the document.
        For example, if the current version of a document is 4, then the next version of the document is 5.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the next version for the document: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.4/next`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_versions_next
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: Active!31869.17
                required:
                - data
                type: object
                properties: *id512
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/users:
    description: |
      The access permissions available to a user on a document. <br><br>
      The owner of a document or a user with full access to it can assign specific access permission to individual users.
      These access permissions granted to users are exceptions to the default security levels.
      For example, if a document’s default security is public, then all the users implicitly have read access to it.
      However, a user explicitly granted no access cannot see the public document.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/users/{userId}:
    description: |-
      The user ID whose access permission are to be retrieved.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/users/{userId}/security:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-users-{userId}-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/users/{userId}/security
      summary: Get user access on document
      description: |
        Returns the access permission of a user for the document.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the access rights of user ACASE on the document ACTIVE!123.1:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/users/acase/security`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_users_{userId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                required:
                - data
                type: object
                properties: &id861
                  data:
                    properties:
                      access:
                        enum: ["full_access", "read_write", "read", "no_access"]
                        type: string
                        description: |
                          The access permissions available to a user on a document.

                          The available access levels are:<br>

                          |Access level|Description|
                          |:---|:---|
                          |no_access|The user has no access or any permissions to the document.|
                          |read|The user can read the document but cannot edit it.|
                          |read_write|The user can read and edit a document.|
                          |full_access|The user has complete access to the document, and can read, edit, or delete it. The user can grant permissions to other users/groups, and also edit the item default security levels.|
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: userId
      in: path
      description: |
        The user ID. <br>
        This is not case sensitive.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/undeclare:
    description: |
      Undeclaring a document reverts it to an active document. It restores the document to the status prior to declaring it as a record.
      The document can then be edited, deleted, or its profile information can be updated.<br><br>
      The user must have read/write permissions to a document to undeclare it.
      However, a document can be undeclared only within a specific period of time from after it was declared.
      After this time period expires, the document cannot be undeclared. This time period is configured by an iManage Work system administrator.<br>
      When a document is declared a record, the action is recorded in the document’s history.<br>
    put:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-undeclare
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/documents/{docId}/undeclare
      summary: Undeclare a record
      description: |
        Undeclares a record, reverting the {docId} back to an active document.<br><br>
        No response object is returned.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To declare a document as a record, see PUT `/libraries/{libraryId}/documents/{docId}/declare`
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_documents_{docId}_undeclare
      responses:
        200:
          description: Returns an empty body to the client.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/share:
    description: |
      Sends a copy of a document, its iManage Work link (iWL), nrl, or HTTPS link to a document through email, to the specified users. <br><br>
      The recipient can use these links to view the document in iManage Work desktop clients or web application.
      The recipient must have rights to access the document directly from the iManage Work system to use the links.<br>

      Both a copy of the document and its links can also be sent in an email with this request by setting the appropriate request body parameter values. <br>
      For example, if `attach_to_email` is set to `true`, the document is attached to email.
      For more information on the available body parameters, see Body section under POST request.<br>

      A custom text message for the recipients can also be sent in the email. <br>
      If the request is successful, an empty response body is returned.<br>
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-share
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/share
      summary: Share a document
      description: |
        Sends an email with the copy of a document as an attachment, and/or its iManage Work links, to the specified recipients.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following POST request sends an email with the document associated with ID active!123.1 as an attachment to the recipient. <br>

        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/share` <br>

        Request body: <br>
        ```
        {
          "to"             : [
            {
              "address": "tom.jerry@ajubalaw.com",
              "name"   : "Tom Jerry"
            }
          ],
          "message"        : "This might be of interest to you, Tom",
          "attach_to_email": true,
          "send_iwl"       : false
        }
        ```
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_share
      requestBody:
        content:
          application/json:
            schema:
              example:
                to:
                - address: acase@ajubalaw.com
                  name: Andrew Case
                message: This might be of interest to you, Andrew
                attach_to_email: true
                send_iwl: false
                send_nrl: true
                send_https_link: true
              required:
              - to
              type: object
              properties: &id804
                to:
                  type: array
                  items:
                    $ref: '#/components/schemas/Documents.emailParticipant'
                  description: |-
                    An array of recipients to which the document is to be shared.
                message:
                  type: string
                  description: |-
                    A text message to be sent in the email along with the document or its links.
                attach_to_email:
                  type: boolean
                  description: |
                    Specifies if the document is to be attached to the email.<br><br>
                    If `true`, the document is attached to the email.<br>
                    If `false`, the document is not attached to the email.<br>
                  default: false
                file_to_folder:
                  type: string
                  description: |
                    The folder to which a new email is filed using iManage Work Communication Server. <br>
                    The folder must have a designated email address.
                send_iwl:
                  type: boolean
                  description: |
                    Specifies if the iManage Work link (iWL) to the document is sent in the email.<br><br>
                    The iWL opens a document by default in Protected View Mode in iManage Work desktop clients, if the user has read/write or full access
                    to the indicated document version. In this mode, users can view the document, but it is not checked-out to them.<br>
                    Sample iWL link: `iwl:dms=ACTIVE&&lib=Active&&num=111347&&ver=1`<br><br>
                    If `true`, the iManage Work link to the document is sent in the email.<br>
                    If `false`, the iManage Work link to the document is not sent in the email.<br>
                  default: false
                send_nrl:
                  type: boolean
                  description: |
                    Specifies if the .nrl file of the document is attached to the email. <br><br>
                    If the email recipient has iManage Work desktop client application installed, then the document can be viewed by double-clicking .nrl attachment.<br>
                    Sample nrl link: `testWordDoc.nrl` <br><br>
                    If `true`, the .nrl file of the document is attached to the email.<br>
                    If `false`, the .nrl file of the document is not attached to the email.<br>
                  default: false
                send_https_link:
                  type: boolean
                  description: |
                    Specifies if the iManage Work HTTPS link to the document is sent in the email.<br><br>
                    The email recipient can click this link to open the document in iManage Work. <br>
                    Sample HTTPS link: `https://www.ajubalaw.com/work/link/d/Active!123.1` <br><br>
                    If `true`, the iManage Work HTTPS link to the document is sent in the email.<br>
                    If `false`, the iManage Work HTTPS link to the document is not sent in the email.<br>
                  default: false
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/security-policy:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-security-policy
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/security-policy
      summary: Get document security policy
      description: |-
        Gets the ACL and security policy of a document.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_security-policy
      parameters:
      - *id004
      - name: spm_custom1
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      - name: spm_custom2
        in: query
        description: |-
          Custom parameter for a security policy.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Common.effectiveSecurityPolicy'
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/security:
    description: |
      **Default Security**<br>
      The documents in iManage Work library are assigned with default security.<br><br>
      The default security settings available are as follows: <br>

      |Value|Description|
      |---|---|
      |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
      |public|All users can view and edit the document unless explicitly excluded.|
      |view|All users can view the document unless explicitly granted Read/Write or No Access.|

      If a user is assigned with explicit access permission as well as group privilege to a document, then the user gets the maximum level of
      access to the document granted by the two explicit assignments. <br>
      For example, if a document is marked `private`, but a specific user is granted `read_write` access, and the group to which the user belongs to
      is granted only `read` access, then the user gets `read_write` access to the document.

      **access permission**<br>
      The owner of a document or a user with full access can assign specific access permission to individual users and groups.<br>
      When a group is granted access to a document, the same access permission are applied to all users who are members of the group.<br>

      |Value|Description|
      |---|---|
      |no_access| The user cannot see the document. The document does not show up in any search performed by this user. If the document is in a public folder, users who have No Access to the document do not see the document when they click on that folder.|
      |read| The user can view the document in read-only form, but cannot make changes and save it to the library as the same document.|
      |read_write| The user can view and edit the document and change most of its properties. The user cannot change the Author or Operator or edit access permission. Only the Author or Operator and those to whom they grant Full Access can edit these fields.|
      |full_access| The user can view and edit the document, change its properties and security settings. The Author and Operator have Full Access, and they can grant Full Access to others.|
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-security
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/security
      summary: Get document security
      description: |
        Returns the access permission and default security for the document associated with the specified document ID.<br><br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/security`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                required:
                - data
                type: object
                properties: &id515
                  data: *id513
                  default_security: *id514
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-security
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/security
      summary: Update document security
      description: |
        Updates the access permission and/or default security of the document associated with the specified document ID.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/security`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_security
      requestBody:
        content:
          application/json:
            schema:
              example:
                include:
                - access_level: full_access
                  id: andrew
                  type: user
                - access_level: read
                  id: viewgroup
                  type: group
                remove:
                - id: nonviewgroup
                  type: group
                default_security: public
              type: object
              properties: *id100
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - access: 2
                    access_level: read_write
                    id: KTHOMPSON
                    name: Kelly Thompson
                    sid: '54'
                    type: user
                    is_external: false
                    allow_logon: true
                  - access: 3
                    access_level: full_access
                    id: ACASE
                    name: Andrew Case
                    sid: '61'
                    type: user
                    is_external: true
                    allow_logon: true
                  - access: 2
                    access_level: read_write
                    id: NRTADMIN
                    name: nrtadmin
                    sid: '1'
                    type: group
                    is_external: false
                    enabled: true
                  - access: 1
                    access_level: read
                    id: HR
                    name: HR
                    sid: '478'
                    type: group
                    is_external: false
                    enabled: true
                    has_restricted_member: false
                  default_security: private
                required:
                - data
                type: object
                properties: *id515
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/secure-download:
    description: |-
      None
    get:
      tags:
      - Documents
      summary: Secure document download
      description: |-
        Secure document download.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_secure-download
      responses:
        200:
          description: Requested document stream.
          content:
            application/octet-stream:
              schema:
                type: string
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/related-documents:
    description: |
      Document relations are created to link the related documents together. 

      Document relations allow grouping and easy access to documents filed in different locations throughout iManage Work.
      A document can be related to more than one document in the same library.
      Users can set relations between documents that are associated with each other and are needed for reference in the future.<br>

      For example, a contract and its amendments, a contract and riders to the contract, and so on.
      You can also use document relations to link a document with the documents that were used to create it,
      such as a final report with its inserts, such as spreadsheets, graphics files, tables, figures, and charts.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-related-documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/related-documents
      summary: Get related documents
      description: |
        Returns a list of documents related to the specified document.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request gets all the related documents associated with the document ID Active!123.1:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/related-documents`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_related-documents
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:13:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: private
                    document_number: 110280
                    edit_date: '2017-03-13T21:14:43Z'
                    edit_profile_date: '2017-03-13T21:14:43Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.3
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=3
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 3
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T21:12:30Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:13:22Z'
                    edit_profile_date: '2017-03-13T21:13:22Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.2
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=2
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 2
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2017-03-13T20:40:34Z'
                    custom1: '1086'
                    custom1_description: Ajuba Inc
                    database: Active
                    default_security: public
                    document_number: 110280
                    edit_date: '2017-03-13T21:12:14Z'
                    edit_profile_date: '2017-03-13T21:12:14Z'
                    extension: png
                    file_create_date: '2017-03-13T20:40:34Z'
                    file_edit_date: '2017-03-13T20:40:34Z'
                    has_attachment: false
                    id: Active!110280.1
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=110280&&ver=1
                    last_user: ACASE
                    name: NRLx320
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 17336
                    type: PNG
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id407
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-related-documents
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/related-documents
      summary: Create document relation
      description: |
        Creates a new document relation with the document associated with specified docId.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates a relation between documents associated with IDs Active!123.1 and Active!456.1: <br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/related-documents`

        Request body: <br>

        ```
        {
          "comments": "Relating with document Active!123.1",
          "id"      : "Active!456.1"
          }
        ```

        An empty response body is returned on successful creation of the relation.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_related-documents
      requestBody:
        content:
          application/json:
            schema:
              example:
                comments: Relating with document Active!104734.1
                id: Active!109946.1
              required:
              - id
              type: object
              properties: &id982
                comments:
                  type: string
                  description: |-
                    Additional comments for this document operation.
                id:
                  type: string
                  description: |-
                    Document ID with which the relation is to be created.
              additionalProperties: true
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                description: |-
                  Returns an empty body to the client application.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/related-documents/{doc_num}:
    description: |-
      None
    delete:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-related-documents-{doc_num}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/documents/{docId}/related-documents/{doc_num}
      summary: Delete document relation
      description: |
        Deletes the relation between two documents.<br>
        The relation between documents associated with `docId` and the specified `doc_num` is deleted. <br>

        For example, the following request deletes the relationship between documents with ID Active!123.1 and Active!456.1: <br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/related-documents/active!456.1`
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_documents_{docId}_related-documents_{doc_num}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                description: |-
                  Returns an empty body to the client.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
    - name: doc_num
      in: path
      description: |
        Document number of the related document to be deleted. <br>
        The relation of this document is deleted with the document associated with docId.
      required: true
      schema:
        type: string
        example: Active!456.1
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/path:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-path
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/path
      summary: Get document path
      description: |
        Lists the parent folders of a document from the root workspace down to the parent.
        All the key properties of these folders are also listed.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_path
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - - create_date: '2019-12-09T14:16:55.925Z'
                      database: Active
                      default_security: private
                      edit_date: '2019-12-09T15:46:05.925Z'
                      has_subfolders: true
                      id: Active!1528971
                      is_external: false
                      is_external_as_normal: false
                      last_user: ACASE
                      last_user_description: ACASE
                      name: 1080.1000 - Larry Johnson Lawsuit
                      owner_description: Andrew Case
                      owner: ACASE
                      document_number: 100001083027
                      is_declared: false
                      is_hipaa: false
                      iwl: iwl:dms=ajubalaw.com&&lib=active&&num=100001083027&&ver=1
                      retain_days: 365
                      version: 1
                      wstype: workspace
                    - database: Active
                      default_security: inherit
                      edit_date: '2020-01-17T22:01:44.643Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: true
                      id: Active!1721828
                      inherited_default_security: private
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      name: Folder 1
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!1528971
                      view_type: document
                      workspace_id: Active!1528971
                      workspace_name: 1080.1000 - Larry Johnson Lawsuit
                      wstype: folder
                    - database: Active
                      default_security: inherit
                      edit_date: '2020-02-17T10:24:45.084Z'
                      folder_type: regular
                      has_documents: true
                      has_subfolders: false
                      id: Active!1810612
                      inherited_default_security: private
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external: false
                      is_external_as_normal: false
                      name: Folder2
                      owner: ACASE
                      owner_description: Andrew Case
                      parent_id: Active!1721828
                      view_type: document
                      workspace_id: Active!1528971
                      workspace_name: 1080.1000 - Larry Johnson Lawsuit
                      wstype: folder
                required:
                - data
                type: object
                properties: &id1174
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Projects.project'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/operations:
    description: |
      Lists the set of operations that current user is allowed to perform on a document. <br>
      Following are some of the operations allowed on a document:
       * Copy to another folder
       * Create a new version
       * Declare as a record
       * Delete
       * Move to a new folder
       * Set the security
       * Freeze
      For the complete list of operations, see the response section.
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/operations
      summary: Get document operations
      description: |-
        Returns the set of operations that the current user is allowed to perform on a document.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_operations
      parameters:
      - *id004
      - name: parent_id
        in: query
        description: |-
          ID of the parent folder of a document.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    archive: true
                    copy: true
                    create_new_version: true
                    declare: true
                    delete: true
                    freeze: true
                    lock: true
                    move: true
                    relate: true
                    replace: true
                    restore: false
                    set_security: true
                    undeclare: false
                    unfreeze: false
                    unlock: false
                    update: true
                    wopi_lock: true
                required:
                - data
                type: object
                properties: &id1642
                  data:
                    required:
                    - archive
                    - copy
                    - create_new_version
                    - declare
                    - delete
                    - freeze
                    - lock
                    - move
                    - relate
                    - replace
                    - restore
                    - set_security
                    - undeclare
                    - unfreeze
                    - unlock
                    - update
                    - wopi_lock
                    type: object
                    properties:
                      archive:
                        type: boolean
                        description: |
                          Indicates if a document can be marked for archive.<br><br>
                          If `true`, the document can be marked for archive. <br>
                          When a documents is archived, it is copied to an archive location and marked as archived in the database.
                          Archived documents are stored collectively in archive sets. Document profile information of the archived documents is not
                          deleted from the database. The documents are removed from the file server to free storage space.<br>
                          If `false`, the document cannot be archived.
                      copy:
                        type: boolean
                        description: |
                          Indicates if a copy of the document can be created in another folder.<br><br>
                          If `true`, a copy of the document can be created in another folder.<br>
                          If `false`, a copy of the document cannot be created.
                      create_new_version:
                        type: boolean
                        description: |
                          Indicates if a new version of the document can be created.<br><br>
                          If `true`, a new version of the document can be created.<br>
                          If `false`, a new version of the document can be created.
                      declare:
                        type: boolean
                        description: |
                          Indicates if a document can be declared as a record. A document that is a record can no longer be edited or deleted, except by an administrator.<br><br>
                          If `true`, the document can be declared as a record.<br>
                          If `false`, the document cannot be declared a record.
                      delete:
                        type: boolean
                        description: |
                          Indicates if the document can be deleted.<br><br>
                          If `true`, the document can be deleted.<br>
                          If `false`, the document cannot be deleted.
                      freeze:
                        type: boolean
                        description: |
                          Indicates that the document can be frozen and cannot be edited further.<br><br>
                          If `true`, the document can be frozen and cannot be edited further.<br>
                          If `false`, the document cannot be frozen.
                      lock:
                        type: boolean
                        description: |
                          Indicates that the document can be checked out and locked so that it is not available to other users.<br><br>
                          If `true`, the document can be checked out and locked so that it is not available to other users.<br>
                          If `false`, the document cannot be locked.
                      move:
                        type: boolean
                        description: |
                          Indicates that the document can be moved to another folder.<br><br>
                          If `true`, the document can be moved to another folder.<br>
                          If `false`, the document cannot be moved to another folder.
                      relate:
                        type: boolean
                        description: |
                          Indicates if the document can be related to another document.
                          Relations can be created between documents to keep related documents together, such as a contract and any addenda to that contract.<br><br>
                          If `true`, the document can be related to another document.<br>
                          If `false`, the document cannot be related to another document.
                      replace:
                        type: boolean
                        description: |
                          Indicates if the document can be replaced by another document.<br><br>
                          If `true`, the document can be replaced by another document.<br>
                          If `false`, the document cannot be replaced by another document.
                      restore:
                        type: boolean
                        description: |
                          Indicates if the document can be restored if deleted.<br><br>
                          If `true`, the document can be restored if deleted.<br>
                          If `false`, the document cannot be restored.
                      set_security:
                        type: boolean
                        description: |
                          Indicates that new security settings can be assigned to the document.<br><br>
                          If `true`, new security settings can be assigned to the document.<br>
                          If `false`, security settings of the document cannot be changed.
                      undeclare:
                        type: boolean
                        description: |
                          Indicates you can undeclare the document marked as record. Undeclaring a document restores its status prior to declaration, and you can change its profile information.<br><br>
                          If `true, the document marked as record can be undeclared.<br>
                          If `false', the document cannot be undeclared.
                      unfreeze:
                        type: boolean
                        description: |
                          Indicates that the document can be unfrozen and can be edited.<br><br>
                          If `true`, the document can be unfrozen and can be edited.<br>
                          If `false`, the document cannot be unfrozen.
                      unlock:
                        type: boolean
                        description: |
                          Indicates that the document can be unlocked.<br><br>
                          If `true`, the document can be unlocked.<br>
                          If `false`, the document cannot be unlocked.
                      update:
                        type: boolean
                        description: |
                          Indicates that the document can be updated.<br><br>
                          If `true`, the document can be updated.<br>
                          If `false`, the document cannot be updated.
                      wopi_lock:
                        type: boolean
                        description: |
                          Indicates if the document can be locked for a co-authoring session.<br><br>
                          If `true`, the document can be locked for a co-authoring session.<br>
                          If `false`, the document cannot be locked for a co-authoring session.
                    additionalProperties: false
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs:
    description: |
      Name-value pairs are customized properties for a document to store additional information.<br>

      These requests provide the flexibility to store the additional properties for the specific organizational needs.
      For example, there may be a requirement to prefix some of the document names with custom1 property alias.
      A name-value pair property `prefix_document_name` can be created with the possible values `true` and `false`.
      This property can be used to apply the prefix to selected documents. <br>

      The name-value pair properties are saved separately from the other standard document properties.<br>
      The data in requests is provided in the name and value format as follows:<br>

       ```
       {
           "data": {
              "Name1": "Value1",
              "Name2": "Value2"
            }
        }
        ```
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-name-value-pairs
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs
      summary: Get name value pair
      description: |
        Returns the name-value pair properties for the specified document.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the name-value pair properties for document active_us!123.1.<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/active_us!123.1/name-value-pairs`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of name-value pair properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs of a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To return a list of name-value pair properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To update, create, or delete name-value pairs of a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To return a list of name-value pair properties of a document, see PATCH `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_name-value-pairs
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: |-
                  The properties of a document to store additional information.
                example:
                  data:
                    name1: value1
                    name2: value2
                    name3: value3
                type: object
                properties: *id391
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-name-value-pairs
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs
      summary: Create, update, or delete NVP
      description: |
        Creates, updates, or deletes name-value pair properties of a document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request inserts properties `name1` and `name2` having the values `value1` and `value2` respectively. <br>

        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/documents/active_us!123.1/name-value-pairs`<br>
        Request body:<br>
          ```
          {
            "name1": "value1",
            "name2": "value2"
          }
          ```

        To delete `name2` name-value pair property, use the following body for the PATCH request: <br>
          ```
          {
            "name2": null
          }
          ```

        <br> <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To return a list of name-value pair properties of a workspace, see GET `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To create, update, or delete name-value pairs of a workspace, see PATCH `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/name-value-pairs`<br>
        To return a list of name-value pair properties of a folder, see GET `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To create, update, or delete name-value pairs of a folder, see PATCH `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/name-value-pairs`<br>
        To return a list of name-value pair properties of a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs`
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_documents_{docId}_name-value-pairs
      requestBody:
        content:
          application/json:
            schema:
              description: |
                Following are examples to create, update, and delete the name-value of a document respectively.<br>
                The create example assumes the key name does not already exist.<br>
                The update example assumes the key name exists, and its current value is replaced with the new one.<br>
                The delete example assumes the key name exists. However, no error is generated if it is not present.
              type: object
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/lock:
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-lock
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/lock
      summary: Lock a document
      description: |-
        Locks a document when it is checked out by a user. A locked document cannot be edited by any other user.

        The `409-Conflict` error occurs if an attempt is made to lock a document that is already locked.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br> 
        * A non-administrative user assigned to a role with `checkout` privilege can lock a document if any of the following are true:
          * The document is public.
          * The user is the Author or Operator of the document.
          * The user has `read-write` or `full` access to the document.
        * Tier 1 administrator (or higher) assiged to a role with `checkout` privilege can lock any document.<br>
        For more information on role privileges, see the <a href="#tag--Library-Roles">Library Roles</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        1. When a document is checked out, that is, opened for editing, it is downloaded from iManage Work to a location on the user's hard drive
        or network drive as a local copy. 
        2. The document is locked during this time so other users must wait for the document to be checked in before they can edit it. 
        The checkin process also unlocks the document. 
        3. All changes to the document are first saved locally. The user completes editing the document and checks it in back to iManage Work. 
        At this point the document is unlocked and available for other users to check out and edit. 
        4. If the local copy becomes unexpectedly unavailable, it is not available for checking in or unlocking.
        This could be for several reasons, such as the local copy gets corrupted, deleted, or the drive is unavailable.
        In this case, the document remains locked in iManage Work and must be unlocked to make it available for all users.
        For more information, see <a href="#delete-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/lock"> Unlock a document.</a>
        5. After unlocking, the last version available in iManage Work becomes the current version.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * For more information on library roles requests, see the <a href="#tag--Library-Roles">Library Roles</a> collection.
        * To checkout and download a document, <a href="/#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/checkout">POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout</a>

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_lock
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          Specifies the unique identifier of the document to be locked.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                comments: Locked this document
                due_date: '2022-08-18T04:46:00Z'
                location: 192.168.29.189
                path: C:\Users\Andrew Case\AppData\Roaming\iManage\Work\Recent\Test
                  workspace 1\Agreement(100001457756.1).docx
              type: object
              properties: &id1643
                due_date:
                  type: string
                  description: |-
                    Specifies the intended due date (in ISO 8601 format) for checking in the document after it is checked out and locked.

                    This is just an information field and serves as a guideline for users to check in the document. It is not used by the iManage Work system to automatically check-in or enforce a check-in date.
                path:
                  type: string
                  description: |
                    Specifies the path of the folder where the document is checked out.

                    By default, it is checked out to NRPortbl folder for iManage Work classic clients. For iManage Work, under user_profile/roaming/recent folder.
                comments:
                  type: string
                  description: |-
                    Specifies any additional information provided by the user when the document is locked.
                location:
                  type: string
                  description: |-
                    Specifies the name or IP address of the computer where the user is performing the lock operation.
              additionalProperties: false
      responses:
        200:
          description: Returns an empty body to the client application.
        409:
          description: An attempt to lock a document that has already been locked.
          content: *id516
        400: *id003
        401: *id002
        403: *id001
        404: *id005
    delete:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-lock
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/documents/{docId}/lock
      summary: Unlock a document
      description: |
        Unlocks a document by deleting the lock on it.

        The `404-Not found` error occurs if an attempt is made to unlock a document that is not locked.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        * A non-administrative user assigned to a role with `unlock` privilege can unlock documents which they locked.
        * Tier 1 administrator (or higher) can unlock any document, regardless of whether or not they have the `unlock` privilege.<br>
        For more information on role privileges, see the <a href="#tag--Library-Roles">Library Roles</a> collection.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * For more information on library roles requests, see the <a href="#tag--Library-Roles">Library Roles</a> collection.
        * To checkout and download a document, <a href="/#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/checkout">POST /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout</a>

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_documents_{docId}_lock
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          Specifies the unique identifier of the document to be unlocked.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      responses:
        200:
          description: Returns an empty body to the client application.
        401: *id002
        403: *id001
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history
      summary: Get document history
      description: |
        Gets the list of activities performed on a document by users in reverse chronological order.

        Some of the activities recorded are as follows: <br>
         * Opening and closing a document in an integrated application.
         * Editing a document’s profile.
         * Changing the access permissions of a document.
         * Printing a document and how many pages were printed.
         * Checking out and checking in a document.
         * Viewing a document.
         * Creating a new version of a document.
         * Declaring and undeclaring a document as a record.
        For the complete list of activities, see the query parameter `activity`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access to a document to read its history.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history
      parameters:
      - *id004
      - &id517
        name: activity
        in: query
        description: |
          Filters documents based on the activities that were performed on them.

          The following table contains the list of allowed values for the `activity` query parameter:

          |Query parameter|Document activities|Description|
          |---|---|---|
          |copy|COPYDOC|The document was copied.|
          |download|EXPORT|The document was exported.|
          |edit|NEWDOCUMENT, NEWDOCVER, MODIFY|The document was created, its version was updated, or its content was modified.|
          |email|MAIL|The document was emailed.|
          |print|PRINT|The document was printed.|
          |version|NEWDOCVER|The version of the document was updated.|
          |view|VIEW|The document was viewed.|
        schema:
          type: string
          default: view,edit
          example: activity=view,edit
      - &id518
        name: activity_date_end
        in: query
        description: |+
          Filters document activities based on the end date and time (in ISO 8601 format) of an activity.

          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - &id519
        name: activity_date_start
        in: query
        description: |+
          Filters document activities based on the start date and time (in ISO 8601 format) of an activity.

          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - name: all_versions
        in: query
        description: |
          Returns the history of all the versions of a document.

          If `true`, returns history of all the versions of a document.<br>
          If `false`, returns history of only the version specified in the `docId`.
        schema:
          type: boolean
          default: false
      - *id011
      - *id006
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - &id520
        name: user
        in: query
        description: |-
          Filters document activities based on the user who performed them.
        schema:
          type: string
          default: All the users limited to the specified library or libraries.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity: Checkout
                    activity_code: 2
                    activity_date: '2017-04-10T17:03:20Z'
                    application_name: WINWORD
                    document_number: 111352
                    has_journal: false
                    location: Doc-WS92
                    num1: '36352'
                    id: '895514'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  - activity: Create
                    activity_code: 6
                    activity_date: '2017-04-10T17:03:19Z'
                    application_name: WINWORD
                    comments: Created from document Active!111350.1
                    document_number: 111352
                    has_journal: false
                    location: 192.168.50.104
                    num1: '0'
                    id: '895513'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  - activity: Create
                    activity_code: 6
                    activity_date: '2017-04-10T17:03:19Z'
                    application_name: WINWORD
                    document_number: 111352
                    has_journal: false
                    location: 192.168.50.104
                    num1: '36352'
                    id: '895512'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  total_count: 3
                required:
                - data
                type: object
                properties: &id1635
                  data:
                    type: array
                    items:
                      required:
                      - activity
                      type: object
                      properties:
                        activity:
                          type: string
                          description: |
                            A list of recent activities that have been performed on documents.<br><br>
                            The values from the Common names in the table below are case insensitive.
                            Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
                            The following are the activity values and their descriptions&colon;
                            * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
                            * **Common Name** is the friendly name that appears in the response structure.
                            * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
                            * **Description** is the explanation of the activity.<br><br>

                            |Activity|Common Name|Code|Description|
                            |---|---|---|---|
                            |LAUNCH|Open|0|Application was launched or opened.|
                            |VIEW|View|1|The item was viewed.|
                            |CHECKOUT|Checkout|2|The item was checked out.|
                            |CHECKIN|Checkin|3|The item was checked in.|
                            |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
                            |DOCCLOSE|Close|5|The document was closed.|
                            |NEWDOCUMENT|Create|6|The document was created.|
                            |NEWDOCVER|Create Version|7|The document's version was updated.|
                            |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
                            |COPYDOC|Copy|9|The document was copied.|
                            |PRINT|Print|10|The item was printed.|
                            |MAIL|Mail|11|The item was mailed.|
                            |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
                            |DELETEDOC|Delete|13|The document was deleted.|
                            |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
                            |ARCHIVEDOC|Archive|15|The document was archived.|
                            |RESTOREDOC|Restore|16|The document was restored.|
                            |RELEASEDOC|Release|17|The document was released.|
                            |EXPORT|Export|18|The item was imported.|
                            |MODIFY|Modify|19|The item was modified.|
                            |EDITTIME|Edit Time|20|The time spent editing the item.|
                            |SHRED|Shred|21|The item was shredded.|
                            |DECLARE|Declared|22|The item was declared for archiving.|
                            |MIGRATED|Migrated|23|The item was migrated.|
                            |UNDECLARE|Undeclared|24|The item was undeclared as record.|
                            |RECONCILE|Reconciled|25|The item was reconciled.|
                            |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
                            |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
                            |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
                            |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
                            |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
                            |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
                            |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
                          default: view,edit
                          example: activity=view,edit
                        activity_code:
                          type: integer
                          description: |-
                            Indicates the code to identify the type of activity on the document.

                            For example, 0 for Open, 1 for edit, and so on. For the complete list of activity codes, see the `activity` field.
                        activity_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the date and time (in ISO 8601 format) when the activity was performed.
                        application_name:
                          type: string
                          description: |-
                            Indicates the name of the application used to perform the activity on the document.<br>
                            For example: Work Web, iManage Drive.
                        comments:
                          type: string
                          description: |-
                            Indicates any additional comments about the activity.
                        database:
                          type: string
                          description: |-
                            Indicates the iManage library name where the document is stored.
                        data1:
                          type: string
                          maxLength: 254
                          description: |-
                            Indicates the value of the first customizable data property.
                        data2:
                          type: string
                          maxLength: 254
                          description: |-
                            Indicates the value of the second customizable data property.
                        document_id:
                          type: string
                          description: |
                            Indicates the fully qualified identifier of the document.
                            The `document_id` is the combination of library name, the document number, and a version number.
                            For example, *Active!188240.1*.
                        document_number:
                          type: integer
                          description: |-
                            Indicates the document number of a document.

                            Document number is the number assigned to a document when it is imported to iManage Work,
                            and appears as part of the document ID.<br>
                            Document ID is the combination of library ID, document number, and document version.<br>
                            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                        duration:
                          type: integer
                          description: |-
                            Indicates the number of seconds the user spent working on the document.
                        has_journal:
                          type: boolean
                          description: |-
                            Indicates if the document activity has a journal entry.

                            If `true`, the document activity has a journal entry attached to it. For example, a journal entry is available when the document content is updated and saved.<br>
                            If `false`, the document activity does not have a journal entry. For example, viewing a document does not create a journal entry.
                        id:
                          type: string
                          description: |-
                            Indicates the identifier of the document history item.
                        location:
                          type: string
                          maxLength: 254
                          description: |-
                            Indicates the name of the computer from which the user performed the activity.
                        num1:
                          type: string
                          description: |-
                            Indicates the value of the first customizable numeric property.
                        num2:
                          type: string
                          description: |-
                            Indicates the value of the second customizable numeric property.
                        num3:
                          type: string
                          description: |-
                            Indicates the value of the third customizable numeric property.
                        pages_printed:
                          type: integer
                          description: |-
                            Indicates the count of the number of document pages printed when open in certain integrated applications such as Microsoft Word.
                        user:
                          type: string
                          description: |-
                            Indicates the user ID of the user who performed the activity.
                        user_fullname:
                          type: string
                          description: |-
                            Indicates the full name of the user who performed the activity.
                        version:
                          type: integer
                          description: |-
                            Indicates the version number of the document.
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                  cursor:
                    type: string
                    description: |-
                      Indicates the cursor value to retrieve the next set of results.

                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history
      summary: Create document history entry
      description: |
        Creates an audit entry as an event in the document's history.

        The audit entry can be with or without the file stream associated with it, which depends upon whether the document content is modified or not.
        The request body can be in the `application/json` or `multipart/form-data` format.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access to a document to create an audit entry for it.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history
      requestBody:
        content:
          application/json:
            schema:
              example:
                audit:
                  activity: print
                  activity_code: 10
                  application_name: functional test
                  pages_printed: 20
                  comments: printing
              required:
              - audit
              type: object
              properties: &id803
                audit:
                  $ref: '#/components/schemas/Documents.auditEntryBase'
              additionalProperties: false
              description: |-
                Audit details.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  auditId: '1808836'
                required:
                - auditId
                type: object
                properties: &id1645
                  auditId:
                    type: string
                    description: |-
                      Document history audit ID.
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/admin-history:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-admin-history
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/admin-history
      summary: Get document history (Admin)
      description: |
        Lists the activity history of a document or email, that is, activities performed by users on a particular document in reverse-chronological order that iManage System Administrators are allowed to view. <br><br>
        The permission levels required to implement this request: Tier 1, Tier 2, or NRTADMIN. <br><br>
        The type of activities recorded in the history can be customized by iManage Work system administrator. <br>
        Some of the activities recorded are as follows: <br>
         * Opening and closing the document in an integrated application.
         * Editing the document’s profile.
         * Changing the access permissions of the document.
         * Printing a document and how many pages were printed.
         * Checking out and checking in the document.
         * Viewing the document.
         * Creating a new version of the document.
         * Declaring and undeclaring the document as a record.
        For the complete list of activities, see the query parameter `activity`.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_admin-history
      parameters:
      - *id004
      - name: activity
        in: query
        description: |
          A list of recent activities that have been performed on documents.<br><br>
          The values from the Common names in the table below are case insensitive.
          Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
          The following are the activity values and their descriptions&colon;
          * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
          * **Common Name** is the friendly name that appears in the response structure.
          * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
          * **Description** is the explanation of the activity.<br><br>

          |Activity|Common Name|Code|Description|
          |---|---|---|---|
          |LAUNCH|Open|0|Application was launched or opened.|
          |VIEW|View|1|The item was viewed.|
          |CHECKOUT|Checkout|2|The item was checked out.|
          |CHECKIN|Checkin|3|The item was checked in.|
          |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
          |DOCCLOSE|Close|5|The document was closed.|
          |NEWDOCUMENT|Create|6|The document was created.|
          |NEWDOCVER|Create Version|7|The document's version was updated.|
          |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
          |COPYDOC|Copy|9|The document was copied.|
          |PRINT|Print|10|The item was printed.|
          |MAIL|Mail|11|The item was mailed.|
          |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
          |DELETEDOC|Delete|13|The document was deleted.|
          |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
          |ARCHIVEDOC|Archive|15|The document was archived.|
          |RESTOREDOC|Restore|16|The document was restored.|
          |RELEASEDOC|Release|17|The document was released.|
          |EXPORT|Export|18|The item was imported.|
          |MODIFY|Modify|19|The item was modified.|
          |EDITTIME|Edit Time|20|The time spent editing the item.|
          |SHRED|Shred|21|The item was shredded.|
          |DECLARE|Declared|22|The item was declared for archiving.|
          |MIGRATED|Migrated|23|The item was migrated.|
          |UNDECLARE|Undeclared|24|The item was undeclared as record.|
          |RECONCILE|Reconciled|25|The item was reconciled.|
          |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
          |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
          |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
          |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
          |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
          |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
          |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
        schema:
          type: string
          default: view,edit
          example: activity=view,edit
          enum: ["LAUNCH", "VIEW", "CHECKOUT", "CHECKIN", "PROFEDIT", "DOCCLOSE",
            "NEWDOCUMENT", "NEWDOCVER", "SECURITY_CHANGE", "COPYDOC", "PRINT", "MAIL",
            "ECHO_SYNC", "DELETEDOC", "PURGEDOC", "ARCHIVEDOC", "RESTOREDOC", "RELEASEDOC",
            "EXPORT", "MODIFY", "EDITTIME", "SHRED", "DECLARE", "MIGRATED", "UNDECLARE",
            "RECONCILE", "REMOVEFROMFOLDER", "WORKFLOWEVENT", "WORKFLOWATTACH", "WORKFLOWDETACH",
            "VIEW_THUMBNAIL", "OFFLINE_DOWNLOAD", "BULK_EDIT_SECURITY"]
      - name: activity_date_end
        in: query
        description: |+
          End date (in ISO 8601 format) of an activity.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - name: activity_date_start
        in: query
        description: |+
          Start date (in ISO 8601 format) of an activity.<br><br>
          The date can be specified in one of two formats.
          * The standard iManage ISO 8601 format. This is yyyy-mm-ddThh:mm:ss.µZ.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229Z
          * The standard iManage ISO 8601 format with offset. This is yyyy-mm-ddThh:mm:ss.µ∓hh.mm.
          µ represents zero or more microseconds.
          For example: 2019-10-29T11:44:24.229+02.00.
          The values at the end are an offset (to the nearest minute), moving the time ahead or behind.
          This can be used to inline the time difference.
          For example, India is five and half hours ahead of London, so a date from London can be set to 2019-10-29T11:44:24.229+05.30 to match Indian time.


        schema:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
      - name: all_versions
        in: query
        description: |
          Returns the history information for all the versions of a document.<br><br>
          If `true`, returns history information about all the versions of a document.<br>
          If `false`, returns history information about only the version specified in the {docId}.
        schema:
          type: boolean
          default: false
      - *id011
      - *id006
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - name: user
        in: query
        description: |-
          The user who has performed the activity.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity: Checkout
                    activity_code: 2
                    activity_date: '2017-04-10T17:03:20Z'
                    application_name: WINWORD
                    document_number: 111352
                    has_journal: false
                    location: Doc-WS92
                    id: '895514'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  - activity: Create
                    activity_code: 6
                    activity_date: '2017-04-10T17:03:19Z'
                    application_name: WINWORD
                    document_number: 111352
                    has_journal: false
                    location: 192.168.50.104
                    id: '895513'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  - activity: Create
                    activity_code: 6
                    activity_date: '2017-04-10T17:03:19Z'
                    application_name: WINWORD
                    document_number: 111352
                    has_journal: false
                    location: 192.168.50.104
                    id: '895512'
                    user: ACASE
                    user_fullname: Andrew Case
                    version: 1
                  total_count: 3
                required:
                - data
                type: object
                properties: &id1636
                  data:
                    type: array
                    items:
                      required:
                      - activity
                      type: object
                      properties:
                        document_number:
                          type: integer
                          description: |-
                            Indicates the document number of a document.

                            Document number is the number assigned to a document when it is imported to iManage Work,
                            and appears as part of the document ID.<br>
                            Document ID is the combination of library ID, document number, and document version.<br>
                            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                        version:
                          type: integer
                          description: |-
                            Version number of the document.
                        activity:
                          type: string
                          description: |
                            A list of recent activities that have been performed on documents.<br><br>
                            The values from the Common names in the table below are case insensitive.
                            Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
                            The following are the activity values and their descriptions&colon;
                            * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
                            * **Common Name** is the friendly name that appears in the response structure.
                            * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
                            * **Description** is the explanation of the activity.<br><br>

                            |Activity|Common Name|Code|Description|
                            |---|---|---|---|
                            |LAUNCH|Open|0|Application was launched or opened.|
                            |VIEW|View|1|The item was viewed.|
                            |CHECKOUT|Checkout|2|The item was checked out.|
                            |CHECKIN|Checkin|3|The item was checked in.|
                            |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
                            |DOCCLOSE|Close|5|The document was closed.|
                            |NEWDOCUMENT|Create|6|The document was created.|
                            |NEWDOCVER|Create Version|7|The document's version was updated.|
                            |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
                            |COPYDOC|Copy|9|The document was copied.|
                            |PRINT|Print|10|The item was printed.|
                            |MAIL|Mail|11|The item was mailed.|
                            |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
                            |DELETEDOC|Delete|13|The document was deleted.|
                            |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
                            |ARCHIVEDOC|Archive|15|The document was archived.|
                            |RESTOREDOC|Restore|16|The document was restored.|
                            |RELEASEDOC|Release|17|The document was released.|
                            |EXPORT|Export|18|The item was imported.|
                            |MODIFY|Modify|19|The item was modified.|
                            |EDITTIME|Edit Time|20|The time spent editing the item.|
                            |SHRED|Shred|21|The item was shredded.|
                            |DECLARE|Declared|22|The item was declared for archiving.|
                            |MIGRATED|Migrated|23|The item was migrated.|
                            |UNDECLARE|Undeclared|24|The item was undeclared as record.|
                            |RECONCILE|Reconciled|25|The item was reconciled.|
                            |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
                            |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
                            |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
                            |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
                            |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
                            |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
                            |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
                          enum: ["LAUNCH", "VIEW", "CHECKOUT", "CHECKIN", "PROFEDIT",
                            "DOCCLOSE", "NEWDOCUMENT", "NEWDOCVER", "SECURITY_CHANGE",
                            "COPYDOC", "PRINT", "MAIL", "ECHO_SYNC", "DELETEDOC",
                            "PURGEDOC", "ARCHIVEDOC", "RESTOREDOC", "RELEASEDOC",
                            "EXPORT", "MODIFY", "EDITTIME", "SHRED", "DECLARE", "MIGRATED",
                            "UNDECLARE", "RECONCILE", "REMOVEFROMFOLDER", "WORKFLOWEVENT",
                            "WORKFLOWATTACH", "WORKFLOWDETACH", "VIEW_THUMBNAIL",
                            "OFFLINE_DOWNLOAD", "BULK_EDIT_SECURITY"]
                          default: view,edit
                          example: view,edit
                        application_name:
                          type: string
                          description: |-
                            Name of the application associated with the document to integrate with iManage Work Server.
                        activity_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            The date (in ISO 8601 format) when the activity was performed.
                        duration:
                          type: integer
                          description: |-
                            The number of seconds the user spent to perform the activity on the document.
                        pages_printed:
                          type: integer
                          description: |-
                            The number of document pages printed when open in certain integrated applications such as Microsoft Word.
                        user:
                          type: string
                          description: |-
                            The user who performed the operation.
                        activity_code:
                          type: integer
                          description: |-
                            The code to identify the type of activity performed on the document. For example, 0 for Open, 1 for View, and so on.
                            For the complete list of activity codes, see the parameter activity.
                        location:
                          type: string
                          description: |-
                            The name of the computer from where the user performed the operation. Maximum string length&#58; 254.
                        id:
                          type: string
                          description: |-
                            Identifier of the document history item.
                        has_journal:
                          type: boolean
                          description: |-
                            Indicates whether the document has journal entry.
                        user_fullname:
                          type: string
                          description: |-
                            Full friendly name of the user.
                        database:
                          type: string
                          description: |-
                            iManage library name where the document is stored.
                        document_id:
                          type: string
                          description: |
                            The fully qualified identifier of the document.
                            The document_id is the combination of library name, the document number, and a version number.
                            For example, *Active!188240.1*.
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                  cursor:
                    type: string
                    description: |-
                      The position of the cursor to be used in the subsequent request.

                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        403: *id001
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/containerId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/versions:
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history-versions
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/versions
      summary: Get document history versions
      description: |-
        Returns all the versions of a document to which the user has access.

        For example, for a document having five versions, if the signed-in user has access for only the first and third version,
        then the request returns details of only the version 1 and 3 of the document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read_only` access to a document to read its version history.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_versions
      parameters:
      - *id004
      - *id517
      - *id518
      - *id519
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - *id520
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: KTHOMPSON
                    author_description: Kelly Thompson
                    class: PLEADING
                    create_date: '2007-08-16T20:12:19Z'
                    custom1: '1000'
                    custom1_description: Enron Corporation
                    custom2: '001'
                    custom25: false
                    custom26: false
                    custom27: false
                    custom28: false
                    custom29: BANK
                    custom29_description: Bankruptcy
                    custom2_description: Chapter 11 Bankruptcy
                    custom3: OPEN
                    custom30: '106'
                    custom30_description: Chapter 11
                    custom3_description: Open
                    custom4: TX
                    custom4_description: Texas
                    database: Active
                    default_security: public
                    document_number: 31869
                    edit_date: '1999-03-15T12:11:53Z'
                    edit_profile_date: '2016-11-16T17:52:08Z'
                    extension: pdf
                    file_create_date: '2007-08-16T20:12:19Z'
                    file_edit_date: '1999-03-15T12:11:53Z'
                    has_attachment: false
                    id: Active!31869.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE&&lib=Active&&num=31869&&ver=1
                    last_user: KTHOMPSON
                    last_user_description: Kelly Thompson
                    name: Notice of Hearing Corrected Notice of Hearing (related document(s)
                      15) filed by Brian S. Rosen on behalf of Enron Corp
                    operator: KTHOMPSON
                    operator_description: Kelly Thompson
                    size: 8529
                    type: ACROBAT
                    version: 1
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id407
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/users:
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history-users
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/users
      summary: Get users who performed activities on a document
      description: |-
        Returns information about users who have performed activities on the document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read_only` access to a document to read its history.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_users
      parameters:
      - *id004
      - *id517
      - *id518
      - *id519
      - name: all_versions
        in: query
        description: |
          Specifies if the user information should be returned for all versions of the document.

          If `true`, returns user information for all versions of the specified document.
          If false, returns user information only for the document version specified in the `docId`.

        schema:
          type: boolean
          default: false
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - *id520
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity_count: 4
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    login: false
                    user_id: ACASE
                    userid: ACASE
                    wstype: user
                  - activity_count: 2
                    email: acase@ajubalaw.com
                    full_name: ACASE
                    id: ACASE
                    login: false
                    user_id: ACASE
                    userid: ACASE
                    wstype: user
                required:
                - data
                type: object
                properties: &id1561
                  data:
                    type: array
                    description: |-
                      Indicates details of users who performed activities on the document.
                    items:
                      type: object
                      properties:
                        activity_count:
                          type: integer
                          description: |
                            Indicates the number of activities performed by the user.
                        email:
                          type: string
                          maxLength: 254
                          description: |-
                            Indicates the primary email address of the user.
                        full_name:
                          type: string
                          description: |-
                            Indicates the full name of the user.
                        id:
                          type: string
                          description: |-
                            Indicates the user ID.
                        login:
                          type: boolean
                          description: |
                            Indicates if the user is allowed to sign in.

                            If `true`, the user is allowed to sign in.<br>
                            If `false`, the user is not allowed to sign in.

                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/plot-points:
    description: |
      The history of a document is represented as a timeline bar graph in iManage Work. <br>
      This graph showcases the historic activities performed on a document in the specified timeline.
      For example, in a specific week the number of times a document was downloaded is depicted in the graph.
      The timeline is plotted on x-axis and number of activities on the y-axis.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/plot-points/{granularity}:
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history-plot-points-{granularity}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/plot-points/{granularity}
      summary: Get activity count on a document
      description: |
        Returns the number of activities performed on a document during the specified time period as an array of plot points.
        The timeline is received as x-axis coordinates and the number of activities as y-axis coordinates.
        In iManage Work, these plot-points are presented as a document timeline. For example, the number of views on a document in the last month.

        The time granularity of the plot is specified as hours, days, or weeks. The date range can also be customized.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access to a document to read its activities.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_plot-points_{granularity}
      parameters:
      - *id004
      - *id517
      - *id518
      - *id519
      - name: all_versions
        in: query
        description: |-
          Returns the history of all the versions of a document.

          If `true`, returns history of all the versions of a document.<br>
          If `false`, returns history of only the version specified in the `docId`.
        schema:
          type: boolean
          default: false
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - *id520
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - x: 1491890400
                    y: 8
                  - x: 1491894000
                    y: 3
                  - x: 1491901200
                    y: 15
                  - x: 1491904800
                    y: 13
                required:
                - data
                type: object
                properties: &id1637
                  data:
                    type: array
                    items:
                      required:
                      - x
                      - y
                      type: object
                      properties:
                        x:
                          type: integer
                          description: |-
                            Indicates the x-axis coordinate value in seconds since Unix epoch.
                          example: 1526387400
                        y:
                          type: integer
                          description: |-
                            Indicates the y-axis coordinate value as number of activities performed on a document.
                          example: 2
                      additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
    - name: granularity
      in: path
      description: |
        Specifies the time interval between two plot points.<br>
        The timeline for plotting the data points is specified in hours, days, weeks. 
        It can also be customized where start and end date for the activities can be specified by the user.
      required: true
      schema:
        enum: ["hourly", "daily", "weekly"]
        type: string
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/import-multiple:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history-import-multiple
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/import-multiple
      summary: Import multiple document history entries
      description: |-
        Imports audit entries for the specified document, with or without the file streams associated with.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read_only` access to a document to create multile document history entries.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * A maximum of 25 entries can be imported per request.
        * If there are invalid entries in the request body that cannot be processed, iManage Work might return warnings in the response
          or may completely reject the request with an error.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_import-multiple
      requestBody:
        content:
          application/json:
            schema:
              example:
              - activity: print
                activity_code: 10
                application_name: functional test
                pages_printed: 20
                comments: printing
              - activity: edit_time
                activity_code: 20
                application_name: functional test
                comments: edited document
              type: array
              properties: &id799
                application_name:
                  type: string
                  description: |
                    Specifies the name of the application used to perform an operation on the document.<br>
                    For example: Work Web, iManage Drive.
                    This property is mainly used by iManage Work system administrators.
                activity: &id521
                  enum:
                  - "archive_document"
                  - "checkin"
                  - "checkout"
                  - "copy_document"
                  - "declare"
                  - "delete_document"
                  - "delete_folder"
                  - "document_close"
                  - "echo_sync"
                  - "edit_time"
                  - "export"
                  - "last"
                  - "mail"
                  - "migrated"
                  - "modify"
                  - "new_document"
                  - "new_version"
                  - "print"
                  - "profile_edit"
                  - "purge_document"
                  - "reconcile"
                  - "release_document"
                  - "remove_from_folder"
                  - "restore_document"
                  - "security_change"
                  - "shred"
                  - "undeclare"
                  - "view"
                  - "view_thumbnail"
                  - "work_flow_attach"
                  - "work_flow_detach"
                  - "work_flow_event"
                  - "offline_download"
                  - "bulk_edit_security"
                  type: string
                  description: |-
                    Specifies the type of activity performed on the document.
                activity_code: &id522
                  type: integer
                  description: |-
                    Specifies the code to identify the type of activity performed on the document.<br>
                    For example, 0 for Open, 1 for View, and so on.
                    For the complete list of activity codes, see the `activity` parameter.
                activity_date: &id523
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the date and time (in ISO 8601 format) when the activity was performed.
                comments: &id524
                  type: string
                  description: |-
                    Specifies any additional information about the activity.
                data1: &id525
                  type: string
                  maxLength: 254
                  description: |-
                    Specifies the custom string property.
                data2: &id526
                  type: string
                  maxLength: 254
                  description: |-
                    Specifies the custom string property.
                document_id: &id527
                  type: string
                  description: |
                    Specifies the fully qualified identifier of the document.

                    The `document_id` is the combination of library name, the document number, and a version number.
                    For example, *ACTIVE_US!188240.1*.
                duration: &id528
                  type: integer
                  description: |-
                    Specifies the number of seconds the user spent working on the document.
                location: &id529
                  type: string
                  description: |-
                    Specifies the name or IP address of the computer on which the activity was performed.

                    This property is for iManage Work system administrators' use only.
                pages_printed: &id530
                  type: integer
                  description: |-
                    Specifies the number of document pages printed when open in certain integrated applications.
                num1: &id531
                  type: string
                  description: |-
                    Specifies the custom numeric property.
                  example: "1"
                num2: &id532
                  type: string
                  description: |-
                    Specifies the custom numeric property.
                  example: "2"
                num3: &id533
                  type: string
                  description: |-
                    Specifies the custom numeric property.
                  example: "3"

                version: &id534
                  type: integer
                  description: |-
                    Specifies the version number of the document.
              additionalProperties: true
              required:
              - activity
              - activity_code
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: docId
      in: path
      description: |-
        Specifies the document ID for which history entries are to be imported.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/admin-import:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-history-admin-import
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/admin-import
      summary: Import document history
      description: |-
        Imports audit history entries for the specified document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To execute this request, the user must be a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * A maximum of 25 entries can be imported per request.
        * If there are invalid entries in the request body that cannot be processed, iManage Work might return warnings in the response
          or may completely reject the request with an error.


      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
              - activity: print
                activity_code: 10
                application_name: functional test
                pages_printed: 20
                comments: printing
              - activity: edit_time
                activity_code: 20
                application_name: functional test
                comments: edited document
              type: array
              items: &id798
                type: object
                required:
                - activity_code
                - activity
                - activity_date
                properties: &id698
                  application_name:
                    type: string
                    description: |
                      Specifies the name of the application used to perform an operation on the document.<br>
                      For example: Work Web, iManage Drive.
                      This property is mainly used by iManage Work system administrators.
                  user:
                    type: string
                    description: |-
                      Specifies the user who performed an action on the document.

                      This property is mainly used by iManage Work system administrators.
                  activity: *id521
                  activity_code: *id522
                  activity_date: *id523
                  comments: *id524
                  data1: *id525
                  data2: *id526
                  document_id: *id527
                  duration: *id528
                  location: *id529
                  pages_printed: *id530
                  num1: *id531
                  num2: *id532
                  num3: *id533
                  version: *id534
                additionalProperties: true
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: docId
      in: path
      description: |-
        Specifies the document ID for which history entries are to be imported.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/activities:
    get:
      tags:
      - Documents
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/activities
      summary: Get activities performed on a document
      description: |-
        Returns the document history based on the type of activity performed on it over a period of time.<br>
        Possible values include the number of times a document was viewed, edited, downloaded, printed, and so on.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access on a document to read its history.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_history_activities
      parameters:
      - *id004
      - *id517
      - *id518
      - *id519
      - name: all_versions
        in: query
        description: |
          Returns the history of all the versions of a document.

          If `true`, returns history of all the versions of a document.<br>
          If `false`, returns history of only the version specified in the {docId}.
        schema:
          type: boolean
          default: false
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          type: integer
          default: 0
      - *id520
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - alias: '1'
                    count: 7
                    description: View
                  - alias: '2'
                    count: 5
                    description: Checkout
                  - alias: '3'
                    count: 4
                    description: Checkin
                  - alias: '4'
                    count: 4
                    description: Changed Profile
                  - alias: '6'
                    count: 1
                    description: Create
                  - alias: '7'
                    count: 8
                    description: Create Version
                  - alias: '8'
                    count: 1
                    description: Change Security
                  - alias: '12'
                    count: 5
                    description: Synchronize
                  - alias: '18'
                    count: 4
                    description: Export
                required:
                - data
                type: object
                properties: &id1634
                  data:
                    type: array
                    items:
                      required:
                      - alias
                      - count
                      - description
                      type: object
                      properties:
                        alias:
                          type: string
                          description: |-
                            Indicates the code for the type of activity performed on a document. For example, `1` for View, `2` for checkout, and so on.
                        count:
                          type: integer
                          description: |
                            Indicates the number of times a particular activity was performed on a document.

                            For example, if the `alias` is `1` and `count` is `2`, it means that the document was viewed twice.<br>
                            For the complete list of document activity codes, see the description of response field `activity` in 
                            <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/history"> 
                            GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history/activities

                        description:
                          type: string
                          description: |-
                            Indicates the common name for an activity. For example, Open, View, Checkin.
                      additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/highlights:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-highlights
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/highlights
      summary: Get document highlights
      description: |
        Returns the expanded terms from a document search to be used for highlighting.<br>

        When a user performs a keyword search on a document in iManage Work application, the stemmed term related to the search key is
        expanded and highlighted in the document. The original search term is also highlighted. <br>
        These highlights help a user to search and navigate to the relevant sections in the document. <br>

        For example, the search for keyword *fishing* in a document is stemmed as *fish*, and the terms *fishing*, *fished*, *fisher*, and *fishery* are highlighted in the document.
        This request returns all such expanded terms.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the list of highlighted terms for document active!123.1.<br>

        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active/documents/active!123.1/highlights`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_highlights
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - NEGOTI
                  - NEGOTIABILITY
                  - NEGOTIABLE
                  - NEGOTIATE
                  - NEGOTIATED
                  - NEGOTIATES
                  - NEGOTIATING
                  - NEGOTIATION
                  - NEGOTIATIONS
                  - NEGOTIATOR
                  - NEGOTIATORS
                  - CONTRACT
                  - CONTRACTANT
                  - CONTRACTANTS
                  - CONTRACTE
                  - CONTRACTED
                  - CONTRACTING
                  - CONTRACTION
                  - CONTRACTIONS
                  - CONTRACTS
                required:
                - data
                type: object
                properties: &id700
                  data:
                    type: array
                    items:
                      type: string
                    description: |-
                      Array of document highlight strings.
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
      - *id137
      - *id138
      - *id139
      - *id140
      - *id141
      - *id142
      - *id143
      - *id144
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - *id188
      - *id189
      - *id190
      - *id191
      - *id192
      - *id193
      - *id194
      - *id195
      - *id196
      - *id197
      - *id198
      - *id199
      - *id200
      - *id201
      - *id202
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - *id208
      - *id209
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/file:
    description: |-
      None
    put:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-file
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/documents/{docId}/file
      summary: Update content of a document
      description: |
        Replaces or updates the contents of a document. <br>
        This request can update both profile and content of a document. The new content completely replaces the existing one.<br>

        This API supports document checksum computation and validation.
        Checksum is a sequence of letters and numbers that can be used to verify the integrity of a document content during transfer.
        During file upload, this API computes the checksum of the content and saves it along with metadata. <br>

        If the document profile in the request has a checksum value, it is compared with the newly generated checksum. <br>
        If the checksum values do not match, a 400-error is returned. <br>
        If the document profile in the request does not include checksum property, then the validation is not performed.<br>
        The checksum type is indicated in the prefix of the checksum property returned in the API response.
        SHA256 is the only supported checksum type currently. For example, SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        The checksum feature is available only if the `document_checksum` feature is enabled.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_documents_{docId}_file
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                profile:
                  description: |
                    The JSON document profile. This must be valid but need not be complete. <br>
                    It updates the existing document profile with the new JSON profile provided.
                  example:
                    doc_profile:
                      name: Coca-Cola-Co_SWOT_Analysis
                      author: ACASE
                      operator: ACASE
                      class: DOC
                      default_security: private
                      is_checked_out: false
                      extension: pdf
                      is_hipaa: false
                  required:
                  - doc_profile
                  type: object
                  properties: &id866
                    audit:
                      $ref: '#/components/schemas/Documents.auditEntryPartial'
                    doc_profile:
                      $ref: '#/components/schemas/Documents.documentProfileWithChecksum'
                    keep_locked:
                      type: boolean
                      description: |-
                        Specifies if the document should remain locked.

                        If `true`, the document remains locked.<br>
                        If `false`, the document is unlocked.
                      default: false
                  additionalProperties: false
                file:
                  type: string
                  description: |-
                    File content to be uploaded.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    access: full_access
                    author: KTHOMPSON
                    author_description: Kelly Thompson
                    class: PLEADING
                    create_date: '2007-08-16T20:10:51Z'
                    custom1: '1000'
                    custom1_description: Enron Corporation
                    custom2: '001'
                    custom25: false
                    custom26: false
                    custom27: false
                    custom28: false
                    custom29: BANK
                    custom29_description: Bankruptcy
                    custom2_description: Chapter 11 Bankruptcy
                    custom3: OPEN
                    custom30: '106'
                    custom30_description: Chapter 11
                    custom3_description: Open
                    custom4: TX
                    custom4_description: Texas
                    database: Active
                    default_security: public
                    document_number: 31833
                    edit_date: '1999-10-16T12:11:53Z'
                    edit_profile_date: '2016-11-16T17:52:00Z'
                    extension: pdf
                    file_create_date: '2007-08-16T20:10:51Z'
                    file_edit_date: '1999-10-16T12:11:53Z'
                    has_attachment: false
                    id: Active!31833.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=ACTIVE&&lib=Active&&num=31833&&ver=1
                    last_user: KTHOMPSON
                    last_user_description: Kelly Thompson
                    name: Motion for Joint Administration filed by Brian S. Rosen
                      on behalf of Enron Corp
                    operator: KTHOMPSON
                    operator_description: Kelly Thompson
                    size: 18528
                    type: ACROBAT
                    version: 1
                    workspace_id: Active!11448
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                required:
                - data
                type: object
                properties: *id396
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/rate-limited-download:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-rate-limited-download
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/rate-limited-download
      summary: Download document with rate-limited restriction
      description: |
        Downloads a document {docId} with a rate-limited time restriction.<br><br>
        Downloads are rate limited, meaning only a certain number of downloads can be served within a time window.
        The request returns appropriate response headers according to [Rate Limiting Headers RFC Section 1.2](https://tools.ietf.org/id/draft-polli-ratelimit-headers-00.html#rfc.section.1.2)<br>
        An error occurs if a download exceeds the allowed quota within the time frame.<br>

        The file is downloaded as a file stream.
        Therefore, the stream must be captured and explicitly saved with a file name including the file extension, such as `.docx` or `.pdf`.
        The document name is returned in the header tag *Document-Id*.<br>

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `rate_limited_downloads` is `false`, this request is not available.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To download a document, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download`<br>
        To download a document with a rate limit, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/rate-limited-download`<br>
        To download a document and save it with a specified name, see GET `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download/{user_provided_filename}`<br>
        To replace or to update the contents of a document, see PUT `/customers/{customerId}/libraries/{libraryId}/documents/{docId}/file`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_rate-limited-download
      parameters:
      - *id004
      - name: latest
        in: query
        description: |
          Indicates to download the latest version of a document.<br><br>
          If `true`, downloads the latest version, and does not use the version number specified in the {docId} endpoint parameter.<br>
          If `false`, downloads the version specified in the {docId} endpoint parameter.
        schema:
          description: needs defining
      responses:
        200:
          description: Contents of the document.
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  File name of the document.
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Length of a document in bytes.
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Content type of the document.
            Document-ID:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  ID of the document.
          content:
            application/octet-stream:
              schema:
                type: string
        401: *id002
        404: *id005
        429:
          description: Too many requests in a short period.
          headers:
            x-ratelimit-reset:
              deprecated: false
              allowEmptyValue: false
              description: The number of seconds an application must wait before making
                any further requests.
              schema:
                type: integer
            x-ratelimit-remaining:
              deprecated: false
              allowEmptyValue: false
              description: The number of requests remaining in the current time window.
              schema:
                type: integer
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-download
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/download
      summary: Download a document
      description: |
        Downloads the specified document to a user's local machine.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read_only` access to a document to download it.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        If the parameter `latest` is `true`, indicating to download the latest version, the `Document-Id` 
        in the response header may be different than the version specified in the endpoint parameter `docId`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To download a document with a filename, 
        see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/download/filename-">
        GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/download/{filename}</a>

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_download
      parameters:
      - *id004
      - name: activity
        in: query
        description: |
          Specifies the activity type for the document download action.

          For the document download action, the parameter `activity` must be specified as `export`,
          so that the activity is tracked correctly in the document history timeline.
          If it is not specified, the default activity type appears as `view` in the document history.
        schema:
          type: string
          default: view
      - name: latest
        in: query
        description: |
          Specifies to download the latest version of a document.

          If `true`, downloads the latest version irrespective of the version number specified in the `docId`.<br>
          If `false`, downloads the version specified in the endpoint parameter `docId`.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Contents of a document.
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              description: |-
                Indicates the filename of a document.
              schema:
                type: string
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              description: |-
                Indicates the length of a document in bytes.
              schema:
                type: integer
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              description: |-
                Indicates the content type of a document as `application/octet-stream`.
              schema:
                type: string
            Document-Id:
              deprecated: false
              allowEmptyValue: false
              description: |
                Indicates the document ID.

                If the query parameter `latest` is `true`, which indicates to download the latest version, the `Document-Id` 
                in the response header may be different than the version specified in the endpoint parameter `docId`.
              example: active!38493.24
              schema:
                type: string

        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: docId
      in: path
      description: |-
        Specifies the ID of the document that is to be downloaded.
      required: true
      schema:
        example: ACTIVE_US!19453.1
        type: string

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/download/{filename}:
    description: |-
      None
    get:
      tags:
      - Documents

      summary: Download a document with filename
      description: |
        Downloads the specified document to a user's local machine and saves it with the provided filename.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read_only` access to a document to download it.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        If the query parameter `latest` is `true` and the endpoint parameter `docId` does not specify the latest version, 
        then the response header `Document-Id` may be different than `docId`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        To download a document without changing its name, see <a href="/#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/download"> GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/download</a>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_download_{filename}
      parameters:
      - *id004
      - name: activity
        in: query
        description: |
          Specifies the activity type for the document download action.

          For the document download action, the parameter `activity` must be specified as `export`,
          so that the activity is tracked correctly in the document history timeline.
          If it is not specified, the default activity type appears as `view` in the document history.
        schema:
          type: string
          default: view
      - name: latest
        in: query
        description: |
          Specifies to download the latest version of a document.

          If `true`, downloads the latest version irrespective of the version number specified in the `docId`.<br>
          If `false`, downloads the version specified in the endpoint parameter `docId`.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Contents of the document.
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              description: |
                Indicates that the document content is displayed as an attachment that is downloaded and saved locally.
                The default format is `Content-Disposition: attachment; filename="filename.jpg"`
              schema:
                type: string
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              description: |-
                Indicates the length of a document in bytes.
              schema:
                type: string
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              description: |-
                Indicates the content type of a document as `application/octet-stream`.
              schema:
                type: integer
            Document-Id:
              deprecated: false
              allowEmptyValue: false
              description: |
                Indicates the document ID.

                If the query parameter `latest` is `true`, which indicates to download the latest version, the `Document-Id` 
                in the response header may be different than the version specified in the endpoint parameter `docId`.
              example: active!38493.24
              schema:
                type: string
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: docId
      in: path
      description: |-
        Specifies the ID of the document to be downloaded.
      required: true
      schema:
        example: ACTIVE_US!19453.1
        type: string
    - name: filename
      in: path
      description: |-
        Specifies the filename for the document to be downloaded.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/declare:
    description: |-
      None
    put:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-declare
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/documents/{docId}/declare
      summary: Declare a document as a record
      description: |
        Declares a document as a record.

        A document is declared as a record to indicate that it is the final version and should not be edited further or deleted.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read-write` access to the document to declare a document as a record.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The declare activity is recorded in the document’s history.
        * A document that is declared as a record can be undeclared within the grace 
          period of 120 hours by a user with at least `read-write` access to the document.
        * A declared document cannot be edited or deleted past the grace period except by an iManage Work system administrator.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To undeclare a document, see <a href="/#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/undeclare">PUT /libraries/{libraryId}/documents/{docId}/undeclare</a>
        * To view the document history, see <a href="/#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/history">GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/history</a>
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_documents_{docId}_declare
      responses:
        200:
          description: Returns an empty body to the client application.
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/copy:
    description: |-
      None
    post:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-copy
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/copy
      summary: Create a copy of a document
      description: |
        Creates a copy of a document in another iManage Work folder.

        This request streams a JSON object that contains the progress of the copy operation and the document profile.
        For more information, see the **Response** section of this request. 

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user must have at least `read-write` access to the document and the folder where the document is to be copied.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * A document can be copied multiple times to the same folder or different folders.
        * If the version or content of the original document changes, it does not have any affect on the copied documents.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_copy
      parameters:
      - *id004
      - name: docId
        in: path
        description: |-
          Specifies the unique identifier of the document to be copied.
        required: true
        schema:
          example: ACTIVE_US!19453.1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                folder_id: ACTIVE!4
              required:
              - folder_id
              type: object
              properties: &id1639
                folder_id:
                  type: string
                  description: |-
                    Specifies the destination iManage Work folder where the document is to be copied.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                description: |-
                  Details about the newly copied document.
                example:
                  data:
                    status:
                    - file_size: 1350144
                      bytes_copied: 1048576
                    - file_size: 1350144
                      bytes_copied: 1350144
                    doc_profile:
                      access: full_access
                      author: ACASE
                      author_description: Andrew Case
                      checksum: SHA256:C0D0A59ABCB0F07D1E4AB6F3EEDF015D160D9D03B215FFE247BCF1A2EF0E237B
                      class: DOC
                      class_description: Document
                      comment: Version 2
                      content_type: D
                      create_date: '2022-01-24T10:07:49Z'
                      database: Active_us
                      default_security: public
                      document_number: 100002248521
                      edit_date: '2022-01-24T10:07:49Z'
                      edit_profile_date: '2022-02-23T19:06:42.669Z'
                      email_type: false
                      extension: pdf
                      file_create_date: '2022-01-24T10:07:49Z'
                      file_edit_date: '2022-01-24T10:07:49Z'
                      id: Active_us!100002248521.1
                      indexable: false
                      is_checked_out: false
                      is_declared: false
                      is_external: false
                      is_external_as_normal: false
                      is_hipaa: false
                      is_in_use: false
                      is_related: false
                      is_restorable: true
                      iwl: iwl:dms=2192BCH3DMS02&&lib=Autodb_unicode&&num=100002248521&&ver=1
                      last_user: ACASE
                      last_user_description: Andrew Case
                      name: System_board_part_locations
                      operator: ACASE
                      operator_description: Andrew Case
                      retain_days: 365
                      size: 17936894
                      type: ACROBAT
                      type_description: Adobe Acrobat Reader
                      version: 1
                      wopi_file_size_warning: false
                      workspace_id: Active_us!2182746
                      workspace_name: Microsoft Vs Google
                      wstype: document
                  warnings:
                  - field: custom3
                    error: required
                required:
                - data
                type: object
                properties: &id1648
                  data:
                    required:
                    - status
                    - doc_profile
                    type: object
                    properties:
                      status:
                        type: array
                        items:
                          required:
                          - bytes_copied
                          - file_size
                          type: object
                          properties:
                            bytes_copied:
                              type: integer
                              description: |-
                                Indicates the number of bytes copied.
                            file_size:
                              type: integer
                              description: |-
                                Indicates the file size in bytes.
                        description: |-
                          Array of document copy status details.
                      doc_profile:
                        properties:
                          access:
                            type: string
                            description: |
                              Indicates  the access permissions to a document or container that is set by the owner or a user with full access.

                              The following are the possible values:

                              |Term|Value|Description|
                              |:---|:---|:---|
                              |no_access|0|The user has no permissions to access the container or document.|
                              |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                              |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                              |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                              |change_security|4|Reserved for system use. Do not use.|
                              |unknown|4|This is an error if received.|
                          author:
                            type: string
                            description: |-
                              Indicates the user ID who created the document.
                          author_description:
                            type: string
                            description: |-
                              Indicates additional information about the document's author.
                          checksum:
                            type: string
                            description: |
                              Indicates the value of the document's checksum.

                              The document checksum is a calculated value based the document's content.
                              It is used to verify the integrity of a document content during transfer.

                              During a file upload, the checksum of the content is calculated and saved along with the document profile.
                              If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
                              If the checksum values do not match, the request fails.
                              If the document profile in the request does not include checksum property, the comparison is not performed.

                              Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                            example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
                          class:
                            type: string
                            description: |
                              Indicates the document's class.<br><br>
                              Document class is categorized by genre, department, region, and so on.<br>
                              To get the document's subclass, see the parameter `subclass`.
                          class_description:
                            type: string
                            description: |-
                              Indicates additional information about the document class.
                          comment:
                            type: string
                            description: |
                              Indicates additional information about the document.
                          content_type:
                            type: string
                            description: |-
                              Indicates the document content type.
                              * `D` represnts normal documents.
                              * `5` represents OLE documents.
                          create_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the date (in ISO 8601 format) when the document was imported into the iManage Work system.<br><br>
                              This date can be different than `file_create_date`.
                              The `file_create_date` is the date when the file was created, which could have been outside of the iManage Work system.
                          custom1:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom1_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom1` property.
                          custom2:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom2_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom2` property.
                          custom3:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom3_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom3` property.
                          custom4:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom4_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom4` property.
                          custom5:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom5_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom5` property.
                          custom6:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom6_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom6` property.
                          custom7:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom7_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom7` property.
                          custom8:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom8_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom8` property.
                          custom9:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom9_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom9` property.
                          custom10:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom10_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom10` property.
                          custom11:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom11_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom11` property.
                          custom12:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom12_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom12` property.
                          custom13:
                            type: string
                            description: |-
                              Indicates the value of `custom13` property.
                          custom14:
                            type: string
                            description: |-
                              Indicates the value of `custom14` property.
                          custom15:
                            type: string
                            description: |-
                              Indicates the value of `custom15` property.
                          custom16:
                            type: string
                            description: |-
                              Indicates the value of `custom16` property.
                          custom17:
                            type: number
                            description: |-
                              Indicates the value of `custom17` property.
                            format: double
                          custom18:
                            type: number
                            description: |-
                              Indicates the value of `custom18` property.
                            format: double
                          custom19:
                            type: number
                            description: |-
                              Indicates the value of `custom19` property.
                            format: double
                          custom20:
                            type: number
                            description: |-
                              Indicates the value of `custom20` property.
                            format: double
                          custom21:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Indicates the value of `custom21` property in ISO 8601 date format.
                          custom22:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Indicates the value of `custom22` property in ISO 8601 date format.
                          custom23:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Indicates the value of `custom23` property in ISO 8601 date format.
                          custom24:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Indicates the value of `custom24` property in ISO 8601 date format.
                          custom25:
                            type: boolean
                            description: |-
                              Indicates the boolean value of `custom25` property.
                          custom26:
                            type: boolean
                            description: |-
                              Indicates the boolean value of `custom26` property.
                          custom27:
                            type: boolean
                            description: |-
                              Indicates the boolean value of `custom27` property.
                          custom28:
                            type: boolean
                            description: |-
                              Indicates the boolean value of `custom28` property.
                          custom29:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom29_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom29` property.
                          custom30:
                            type: string
                            description: |
                              Indicates the alias for this custom property.
                          custom30_description:
                            type: string
                            description: |-
                              Indicates additional information about the `custom30` property.
                          custom31:
                            type: string
                            description: |-
                              Reserved. Do not use.
                          custom31_description:
                            type: string
                            description: |-
                              Reserved. Do not use.
                          database:
                            type: string
                            description: |-
                              Indicates the library (formerly called a database) where the document is stored.
                          declared_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
                              A record can no longer be edited or deleted, except by an iManage system administrator.
                          default_security:
                            enum: ["public", "view", "private"]
                            type: string
                            description: |
                              Indicates the default security level of a document.

                              |Value|Description|
                              |---|---|
                              |view|All users have read-only access to the document, unless they are explicitly denied access (`no_access`) or granted access level of `read_write` or `full_access`.|
                              |private|Only viewable by the user who created the document, and other users or groups to whom access is granted explicitly.|
                              |public|All users can view and edit the document unless explicitly excluded.|
                          document_number:
                            type: integer
                            description: |-
                              Indicates the document number of a document.

                              Document number is the number assigned to a document when it is imported to iManage Work,
                              and appears as part of the document ID.<br>
                              Document ID is the combination of library ID, document number, and document version.<br>
                              For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                          edit_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the most recent date (in ISO 8601 format) when the document was edited.
                          edit_profile_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the date (in ISO 8601 format) when the document profile was last changed.
                          extension:
                            type: string
                            description: |
                              Indicates the file name extension, also called the application extension, of the document.<br><br>
                              For example: doc, xls, pdf.
                          file_create_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the date (in ISO 8601 format) when the file was created.<br><br>
                              The file could have been created outside of the iManage Work system.
                              This date can be different than `create_date`.
                              The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
                          file_edit_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |
                              Indicates the date (in ISO 8601 format) when the file was last edited.<br><br>
                              The file could have been edited before being uploaded into the iManage Work system.
                          id:
                            type: string
                            description: |-
                              Indicates the document ID.
                          is_in_use:
                            type: boolean
                            description: |
                              Indicates if the document is in use.<br><br>
                              If `true`, the document is in use.<br>
                              If `false`, the document is not in use.
                          in_use_by:
                            type: string
                            description: |
                              Indicates the user ID who is currently working on the document or has it checked out.<br><br>
                              If empty, the document is not currently being worked on, or is not checked out.
                          in_use_by_description:
                            type: string
                            description: |-
                              Indicates additional information or notes about the user who is currently working on the document or who has it checked out.
                          is_checked_out:
                            type: boolean
                            description: |
                              Indicates if the document is checked out.<br><br>
                              If `true`, the document is checked out.<br>
                              If `false`, the document is not checked out.
                          is_declared:
                            type: boolean
                            description: |
                              Indicates if the document has been declared as a record.<br><br>
                              A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br>

                              If `true`, the document is declared as a record.<br>
                              If `false`, the document is not declared as a record.<br><br>
                              For the date when the document was declared, see the field `declared_date`.
                          is_external:
                            type: boolean
                            description: |
                              Indicates if the document is visible to external users.<br><br>
                              If `true`, the document is visible to external users.<br>
                              If `false`, the document is not visible to external users.
                          is_external_as_normal:
                            type: boolean
                            description: |
                              Indicates if the document is external as normal.<br><br>
                              If `true`, the document is external as normal.<br>
                              If `false`, the document is not external as normal, and is considered a normal document.
                          is_hipaa:
                            type: boolean
                            description: |-
                              Indicates the document is encrypted.<br><br>
                              If `true`, the document is encrypted.<br>
                              If `false`, the document is not encrypted.

                              Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                              Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                              This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                          is_related:
                            type: boolean
                            description: |
                              Indicates the document is related to another document.<br><br>
                              If `true`, the document is related to another document.<br>
                              If `false`, the document is not related to another document.
                          is_restorable:
                            type: boolean
                            description: |
                              Indicates that the document can be restored if archived.<br><br>
                              If `true`, the archived document can be restored.<br>
                              If `false`, the archived document cannot be restored.
                          iwl:
                            type: string
                            description: |
                              Indicates the iManage Work Link (iWL) for the document.<br><br>
                              This is used to open it in Protected View Mode by the user who has Read/Write or Full Access.
                          last_user:
                            type: string
                            description: |-
                              Indicates the user ID who most recently edited the document.
                          last_user_description:
                            type: string
                            description: |-
                              Indicates additional information about the last user.
                          name:
                            type: string
                            description: |
                              Indicates the file name of the document.<br><br>
                              It is excluded from administrator search results.
                          operator:
                            type: string
                            description: |-
                              Indicates the user ID who has checked out the document or is currently editing its profile.
                          operator_description:
                            type: string
                            description: |-
                              Indicates additional information about the operator.
                          retain_days:
                            type: integer
                            description: |-
                              Indicates the number of days before the inactive document is eligible for archiving.
                          size:
                            type: integer
                            description: |-
                              Indicates the size of the document in bytes.
                          subclass:
                            type: string
                            description: |
                              Indicates the document's subclass.<br><br>
                              For example, 'Employment Letter' can be a subclass of the 'Human Resources' document class.<br>
                              To get the document's class, see the parameter `class`.
                          subclass_description:
                            type: string
                            description: |-
                              Indicates additional information about the document's subclass.
                          type:
                            type: string
                            description: |
                              Indicates the document type.<br><br>
                              For example, WORD for Microsoft Word.
                          type_description:
                            type: string
                            description: |-
                              Indicates additional information about the document's type.
                          version:
                            type: integer
                            description: |-
                              Indicates the version number of the document.
                          workspace_id:
                            type: string
                            description: |-
                              Indicates the workspace ID where the document is located.
                          workspace_name:
                            type: string
                            description: |-
                              Indicates the name of the workspace where the document is located.
                          wstype:
                            $ref: '#/components/schemas/Documents.wsType'
                          bcc:
                            type: string
                            description: |-
                              Only applicable to emails. Indicates recipients to whom the email is blind carbon copied.
                          cc:
                            type: string
                            description: |-
                              Only applicable to emails. Indicates recipients to whom the email is carbon copied.
                          conversation_id:
                            type: string
                            description: |-
                              Indicates the conversation ID of the email. Only applicable to emails.
                          conversation_name:
                            type: string
                            description: |-
                              Indicates the user-friendly name of the email conversation thread. Only applicable to emails.
                          from:
                            type: string
                            description: |-
                              Indicates the sender of the email. Only applicable to emails.
                          has_attachment:
                            type: boolean
                            description: |
                              Indicates if the email has attachments. Only applicable to emails.

                              If `true`, the email has at least one attachment.<br>
                              If `false`, the email has no attachments.
                          received_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Only applicable to emails. The date (in ISO 8601 format) when the email was received.
                          sent_date:
                            pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                            type: string
                            description: |-
                              Only applicable to emails. The date (in ISO 8601 format) when the email was sent.
                          to:
                            type: string
                            description: |-
                              Indicates the recipient of the email. Only applicable to emails.
                          lock_type:
                            type: string
                            enum: ["S", "E"]
                            description: |-
                              Indicates the type of lock applied when the document was checked out.
                              This field is applicable only to checked out documents.

                              |Value|Lock Type|Description|
                              |---|---|---|
                              |S|Shared|The document was locked for a co-authoring session.|
                              |E|Exclusive|The document was locked for editing by a single user.|
                          co_authors:
                            type: array
                            description: |-
                              Indicates a list of co-authors of a document that was checked out for a co-authoring session.

                              This field is applicable only when the document is locked for co-authoring.
                            items:
                              type: string
                          wopi_file_size_limit:
                            type: integer
                            description: |-
                              Indicates the maximum file size (in bytes) supported for co-authoring.
                          wopi_file_size_warning:
                            type: boolean
                            description: |-
                              Indicates if the file size is approaching its upper limit for co-authoring.

                              If `true`, the file size is approaching its upper limit.<br>
                              If `false`, the file size is well within the upper limit.
                        required:
                        - author
                        - create_date
                        - database
                        - default_security
                        - document_number
                        - extension
                        - file_create_date
                        - file_edit_date
                        - id
                        - is_hipaa
                        - iwl
                        - size
                        - type
                        - version
                        type: object
                        additionalProperties: true
                  warnings:
                    type: array
                    items:
                      required:
                      - field
                      - error
                      type: object
                      properties:
                        field:
                          type: string
                          description: |-
                            Field with a validation warning.
                        error:
                          type: string
                          description: |-
                            Type of the error associated with the field.
                      additionalProperties: false
                additionalProperties: true
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout:
    description: |-
      None
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-checkout
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout
      summary: Get checkout details
      description: |
        Gets details of the specified checked-out document.

        The response includes details such as author, the user who checked it out, checkout date, checkout location, and so on.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_only` access on a document to get its checkout details.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The term check-out describes the process of getting a version of a document from a library.
        * The term check-in describes the process of adding a new or modified document to a library.
        * When a document is checked out, it is locked so other users must wait for the document to be checked in before they can edit it. 
          Therefore, by checking out a document, a user can prevent others from editing it.
        * By checking in a document, the user allows other users to edit the document, without needing to worry about overriding changes that others have made.
        * While a document is checked out, other users can see only the last version that was checked in.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_{docId}_checkout
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    alias: ''
                    app_name: web
                    author: ACASE
                    checkout_comment: CheckOut for Testing
                    checkout_date: '2019-11-08T18:30:00Z'
                    checkout_description: URI
                    checkout_due_date: '2019-11-09T14:07:03Z'
                    checkout_location: SHIVAR-WS92
                    checkout_path: ..\old.txt
                    checkout_portable: false
                    database: DS
                    document_number: 81
                    in_use_by: ACASE
                    in_use_by_description: Andrew Case
                    version: 1
                    lock_type: E
                required:
                - data
                type: object
                properties: &id1638
                  data:
                    required:
                    - app_name
                    - alias
                    - document_number
                    - version
                    - author
                    - checkout_due_date
                    - checkout_path
                    - checkout_comment
                    - checkout_description
                    - checkout_location
                    - checkout_portable
                    - database
                    - in_use_by
                    - in_use_by_description
                    - lock_type
                    type: object
                    properties:
                      alias:
                        type: string
                        description: |-
                          Indicates the alias by which documents of this type are identified in iManage Work.
                      app_name:
                        type: string
                        description: |-
                          Indicates the application that checked out the document.

                          For example, Office for the web.
                      author:
                        type: string
                        description: |-
                          Indicates the ID of the user who created the document.
                      co_authors:
                        type: array
                        items:
                          type: string
                        description: |-
                          Indicates a list of IDs of co-authors on a document that was checked out for a co-authoring session.
                            
                          It is returned only when a document is locked for co-authoring.
                      checkout_date:
                        type: string
                        description: |-
                          Indicates the date when the document was last checked out.
                      checkout_due_date:
                        type: string
                        description: |-
                          Indicates the intended due date (in ISO 8601 format) for checking in the document.

                          This is just an information field and serves as a guideline for users to check in the document. 
                          It is not used by the iManage Work system to automatically check-in or enforce a check-in date.

                      checkout_path:
                        type: string
                        description: |-
                          Indicates the path of the folder where the document is checked out. By default, it is checked out to NRPortbl folder for iManage Work classic clients. For iManage Work, under user_profile/roaming/recent folder.
                      checkout_comment:
                        type: string
                        description: |-
                          Indicates any additional information provided by the user when the document is checked out.
                      checkout_description:
                        type: string
                        description: |-
                          Indicates the name of the document.
                      checkout_location:
                        type: string
                        description: |-
                          Indicates the name or IP address of the computer where the document is to be checked out.
                      checkout_portable:
                        type: boolean
                        description: |-
                          Indicates if the document can be checked out in portable mode on your local machine, so that you can work on it when disconnected from the network.
                      database:
                        type: string
                        description: |-
                          Indicates the name of the library where the document is stored.
                      document_number:
                        type: integer
                        description: |-
                          Indicates the document number of a document.

                          Document number is the number assigned to a document when it is imported to iManage Work,
                          and appears as part of the document ID.<br>
                          Document ID is the combination of library ID, document number, and document version.<br>
                          For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
                      in_use_by:
                        type: string
                        description: |-
                          Indicates the user who checked out the document.
                      in_use_by_description:
                        type: string
                        description: |-
                          Indicates the full name of a user who checked out the document.
                      lock_type:
                        type: string
                        description: |-
                          Indicates the type of lock used for the document checkout.

                          The possible values are:
                          * S: The document was locked for a co-authoring session.
                          * E: The document was locked for editing by a single user.
                        enum: ["S", "E"]
                      version:
                        type: integer
                        description: |-
                          Indicates the version number of the document.
                    additionalProperties: false
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    post:
      tags:
      - Documents
  #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-checkout
  #summary: POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout
      summary: Check out and download a document
  #  TODO: TD-1689 (https://imanage-jira.atlassian.net/browse/TD-1689)
      description: |-
        Checks out and downloads a document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * When a user needs to work on a document in a non-integrated application or away from the network connection, 
          it can be checked out from a library for using it outside of the iManage Work system.
        * When a document is checked out, a local copy of it is created in the specified location.
          The user can edit it using the local applications, and then check it back into iManage Work.
        * A user can checkout a particular version of a document out of multiple versions. 
        * While the document is checked out, other users have `read-only` access to the document until it is checked in.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_write` access on a document to check out and download it.

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_checkout
      requestBody:
        content:
          application/json:
            schema:
              example:
                appname: iOS_client
                comments: Checking this out until I finish the case.
                due_date: '2017-08-18T04:46:00Z'
              required:
              - appname
              type: object
              properties: &id1640
                appname:
                  type: string
                  description: |-
                    Specifies the application name that checks out the document.
                comments:
                  type: string
                  description: |-
                    Specifies any additional information provided by the user while checking out the document.
                due_date:
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  type: string
                  description: |-
                    Specifies the intended due date (in ISO 8601 format) for checking in the document.

                    This date serves as a guideline for users to check in the document. 
                    It is not used by the iManage Work system to automatically check-in or enforce a check-in date.
                location:
                  type: string
                  description: |-
                    Specifies the name or IP address of the computer where the document is to be checked out.
                  maxLength: 254
                path:
                  type: string
                  description: |-
                    Specifies the local file system folder into which the document is to be checked out on a user's machine.
                  maxLength: 254
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
        409: *id511
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Documents
  #- customers-{customerId}-libraries-{libraryId}-documents-{docId}-checkout
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/documents/{docId}/checkout
      summary: Update checkout path
      description: |-
        Updates the checkout path of a checked-out document.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user is not required to have any special privileges to execute this request.<br>
        However, the user must have at least `read_write` access on a document to update the checkout path.

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_documents_{docId}_checkout
      requestBody:
        content:
          application/json:
            schema:
              example:
                path: C:\Users\Andrew Case\AppData\Roaming\iManage\Work\Recent\Test
                  workspace 1\Agreement(100001457756.1).docx
              type: object
              properties: &id1641
                path:
                  type: string
                  description: |-
                    Specifies the local file system folder into which the document is to be checked out on a user's machine.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/docId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-shortcuts:
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}:
    description: |-
      None
    delete:
      tags:
      - Document Shortcuts
    #- customers-{customerId}-libraries-{libraryId}-document-shortcuts-{shortcutId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}
      summary: Delete document shortcut
      description: |-
        Deletes the document shortcut link associated with a shortcut ID.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_document-shortcuts_{shortcutId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
      parameters:
      - *id004
    patch:
      tags:
      - Document Shortcuts
    #- customers-{customerId}-libraries-{libraryId}-document-shortcuts-{shortcutId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}
      summary: Update document shortcut
      description: |-
        Updates the shortcut link with the JSON for a document associated with the provided shortcut ID.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_document-shortcuts_{shortcutId}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              type: object
              properties: &id1513
                name:
                  type: string
                  pattern: ^.*\S.*$
                  description: |-
                    Name for the document shortcut.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - name
                - id
                - database
                - target
                - wstype
                type: object
                properties: *id398
                additionalProperties: true
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}/move:
    description: |-
      None
    post:
      tags:
      - Document Shortcuts
    #- customers-{customerId}-libraries-{libraryId}-document-shortcuts-{shortcutId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}/move
      summary: Move document shortcut
      description: |-
        Moves the document shortcut to the specified container destination.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_document-shortcuts_{shortcutId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: active_us!123456
              required:
              - destination_id
              type: object
              properties: &id1647
                destination_id:
                  type: string
                  description: |-
                    Specifies the destination container to move the document shortcut to.<br><br>

                    |Value|Description|
                    |:---|:---|
                    |container ID|The container ID is the destination container to move the document shortcut to. For example, active_us!5446|
                    |my-favorites|The My Favorites folder is the destination container to move the document shortcut to. This value is the literal *my-favorites*.|
                  example: "active_us!123 | my-favorites"
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    id: active_us!513937.1
                    iwl: iwl:dms=ajubalaw&&lib=active&&num=513937&&ver=1
                    name: Enron Audit Engagement Contract.docx
                    parent_id: active_us!846
                    target:
                      database: active_us
                      document_number: 439292
                      id: active_us!439292.1
                      name: Enron Audit Engagement Contract.docx
                      type: WORDX
                      version: 1
                      wstype: document
                    wstype: document_shortcut
                required:
                - data
                type: object
                properties: *id397
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id379
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}/operations:
    description: |-
      None
    get:
      tags:
      - Document Shortcuts
    #- customers-{customerId}-libraries-{libraryId}-document-shortcuts-{shortcutId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}/operations
      summary: Get document shortcut operations
      description: |
        Returns operations the current user is allowed to perform on the specified document shortcut.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on document shortcut active_us!532:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/document-shortcuts/active_us!532/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_document-shortcuts_{shortcutId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    update: true
                    move: true
                    remove: true
                required:
                - data
                type: object
                properties: *id535
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-shortcuts/{shortcutId}/path:
    description: |-
      None
    get:
      tags:
      - Document Shortcuts
      summary: Get document shortcut path
      description: |
        Lists the parent folders of a document-shortcut from the root workspace down to the parent.
        All the key properties of these folders are also listed.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_document-shortcuts_{shortcutId}_path
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2019-12-09T14:16:55.925Z'
                    database: active_us
                    default_security: private
                    edit_date: '2019-12-09T15:46:05.925Z'
                    has_subfolders: true
                    id: active_us!15289
                    is_external: false
                    is_external_as_normal: false
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Google vs Microsoft
                    owner: ACASE
                    owner_description: Andrew Case
                    document_number: 100001083027
                    is_declared: false
                    is_hipaa: false
                    iwl: iwl:dms=ajubalaw.com&&lib=active_us&&num=100001083027&&ver=1
                    retain_days: 365
                    version: 1
                    wstype: workspace
                  - database: active_us
                    default_security: inherit
                    edit_date: '2020-01-17T22:01:44.643Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!17218
                    inherited_default_security: private
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Administrative Record
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!15289
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                  - database: active_us
                    default_security: public
                    edit_date: '2020-06-05T03:09:09.933Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!20631
                    inherited_default_security: public
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Employment Agreements
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!17218
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                required:
                - data
                type: object
                properties: *id536
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        Unique ID of a document-shortcut.
      required: true
      schema:
        example: "ACTIVE!1"
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-artifacts:
    post:
      tags:
      - Document Artifacts
  #- customers-{customerId}-libraries-{libraryId}-document-artifacts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/document-artifacts
      summary: Create document artifact
      description: |
        Creates a document artifact associated with a document number and version. <br>

        This requires tier 2 administrator privileges.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_document-artifacts
      requestBody:
        content:
          application/json:
            schema:
              example:
                source:
                  database: active
                  id: active!1001.1
                destination:
                  database: inactive
                  id: inactive!1160.1
              required:
              - source
              - destination
              type: object
              properties: &id645
                source:
                  required:
                  - database
                  - id
                  type: object
                  properties:
                    database:
                      type: string
                      description: |-
                        Name of the iManage Work source library from which the document was moved by the import tool.
                    id:
                      type: string
                      description: |-
                        ID of the document in the source location, that is, iManage Work library.
                  description: |-
                    Information about the source document that was moved to the archive library.
                destination:
                  required:
                  - database
                  - id
                  type: object
                  properties:
                    database:
                      type: string
                      description: |-
                        Name of the destination archive library where the document was moved by the import tool.
                    id:
                      type: string
                      description: |-
                        ID of the document in the destination archive library.
                  description: |-
                    Information about the destination document that was moved from the iManage Work library.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/document-artifacts/{docId}:
    description: |-
      None
    get:
      tags:
      - Document Artifacts
  #- customers-{customerId}-libraries-{libraryId}-document-artifacts-{docId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/document-artifacts/{docId}
      summary: Get document artifact
      description: |-
        Gets the document artifact associated with a document number and version.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_document-artifacts_{docId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: inactive
                    id: inactive!1160.1
                required:
                - data
                type: object
                properties: &id646
                  data:
                    required:
                    - database
                    - id
                    type: object
                    properties:
                      database:
                        type: string
                        description: |-
                          The destination archive library where the document was moved by an import tool.
                      id:
                        type: string
                        description: |-
                          ID of the document in the destination archive library.
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Document Artifacts
  #- customers-{customerId}-libraries-{libraryId}-document-artifacts-{docId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/document-artifacts/{docId}
      summary: Delete document artifact
      description: |
        Deletes the document artifact associated with a document number and version. <br>

        This requires tier 2 administrator privileges.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_document-artifacts_{docId}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/directory-sync/users:
    patch:
      tags:
      - Library Directory Sync Groups and Users
  #- customers-{customerId}-libraries-{libraryId}-directory-sync-users
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/directory-sync/users
      summary: Add or update library users
      description: |
        Submits a collection of users to be added or updated in iManage Work.
        The delete action is achieved by updating `allow_logon` as `false`.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_directory-sync_users
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                Collection of users to be added or updated.
              example:
              - allow_logon: true
                directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
              - allow_logon: false
                directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDG
              - allow_logon: true
                directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDH
              - allow_logon: false
                directory_id: ''
              type: array
              items: &id1566
                required:
                - directory_id
                type: object
                properties:
                  directory_id:
                    type: string
                    description: |-
                      ID from external Active Directory Federation Services (ADFS) repository or other external repository. Maximum length is 254.
                      Specifies users based on directory IDs that are set by an organization's directory service.<br><br>
                      Multiple values can be included using a comma-separated list.
                  allow_logon:
                    type: boolean
                    description: |
                      Specifies the user is allowed to sign in.<br><br>
                      If `true`, the user is allowed to sign in.<br>
                      If `false`, the user is not allowed to sign in.<br>
                      If omitted, the value is `false`.<br><br>
                      Required if adding a user.<br>
                      Optional if updating a user.
                additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                  - directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDG
                  - directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDH
                  warnings:
                  - data:
                      allow_logon: false
                      directory_id: ''
                      email: REACTIVE_ADMIN@AJUBALAW.COM
                      id: reactive_nrtadmin
                      user_id_ex: reactive_nrtadmin
                      ds_hash: 44324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    code: NRC_INVALID_PARAM
                    error: Missing directory ID for AD user
                    field: directory_id
                required:
                - data
                type: object
                properties: &id578
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.directorySyncUploadResponseDatum'
                    description: |-
                      An array of successfully imported users.
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Users.warning'
                    description: |-
                      An array of warning messages indicating the import errors.
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/directory-sync/groups:
    description: |
      The directory sync APIs support bulk import of global users and groups for the customers into iManage Work system. <br>
      The directory sync runs regularly per the configured sync-schedule for the customer's directory-sync client application.
      During each such sync, only the affected records are added, updated, or disabled. 

      The directory sync client application first fetches hashes for all the Microsoft Active Directory users, groups, and group memberships from iManage.
      The hashes are encrypted values for the original user and group profile data. Then it calculates hashes for users, groups,
      and group memberships based on the current information in the customer’s identity provider (IDP) and the client application’s configuration.
      The directory sync client then compares the calculated hashes to the ones it retrieved from iManage in order to determine which users,
      groups, and group memberships need to be added, updated, or disabled. After determining the changes, it sends updates only for
      the affected users, groups, and group memberships to iManage Work.
    patch:
      tags:
      - Library Directory Sync Groups and Users
  #- customers-{customerId}-libraries-{libraryId}-directory-sync-groups
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/directory-sync/groups
      summary: Add or update library groups
      description: |
        Submits a collection of groups to be added or updated in iManage Work.
        The delete action is achieved by updating the group status as `enabled=false`.
      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_directory-sync_groups
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                Collection of groups to be added or updated.
              example:
              - enabled: true
                directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 1,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 1
                is_external: false
                id: group 1
                ds_hash: 11324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: false
                directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 2,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 2
                is_external: false
                id: group 2
                ds_hash: 22324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: true
                directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 3,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 3
                is_external: false
                id: group 3
                ds_hash: 33324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: false
                directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 4
                is_external: false
                id: group 4
                ds_hash: ''
                ds_members_hash: ''
              type: array
              items: &id579
                required:
                - directory_id
                - ds_hash
                - ds_members_hash
                type: object
                properties:
                  directory_id:
                    maxLength: 254
                    type: string
                    description: |
                      ID from the external ADFS repository or external repository.
                      The directory sync client application retrieves users and groups only if they are enabled and have a `directory_id`.
                  ds_hash:
                    maxLength: 64
                    type: string
                    description: |-
                      Secure Hash Algorithm (SHA) hash of the profile fields for the group computed by the directory sync client application.
                  ds_members_hash:
                    maxLength: 64
                    type: string
                    description: |-
                      SHA hash of the list of group members computed by the directory sync client application.
                  id:
                    maxLength: 254
                    type: string
                    description: |
                      ID or short name of the group as defined in the source directory.
                      Required if its a new record, and optional if its a record to update.
                  enabled:
                    type: boolean
                    description: |
                      Indicates if the group is enabled, and it is added to Access Control Lists on documents or containers.
                      Required if its a new record, and optional if its a record to update.
                  distinguished_name:
                    maxLength: 254
                    nullable: true
                    type: string
                    description: |
                      Unique name of the object that represents the fully qualified path of groups that trace the entry back to the root of the LDAP tree.<br><br>
                      For example: cn=username,dc=example,dc=ajubalaw,dc=com.<br><br>
                      Maximum length: 254.<br>
                      The field supports null as a value.
                  full_name:
                    maxLength: 254
                    nullable: true
                    type: string
                    description: |
                      Full name of the group.
                      This field supports a null value.
                  is_external:
                    type: boolean
                    description: |
                      Specifies  if the group is intended for external users.

                      If `true`, the group is intended for external users.<br>
                      If `false`, the group is intended for regular users (non-external users).

                      For more information, see <a href="#overview--external-users"> External users</a>.
                  group_nos:
                    nullable: true
                    type: integer
                    description: |-
                      Specifies the type of user.

                      The allowed values are:

                      | Value | Description |
                      | :-: | - |
                      | 2 | Virtual User |
                      | 6 | Enterprise user |
                  group_domain:
                    maxLength: 254
                    nullable: true
                    type: string
                    description: |
                      Specifies  the fully qualified domain name for the group's directory service.

                      It is the metadata from LDAP server that determines the unit to which the group belongs to.
                      This information is mainly used by iManage system administrators.
                      This field supports a null value.
                additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                  - directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDF
                  warnings:
                  - data:
                      enabled: true
                      distinguished_name: cn=group 3,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 3
                      is_external: false
                      id: group 3
                      ds_hash: 33324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                      ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
                    code: NRC_INVALID_PARAM
                    error: Missing directory ID for AD group
                    field: directory_id
                  - data:
                      enabled: false
                      directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                      distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 4
                      is_external: false
                      id: group 4
                      ds_hash: ''
                      ds_members_hash: ''
                    code: NRC_INVALID_PARAM
                    error: Missing group hash value
                    field: ds_hash
                  - data:
                      enabled: false
                      directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                      distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 4
                      is_external: false
                      id: group 4
                      ds_hash: ''
                      ds_members_hash: ''
                    code: NRC_INVALID_PARAM
                    error: Missing group members hash value
                    field: ds_members_hash
                required:
                - data
                type: object
                properties: &id580
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Groups.directorySyncUploadResponseDatum'
                    description: |-
                      Array of successfully imported groups.
                  warnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Groups.warning'
                    description: |-
                      Array of warning messages indicating the import errors.
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/directory-sync/groups/hashes:
    description: |-
      None
    get:
      tags:
      - Library Directory Sync Groups and Users
  #- customers-{customerId}-libraries-{libraryId}-directory-sync-groups-hashes
  #summary: GET /customers/{customerId}/libraries/{libraryId}/directory-sync/groups/hashes
      summary: Get library group hashes
      description: |
        Gets directory sync hashes for the enabled groups.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_directory-sync_groups_hashes
      parameters:
      - *id004
      - *id083
      - name: limit
        in: query
        description: |-
          Maximum number of group hashes to be returned. Default value is `500`.
        schema:
          type: integer
          default: 500
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 700daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 70024dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    ds_members_hash: 80024dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    enabled: true
                  - directory_id: 733daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 73324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    ds_members_hash: 83324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    enabled: true
                  cursor: A1B2C3
                required:
                - data
                type: object
                properties: &id581
                  data:
                    type: array
                    items:
                      required:
                      - directory_id
                      - ds_hash
                      - ds_members_hash
                      - enabled
                      type: object
                      properties:
                        directory_id:
                          type: string
                          description: |
                            ID from the external ADFS repository or external repository. <br>
                            The directory sync client application retrieves groups only if they are enabled and have a `directory_id`.
                        ds_hash:
                          type: string
                          description: |-
                            Secure Hash Algorithm (SHA) hash of the profile fields for the group computed by the directory sync client application.
                        ds_members_hash:
                          type: string
                          description: |-
                            SHA hash of the list of group members computed by the directory sync client application.
                        enabled:
                          type: boolean
                          description: |
                            Indicates if the group is enabled. In the current implementation, it only returns enabled groups.
                            Therefore, `enabled` property is always set to `true`.
                      additionalProperties: true
                    description: |-
                      A paginated collection of all the enabled ADFS managed groups containing directory ID, directory sync hash, and group members hash.
                  cursor:
                    type: string
                    description: |
                      References the last group returned in the list. The cursor value is set only if server finds more records than the request limit
                      parameter defined. It indicates that the client application must make additional requests to retrieve the remaining records.
                      The cursor value is not set if the number of records on the server is less than the request limit.

                      For more information, see <a href="#overview--pagination">Pagination</a>.

        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/directory-sync/groups/{groupAlias}/members:
    description: |-
      None
    get:
      tags:
      - Library Directory Sync Groups and Users
  #- customers-{customerId}-libraries-{libraryId}-directory-sync-groups-{groupAlias}-members
  #summary: GET /customers/{customerId}/libraries/{libraryId}/directory-sync/groups/{groupAlias}/members
      summary: Get library group members
      description: |-
        Gets a list of directory IDs of the users belonging to the specified group and library.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_directory-sync_groups_{groupAlias}_members
      parameters:
      - *id004
      - *id083
      - name: limit
        in: query
        description: |-
          Maximum number of group member hashes to be returned.
        schema:
          type: integer
          default: 500
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 700daf0c-9c8c-4a4d-adee-79de6d0629ca
                  - directory_id: 733daf0c-9c8c-4a4d-adee-79de6d0629ca
                  cursor: A1B2C3
                required:
                - data
                type: object
                properties: &id582
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Groups.directorySyncGroupMember'
                    description: |
                      A paginated collection of directory IDs of the AD members of the group. If there are non-AD members (without the directory ID), they are not
                      returned in this list.
                  cursor:
                    type: string
                    description: |
                      References the last group member returned in the list. The cursor value is set only if server finds more records than the request
                      limit parameter defined. It indicates that the client application must make additional requests to retrieve the remaining records.
                      The cursor value is not set if the number of records on the server is less than the request limit.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: groupAlias
      in: path
      description: |-
        The group alias.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/history/available-activities:
    description: |
      The available-activities API lists the available document history activity types. <br>
    get:
      tags:
      - Documents
    #- customers-{customerId}-libraries-{libraryId}-documents-history-available-activities
  #summary: GET /customers/{customerId}/libraries/{libraryId}/documents/history/available-activities
      summary: Gets the list of all activity types available for documents.
      description: |-
        Returns the list of activities that could be performed on a document.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_documents_history_available-activities
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity: LAUNCH
                    activity_code: 0
                  - activity: VIEW
                    activity_code: 1
                  - activity: CHECKOUT
                    activity_code: 2
                  - activity: CHECKIN
                    activity_code: 3
                  - activity: PROFEDIT
                    activity_code: 4
                  - activity: DOCCLOSE
                    activity_code: 5
                  - activity: NEWDOCUMENT
                    activity_code: 6
                  - activity: NEWDOCVER
                    activity_code: 7
                  - activity: SECURITY_CHANGE
                    activity_code: 8
                  - activity: COPYDOC
                    activity_code: 9
                  - activity: PRINT
                    activity_code: 10
                  - activity: MAIL
                    activity_code: 11
                  - activity: ECHO_SYNC
                    activity_code: 12
                  - activity: DELETEDOC
                    activity_code: 13
                  - activity: PURGEDOC
                    activity_code: 14
                  - activity: ARCHIVEDOC
                    activity_code: 15
                  - activity: RESTOREDOC
                    activity_code: 16
                  - activity: RELEASEDOC
                    activity_code: 17
                  - activity: EXPORT
                    activity_code: 18
                  - activity: MODIFY
                    activity_code: 19
                  - activity: EDITTIME
                    activity_code: 20
                  - activity: SHRED
                    activity_code: 21
                  - activity: DECLARE
                    activity_code: 22
                  - activity: MIGRATED
                    activity_code: 23
                  - activity: UNDECLARE
                    activity_code: 24
                  - activity: RECONCILE
                    activity_code: 25
                  - activity: REMOVEFROMFOLDER
                    activity_code: 26
                  - activity: WORKFLOWEVENT
                    activity_code: 28
                  - activity: WORKFLOWATTACH
                    activity_code: 29
                  - activity: WORKFLOWDETACH
                    activity_code: 30
                  - activity: VIEW_THUMBNAIL
                    activity_code: 31
                  - activity: OFFLINE_DOWNLOAD
                    activity_code: 33
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      required:
                      - activity
                      - activity_code
                      type: object
                      properties:
                        activity:
                          type: string
                          description: |
                            The **activity** of an operation performed on documents. The **activity** is the upper case activity name as detailed in the API documentation activity code tables.

                            A list of recent activities that have been performed on documents.<br><br>
                            The values from the Common names in the table below are case insensitive.
                            Two or more activities may be specified in a comma-separated list, such as `activity=view,edit`.
                            The following are the activity values and their descriptions&colon;
                            * **Activity** is the symbolic name for the activity, and appears in the `activity` field of the response structure.
                            * **Common Name** is the friendly name that appears in the response structure.
                            * **Code** is the numeric value of the activity, and appears in the `activity_code` field of the response structure.
                            * **Description** is the explanation of the activity.<br><br>

                            |Activity|Common Name|Code|Description|
                            |---|---|---|---|
                            |LAUNCH|Open|0|Application was launched or opened.|
                            |VIEW|View|1|The item was viewed.|
                            |CHECKOUT|Checkout|2|The item was checked out.|
                            |CHECKIN|Checkin|3|The item was checked in.|
                            |PROFEDIT|Changed Profile|4|The item had a change in its profile.|
                            |DOCCLOSE|Close|5|The document was closed.|
                            |NEWDOCUMENT|Create|6|The document was created.|
                            |NEWDOCVER|Create Version|7|The document's version was updated.|
                            |SECURITY_CHANGE|Change Security|8|The item's security was changed.|
                            |COPYDOC|Copy|9|The document was copied.|
                            |PRINT|Print|10|The item was printed.|
                            |MAIL|Mail|11|The item was mailed.|
                            |ECHO_SYNC|Synchronize|12|The item was a synchronize event with the item's echo directory.|
                            |DELETEDOC|Delete|13|The document was deleted.|
                            |PURGEDOC|Purge|14|The document was purged. This is for legacy systems only.|
                            |ARCHIVEDOC|Archive|15|The document was archived.|
                            |RESTOREDOC|Restore|16|The document was restored.|
                            |RELEASEDOC|Release|17|The document was released.|
                            |EXPORT|Export|18|The item was imported.|
                            |MODIFY|Modify|19|The item was modified.|
                            |EDITTIME|Edit Time|20|The time spent editing the item.|
                            |SHRED|Shred|21|The item was shredded.|
                            |DECLARE|Declared|22|The item was declared for archiving.|
                            |MIGRATED|Migrated|23|The item was migrated.|
                            |UNDECLARE|Undeclared|24|The item was undeclared as record.|
                            |RECONCILE|Reconciled|25|The item was reconciled.|
                            |REMOVEFROMFOLDER|Removed from folder|26|The item was removed from a folder.|
                            |WORKFLOWEVENT|Workflow Event|28|The item was included in a workflow event.|
                            |WORKFLOWATTACH|Workflow Attach|29|the item was attached to a workflow.|
                            |WORKFLOWDETACH|Workflow Detach|30|The item was detached from a workflow.|
                            |VIEW_THUMBNAIL|View Thumbnail|31|The item's thumbnail was viewed.|
                            |OFFLINE_DOWNLOAD|Offline Download|33|The item was downloaded to work in the offline mode.|
                            |BULK_EDIT_SECURITY|Bulk Edit Security|34|The item had its security changed as part of a bulk operation.|
                        activity_code:
                          type: integer
                          description: |
                            The code for type of an activity on documents.
                      additionalProperties: false
                additionalProperties: false
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/search:
    description: |-
      None
    get:
      tags:
      - Custom Properties
  #- customers-{customerId}-libraries-{libraryId}-customs-{customPropertyId}-search
  #summary: GET /customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/search
      summary: Search for custom property aliases
      description: |-
        Searches aliases from the specified custom property.

        Searching custom2 or custom30 returns all aliases from the property, regardless of their parent alias.
        To limit the search to a specific parent alias, use the parameter `parent_alias`.
        For example, to see custom2 aliases only from the parent alias of *Microsoft*, use `parent_alias=Microsoft`.

        There are both GET and POST versions of certain searches. Consider the following to identify the version to be used:<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Difference between GET and POST searches</font><br>

        GET:
        * This version is simpler and easier to implement.
        * Some of the requests return facets that provide certain criteria to users to refine their search results.
          Facets list the most relevant five properties of iManage Work objects, which provide users with the option to narrow results
          by several dimensions simultaneously.
          For example, a document search can return the `custom1` facet.
          It returns the aggregated result of documents based on the five most logical and relevant custom1 aliases.
          Facets can be used to anticipate user selections, or to present a list of suggestions that the user will likely select.
          For example, frequent custom1 aliases can be added at the top of a selection list, so that users do not have to scroll through the entire list.

        POST:
        * Use this version if you are making a series of searches, or require a large number of search filters.
          This is the preferred version, as it is quicker and less stressful for the iManage Work system.
        * This version allows a greater number of search filters, either as query parameters or through the `filter` parameter.
        * This version allows a greater number of items for each filter.
          For example, POST `customers/{customerId}/users/search` can take an array of large number of user IDs,
          whereas the request GET `customers/{customerId}/users` is limited to the endpoint character limit.
        * Some requests allow to specify the fields to return through the `profile_fields` parameter.
          Returning specific fields can make parsing the response easier, and is less stressful for the iManage Work system.

        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns aliases for the custom30 property along with the total count:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/customs/custom30/search?total=true`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_customs_{custom_table}_search
      parameters:
      - *id004
      - name: alias
        in: query
        description: |+
          Specifies text to match in the `id` field.<br><br>
          The search is case insensitive.<br>
          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.
          If wildcard character is not included, it matches whole fields only.      

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: description
        in: query
        description: |
          Specifies text to match in the `description` field.<br><br>
          The search is case insensitive.<br>
          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.
          If wildcard character is not included, it matches whole fields only.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=


          See also parameters `alias` and `query`.
        schema:
          type: string
      - name: enabled
        in: query
        description: |-
          Specifies aliases that are enabled.<br><br>
          If `true`, returns aliases that are enabled.<br>
          If `false`, returns aliases that are disabled.<br>
          If omitted, returns aliases of either status.

          An enabled custom property alias means that it can be selected.
          All the custom field aliases are validated when assigning to a document, email, or container.
          It must already a member in that custom property, and enabled.
          Any other combination prevents that custom property alias from being assigned, and may result in an error.
        schema:
          type: boolean
      - name: hipaa
        in: query
        description: |-
          Specifies aliases that are HIPAA-encryption compliant.<br><br>
          If `true`, returns aliases that are HIPAA-encryption compliant.<br>
          If `false`, returns aliases that are not HIPAA-encryption compliant.<br>
          If omitted, returns aliases of either status.

          Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
          Also called *data at rest encryption*, the data files are encrypted when they are not being used.
          This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.

          The enforcement of encryption varies by iManage Work environment.
          Depending on the iManage Work environment, encryption can be either automatic for all documents, or specified explicitly through custom properties.
          For more information, contact your iManage Work system administrator.
        schema:
          type: boolean
      - *id011
      - *id006
      - name: parent_alias
        in: query
        description: |-
          Specifies the alias' parent ID to return.<br><br>
          This must be specified when `custom_table` is either custom2 or custom30.
        schema:
          type: string
      - name: query
        in: query
        description: |
          Specifies text to match with the `id` or `description` fields.<br><br>
          The search is case insensitive.<br>
          All partial matches are supported.<br>
          The wildcard character (&ast;) is not supported.

          See also parameters `alias` and `description`.
        schema:
          type: string
      - name: query_match_type
        in: query
        description: |
          Specifies how the parameter `query` search matches text.<br><br>
          If `contains`, returns results that contain the query text.<br>
          If `starts_with`, returns results that start with the query text.
        schema:
          enum: [contains, starts_with]
          default: starts_with
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: active_us
                    description: Criminal
                    enabled: true
                    hipaa: false
                    id: CRIM
                    ssid: '99633648659074432'
                    parent:
                      id: ADVERT
                      ssid: '99633648659074431'
                    wstype: custom30
                  - database: active_us
                    description: Family
                    enabled: true
                    hipaa: false
                    id: FAM
                    ssid: '99633648659074430'
                    parent:
                      id: ADVERT
                      ssid: '99633648659074429'
                    wstype: custom30
                  - database: active_us
                    description: General
                    enabled: true
                    hipaa: false
                    id: GEN
                    ssid: '99633648659074428'
                    parent:
                      id: ADVICE
                      ssid: '99633648659074427'
                    wstype: custom30
                  total_count: 35
                required:
                - data
                type: object
                properties: &id694
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customs.customItem'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        400: *id003
        401: *id002
        404: *id005
    post:
      tags:
      - Custom Properties
  #- customers-{customerId}-libraries-{libraryId}-customs-{customPropertyId}-search
  #summary: POST /customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/search
      summary: Scoped search for custom property aliases
      description: |-
        Searches aliases from the specified custom property.

        There are both GET and POST versions of certain searches. Consider the following to identify the version to be used:<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Difference between GET and POST searches</font><br>

        GET:
        * This version is simpler and easier to implement.
        * Some of the requests return facets that provide certain criteria to users to refine their search results.
          Facets list the most relevant five properties of iManage Work objects, which provide users with the option to narrow results
          by several dimensions simultaneously.
          For example, a document search can return the `custom1` facet.
          It returns the aggregated result of documents based on the five most logical and relevant custom1 aliases.
          Facets can be used to anticipate user selections, or to present a list of suggestions that the user will likely select.
          For example, frequent custom1 aliases can be added at the top of a selection list, so that users do not have to scroll through the entire list.

        POST:
        * Use this version if you are making a series of searches, or require a large number of search filters.
          This is the preferred version, as it is quicker and less stressful for the iManage Work system.
        * This version allows a greater number of search filters, either as query parameters or through the `filter` parameter.
        * This version allows a greater number of items for each filter.
          For example, POST `customers/{customerId}/users/search` can take an array of large number of user IDs,
          whereas the request GET `customers/{customerId}/users` is limited to the endpoint character limit.
        * Some requests allow to specify the fields to return through the `profile_fields` parameter.
          Returning specific fields can make parsing the response easier, and is less stressful for the iManage Work system.

        <br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns aliases from the custom30 property along with the total count:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom30/search?total=true`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_customs_{custom_table}_search
      requestBody:
        content:
          application/json:
            schema:
              example:
                limit: 500
                filters:
                - alias: M1
                  parent_alias: C1
                - alias: M2
                  parent_alias: C2
                - alias: M3
                  parent_alias: C3
              title: Custom Search Request
              type: object
              properties: &id696
                limit:
                  maximum: 9999
                  minimum: 1
                  type: integer
                  description: |-
                    Specifies the maximum number of custom property items to include in the response.
                  default: 500
                cursor:
                  type: string
                  description: |
                    Specifies the cursor value to begin the search from.<br><br>
                    If it is not specified, the return set starts from the beginning.
                    A new cursor value is returned on subsequent requests.
                    <br>
                    For more information, see <a href="#overview--pagination">Pagination</a>.
                filters:
                  type: array
                  items:
                    $ref: '#/components/schemas/Customs.postSearchRequestFilter'
                  description: |
                    Specifies the search criteria to filter the custom properties.<br><br>
                    If a filters section is not included, all the custom properties are returned as appropriate.<br>
                    If a filters section is included, only the properties matching all the filters in the set are returned.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                - cursor
                - overflow
                type: object
                properties: &id697
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customs.customItem'
                  cursor:
                    type: string
                    description: |-
                      The next position of cursor returned by the server.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  overflow:
                    type: boolean
                    description: |-
                      Indicates that more items can be returned than specified by the request parameter `limit`.<br><br>
                      If `true`, more items are available to be returned than specified by the request parameter `limit`.<br>
                      If `false`, all items were returned and the number of items were less than or equal to the request parameter `limit`.<br><br>
                      If more items are needed, increase the request parameter `limit`, or change the search parameters to be more specific.
                      Overflow displays only if the returned list includes at least one item.<br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: customPropertyId
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/{alias}:
    description: |-
      None

    get:
      tags:
      - Custom Properties
  #- customers-{customerId}-libraries-{libraryId}-customs-{customPropertyId}-{aliasId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/{aliasId}
      summary: Get a custom property alias details
      description: |-
        Returns the specified alias from a custom property.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns alias ADVICE from the custom29 property:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom29/advice`

        The following request returns the custom2 property alias *Microsoft v Enron* from its parent alias *Microsoft*:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom2/Microsoft v Enron?parent_alias=Microsoft`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_customs_{customPropertyId}_{aliasId}
      parameters:
      - *id004
      - name: parent_alias
        in: query
        description: |-
          Specifies the parent custom property alias.<br><br>
          This must be provided when the custom property ID is either custom2 or custom30.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_us
                    description: Advice and Counsel
                    enabled: true
                    hipaa: false
                    id: ADVICE
                    ssid: '99633648659074431'
                    wstype: custom29
                required:
                - data
                type: object
                properties: &id693
                  data:
                    $ref: '#/components/schemas/Customs.customSearchItem'
        400: *id003
        401: *id002
        404: *id005
    delete:
      tags:
      - Custom Properties
    #- customers-{customerId}-libraries-{libraryId}-customs-{customPropertyId}-{aliasId}
    #summary: DELETE /customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/{aliasId}
      summary: Delete custom property alias
      description: |-
        Deletes a custom property alias.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes custom29 property alias ADVICE<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom29/advice`

        The following request deletes the custom2 property alias *Microsoft v Enron* from its parent alias *Microsoft*:<br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom2/Microsoft v Enron?parent_alias=Microsoft`
      parameters:
      - *id004
      - name: parent_alias
        in: query
        description: |-
          Parent of the specified custom property alias.<br><br>
          This is required when `customPropertyId` is custom2 or custom30.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        403: *id001
        401: *id002
        404: *id005
    patch:
      tags:
      - Custom Properties
  #- customers-{customerId}-libraries-{libraryId}-customs-{customPropertyId}-{aliasId}
  #summary: PATCH /customers/{customerId}/libraries/{libraryId}/customs/{customPropertyId}/{aliasId}
      summary: Update custom property alias
      description: |-
        Updates a custom property alias.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the custom1 property alias `Microsoft`:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom1/Microsoft`<br>
        Request body: See the **Request samples** section of the sample provided in the right pane.

        The following request updates the custom2 property alias *Microsoft v Enron* from it's parent alias *Microsoft*:<br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/customs/custom2/Microsoft v Enron?parent_alias=Microsoft`
        Request body: See the **Request samples** section of the sample provided in the right pane.

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_customs_{customPropertyId}_{aliasId}
      parameters:
      - *id004
      - name: parent_alias
        in: query
        description: |-
          Parent of the specified custom property alias.<br><br>
          This is required when `customPropertyId` is custom2 or custom30.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                hipaa: true
                enabled: true
                description: Patent Dispute
              type: object
              properties: &id695
                description:
                  maxLength: 254
                  type: string
                  description: |-
                    Specifies additional information about the custom property.

                    The requirements for the description are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Spaces allowed  | Yes |
                    | Unicode allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |

                enabled:
                  type: boolean
                  description: |-
                    Specifies the alias is enabled.<br><br>
                    If `true`, the alias is enabled.<br>
                    If `false`, the alias is disabled.<br><br>
                    An enabled alias allows that value to be successfully validated and selected.
                    A disabled alias may not be selected and will fail validation.
                hipaa:
                  type: boolean
                  description: |
                    Specifies that documents and emails with profiles that include this custom property will be encrypted.<br><br>
                    If `true`, documents and emails with profiles that include this custom property will be encrypted.<br>
                    If `false`, documents and emails with profiles that include this custom property will not be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        403: *id001
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: customPropertyId
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
    - name: aliasId
      in: path
      description: |-
        An alias ID from the customPropertyId.
      required: true
      schema:
        description: needs defining
        example: ADVICE
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}:
    description: |-
      None
    post:
      tags:
      - Custom Properties
 #- customers-{customerId}-libraries-{libraryId}-customs-{custom_table}
  #summary: POST /customers/{customerId}/libraries/{libraryId}/customs/{custom_table}
      summary: Create custom property alias
      description: |-
        Creates a custom property alias.

        This creates a custom property alias for custom1 through custom12, custom29, and custom30.

        The aliases for the custom properties are validated.
        That means, if an object is being assigned an alias from one of these properties,
        that alias must already be present.
        If it is not present at the time the assignment is validated, an error occurs.
        For example, if a document's custom1 field is being assigned the alias `Microsoft`, `Microsoft` must already be an enabled alias for custom1.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_customs_{custom_table}
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Patent Dispute
                enabled: true
                hipaa: false
                id: IP
              required:
              - id
              type: object
              properties: &id692
                description:
                  maxLength: 254
                  type: string
                  description: |-
                    Specifies additional information about the custom property.

                    The requirements for the description are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 0 |
                    | Maximum length | 254 |
                    | Spaces allowed  | Yes |
                    | Unicode allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |
                enabled:
                  type: boolean
                  description: |-
                    Specifies the alias is enabled.<br><br>
                    If `true`, the alias is enabled.<br>
                    If `false`, the alias is disabled.<br><br>
                    An enabled alias allows that value to be successfully validated and selected.
                    A disabled alias may not be selected and will fail validation.
                hipaa:
                  type: boolean
                  description: |
                    Specifies that documents and emails with profiles that include this custom property will be encrypted.<br><br>
                    If `true`, documents and emails with profiles that include this custom property will be encrypted.<br>
                    If `false`, documents and emails with profiles that include this custom property will not be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
                id:
                  minLength: 1
                  maxLength: 32
                  pattern: |-
                    ^(?!\s)[\u0021-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*[\u0021-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]$
                  type: string
                  description: |-
                    Specifies the alias or `id` of the parent custom property.

                    The requirements for the ID are:

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 1 |
                    | Maximum length | 32 |
                    | Spaces allowed  | No |
                    | Unicode allowed | Yes |
                    | Special characters allowed | *().&-_[]`~\|@$%^?:{}!',/\\#+<>;"=
                     |

                parent:
                  description: The parent ID information for custom2 or custom30 properties.
                  required:
                  - id
                  type: object
                  properties:
                    id:
                      type: string
                      description: |-
                        Specifies the alias, or ID, of the parent custom property.<br><br>
                        It must be specified only for custom2 or custom30, and the value can be only `custom1` or `custom29` respectively.
                  additionalProperties: false
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: custom_table
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/recent:
    description: |-
      None
    get:
      tags:
      - Custom Properties
  #- customers-{customerId}-libraries-{libraryId}-customs-{custom_table}-recent
  #summary: GET /customers/{customerId}/libraries/{libraryId}/customs/{custom_table}/recent
      summary: Get recent custom property aliases
      description: |-
        Gets the custom property aliases with recent activity.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_customs_{custom_table}_recent
      parameters:
      - *id004
      - name: activity_date
        in: query
        description: |-
          The date range is specified with the daterange notation, such as -30:0d.
          The notation is set of two dates offsets that are relative to the current date.
          For example, *-30* in the previous example specifies the start of the range to be 30 days previous to the current date.

          The format is:<br>
          `[-][begin]:[-][end][timescale]`<br>

          | Notation | Description |
          |:--- |:---|
          | - | The subtraction sign (-) specifies time prior to the current date. Omitting the subtraction sign (-) specifies time after the current date. The subtraction sign is used more commonly, although see the notes below for referring to a date in the future. |
          | begin | The number of units (see timescale) prior to the current date to begin the range from. |
          | end | The number of units (see timescale) prior to the current date to end the date range.  |
          | timescale | The time interval for the date range. `d` is for days, `m` is for months, `y` is for years. |

          The values for `begin` and `end` must be whole numbers, and can be noted as positive or negative.
          Positive time units, indicated by not having a negative sign, is a time in the future. This is used to compensate for time zone differences.

          The following are incorrect notations that result in error:
           * An addition sign, such as `-30:+1d`
           * A fraction value, such as `-30.5:1d`
           * An end date before the begin date, such as `-7:-30d`

          Examples:

          | Notation | Description |
          |:---:|:---|
          | -30:0d | The range is from 30 days prior to the current date through the current date. |
          | -30:-7d | The range is from 30 days prior to the current date through seven days before current date. |
          | -26w:-1m | The range is from 26 weeks prior to the current date through one month before the current date. |
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - *id011
      - *id006
      - name: since_days
        in: query
        description: |
          Returns only the custom properties that a user has acted upon in the last number of specified days.
          For example, `since_days=15` returns the items that have been acted upon within the last 15 days.
          This is considered only if *activity_date* is not specified.
        schema:
          type: integer
          default: 30
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity_date: '2017-04-20T15:28:19Z'
                    description: Hewlett-Packard Inc
                    enabled: true
                    id: '1086'
                  - activity_date: '2017-04-20T13:18:24Z'
                    description: Paccar
                    enabled: true
                    id: '1232'
                  - activity_date: '2017-04-20T13:18:24Z'
                    description: Alpha Corporation
                    enabled: true
                    id: '2093'
                  - activity_date: '2017-04-20T12:32:31Z'
                    description: ACME
                    enabled: true
                    id: '0999'
                  - activity_date: '2017-04-19T21:51:55Z'
                    description: 3COM Corporation
                    enabled: true
                    id: '1022'
                  - activity_date: '2017-04-17T17:02:15Z'
                    description: Apple Computer Inc
                    enabled: true
                    id: '1017'
                required:
                - data
                type: object
                properties: &id1630
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - enabled
                      - activity_date
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Alias for the custom property.
                        description:
                          type: string
                          description: |-
                            Additional information about the custom property.
                        enabled:
                          type: boolean
                          description: |-
                            Indicates the custom property is enabled.
                        hipaa:
                          type: boolean
                          description: |
                            Indicates the document is encrypted.<br><br>
                            If `true`, the document is encrypted.<br>
                            If `false`, the document is not encrypted.

                            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                        activity_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the date (in ISO 8601 format) when the latest activity was performed on the custom property.
                        database:
                          type: string
                          description: |-
                            Name of the library where the custom property is stored.
                        parent:
                          required:
                          - id
                          type: object
                          properties:
                            id:
                              type: string
                              description: |
                                Alias for the parent custom property is custom1 or custom29 alias. <br>
                                It is required when the custom property is custom2 or custom30.
                      additionalProperties: true
                      description: |-
                        Describes a custom property.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: custom_table
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags:
    description: |
      None
    post:
      tags:
      - KM Tags
      summary: Create a KM tag for a document
      description: |
        Creates a knowledge management (KM) tag on a document.

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `km_tags` is `true`, this request is available.

        Important characteristics of this request:
        * The user must have read-write access privelege to the document to create a tag.
        * The non-adminstrative users can create tags only with their user ID. Therefore, the `user_id` in the request body
          must match with the the caller's user ID.
        * The system administrators can create tags for other users as well.
        * If the `user_id` property is not specified, the request considers the default value as the caller's user ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates the private tag AJUBALAW_ROCKETINDUSTRIES on the document active_uk!456.1 for the user ACASE:
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/documents/active_uk!456.1/km-tags`

        ```
        {
          "type": "tag",
          "user_id": "acase",
          "default_security": "private",
          "tag_value": "AJUBALAW_ROCKETINDUSTRIES"
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a tag on a container, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/-containerId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags</a>
        * To create a name-value pair property on a document, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/name-value-pairs">PATCH customers/{customerId}/libraries/{libraryId}/documents/{docId}/name-value-pairs</a>

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_{docId}_km-tags
      requestBody:
        content:
          application/json:
            schema:
              example:
                default_security: private
                tag_value: AJUBALAW_ROCKETINDUSTRIES
                type: tag
                user_id: ACASE
              required:
              - type
              - tag_value
              type: object
              properties: &id537
                default_security:
                  enum: ["private", "public"]
                  type: string
                  description: |-
                    The security of the KM tag.

                    |Security    | Description|
                    |:-----------|:--------|
                    | private    | Tag is available only to the user who created it.|
                    | public     | Tag is available to all the users in the system.|

                  default: private
                tag_value:
                  type: string
                  description: The value of the KM tag.
                  minLength: 1
                  maxLength: 2048
                  example: AJUBALAW_ROCKETINDUSTRIES
                type:
                  enum: ["tag", "comment", "vote", "app_defined"]
                  type: string
                  description: |-
                    The KM tag type.

                    |Tag type| Description|
                    |:-----------|:--------|
                    | tag    | Tag to classify a document or container.|
                    | comment| Tag to add a specific note about a particular document or container.|
                    | vote   | Tag to upvote or like a document or container.|

                  example: tag
                user_id:
                  type: string
                  description: |-
                    Indicates the user ID associated with this tag.
                  example: ACASE
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  default_security: private
                  id: '123'
                  tag_value: AJUBALAW_ROCKETINDUSTRIES
                  target:
                    id: active_uk!456.1
                  type: tag
                  user:
                    id: ACASE
                required:
                - data
                type: object
                properties: &id538
                  data:
                    required:
                    - id
                    - target
                    - type
                    - user
                    - default_security
                    - tag_value
                    type: object
                    description: KM tag details
                    properties:
                      id:
                        type: string
                        description: |-
                          The KM tag ID.
                      target:
                        required:
                        - id
                        type: object
                        description: Target document or container details
                        properties:
                          id:
                            type: string
                            description: |-
                              The id of the target that the KM tag is associated with.
                      type:
                        enum: ["tag", "comment", "vote", "app_defined"]
                        type: string
                        description: |-
                          The KM tag type.
                        example: tag
                      user:
                        required:
                        - id
                        type: object
                        description: User details
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the user ID associated with this tag.
                            example: ACASE
                      default_security:
                        enum: ["private", "public"]
                        type: string
                        description: |-
                          The security of the KM tag.
                        default: private
                      tag_value:
                        type: string
                        description: The value of the KM tag.
                        minLength: 1
                        maxLength: 2048
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: docId
      in: path
      description: |-
        The document ID. For example, *active_us!453.1*.
      required: true
      schema:
        example: active_us!453.1
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags:
    description: |
      KM tags allow the creation and persistence of knowledge management (hence KM) metadata values. The tags can be associated with either specific documents (document number and version) or containers (objects like folders, categories, etc). Each tag is also associated with a specific user (user only, no groups) and has a security value (public or private). Tags also have an associated object type (tag, comment, vote, app defined), and track creation and edit times.
    post:
      tags:
      - KM Tags
      summary: Create a KM tag for a container
      description: |
        Creates a knowledge management (KM) tag on a container such as folders, workspaces, and category.

        This request may not be available for all environments.
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `km_tags` is `true`, this request is available.

        Important characteristics of this request:
        * The user must have read-write access privelege to the container to create a tag.
        * The non-adminstrative users can create tags only with their user ID. Therefore, the `user_id` in the request body
          must match with the the caller's user ID.
        * The system administrators can create tags for other users as well.
        * If the `user_id` property is not specified, the request considers the default value as the caller's user ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request creates the private tag AJUBALAW_ROCKETINDUSTRIES on the container active_uk!123 for the user ACASE:
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/containers/active_uk!123/km-tags`

        Request body:
        ```
        {
          "type": "tag",
          "user_id": "acase",
          "default_security": "private",
          "tag_value": "AJUBALAW_ROCKETINDUSTRIES"
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a document tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags</a>
        * To get the details of a document or container tag, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/km-tags/-tagId-">GET /customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}</a>

      operationId: POST_customers_{customerId}_libraries_{libraryId}_containers_{containerId}_km-tags
      requestBody:
        content:
          application/json:
            schema:
              required:
              - type
              - tag_value
              type: object
              properties: *id537
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  default_security: private
                  id: '123'
                  tag_value: AJUBALAW_ROCKETINDUSTRIES
                  target:
                    id: active_uk!789
                  type: tag
                  user:
                    id: ACASE
                required:
                - data
                type: object
                properties: *id538
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: containerId
      in: path
      description: |-
        The ID of the target container.
      required: true
      schema:
        example: active_us!4754
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}:
    description: |
      None
    get:
      tags:
      - KM Tags
      summary: Get a KM tag
      description: |
        Returns the KM tag details for the specified tag ID.

        The non-administrative users can retrieve the details of a tag if:
        * they created it or
        * an administrator created for them or
        * it is a public tag.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the details of the tag 123: <br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/km-tags/123`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a document tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags</a>
        * To create a container tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/-containerId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags</a>
        * To get the details of a document or container tag, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/km-tags/-tagId-">GET /customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}</a>

      operationId: GET_customers_{customerId}_libraries_{libraryId}_km-tags_{tagId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  create_date: '2021-01-05T11:22:32Z'
                  default_security: private
                  edit_date: '2021-01-05T11:22:32Z'
                  id: '123'
                  tag_value: AJUBALAW_ROCKETINDUSTRIES
                  target:
                    id: active_uk!456.1
                  type: tag
                  user:
                    id: ACASE
                required:
                - data
                type: object
                properties: &id1654
                  data:
                    required:
                    - id
                    - target
                    - type
                    - user
                    - default_security
                    - tag_value
                    - create_date
                    - edit_date
                    type: object
                    description: KM tag details
                    properties:
                      create_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in ISO 8601 format) when the tag was created.
                      default_security:
                        enum: ["private", "public"]
                        type: string
                        description: |-
                          The security of the KM tag.

                          |Security    | Description|
                          |:-----------|:--------|
                          | private    | Tag is available only to the user who created it.|
                          | public     | Tag is available to all the users in the system.|
                        default: private
                      edit_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the most recent date (in ISO 8601 format) when the tag was updated.
                      id:
                        type: string
                        description: |-
                          The KM tag ID.
                      tag_value:
                        type: string
                        description: The value of the KM tag.
                        minLength: 1
                        maxLength: 2048
                        example: AJUBALAW_ROCKETINDUSTRIES
                      target:
                        required:
                        - id
                        type: object
                        description: Target document or container details
                        properties:
                          id:
                            type: string
                            description: |-
                              The ID of the target document or container to which the KM tag is associated with.
                      type:
                        enum: ["tag", "comment", "vote", "app_defined"]
                        type: string
                        description: |-
                          The KM tag type.

                          |Tag type| Description|
                          |:-----------|:--------|
                          | tag    | Tag to classify a document or container.|
                          | comment| Tag to add a specific note about a particular document or container.|
                          | vote   | Tag to upvote or like a document or container.|

                        example: tag
                      user:
                        required:
                        - id
                        type: object
                        description: User details
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the user ID associated with this tag.
                              This user ID can be of the user who created it or on whose behalf a system administrator created it.
                            example: ACASE
                    additionalProperties: false

                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - KM Tags
      summary: Update a KM tag
      description: |
        Updates the specified KM tag.

        To update a tag, the user must have read-write access privelege to the target document or container.<br>
        The non-administrative users can update a tag only if they are associated with it, or it is a public tag.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request updates the security of the tag 123: <br>
        PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/km-tags/123`

        Request body:
        ```
        {
          "default_security": "public",
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a document tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags</a>
        * To create a container tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/-containerId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags</a>
        * To get the details of a document or container tag, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/km-tags/-tagId-">GET /customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}</a>

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_km-tags_{tagId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                default_security: private
                tag_value: AJUBALAW_ROCKETINDUSTRIES_LEGAL_AGREEMENTS
              type: object
              minProperties: 1
              properties: &id1655
                default_security:
                  enum: ["private", "public"]
                  type: string
                  description: |-
                    The security of the KM tag.
                tag_value:
                  type: string
                  description: The value of the KM tag.
                  minLength: 1
                  maxLength: 2048
                target_id:
                  type: string
                  description: |-
                    Indicates the target ID associated with this tag. Updating the target_id 
                    requires RW access on both the source and destination target_id.
                type:
                  enum: ["tag", "comment", "vote", "app_defined"]
                  type: string
                  description: |-
                    The KM tag type.

                    |Tag type| Description|
                    |:-----------|:--------|
                    | tag    | Tag to classify a document or container.|
                    | comment| Tag to add a specific note about a particular document or container.|
                    | vote   | Tag to upvote or like a document or container.|

                  example: tag
                user_id:
                  type: string
                  description: |-
                    Indicates the user ID associated with this tag.
                  example: ACASE
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  default_security: private
                  id: '123'
                  tag_value: AJUBALAW_ROCKETINDUSTRIES
                  target:
                    id: active_uk!456.1
                  type: tag
                  user:
                    id: ACASE
                required:
                - data
                type: object
                properties: &id1656
                  data:
                    required:
                    - id
                    - target
                    - type
                    - user
                    - default_security
                    - tag_value
                    type: object
                    description: KM tag details
                    properties:
                      id:
                        type: string
                        description: |-
                          The KM tag ID.
                      target:
                        required:
                        - id
                        type: object
                        description: Target document or container details
                        properties:
                          id:
                            type: string
                            description: |-
                              The id of the target that the KM tag is associated with.
                      type:
                        enum: ["tag", "comment", "vote", "app_defined"]
                        type: string
                        description: |-
                          The KM tag type.
                        example: tag
                      user:
                        required:
                        - id
                        type: object
                        description: User details
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the user ID associated with this tag.
                            example: ACASE
                      default_security:
                        enum: ["private", "public"]
                        type: string
                        description: |-
                          The security of the KM tag.
                        default: private
                      tag_value:
                        type: string
                        description: The value of the KM tag.
                        minLength: 1
                        maxLength: 2048
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - KM Tags
      summary: Delete a KM tag
      description: |
        Deletes the specified KM tag.

        To delete a tag, the user must have read-write access privelege to the target document or container.<br>
        The non-administrative users can delete a tag only if they are associated with it, or it is a public tag.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request deletes the tag 123: <br>
        DELETE `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/km-tags/123`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a document tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags</a>
        * To create a container tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/-containerId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags</a>
        * To get the details of a document or container tag, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/km-tags/-tagId-">GET /customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}</a>

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_km-tags_{tagId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: tagId
      in: path
      description: |-
        The KM tag ID.
      required: true
      schema:
        example: 12345
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/km-tags/search:
    description: |
      None
    post:
      tags:
      - KM Tags
      summary: Search for KM tags
      description: |
        Searches for KM tags based on one or more of the following properties:
        * target_id
        * default_security
        * type
        * user_id

        The non-administrative users can search for public tags and the tags they are associated with.
        It is possible to submit empty filters to search for all public tags.

        The following are some limitations of this request currently:
        * The search based on `tag_value` is not supported.
        * The maximum number of 5000 tags are returned.
        * This request does not support pagination.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the public tags on container active_uk!4567 associated with user acase: <br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_uk/km-tags/search`
        ```
        {
          "filters": {
            "target_id": "active_uk!4567",
            "default_security": "public",
            "type": "tag",
            "user_id": "acase"
          }
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To create a document tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/-docId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/documents/{docId}/km-tags</a>
        * To create a container tag, see <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/-containerId-/km-tags">POST /customers/{customerId}/libraries/{libraryId}/containers/{containerId}/km-tags</a>
        * To get the details of a document or container tag, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/km-tags/-tagId-">GET /customers/{customerId}/libraries/{libraryId}/km-tags/{tagId}</a>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_km-tags_search
      requestBody:
        content:
          application/json:
            schema:
              example:
                filters:
                  default_security: public
                  target_id: active_uk!4567
                  type: tag
                  user_id: ACASE
              required:
              - filters
              type: object
              properties: &id1657
                filters:
                  type: object
                  properties:
                    target_id:
                      type: string
                      description: |-
                        The target ID of the document or cotainer to which the KM tags are associated.
                    default_security:
                      enum: ["private", "public"]
                      type: string
                      description: |-
                        The security of the KM tag.
                      default: public
                    type:
                      enum: ["tag", "comment", "vote", "app_defined"]
                      type: string
                      description: |-
                        The KM tag type.
                      example: tag
                    user_id:
                      type: string
                      description: |-
                        The user ID associated with this tag.
                      example: ACASE
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2020-12-03T19:57:44Z'
                    default_security: public
                    edit_date: '2020-12-03T21:11:11Z'
                    id: '1'
                    target:
                      id: active_uk!123.1
                    tag_value: Acme Corp
                    type: tag
                    user:
                      id: ACASE
                  - create_date: '2020-12-03T20:00:57Z'
                    default_security: public
                    edit_date: '2020-12-03T20:00:57Z'
                    id: '2'
                    target:
                      id: active_uk!456
                    tag_value: Ajubalaw
                    type: tag
                    user:
                      id: ACASE
                  - create_date: '2020-12-04T03:03:24Z'
                    default_security: public
                    edit_date: '2020-12-04T03:03:24Z'
                    id: '3'
                    target:
                      id: active_uk!123.1
                    tag_value: Chapter 11
                    type: tag
                    user:
                      id: ACASE
                required:
                - data
                type: object
                properties: &id1658
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - target
                      - type
                      - user
                      - default_security
                      - tag_value
                      - create_date
                      - edit_date
                      type: object
                      description: KM tag details
                      properties:
                        create_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the date (in ISO 8601 format) when the tag was created.
                        default_security:
                          enum: ["private", "public"]
                          type: string
                          description: |-
                            The security of the KM tag.

                            |Security    | Description|
                            |:-----------|:--------|
                            | private    | Tag is available only to the user who created it.|
                            | public     | Tag is available to all the users in the system.|
                          default: private
                        edit_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |-
                            Indicates the most recent date (in ISO 8601 format) when the tag was updated.
                        id:
                          type: string
                          description: |-
                            The KM tag ID.
                        tag_value:
                          type: string
                          description: The value of the KM tag.
                          minLength: 1
                          maxLength: 2048
                          example: AJUBALAW_ROCKETINDUSTRIES
                        target:
                          required:
                          - id
                          type: object
                          description: Target document or container details
                          properties:
                            id:
                              type: string
                              description: |-
                                The ID of the target document or container to which the KM tag is associated with.
                        type:
                          enum: ["tag", "comment", "vote", "app_defined"]
                          type: string
                          description: |-
                            The KM tag type.

                            |Tag type| Description|
                            |:-----------|:--------|
                            | tag    | Tag to classify a document or container.|
                            | comment| Tag to add a specific note about a particular document or container.|
                            | vote   | Tag to upvote or like a document or container.|

                          example: tag
                        user:
                          required:
                          - id
                          type: object
                          description: User details
                          properties:
                            id:
                              type: string
                              description: |-
                                Indicates the user ID associated with this tag.
                                This user ID can be of the user who created it or on whose behalf a system administrator created it.
                              example: ACASE
                      additionalProperties: false

                  overflow:
                    type: boolean
                    description: |-
                      Indicates whether more than 5000 tags were found. This request does not support pagination.
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/containers/{containerId}:
    description: |-
      None
    get:
      tags:
      - Containers
    #- customers-{customerId}-libraries-{libraryId}-containers-{containerId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/containers/{containerId}
      summary: Get container profile
      description: |
        Returns the profile of the specified container ID. <br><br>
        This request returns different types of profiles in the response depending upon the specified type of container: workspace, regular folder, and folder shortcut.<br>

        The container profile varies depending upon the type of container as follows:
        * A workspace profile consists of author, class, custom properties, default security, and so on.<br>  

        * A regular folder profile consists of name, owner, custom properties, and default security, and so on.<br>

        * A folder shortcut profile consists of additional information about the target folder such as folder ID, library, folder type, subtype, and so on.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_containers_{containerId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    anyOf:
                    - $ref: '#/components/schemas/Projects.folderWithOperations'
                    - $ref: '#/components/schemas/Shortcuts.folderShortcut'
                    - $ref: '#/components/schemas/Projects.workspaceWithOperationsResponseSingle'
                additionalProperties: false
                example:
                  data:
                    project_custom3: active_uk|91|522
                    database: active_uk
                    default_security: inherit
                    edit_date: '2017-06-13T16:53:48Z'
                    folder_type: regular
                    has_documents: false
                    has_subfolders: false
                    id: active_uk!526
                    inherited_default_security: public
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external_as_normal: false
                    name: Attorney Notes
                    operations:
                      add_content: true
                      add_custom_folders: true
                      add_folders: true
                      change_name: true
                      modify: true
                      modify_layout: true
                      remove: true
                      remove_content: true
                      remove_folders: true
                      set_default_security: true
                      set_security: true
                      update_content_shortcut: true
                      default_security_values:
                      - private
                      - view
                      - public
                      - inherit
                    owner: ADMINISTRATOR
                    owner_description: Administrator
                    owner_info:
                      allow_logon: true
                      is_external: false
                    parent_id: active_uk!522
                    profile:
                      class: A-NOTE
                      custom1: '1091'
                      custom1_description: McKellesson
                      custom2: active_uk
                      custom2_description: General
                    view_type: document
                    wstype: folder
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - $ref: '#/components/parameters/containerId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/security/update-async:
    description: |
      Updates the security of multiple documents within the specified library.
    patch:
      tags:
      - Documents
      summary: Bulk update document security
      description: |
        Updates the security of specified documents.

        This request may not be available for all environments.<br>
        Prior to executing this request, check GET `/customers/{customerId}/features`. If `update_security_async` is `true`, this request is available.

        Important characteristics of this request:<br>
        The user must have full-access access to a document to modify its security.

        Additional Details:<br>
        This request is an asynchronous operation. The request will return a task ID, which may be used to query the progress and outcome of the operation.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To edit security of containers, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/security/update-async">PATCH /customers/{customerId}/libraries/{libraryId}/containers/security/update-async</a>
        * To get the status of an edit security task, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-">GET /customers/{customerId}/libraries/{libraryId}tasks/{taskId}</a>
        * To get the details of an edit security task's outcome, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-/results">GET /customers/{customerId}/libraries/{libraryId}/tasks/{taskId}/results</a>

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_documents_security_update-async
      requestBody:
        content:
          application/json:
            schema:
              example:
                edit_security_type: customize
                ids:
                - active_us!1.2
                - active_us!543.1
                - active_us!234.5
                audit_comment: Updating security to reflect a change in policy.
                default_security: private
                settings:
                  all_versions: false
                  multi_referenced: false
                  private_objects: exclude_owned
                  skip_inherit_check: true
                security:
                  include:
                  - access_level: read
                    id: ACASE
                    type: user
                  - access_level: read_write
                    id: NRTADMIN
                    type: group
                  remove:
                  - id: MARCIEDAVENPORT
                    type: user
                  - id: USERS
                    type: group
                  replace:
                  - id: CPIERCE
                    replacement_id: DJACOB
                    type: user
              required:
              - edit_security_type
              - ids
              type: object
              properties: &id1357
                edit_security_type:
                  enum: ["customize", "inherit", "overwrite"]
                  type: string
                  description: |-
                    The type of edit security operation.

                    |Operation    | Description|
                    |:------------|:--------|
                    | customize   | Add, remove, or modify existing security acl on documents specified in `ids`. Requires `security` object to be populated.|
                    | inherit     | Specified documents in `ids` will inherit security acl from parent container.|
                    | overwrite   | Replace existing security with the new security on documents specified in `ids`. Requires `security` object to be populated|
                ids:
                  type: array
                  description: |
                    The document IDs on which to change security.
                  items:
                    type: string
                parent_id:
                  type: string
                  description: |
                    The ID of the parent container from which the security settings are to be inherited.
                    This field is required for `inherit` operation.
                audit_comment:
                  type: string
                  description: |
                    The comment to be attached to each document audit entry.
                name:
                  type: string
                  description: |
                    The name to be assigned for the task.
                comment:
                  type: string
                  description: |
                    Any additional comments about the task.
                default_security:
                  $ref: '#/components/schemas/Documents.defaultSecurityRequest'
                settings:
                  type: object
                  description: Fine-grained control over the behavior of bulk update
                    security.
                  properties:
                    all_versions:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to all document versions.

                        If passed as `true`, then the changes are applied to all versions of each document.<br>
                        If passed as `false`, then the changes are only applied to the provided document versions.
                      default: false
                    multi_referenced:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to documents that are referenced from multiple containers.

                        If passed as `true`, then documents that are referenced from multiple containers will be updated.<br>
                        If passed as `false`, then documents that are referenced from multiple containers will not be updated.
                      default: false
                    private_objects:
                      enum: ["all", "exclude_owned", "none"]
                      type: string
                      description: |-
                        Behavior on documents marked as private.

                        | Value     | Description|
                        |:----------|:-----------|
                        | all       | Includes all private documents. |
                        | exclude_owned | Includes private documents except for those that have only the user making the request in the ACL. |
                        | none      | Excludes all private documents. |
                      default: "exclude_owned"
                security:
                  type: object
                  description: Modifications to the access control lists of the target
                    documents.
                  properties:
                    include:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.include'
                    remove:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.remove'
                    replace:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.replace'
      responses:
        202:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id539
                  data:
                    required:
                    - task_id
                    type: object
                    properties:
                      task_id:
                        type: string
                        description: The task ID of the created asynchronous security
                          modification task.
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'

  /work/api/v2/customers/{customerId}/libraries/{libraryId}/containers/security/update-async:
    patch:
      tags:
      - Containers
      summary: Bulk update container security
      description: |
        Updates the security for a set of containers such as folders, workspaces and categories.

        This request may not be available for all environments.<br>
        Prior to executing this request, check GET `/customers/{customerId}/features`. If `update_security_async` is `true`, this request is available.

        Important characteristics of this request:
        * Depending on the settings provided, this request may also affect documents within the specified containers.
        * The user must have full-access to a container to modify its security.

        Additional Details:<br>
        This request is an asynchronous operation. The request will return a task ID, which may be used to query the progress and outcome of the operation.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To edit security of documents, see <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/security/update-async">PATCH /customers/{customerId}/libraries/{libraryId}/documents/security/update-async</a>
        * To get the status of an edit security task, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-">GET /customers/{customerId}/libraries/{libraryId}/tasks/{taskId}</a>
        * To get the details of an edit security task's outcome, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-/results">GET /customers/{customerId}/libraries/{libraryId}/tasks/{taskId}/results</a>

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_containers_security_update-async
      requestBody:
        content:
          application/json:
            schema:
              example:
                edit_security_type: customize
                ids:
                - active_us!1
                - active_us!543
                - active_us!234
                audit_comment: Updating security to reflect a change in policy.
                default_security: private
                settings:
                  propagate_changes: true
                  all_versions: false
                  multi_referenced: false
                  private_objects: exclude_owned
                  skip_inherit_check: true
                security:
                  include:
                  - access_level: read
                    id: ACASE
                    type: user
                  - access_level: read_write
                    id: NRTADMIN
                    type: group
                  remove:
                  - id: MARCIEDAVENPORT
                    type: user
                  - id: USERS
                    type: group
                  replace:
                  - id: CPIERCE
                    replacement_id: DJACOB
                    type: user
              required:
              - edit_security_type
              - ids
              type: object
              properties: &id1356
                edit_security_type:
                  enum: ["customize", "inherit", "overwrite", "propagate"]
                  type: string
                  description: |-
                    The type of edit security operation.

                    |Operation    | Description|
                    |:------------|:--------|
                    | customize   | Add, remove, or modify existing security acl on containers specified in `ids`. Requires `security` object to be populated.|
                    | inherit     | Specified containers in `ids` will inherit security acl from parent container.|
                    | overwrite   | Replace existing security with the new specified security on containers indicated in `ids`. Requires `security` object to be populated.|
                    | propagate   | Propagate the security of containers specified in `ids` to all sub-containers and documents.|
                ids:
                  type: array
                  description: |
                    The container IDs on which to change security.
                  items:
                    type: string
                parent_id:
                  type: string
                  description: |
                    The ID of the parent container from which the security settings are to be inherited.
                    This field is required for `inherit` operation.
                audit_comment:
                  type: string
                  description: |
                    In cases where changes are propagated to documents, the audit_comment will be attached to each document audit entry.
                name:
                  type: string
                  description: |
                    The name to be assigned for the task.
                comment:
                  type: string
                  description: |
                    Any additional comments about the task.
                default_security:
                  $ref: '#/components/schemas/Containers.defaultSecurityRequest'
                settings:
                  type: object
                  description: |
                    Fine-grained control over the behavior of bulk update security.
                  properties:
                    propagate_changes:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to the provided containers' children.

                        If passed as `true`, then the changes are applied to the specified container and then the same changes are applied to all child containers and documents under the specified container.<br>
                        If passed as `false`, then the changes are only applied to the provided containers.

                        This setting is only applicable to the `customize` operation.
                      default: false
                    all_versions:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to all document versions.

                        If passed as `true`, then the changes are applied to all versions of each document.<br>
                        If passed as `false`, then the changes are only applied to the provided document versions.

                        This setting is only applicable if propagation is used to make changes to documents in the target containers.
                      default: false
                    multi_referenced:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to documents that are referenced from multiple containers.

                        If passed as `true`, then documents that are referenced from multiple containers will be updated.<br>
                        If passed as `false`, then documents that are referenced from multiple containers will not be updated.

                        This setting is only applicable if propagation is used to make changes to documents in the target containers.
                      default: false
                    private_objects:
                      enum: ["all", "exclude_owned", "none"]
                      type: string
                      description: |-
                        Behavior on containers and documents marked as private.

                        | Value     | Description|
                        |:----------|:-----------|
                        | all       | Includes all private containers and documents. |
                        | exclude_owned | Includes private containers and documents except for those that have only the user making the request in the ACL. |
                        | none      | Excludes all private containers and documents. |
                      default: "exclude_owned"
                    skip_inherit_check:
                      type: boolean
                      description: |
                        Specifies whether the changes should be applied to folders that inherit security from their parent.

                        If passed as `true`, then the updates will be applied to containers that are set to not inherit security from their parent.<br>
                        If passed as `false`, then the updates will only be applied to containers that are set to inherit security from their parent and propagation will not continue inside of containers that do not inherit security.
                      default: false
                security:
                  type: object
                  description: |
                    Modifications to the access control lists of the target containers and, optionally, their children.

                    This parameter is only applicable to the `customize` and `overwrite` operations. It will be ignored for the `inherit` and `propagate` operations.
                  properties:
                    include:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.include'
                    remove:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.remove'
                    replace:
                      type: array
                      items:
                        $ref: '#/components/schemas/security.update-async.replace'
      responses:
        202:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id539
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'


  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-shortcuts:
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-shortcuts/{shortcutId}/move:
    description: |-
      None
    post:
      tags:
      - Container Shortcuts
  #- customers-{customerId}-libraries-{libraryId}-container-shortcuts-{shortcutId}-move
  #summary: POST /customers/{customerId}/libraries/{libraryId}/container-shortcuts/{shortcutId}/move
      summary: Move container shortcut
      description: |-
        Moves the current shortcut to the specified destination.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_container-shortcuts_{shortcutId}_move
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination_id: Active!123456
              required:
              - destination_id
              type: object
              properties: &id1629
                destination_id:
                  type: string
                  description: |
                    Destination to move the container shortcut.

                    The possible values are:<br>
                    * **Destination Id**: id of the container where the shortcut should be moved.
                    * **my-favorites**: indicates that the shortcut should be moved to my-favorites root.
                  example: "Active!123 | my-favorites | my-matters"
                destination_user_id:
                  type: string
                  description: |
                    The user ID of the destination my-matters.

                    This parameter is ignored if destination_id is Category ID.
                  default: userId in the URI
                  example: ACASE
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: active_uk
                    default_security: inherit
                    edit_date: '2020-04-26T18:41:18Z'
                    effective_security: full_access
                    id: active_uk!9435
                    name: _Benefits
                    owner: ACASE
                    parent_id: active_uk!9014
                    target:
                      database: active_uk
                      id: active_uk!9434
                      subtype: S
                      wstype: folder
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: *id377
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
        409: *id101
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-shortcuts/{shortcutId}/operations:
    description: |-
      None
    get:
      tags:
      - Container Shortcuts
  #- customers-{customerId}-libraries-{libraryId}-container-shortcuts-{shortcutId}-operations
  #summary: GET /customers/{customerId}/libraries/{libraryId}/container-shortcuts/{shortcutId}/operations
      summary: Get container shortcut operations
      description: |
        Returns operations the current user is allowed to perform on the specified container shortcut in a library.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns operations the user is allowed to perform on container shortcut active_us!5464:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/container-shortcuts/active_us!5464/operations`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_container-shortcuts_{shortcutId}_operations
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    change_name: true
                    move: true
                    remove: true
                required:
                - data
                type: object
                properties: *id378
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The shortcut ID of the document.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-shortcuts/{shortcutId}/path:
    description: |
      It returns the hierarchy of folders starting from the parent workspace traversing through all its folders and subfolders until the specified container-shortcut.
    get:
      tags:
      - Container Shortcuts
      summary: Get container shortcut path
      description: |
        Returns the path of the specified container-shortcut. <br><br>
        It lists the folders and their properties in the hierarchical structure from the parent
        workspace traversing through all its folders and subfolders until the specified container-shortcut.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the path of container-shortcut active_us!5464:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/container-shortcuts/active_us!5464/path`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_container-shortcuts_{shortcutId}_path
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2019-12-09T14:16:55.925Z'
                    database: active_us
                    default_security: private
                    edit_date: '2019-12-09T15:46:05.925Z'
                    has_subfolders: true
                    id: active_us!15289
                    is_external: false
                    is_external_as_normal: false
                    last_user: ACASE
                    last_user_description: Andrew Case
                    name: Google vs Microsoft
                    owner: ACASE
                    owner_description: Andrew Case
                    document_number: 100001083027
                    is_declared: false
                    is_hipaa: false
                    iwl: iwl:dms=ajubalaw.com&&lib=active_us&&num=100001083027&&ver=1
                    retain_days: 365
                    version: 1
                    wstype: workspace
                  - database: active_us
                    default_security: inherit
                    edit_date: '2020-01-17T22:01:44.643Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!17218
                    inherited_default_security: private
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Administrative Record
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!15289
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                  - database: active_us
                    default_security: public
                    edit_date: '2020-06-05T03:09:09.933Z'
                    folder_type: regular
                    has_documents: true
                    has_subfolders: true
                    id: active_us!20631
                    inherited_default_security: public
                    is_container_saved_search: false
                    is_content_saved_search: false
                    is_external: false
                    is_external_as_normal: false
                    name: Employment Agreements
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!17218
                    view_type: document
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder
                  - database: active_us
                    default_security: public
                    edit_date: '2020-06-05T03:09:09.933Z'
                    id: active_us!20634
                    name: Agreement
                    owner: ACASE
                    owner_description: Andrew Case
                    parent_id: active_us!20631
                    target:
                      database: active_us
                      folder_type: regular
                      id: active_us!2063
                      subtype: O
                      wstype: folder
                    workspace_name: Google vs Microsoft
                    workspace_id: active_us!15289
                    wstype: folder_shortcut
                required:
                - data
                type: object
                properties: *id536
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: shortcutId
      in: path
      description: |-
        The ID of the container-shortcut.
      required: true
      schema:
        example: active_us!5464
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-artifacts:
    post:
      tags:
      - Container Artifacts
  #- customers-{customerId}-libraries-{libraryId}-container-artifacts
  #summary: POST /customers/{customerId}/libraries/{libraryId}/container-artifacts
      summary: Create container artifact
      description: |
        Creates a workspace or folder artifact.<br>
        The minimum permissions level required to execute this request: Tier 2.<br>
      operationId: POST_customers_{customerId}_libraries_{libraryId}_container-artifacts
      requestBody:
        content:
          application/json:
            schema:
              example:
                source:
                  database: active
                  id: active!222
                destination:
                  database: inactive
                  id: inactive!13
              required:
              - source
              - destination
              type: object
              properties: &id647
                source:
                  required:
                  - database
                  - id
                  type: object
                  properties:
                    database:
                      type: string
                      description: |-
                        The library from which the workspace or folder was moved by an import tool.
                    id:
                      type: string
                      description: |-
                        The source workspace ID or folder ID.
                  description: |-
                    Information about the source workspace or folder that was moved to the archive library.
                destination:
                  required:
                  - database
                  - id
                  type: object
                  properties:
                    database:
                      type: string
                      description: |-
                        The library where workspace or folder was moved by an import tool.
                    id:
                      type: string
                      description: |-
                        The destination workspace ID or folder ID.
                  description: |-
                    Information about the source workspace or folder.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/container-artifacts/{containerId}:
    description: |-
      None
    get:
      tags:
      - Container Artifacts
  #- customers-{customerId}-libraries-{libraryId}-container-artifacts-{containerId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/container-artifacts/{containerId}
      summary: Get container artifact details
      description: |-
        Gets the workspace or folder artifact associated with a container ID.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_container-artifacts_{containerId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: inactive
                    id: inactive!13
                required:
                - data
                type: object
                properties: &id648
                  data:
                    required:
                    - database
                    - id
                    type: object
                    properties:
                      database:
                        type: string
                        description: |-
                          The destination archive library where the workspace or folder was moved by an import tool.
                      id:
                        type: string
                        description: |-
                          ID of the workspace or folder in the destination archive library.
                    additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Container Artifacts
  #- customers-{customerId}-libraries-{libraryId}-container-artifacts-{containerId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/container-artifacts/{containerId}
      summary: Delete a container artifact
      description: |
        Deletes the workspace or folder artifact associated with a containerId.

        The minimum permissions level required to execute this request: Tier 2.<br>
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_container-artifacts_{containerId}
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: containerId
      in: path
      description: |-
        Unique ID of the source workspace or folder.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes:
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes
      summary: Get document classes
      description: |-
        Returns document classes that match the specified criteria.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes
      parameters:
      - *id004
      - name: alias
        in: query
        description: |
          Specifies the class name (also called an alias).<br><br>
          Multiple class names included using a comma-separated list.
          For example: `alias=doc,policy`

          This search:
          * Is case insensitive. For example: *ACase* matches *acase*.
          * Matches partial words. For example: *as* does match *acase*.
          * The wildcard character (&ast;) is supported.
          This matches any number of contiguous characters, including spaces.
          To match partial fields, include the asterisk wildcard before or after the query value.
          For example: `alias=*sion`, `alias=dis*` will both return 'Discussion'.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=


          See also the parameters `description` and `query`.
        schema:
          type: string
      - name: default_security
        in: query
        description: |-
          Specifies the class default security level.

          The allowed values are:

          |Value|Description|
          |:---|:--- |
          | private | Only the user who created the document, and users and groups who were explicitly granted access permission, can access the document. |
          | view | All users can access the document but cannot modify it, including both the content or properties, unless explicitly assigned access permission. |
          | public | All users can access the document unless explicitly excluded. |
        schema:
          enum: ["public", "private", "view"]
          type: string
      - name: description
        in: query
        description: |
          Specifies text to match in the `description` field.

          This search:
          * Is case insensitive. For example: *ACase* matches *acase*.
          * Matches whole field only. For example: *trial* does match *Prepare for trial*.
          * The wildcard character (&ast;) is supported.
          This matches any number of contiguous characters, including spaces.
          To match partial fields, include the asterisk wildcard before or after the query value.
          For example, `prep*` and `*for trial` both match *Prepare for trial*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=


          See also the parameters `alias` and `query`.
        schema:
          type: string
      - name: echo
        in: query
        description: |
          Specifies the classes that can echo (also called shadow) the document.<br><br>
          Echoing is the ability to retain the document on a user's local hard drive after the document is checked in.<br><br>
          If `true`, the document can be echoed, and is retained locally when checked back in.<br>
          If `false`, the document cannot be echoed, and is deleted locally when checked back in.
        schema:
          type: boolean
      - name: hipaa
        in: query
        description: |
          Specifies documents of this document class use HIPAA compliant encryption.<br><br>
          If `true`, documents of this document class use HIPAA compliant encryption.<br>
          If `false`, documents of this document class do not use HIPAA compliant encryption.
        schema:
          type: boolean
      - name: indexable
        in: query
        description: |
          Specifies documents of this document class are indexed by the full-text indexer.<br><br>
          If `true`, documents of this document class are indexed by the full-text indexer.<br>
          If `false`, documents of this document class are not indexed by the full-text indexer.<br>
          If omitted, the value is `true`.

          The full-text indexer prepares the document's contents for search performance and versatility.
          It indexes words and phrases to quickly find them.
          It also expands some terms to include stemming, common variations, and enables logical find statements, such as AND and OR.
          If full-text indexing is not used, the terms are still indexed but only as exact literals.

          <font style="color:black;size:5">Excluding documents from as search</font><br>
          Some kinds of document contents do not provide meaningful information for users.
          For example, documents used for OCR (optical character recognition) and COMPARE (an iManage tool for tracking changes within a document) contain system information related to those functions and tools.
          Therefore, users may want to exclude the contents of those documents from searches.

          This requires that the feature `document_class_indexable` is available on this platform.
          The `document_class_indexable` is a feature that allows documents of this document class to be excluded from being returned from document searches.
          Check GET `/customers/{customerId}/features`.<br>
          The feature is available if `document_class_indexable` is `true`.<br>
          The feature is not available if `document_class_indexable` is `false` or is omitted from the results. In this case, documents from this document class will always be included in search results.

          If the feature `document_class_indexable` is `true`, set the `indexable` property.
          * If set to `true`, documents of this document class are included in search results.
          * If set to `false`, documents of this document class are excluded from search results.
          * If set to null or is omitted, `indexable` is considered to be `true`.

          If these two conditions are met (`document_class_indexable` is `true` and `indexable` is `false`), documents of this document class are excluded from a *full-index search*.
          A full-index search is a document search that includes a value for any of the following search parameters: `title`, `body`, `comments`, and `anywhere`.
          Documents meeting these requirements are excluded from the search results even if it meets other document search criteria.
          For example, a document search for `content=litigation&custom1=Microsoft` will exclude documents, regardless if it otherwise matches `custom1=Microsoft`.

          If the document search is not a full-index search (that is, does not contain a value for any of the parameters `title`, `body`, `comments`, and `anywhere`), it is considered a *database search*.
          A database search returns any document meeting the search criteria.
          That means, as long as the document search is not a full-index search, those documents are returned in the search results.
          For example, a document search for `custom1=Microsoft` will return all documents meeting that criterion, regardless of their document class property `indexable` value.     type: boolean
        schema:
          type: boolean
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Specifies text to match with the `id` or `description` fields.

          This search:
          * Is case insensitive. For example: *ACase* matches *acase*.
          * Matches partial words. For example: *tria* matches *Prepare for trial*.
          * The wildcard character (&ast;) is not supported.

          See also the parameters `alias` and `description`.
        schema:
          type: string
      - name: subclass_required
        in: query
        description: |
          Specifies the class has a required subclass.<br><br>
          If `true`, includes classes that have required subclasses.<br>
          If `false`, includes classes that do not have required subclasses.<br>
          If omitted, the subclass is ignored.
        schema:
          type: boolean
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: active_us
                    default_security: public
                    description: Compare Document
                    hipaa: false
                    id: COMPARE
                    retain: 355
                    required_fields:
                    - custom1
                    - custom2
                    - custom3
                    - custom4
                    shadow: true
                    ssid: 99947263935182
                    subclass_required: false
                  - database: active_us
                    default_security: public
                    description: Discussion
                    hipaa: false
                    id: DISCUSSION
                    retain: 355
                    required_fields: []
                    shadow: false
                    ssid: 99947263935183
                    subclass_required: false
                  - database: active_us
                    default_security: public
                    description: Memo
                    hipaa: false
                    id: GROUP_MEMO
                    retain: 355
                    required_fields:
                    - custom3
                    - custom17
                    shadow: false
                    ssid: 99947263935184
                    subclass_required: true
                  total_count: 44
                required:
                - data
                type: object
                properties: &id676
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        ssid:
                          type: number
                          description: |-
                            Indicates a unique ID assigned by iManage Work to the document class.
                        database: &id656
                          type: string
                          description: |-
                            Indicates the name of the library (formerly called a database) that the class exists in.
                        default_security: &id657
                          description: |-
                            Indicates the default security setting for the documents of this class.

                            The allowed values are:

                            |Value|Description|
                            |:---|:--- |
                            | private | Only the user who created the document, and users and groups who were explicitly granted access permission, can access the document. |
                            | view | All users can access the document but cannot modify it, including both the content or properties, unless explicitly assigned access permission. |
                            | public | All users can access the document unless explicitly excluded. |
                          enum: [public, view, private]
                          type: string
                        description: &id658
                          type: string
                          description: |-
                            Indicates additional information about the class.
                        hipaa: &id659
                          type: boolean
                          description: |-
                            Indicates the document is encrypted.<br><br>
                            If `true`, the document is encrypted.<br>
                            If `false`, the document is not encrypted.

                            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                        indexable: &id660
                          type: boolean
                          description: |
                            Specifies documents of this document class are indexed by the full-text indexer.<br><br>
                            If `true`, documents of this document class are indexed by the full-text indexer.<br>
                            If `false`, documents of this document class will not be indexed by the full-text indexer.<br>
                            If omitted, the value is `true`.

                            The full-text indexer prepares the document's contents for search performance and versatility.
                            It indexes words and phrases to quickly find them.
                            It also expands some terms to include stemming, common variations, and enables logical find statements, such as AND and OR.
                            If full-text indexing is not used, the terms are still indexed but only as exact literals.

                            <font style="color:black;size:5">Excluding documents from as search</font><br>
                            Some kinds of document contents do not provide meaningful information for users.
                            For example, documents used for OCR (optical character recognition) and COMPARE (an iManage tool for tracking changes within a document) contain system information related to those functions and tools.
                            Therefore, users may want to exclude the contents of those documents from searches.

                            This requires that the feature `document_class_indexable` is available on this platform.
                            The `document_class_indexable` is a feature that allows documents of this document class to be excluded from being returned from document searches.
                            Check GET `/customers/{customerId}/features`.<br>
                            The feature is available if `document_class_indexable` is `true`.<br>
                            The feature is not available if `document_class_indexable` is `false` or is omitted from the results. In this case, documents from this document class will always be included in search results.

                            If the feature `document_class_indexable` is `true`, set the `indexable` property.
                            * If set to `true`, documents of this document class are included in search results.
                            * If set to `false`, documents of this document class are excluded from search results.
                            * If set to null or is omitted, `indexable` is considered to be `true`.

                            If these two conditions are met (`document_class_indexable` is `true` and `indexable` is `false`), documents of this document class are excluded from a *full-index search*.
                            A full-index search is a document search that includes a value for any of the following search parameters: `title`, `body`, `comments`, and `anywhere`.
                            Documents meeting these requirements are excluded from the search results even if it meets other document search criteria.
                            For example, a document search for `content=litigation&custom1=Microsoft` will exclude documents, regardless if it otherwise matches `custom1=Microsoft`.

                            If the document search is not a full-index search (that is, does not contain a value for any of the parameters `title`, `body`, `comments`, and `anywhere`), it is considered a *database search*.
                            A database search returns any document meeting the search criteria.
                            That means, as long as the document search is not a full-index search, those documents are returned in the search results.
                            For example, a document search for `custom1=Microsoft` will return all documents meeting that criterion, regardless of their document class property `indexable` value.
                          default: true
                        id: &id661
                          type: string
                          description: |-
                            Indicates the name, or alias, of the class.
                          example: "CUST2REQ"
                        required_fields: &id662
                          type: array
                          items:
                            type: string
                          description: |
                            Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                            For example: [ "custom1", "custom29" ]
                        retain: &id663
                          type: integer
                          description: |
                            Indicates the number of days before marking inactive documents of this class as expired.<br><br>
                            An expired marker can be used to find documents that can be archived.
                        shadow: &id664
                          type: boolean
                          description: |
                            Indicates a document of this class will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                            If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                            If `false`, the document copy will be deleted on a user's local computer after checking it in.

                            Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                            Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                            By some best practices, the use of document shadowing is prohibited or discouraged.
                        subclass_required: &id665
                          type: boolean
                          description: |
                            Indicates that a subclass is required.<br><br>
                            If `true`, a subclass is required.<br>
                            If `false`, subclass is not required.
                      required:
                      - database
                      - default_security
                      - description
                      - hipaa
                      - id
                      - retain
                      - shadow
                      - subclass_required
                      additionalProperties: true
                    description: |-
                      Array of document classes.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes
  #summary: POST /customers/{customerId}/libraries/{libraryId}/classes
      summary: Create document class
      description: |-
        Creates a document class.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_classes
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: SIMPLE
                hipaa: false
                description: A simple test class
                retain: 365
                shadow: true
                default_security: public
                subclass_required: false
              required:
              - description
              - id
              type: object
              properties: &id666
                default_security: &id667
                  description: |-
                    The default security setting for the documents of this class.
                  default: public
                  enum: [public, view, private]
                  type: string
                description: &id668
                  type: string
                  maxLength: 254
                  description: |+
                    Additional information that describes the class.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                hipaa: &id669
                  type: boolean
                  description: |-
                    Specifies the document is to be encrypted.<br><br>
                    If `true`, the document is to be encrypted.<br>
                    If `false`, the document is not to be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
                  default: false
                indexable: &id670
                  type: boolean
                  description: |
                    Specifies documents of this document class are indexed by the full-text indexer.<br><br>
                    If `true`, documents of this document class are indexed by the full-text indexer.<br>
                    If `false`, documents of this document class will not be indexed by the full-text indexer.<br>
                    If omitted, the value is `true`.

                    The full-text indexer prepares the document's contents for search performance and versatility.
                    It indexes words and phrases to quickly find them.
                    It also expands some terms to include stemming, common variations, and enables logical find statements, such as AND and OR.
                    If full-text indexing is not used, the terms are still indexed but only as exact literals.

                    <font style="color:black;size:5">Excluding documents from as search</font><br>
                    Some kinds of document contents do not provide meaningful information for users.
                    For example, documents used for OCR (optical character recognition) and COMPARE (an iManage tool for tracking changes within a document) contain system information related to those functions and tools.
                    Therefore, users may want to exclude the contents of those documents from searches.

                    This requires that the feature `document_class_indexable` is available on this platform.
                    The `document_class_indexable` is a feature that allows documents of this document class to be excluded from being returned from document searches.
                    Check GET `/customers/{customerId}/features`.<br>
                    The feature is available if `document_class_indexable` is `true`.<br>
                    The feature is not available if `document_class_indexable` is `false` or is omitted from the results. In this case, documents from this document class will always be included in search results.

                    If the feature `document_class_indexable` is `true`, set the `indexable` property.
                    * If set to `true`, documents of this document class are included in search results.
                    * If set to `false`, documents of this document class are excluded from search results.
                    * If set to null or is omitted, `indexable` is considered to be `true`.

                    If these two conditions are met (`document_class_indexable` is `true` and `indexable` is `false`), documents of this document class are excluded from a *full-index search*.
                    A full-index search is a document search that includes a value for any of the following search parameters: `title`, `body`, `comments`, and `anywhere`.
                    Documents meeting these requirements are excluded from the search results even if it meets other document search criteria.
                    For example, a document search for `content=litigation&custom1=Microsoft` will exclude documents, regardless if it otherwise matches `custom1=Microsoft`.

                    If the document search is not a full-index search (that is, does not contain a value for any of the parameters `title`, `body`, `comments`, and `anywhere`), it is considered a *database search*.
                    A database search returns any document meeting the search criteria.
                    That means, as long as the document search is not a full-index search, those documents are returned in the search results.
                    For example, a document search for `custom1=Microsoft` will return all documents meeting that criterion, regardless of their document class property `indexable` value.
                  default: true
                id: &id671
                  type: string
                  maxLength: 32
                  description: |+
                    The alias or display name of a class that users need to enter in the document profile information.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                  example: "CUST2REQ"
                  pattern: |-
                    ^[\u0021-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*$
                required_fields: &id672
                  type: array
                  items:
                    enum: ["custom1", "custom2", "custom3", "custom4", "custom5",
                      "custom6", "custom7", "custom8", "custom9", "custom10", "custom11",
                      "custom12", "custom29", "custom30", "custom31"]
                    type: string
                  description: |
                    Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                    For example: [ "custom1", "custom29" ]
                retain: &id673
                  type: integer
                  description: |
                    The number of days iManage Work waits before marking inactive documents of this class for archiving.
                    If a document of this class is not accessed for the number of retain days, iManage Work identifies them as expired.
                  default: 365
                shadow: &id674
                  type: boolean
                  description: |
                    Specifies a document of this class will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                    If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                    If `false`, the document copy will be deleted on a user's local computer after checking it in.

                    Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                    Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                    By some best practices, the use of document shadowing is prohibited or discouraged.
                  default: false
                subclass_required: &id675
                  type: boolean
                  description: |
                    Indicates that a subclass alias is required.<br><br>
                    If `true`, a subclass alias is required.<br>
                    If `false`, subclass alias is not required.
                  default: false
              additionalProperties: true
              description: |-
                Represents a new document class creation request.
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}:
    description: |-
      None
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}
      summary: Get document class details
      description: |-
        Gets the information about the document class based on the alias provided.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE
                    default_security: public
                    description: Document
                    required_fields: []
                    hipaa: false
                    id: DOC
                    retain: 365
                    shadow: true
                    subclass_required: false
                required:
                - data
                type: object
                properties: &id677
                  data:
                    $ref: '#/components/schemas/Classes.class'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}
      summary: Update a document class
      description: |-
        Updates the specified document class.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                hipaa: false
                description: A simple test class
                retain: 365
                shadow: true
                default_security: public
                subclass_required: false
              type: object
              properties: &id678
                default_security:
                  description: |-
                    The default security setting for documents of this class or subclass.
                  enum: [public, view, private]
                  type: string
                description:
                  type: string
                  maxLength: 254
                  description: |
                    Description or definition for the class or subclass.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                required_fields:
                  type: array
                  items:
                    enum: ["custom1", "custom2", "custom3", "custom4", "custom5",
                      "custom6", "custom7", "custom8", "custom9", "custom10", "custom11",
                      "custom12", "custom29", "custom30", "custom31"]
                    type: string
                  description: |
                    Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                    For example: [ "custom1", "custom29" ]
                hipaa:
                  type: boolean
                  description: |-
                    Specifies the document is to be encrypted.<br><br>
                    If `true`, the document is to be encrypted.<br>
                    If `false`, the document is not to be encrypted.

                    This encryption is compliant to HIPAA and other American statutes protecting sensitive data from accidental or wrongful disclosure.
                    Documents and emails can be encrypted by different sources.
                    Therefore, even if this value is false, the document and email could still be encrypted.
                    Being identified by more than one source has no additional effect on encryption.
                indexable:
                  type: boolean
                  description: |
                    Specifies documents of this document class are indexed by the full-text indexer.<br><br>
                    If `true`, documents of this document class are indexed by the full-text indexer.<br>
                    If `false`, documents of this document class will not be indexed by the full-text indexer.<br>
                    If omitted, the value is `true`.

                    The full-text indexer prepares the document's contents for search performance and versatility.
                    It indexes words and phrases to quickly find them.
                    It also expands some terms to include stemming, common variations, and enables logical find statements, such as AND and OR.
                    If full-text indexing is not used, the terms are still indexed but only as exact literals.

                    <font style="color:black;size:5">Excluding documents from as search</font><br>
                    Some kinds of document contents do not provide meaningful information for users.
                    For example, documents used for OCR (optical character recognition) and COMPARE (an iManage tool for tracking changes within a document) contain system information related to those functions and tools.
                    Therefore, users may want to exclude the contents of those documents from searches.

                    This requires that the feature `document_class_indexable` is available on this platform.
                    The `document_class_indexable` is a feature that allows documents of this document class to be excluded from being returned from document searches.
                    Check GET `/customers/{customerId}/features`.<br>
                    The feature is available if `document_class_indexable` is `true`.<br>
                    The feature is not available if `document_class_indexable` is `false` or is omitted from the results. In this case, documents from this document class will always be included in search results.

                    If the feature `document_class_indexable` is `true`, set the `indexable` property.
                    * If set to `true`, documents of this document class are included in search results.
                    * If set to `false`, documents of this document class are excluded from search results.
                    * If set to null or is omitted, `indexable` is considered to be `true`.

                    If these two conditions are met (`document_class_indexable` is `true` and `indexable` is `false`), documents of this document class are excluded from a *full-index search*.
                    A full-index search is a document search that includes a value for any of the following search parameters: `title`, `body`, `comments`, and `anywhere`.
                    Documents meeting these requirements are excluded from the search results even if it meets other document search criteria.
                    For example, a document search for `content=litigation&custom1=Microsoft` will exclude documents, regardless if it otherwise matches `custom1=Microsoft`.

                    If the document search is not a full-index search (that is, does not contain a value for any of the parameters `title`, `body`, `comments`, and `anywhere`), it is considered a *database search*.
                    A database search returns any document meeting the search criteria.
                    That means, as long as the document search is not a full-index search, those documents are returned in the search results.
                    For example, a document search for `custom1=Microsoft` will return all documents meeting that criterion, regardless of their document class property `indexable` value.
                retain:
                  type: integer
                  description: |
                    Indicates the number of days iManage Work waits before marking inactive documents of this class for archiving.<br><br>
                    After documents in this class are not accessed for the number of retain days, iManage Work identifies them as *expired*.
                shadow:
                  type: boolean
                  default: false
                  description: |-
                    Specifies a document of this class will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                    If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                    If `false`, the document copy will be deleted on a user's local computer after checking it in.

                    Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                    Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                    By some best practices, the use of document shadowing is prohibited or discouraged.
                subclass_required:
                  type: boolean
                  description: |
                    Indicates that a subclass alias is required.<br><br>
                    If `true`, a subclass alias is required.<br>
                    If `false`, subclass alias is not required.
              additionalProperties: true
              description: |-
                Represents a document class update request.
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}
      summary: Delete a document class
      description: |-
        Deletes a document class.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses:
    description: |
      Document classes are further divided into subclasses to define the sub-category of documents.
      The subclass information must be provided in a document profile if `subclass_required` property is set to `true` while creating a class. <br>
      When a document is classified with a class and a subclass, the document’s default security and required fields are those set for the subclass.
      That is, if a subclass is specified for a document, the security and other parameters for the subclass overrides any settings created for the class. <br>
      For example, If the default security for the document’s class is set to Private, and the default security for the subclass is set to Public, then any
      documents classified with both the class and subclass are Public.
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses
      summary: Get subclasses
      description: |-
        Gets all the document subclasses that match the specified criteria.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses
      parameters:
      - *id004
      - name: alias
        in: query
        description: |+
          Returns the subclasses with the specified name (also called alias).<br><br>
          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.<br>
          For example: `alias=*jects` will return 'Projects'. `alias=pro*` will return both 'Programs' and 'Projects'.<br>
          If wildcard character is not included, it matches whole fields only.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: default_security
        in: query
        description: |-
          Returns the subclasses with the specified default security level.
        schema:
          enum: ["public", "private", "view"]
          type: string
      - name: description
        in: query
        description: |+
          Returns the subclasses with the specified description.<br><br>
          The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields, include the asterisk wildcard before or after the query value.<br>
          If wildcard character is not included, it matches whole fields only.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
      - name: echo
        in: query
        description: |-
          Returns the subclasses that can be echoed or shadowed to a user's local hard drive for working on it offline.
        schema:
          type: boolean
      - name: hipaa
        in: query
        description: |
          Indicates if the HIPAA compliant subclasses are to be returned. <br><br>
          If `true`, returns subclasses with HIPAA enabled.<br>
          The documents belonging to HIPAA compliant subclasses are always encrypted.
        schema:
          type: boolean
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Matched text in the subclasses `alias` or `description` field.<br><br>
          If wildcard character (&ast;) is not added, all partial matches are returned.<br>
          For example: `query=pro` will return both 'Programs' and 'Projects'.<br>

          The wildcard character (&ast;) is also supported and matches any number of contiguous characters, including spaces.<br>
          To match partial fields as required, include the asterisk wildcard before or after the query value.<br>
          For example: `query=*jects` will return 'Projects'. `query=pro*` will return both 'Programs' and 'Projects'.
        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE
                    default_security: public
                    description: Subclass 1
                    required_fields:
                    - custom1
                    - custom8
                    hipaa: false
                    id: SCL
                    parent:
                      id: PCL
                    retain: 365
                    shadow: false
                    ssid: 99949872035612
                  - database: ACTIVE
                    default_security: public
                    description: Subclass 2
                    hipaa: false
                    id: SCL2
                    parent:
                      id: PCL
                    retain: 365
                    shadow: false
                    ssid: 99949872035613
                required:
                - data
                type: object
                properties: &id689
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        ssid:
                          type: number
                          description: |-
                            Indicates a unique ID assigned by iManage Work to the subclass.
                        database: &id679
                          type: string
                          description: |-
                            Name of the library on which the subclass exists.
                        default_security: &id680
                          description: |-
                            The default security setting for documents of this subclass.
                          enum: [public, view, private]
                          type: string
                        description: &id681
                          type: string
                          description: |-
                            Indicates additional information that describes the subclass. Maximum length is 255 characters.
                        hipaa: &id682
                          type: boolean
                          description: |-
                            Indicates the document is encrypted.<br><br>
                            If `true`, the document is encrypted.<br>
                            If `false`, the document is not encrypted.

                            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                        id: &id683
                          type: string
                          description: |-
                            Indicates the alias or display name of a subclass that users need to enter in the document profile information.
                          example: "CUST2REQ"
                        parent: &id684
                          required:
                          - id
                          type: object
                          properties:
                            id:
                              type: string
                              description: |-
                                The parent's container ID.
                          description: |-
                            Parent container object.
                        required_fields: &id685
                          type: array
                          items:
                            type: string
                          description: |
                            Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                            For example: [ "custom1", "custom29" ]
                        retain: &id686
                          type: integer
                          description: |
                            Indicates the number of days before marking inactive documents of this subclass as expired.<br><br>
                            An expired marker can be used to find documents that can be archived.
                        shadow: &id687
                          type: boolean
                          description: |-
                            Indicates a document of this subclass will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                            If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                            If `false`, the document copy will be deleted on a user's local computer after checking it in.

                            Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                            Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                            By some best practices, the use of document shadowing is prohibited or discouraged.
                      required:
                      - database
                      - default_security
                      - description
                      - hipaa
                      - id
                      - parent
                      - retain
                      - shadow
                      additionalProperties: false
                    description: |-
                      Array of subclass.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses
  #summary: POST /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses
      summary: Create document subclass
      description: |-
        Creates a new document subclass.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: SCL2
                hipaa: false
                description: Subclass 2
                retain: 365
                shadow: false
                default_security: public
              required:
              - description
              - id
              type: object
              properties: &id688
                default_security:
                  description: |-
                    The default security setting for documents of this subclass.
                  default: public
                  enum: [public, view, private]
                  type: string
                description:
                  type: string
                  maxLength: 254
                  description: |
                    Additional information that describes the subclass.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                hipaa:
                  type: boolean
                  description: |-
                    Indicates the document is encrypted.<br><br>
                    If `true`, the document is encrypted.<br>
                    If `false`, the document is not encrypted.

                    Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                    Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                    This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                  default: false
                id:
                  type: string
                  description: |
                    The alias or display name of a subclass.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                  example: "CUST2REQ"
                required_fields:
                  type: array
                  items:
                    enum: ["custom1", "custom2", "custom3", "custom4", "custom5",
                      "custom6", "custom7", "custom8", "custom9", "custom10", "custom11",
                      "custom12", "custom29", "custom30", "custom31"]
                    type: string
                  description: |
                    Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                    For example: [ "custom1", "custom29" ]
                retain:
                  type: integer
                  description: |
                    Indicates the number of days before marking inactive documents of this subclass as expired.<br><br>
                    An expired marker can be used to find documents that can be archived.
                  default: 365
                shadow:
                  type: boolean
                  description: |-
                    Specifies a document of this subclass will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                    If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                    If `false`, the document copy will be deleted on a user's local computer after checking it in.

                    Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                    Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                    By some best practices, the use of document shadowing is prohibited or discouraged.
                  default: false
              additionalProperties: true
              description: |-
                Represents a new document subclass creation request.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}:
    description: |-
      None
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses-{subclassAliasId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}
      summary: Get document subclass details
      description: |-
        Gets the information about the document subclass based on the alias provided.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses_{subclassAliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE
                    default_security: public
                    description: Subclass 1
                    required_fields:
                    - custom1
                    - custom8
                    hipaa: false
                    id: SCL
                    parent:
                      id: PCL
                    retain: 365
                    shadow: false
                required:
                - data
                type: object
                properties: &id690
                  data:
                    $ref: '#/components/schemas/Classes.subclass'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses-{subclassAliasId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}
      summary: Update a subclass
      description: |-
        Updates the specified document subclass.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses_{subclassAliasId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                hipaa: false
                description: Subclass 1.1
                retain: 365
                shadow: false
                default_security: public
              type: object
              properties: &id691
                default_security:
                  description: |-
                    The default security setting for documents of this subclass.
                  enum: [public, view, private]
                  type: string
                description:
                  type: string
                  maxLength: 254
                  description: |
                    Additional information that describes the class.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                hipaa:
                  type: boolean
                  description: |-
                    Indicates the document is encrypted.<br><br>
                    If `true`, the document is encrypted.<br>
                    If `false`, the document is not encrypted.

                    Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
                    Also called *data at rest encryption*, the data files are encrypted when they are not being used.
                    This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
                required_fields:
                  type: array
                  items:
                    enum: ["custom1", "custom2", "custom3", "custom4", "custom5",
                      "custom6", "custom7", "custom8", "custom9", "custom10", "custom11",
                      "custom12", "custom29", "custom30", "custom31"]
                    type: string
                  description: |
                    Indicates the mandatory custom properties to be entered when creating or updating a document of this class.<br><br>
                    For example: [ "custom1", "custom29" ]
                retain:
                  type: integer
                  description: |
                    The number of days iManage Work waits before marking inactive documents of this subclass for archiving.
                    If a document of this subclass is not accessed for the number of retain days, iManage Work identifies them as expired.
                shadow:
                  type: boolean
                  description: |-
                    Specifies a document of this subclass will be shadowed, or retained, on a user's local computer after checking it in.<br><br>
                    If `true`, the document copy will be retained on a user's local computer after checking it in.<br>
                    If `false`, the document copy will be deleted on a user's local computer after checking it in.

                    Document shadowing (also called document echoing) is the ability to retain a copy of the document on the user's local computer after it is checked in.
                    Some organizations recognize that there can be a security issue by having document copies outside of the iManage Work system.
                    By some best practices, the use of document shadowing is prohibited or discouraged.
              additionalProperties: true
              description: |-
                Represents a document subclass update request.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses-{subclassAliasId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}
      summary: Delete a subclass
      description: |-
        Deletes a subclass.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses_{subclassAliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
    - name: subclassAliasId
      in: path
      description: |-
        Alias or name of a document subclass.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}/required:
    description: |-
      None
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-subclasses-{subclassAliasId}-required
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/subclasses/{subclassAliasId}/required
      summary: Get subclass required fields
      description: |
        Gets the required fields configured for a subclass.<br><br>
        The required fields are mandatory properties to be entered when creating or updating a document of this subclass.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_subclasses_{subclassAliasId}_required
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - custom2
                  - custom1
                  - custom3
                  - custom4
                required:
                - data
                type: object
                properties: &id540
                  data:
                    type: array
                    items:
                      type: string
                    description: |-
                      Array of response strings.
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
    - name: subclassAliasId
      in: path
      description: |-
        Alias or name of a document subclass.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/required:
    description: |-
      None
    get:
      tags:
      - Classes
  #- customers-{customerId}-libraries-{libraryId}-classes-{aliasId}-required
  #summary: GET /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}/required
      summary: Get class required fields
      description: |
        Gets the required fields configured for a class.
        The required fields are mandatory properties to be entered when adding or modifying a document of this class.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_classes_{aliasId}_required
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - custom2
                  - custom1
                  - custom3
                  - custom4
                required:
                - data
                type: object
                properties: *id540
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: aliasId
      in: path
      description: |-
        Profile field ID on which the caption is defined.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/change-events:
    get:
      tags:
      - Change Events
  #- customers-{customerId}-libraries-{libraryId}-change-events
  #summary: GET /customers/{customerId}/libraries/{libraryId}/change-events
      summary: Get change events
      description: |-
        Gets the change events based on the actions performed on iManage Work objects.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_change-events
      parameters:
      - *id004
      - name: actions
        in: query
        description: |-
          Comma-separated list of actions to return.
        schema:
          enum: ["insert", "update", "delete", "profile_update", "security_update",
            "document_link", "container_link", "document_unlink", "container_unlink",
            "name_value_pair_update", "declared", "undeclared", "container_move",
            "restored_from_trash", "purged_from_trash", "kmtag_update"]
          type: string
      - name: cursor
        in: query
        description: |-
          Last event ID processed in the change events queue.
        schema:
          type: string
      - name: exclude_app_ids
        in: query
        description: |-
          The comma-separated list of app IDs to exclude from the result.
        schema:
          type: string
      - name: item_types
        in: query
        description: |-
          List of iManage Work object types to return.
        schema:
          enum: ["document", "container", "type", "user", "group", "worklist", "checkout_list",
            "sync_preference", "container_item", "group_member"]
          type: string
      - name: limit
        in: query
        description: |-
          Maximum number of events to return.
        schema:
          type: integer
          default: 100
      - name: root_id
        in: query
        description: |-
          Comma-separated list of workspace IDs to filter the change events.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - action_type: insert
                    event_date: '2018-04-18T21:46:25Z'
                    id: '2687087'
                    object_id: ACTIVE!11556
                    item_type: container
                    root_id: ACTIVE!11551
                  - action_type: container_link
                    event_date: '2018-04-18T21:46:25Z'
                    id: '2687088'
                    object_id: ACTIVE!11551
                    item_type: container
                    related_object_id: ACTIVE!11556
                    root_id: ACTIVE!11551
                  - action_type: update
                    event_date: '2018-04-18T21:46:26Z'
                    id: '2687089'
                    object_id: ACTIVE!11556
                    item_type: container
                    root_id: ACTIVE!11551
                  - action_type: name_value_pair_update
                    event_date: '2018-04-18T21:46:26Z'
                    id: '2687090'
                    object_id: ACTIVE!11556
                    item_type: container
                    root_id: ACTIVE!11551
                  - action_type: insert
                    event_date: '2018-04-18T21:49:22Z'
                    id: '2687091'
                    object_id: ACTIVE!50932.1
                    item_type: document
                    root_id: ACTIVE!11551
                  - action_type: document_link
                    event_date: '2018-04-18T21:49:22Z'
                    id: '2687092'
                    object_id: ACTIVE!11552
                    item_type: container
                    related_object_id: ACTIVE!50932
                    root_id: ACTIVE!11551
                  - action_type: document_link
                    event_date: '2018-04-18T21:49:23Z'
                    id: '2687093'
                    object_id: ACTIVE!54
                    item_type: worklist
                    related_object_id: ACTIVE!50932.1
                  overflow: false
                  cursor: '2687321'
                required:
                - data
                - overflow
                - cursor
                type: object
                properties: &id655
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Change-events.changeEvent'
                  overflow:
                    type: boolean
                    description: |-
                      Indicates if there are additional events to process.<br><br>If `true`, there are additional events.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  cursor:
                    type: string
                    description: |
                      Cursor to be used for a subsequent request to get change events.<br><br>
                      If there is an overflow (`overflow` is `true`), the cursor corresponds to the last event returned.
                      Otherwise, it returns the latest change event for the specified library without considering other search filters.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/change-events/queues/{queueId}:
    description: |-
      None
    get:
      tags:
      - Change Events
  #- customers-{customerId}-libraries-{libraryId}-change-events-queues-{queueId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/change-events/queues/{queueId}
      summary: Get latest change event ID
      description: |-
        Gets the latest event ID from the specified queue.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_change-events_queues_{queueId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    queue_id: MYQUEUENAME
                    event_id: '2670458'
                    event_date: '2018-04-18T21:46:25Z'
                required:
                - data
                type: object
                properties: &id541
                  data:
                    $ref: '#/components/schemas/Change-events.changeEventQueue'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Change Events
  #- customers-{customerId}-libraries-{libraryId}-change-events-queues-{queueId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/change-events/queues/{queueId}
      summary: Update a queue
      description: |-
        Updates the queue with the specified change event ID.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_change-events_queues_{queueId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                event_id: '2670458'
              required:
              - event_id
              type: object
              properties: &id653
                event_id:
                  maxLength: 254
                  type: string
                  description: |-
                    Latest event ID for the queue.
                filter_options:
                  type: string
                  description: |-
                    Optional filter parameters related to this queue.
              additionalProperties: true
              description: |-
                Post body to update ChangeEvent queue.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
      parameters:
      - *id004
    delete:
      tags:
      - Change Events
  #- customers-{customerId}-libraries-{libraryId}-change-events-queues-{queueId}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/change-events/queues/{queueId}
      summary: Delete a queue
      description: |-
        Deletes the queue from the library.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_change-events_queues_{queueId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: queueId
      in: path
      description: |-
        Name of the change event queue.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/change-events/queues:
    description: |-
      None
    post:
      tags:
      - Change Events
  #- customers-{customerId}-libraries-{libraryId}-change-events-queues
  #summary: POST /customers/{customerId}/libraries/{libraryId}/change-events/queues
      summary: Create change event queue
      description: |-
        Creates a queue with the specified queue ID.<br><br>It creates a new queue with latest event ID as the ID of last event recorded in the CHANGE_EVENTS table.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_change-events_queues
      requestBody:
        content:
          application/json:
            schema:
              example:
                queue_id: MYQUEUENAME
              required:
              - queue_id
              type: object
              properties: &id654
                queue_id:
                  type: string
                  description: |-
                    Name of the queue.
                event_id:
                  type: string
                  description: |
                    The event ID of the most recent change event processed in this queue.
                    If `event_id` is omitted, the value defaults to the latest change event for the relevant library.
                filter_options:
                  type: string
                  description: |-
                    Optional filter parameters related to this queue.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    queue_id: MYQUEUENAME
                    event_id: '2670458'
                    event_date: '2018-04-18T21:46:25Z'
                required:
                - data
                type: object
                properties: *id541
                additionalProperties: false
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions:
# September 2020
    description: |
      A caption, also called an alias or id, is a customized label associated with each profile field available to all iManage Work clients.
      For example, author, operator, custom properties, and so on. <br>
      They are friendly or descriptive labels for these fields.
      For example, you can create a caption for the *custom1* field as *Client*.
      Any changes to these names are reflected dynamically in the UI.
      Captions can also be defined per client application's locale settings for a language.

      Captions can be set for:
      * All custom fields
      * All iManage elements found in the iManage tree (My Matters, Recent Searches, and so on)

    get:
      tags:
      - Captions
    #- customers-{customerId}-libraries-{libraryId}-captions
  #summary: GET /customers/{customerId}/libraries/{libraryId}/captions
      summary: Get captions
      description: |
        Searches for specified captions.

        A caption for a field can be available for each of the supported languages.
        That is, each caption will have an entry for English, German, Japanese, and other supported languages.
        Specify the locale identifier to return captions only in the required language.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the captions that are in English (United States), and the total count:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!7498/captions?total=true&language=en-us`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To search for a specified caption, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">GET customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
        * To update a caption, see <a href="#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">PUT customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_captions
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ' active_us'
                    id: custom1
                    label: Client
                    locale: 1033
                    locale_raw: 1033
                    num: 7
                    type: custom1
                  - database: ' active_us'
                    id: custom2
                    label: Matter
                    locale: 1033
                    locale_raw: 1033
                    num: 8
                    type: custom2
                  - database: ' active_us'
                    id: custom3
                    label: Jurisdiction
                    locale: 1033
                    locale_raw: 1033
                    num: 9
                    type: custom3
                  total_count: 3
                required:
                - data
                type: object
                properties: &id650
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Captions.caption'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        401: *id002
        404: *id005
      parameters:
      - *id004
      - &id542
        name: alias
        in: query
        description: |
          Specifies text that must be found in the `id` field.<br><br>
          This is the original field name. For example, use *custom1* and not its current caption such as *Client*.
          Use label to search for its current caption such as *Client*.<br><br>
          This parameter is case sensitive. For example, *CreateDate* will not match *createdate*.<br>
          The wildcard character (&ast;) is not supported.<br>
          The match must be complete; partial matches are not allowed. For example, *created* will not match *createdate*.<br>
          See also the parameters `label` and `query`.
        schema:
          example: createdate
          type: string
      - &id543
        name: label
        in: query
        description: |
          Specifies text that must be found in the `label` field.<br><br>
          This parameter is case sensitive. For example, *CreateDate* will not match *createdate*.<br>
          The wildcard character (&ast;) is not supported.<br>
          The match must be complete; partial matches are not allowed. For example, *created* will not match *createdate*.<br>
          See also the parameters `alias` and `query`.
        schema:
          example: caption
      - &id544
        name: language
        in: query
        description: |
          Specifies the language by the ISO 639-1 language code.<br><br>
          The ISO 639-1 language code does not appear in the caption object but is converted to a Microsoft Locale ID.
          See the parameter `locale` for more information.<br><br>
          It is case insensitive.<br><br>
          The following are the allowed values:
          * Chinese: zh-CN
          * English: en-US
          * German: de-DE
          * French: fr-FR
          * French (Canadian): fr-CA
          * Japanese: ja-JP
          * Spanish: es-ES
          * Portuguese: pt-BR
        schema:
          description: needs defining
          default: en-US
          example: en-US
      - *id011
      - &id545
        name: locale
        in: query
        description: |
          Specifies the language by the locale number.<br><br>
          The locale number is the Microsoft Locale ID.
          Only a single locale code can be specified.
          Examples include `locale=1033`, or `locale=1041`.

          The following are the the allowed values:
          * Chinese: 2052
          * English: 1033
          * German: 1031
          * French: 1036
          * French (Canadian): 3084
          * Japanese: 1041
          * Spanish: 3028
          * Portuguese: 1046
        schema:
          type: number
          example: 1033
          default: 1033
      - &id546
        name: num
        in: query
        description: |-
          Specifies the caption by the `num` field.<br><br>
          The custom fields are assigned with a caption number that identifies the caption.
          For example, custom1 can be assigned the custom number as 7, and custom2 as 8.

          Each caption is a set of entries, one for each supported language.
          For example, custom1 could have eight entries, one for each language.

          Specify a language, using either parameter `locale` or `language`.
          For example, `locale=1033` specifies returning the English (American) caption.
        schema:
          type: integer
          example: 7
      - *id006
      - &id547
        name: query
        in: query
        description: |
          Specifies text that must be found in the `id` or `label` fields.<br><br>
          This parameter is case sensitive. For example, *CreateDate* will not match *createdate*.<br>
          The wildcard character (&ast;) is not supported.<br>
          The match must be complete; partial matches are not allowed. For example, *created* will not match *createdate*.<br><br>
          See also the parameters `label` and `query`.
        schema:
          type: string
      - &id548
        name: ss_num
        in: query
        description: |-
          Deprecated. Do not use.
        schema:
          type: number
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'


  /work/api/v2/customers/{customerId}/libraries/{libraryId}/captions/{aliasId}:
    description: |-
      None
    get:
      tags:
      - Captions
    #- customers-{customerId}-libraries-{libraryId}-captions-{aliasId}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/captions/{aliasId}
      summary: Get caption details
      description: |
        Gets the specified caption.

        A caption for a field can be available for each of the supported languages.
        That is, each caption will have an entry for English, German, Japanese, and other supported languages.
        Specify the locale identifier to return captions only in the required language.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns the English (United States) custom1 value:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/folders/active_us!7498/captions/custom1?language=en-us`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To search for all captions, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions">GET customers/{customerId}/libraries/{libraryId}/captions</a>
         * To update a caption, see <a href="#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">PUT customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
      operationId: GET_customers_{customerId}_libraries_{libraryId}_captions_{aliasId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ' active_us'
                    id: custom1
                    label: Client
                    locale: 1033
                    num: 7
                    type: custom1
                required:
                - data
                type: object
                properties: &id649
                  data:
                    $ref: '#/components/schemas/Captions.caption'
        401: *id002
        404: *id005
      parameters:
      - *id004
      - *id542
      - *id543
      - *id544
      - *id011
      - *id545
      - *id546
      - *id006
      - *id547
      - *id548
      - *id007
    put:
      tags:
      - Captions
    #- customers-{customerId}-libraries-{libraryId}-captions-{aliasId}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/captions/{aliasId}
      summary: Update caption
      description: |
        Updates the specified caption.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        Only the field `label` can be changed.
        The fields `locale` or `num` can be used to further specify which language the caption is to be changed.
        If either is omitted, the default is 1033, English (American).

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request changes the German caption of custom3:<br>
        PUT `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/captions/custom3`<br>
        Request body: See the **Request samples** section of the sample provided in the right pane.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To search for all captions, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions">GET customers/{customerId}/libraries/{libraryId}/captions</a>
        * To search for a specified caption, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">GET customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_captions_{aliasId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                label: Federal Number
                locale: 1031
              required:
              - label
              type: object
              properties: &id651
                label:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the new label.<br><br>
                    This is the only field that can be changed with this request.
                    The caption must be fewer than 255 characters.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                locale:
                  type: integer
                  default: 1033
                  description: |-
                    Specifies the language locale ID of the caption to change.<br><br>
                    The default is 1033.<br>
                    The locale number is the Microsoft Locale ID.
                    The following are the allowed values:
                    * Chinese: 2052
                    * English: 1033
                    * German: 1031
                    * French: 1036
                    * French (Canadian): 3084
                    * Japanese: 1041
                    * Spanish: 3028
                    * Portuguese: 1046
                num:
                  type: integer
                  description: |-
                    Specifies the caption number of the caption to change.<br><br>
                    The custom fields are assigned with a caption number that identifies the caption.
                    For example, custom1 can be assigned the custom number as 7, and custom2 as 8.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        403: *id001
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: aliasId
      in: path
      description: |-
        The name of the caption.
      required: true
      schema:
        description: needs defining


#    * To search for all captions, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions">GET customers/{customerId}/libraries/{libraryId}/captions</a>
#    * To search for a specified caption, see <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">GET customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
#    * To update a caption, see <a href="#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/captions/-aliasId-">PUT customers/{customerId}/libraries/{libraryId}/captions/{aliasId}</a>
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup:
    get:
      tags:
      - File Handlers
    # - customers-{customerId}-libraries-{libraryId}-appsetup
  #summary: GET /customers/{customerId}/libraries/{libraryId}/appsetup
      summary: Get file-handling apps
      description: |-
        Gets all the file handling application setup details that match the specified criteria.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_appsetup
      parameters:
      - *id004
      - name: alias
        in: query
        description: |-
          Returns the apps for specified doc type.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/#+<>;"=
        schema:
          type: string
      - name: dde
        in: query
        description: |-
          Indicates if the apps are dde enabled or disabled.
        schema:
          type: boolean
      - name: dde_app_name
        in: query
        description: |
          Returns the apps with specified dde_app_name.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        schema:
          type: string
      - name: dde_topic
        in: query
        description: |
          Returns apps with specified dde_topic.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        schema:
          type: string
      - name: integration_mode
        in: query
        description: |-
          Mode in which the application is integrated with iManage Work.
        schema:
          enum: ["T", "Y", "N", "t", "y", "n"]
          type: string
      - *id011
      - name: name
        in: query
        description: |-
          Returns the apps with specified name.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/#+<>;"=
        schema:
          type: string
      - *id006
      - name: primary
        in: query
        description: |-
          Indicates if the apps are primary or not.
        schema:
          type: boolean
      - name: query
        in: query
        description: |-
          String that is searched in the alias or description of the application setup details, for it to be included in the results.
        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE
                    dde: false
                    dde_app_name: ACROVIEW
                    dde_open: '[FileOpen("??"))]'
                    dde_print: '[FilePrint("??"))]'
                    dde_print_1: '[FilePrint("??"))]'
                    dde_read_open: '[FileOpen("??"))]'
                    dde_topic: CONTROL
                    id: ACROBAT
                    integration_mode: T
                    location: C:\Program Files\Acrobat3\Reader\AcroRd32.exe
                    name: Adobe Acrobat Reader
                    primary: true
                  - database: ACTIVE
                    dde: false
                    dde_app_name: ''
                    dde_open: ''
                    dde_print: ''
                    dde_print_1: ''
                    dde_read_open: ''
                    dde_topic: ''
                    id: WORD
                    integration_mode: T
                    location: COMPARE.EXE
                    name: CompareRite
                    primary: false
                  - database: ACTIVE
                    dde: true
                    dde_app_name: PRESENTATIONS
                    dde_open: ShellFileOpen("??") PRActivate()
                    dde_print: ''
                    dde_print_1: ''
                    dde_read_open: ''
                    dde_topic: COMMAND
                    id: PRSHW
                    integration_mode: Y
                    location: C:\Corel\Suite8\Programs\PRWIN8.EXE
                    name: Corel Presentations
                    primary: true
                  total_count: 19
                required:
                - data
                type: object
                properties: &id549
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Appsetup.appsetupItem'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        401: *id002
    post:
      tags:
      - File Handlers
    #- customers-{customerId}-libraries-{libraryId}-appsetup
  #summary: POST /customers/{customerId}/libraries/{libraryId}/appsetup
      summary: Create file-handling app entry
      description: |-
        Creates a file handling application setup entry.
      operationId: POST_customers_{customerId}_libraries_{libraryId}_appsetup
      requestBody:
        content:
          application/json:
            schema:
              example:
                dde: false
                dde_app_name: VISIO
                dde_open: '[REM _DDE_Direct][FileOpen("??")]'
                dde_print: '[FileOpen.Name="??"][FilePrint 0][DocClose 2]'
                dde_print_1: '[FileOpen.Name="??"][FilePrint 0][FileExit 2]'
                dde_read_open: '[FileOpen.Name="??",.ReadOnly = 1]'
                dde_topic: SYSTEM
                id: VISIO
                integration_mode: Y
                location: C:<\Program Files\Microsoft Office\Office\Visio11\VISIO.EXE>
                name: Microsoft Visio
                primary: true
              required:
              - id
              - name
              type: object
              properties: &id643
                database:
                  type: string
                  description: |-
                    Name of the library to which the file-handling application belongs to.
                dde:
                  type: boolean
                  description: |
                    Indicates that Dynamic Data Exchange (DDE) is enabled.<br><br>
                    The DDE protocol allows data to be communicated or shared between the applications.
                    This protocol uses command lines for data transfer. The DDE command line is different for each application.<br><br>
                    If `true`, indicates that Dynamic Data Exchange is enabled.<br>
                    If `false`, Dynamic Data Exchange is disabled.
                  default: false
                dde_app_name:
                  maxLength: 32
                  type: string
                  description: |
                    DDE application name which is usually the executable filename for the server application without .exe extension.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_open:
                  maxLength: 254
                  type: string
                  description: |
                    DDE command line to open a document in this file-handling application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_print:
                  maxLength: 254
                  type: string
                  description: |
                    DDE command line to print a document. The command line assumes that the file-handling application is already running.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_print_1:
                  maxLength: 254
                  type: string
                  description: |
                    DDE Command Line to print a document when the file-handling application is not already running.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_read_open:
                  maxLength: 254
                  type: string
                  description: |
                    DDE command Line to open a document for read-only viewing in this application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_topic:
                  maxLength: 32
                  type: string
                  description: |
                    DDE Topic for the application which usually identifies a category of data associated with the server application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                id:
                  type: string
                  description: |-
                    Valid Type name.
                integration_mode:
                  enum: ["T", "Y", "N"]
                  type: string
                  description: |
                    Identifies the method for integrating the application with iManage Work clients:<br>
                    * COM Integration- Application is integrated with iManage using macros supplied with the iManage DMS.
                    * ODMA Integration- Application is integrated using the ODMA method.
                    * Non-Integrated- Application cannot be integrated using macros or ODMA integration.
                  default: N
                location:
                  maxLength: 254
                  type: string
                  description: |+
                    Location of the application.<br><br>
                    In most of the cases, merely the name of the executable file is sufficient, but full path name can also be specified.
                    For example, if the application is Microsoft Word and the executable file is WINWORD.EXE, it is sufficient to specify WINWORD.EXE. Maximum string length&#58; 254.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                name:
                  maxLength: 32
                  type: string
                  description: |
                    Descriptive name for the file-handling application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                primary:
                  type: boolean
                  description: |
                    Indicates if it is a primary application for a document type.<br><br>
                    If there are multiple applications associated with a document type, one application may be identified as the primary one.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup/{alias}:
    description: |-
      None
    get:
      tags:
      - File Handlers
    #- customers-{customerId}-libraries-{libraryId}-appsetup-{alias}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/appsetup/{alias}
      summary: Get application details
      description: |-
        Gets the application setup details.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_appsetup_{alias}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: active
                    dde: false
                    dde_app_name: ''
                    dde_open: ''
                    dde_print: ''
                    dde_print_1: ''
                    dde_read_open: ''
                    dde_topic: ''
                    id: WORD
                    integration_mode: T
                    location: COMPARE.EXE
                    name: CompareRite
                    primary: false
                  - database: active
                    dde: false
                    dde_app_name: ''
                    dde_open: ''
                    dde_print: ''
                    dde_print_1: ''
                    dde_read_open: ''
                    dde_topic: ''
                    id: WORD
                    integration_mode: T
                    location: DCWBATCH.EXE
                    name: DocuComp
                    primary: false
                  - database: active
                    dde: true
                    dde_app_name: WINWORD
                    dde_open: '[REM _DDE_Direct][FileOpen("??")]'
                    dde_print: '[FileOpen.Name="??"][FilePrint 0][DocClose 2]'
                    dde_print_1: '[FileOpen.Name="??"][FilePrint 0][FileExit 2]'
                    dde_read_open: '[FileOpen.Name="??",.ReadOnly = 1]'
                    dde_topic: SYSTEM
                    id: WORD
                    integration_mode: N
                    location: C:\Program Files (x86)\Microsoft Office\Office14\WINWORD.EXE
                    name: Microsoft Word
                    primary: true
                required:
                - data
                type: object
                properties: *id549
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    put:
      tags:
      - File Handlers
    # - customers-{customerId}-libraries-{libraryId}-appsetup-{alias}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/appsetup/{alias}
      summary: Update application entry
      description: |-
        Updates an application setup entry.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_appsetup_{alias}
      requestBody:
        content:
          application/json:
            schema:
              example:
                dde: false
                dde_app_name: VISIO
                dde_open: '[REM _DDE_Direct][FileOpen("??")]'
                dde_print: '[FileOpen.Name="??"][FilePrint 0][DocClose 2]'
                dde_print_1: '[FileOpen.Name="??"][FilePrint 0][FileExit 2]'
                dde_read_open: '[FileOpen.Name="??",.ReadOnly = 1]'
                dde_topic: SYSTEM
                integration_mode: Y
                location: C:<\Program Files\Microsoft Office\Office\Visio11\VISIO.EXE>
                name: Microsoft Visio
                primary: true
              type: object
              properties: &id644
                id:
                  type: string
                  description: |
                    Valid Type name.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                database:
                  type: string
                  description: |-
                    Name of the database to which the file-handling application belongs to.
                dde:
                  type: boolean
                  description: |
                    Indicates that Dynamic Data Exchange (DDE) is enabled.<br><br>
                    The Dynamic Data Exchange protocol allows data to be communicated or shared between the applications.
                    This protocol uses command lines for data transfer. The DDE command line is different for each application.<br><br>
                    If `true`, indicates that Dynamic Data Exchange is enabled.<br>
                    If `false`, Dynamic Data Exchange is disabled.
                dde_app_name:
                  maxLength: 32
                  type: string
                  description: |
                    DDE application name which is usually the executable filename for the server application without .exe extension.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_open:
                  maxLength: 254
                  type: string
                  description: |-
                    DDE command line to open a document in this file-handling application.
                dde_print:
                  maxLength: 254
                  type: string
                  description: |
                    DDE command line to print a document. The command line assumes that the file-handling application is already running.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_print_1:
                  maxLength: 254
                  type: string
                  description: |
                    DDE Command Line to print a document when the file-handling application is not already running.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_read_open:
                  maxLength: 254
                  type: string
                  description: |
                    DDE command Line to open a document for read-only viewing in this application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                dde_topic:
                  maxLength: 32
                  type: string
                  description: |
                    DDE Topic for the application which usually identifies a category of data associated with the server application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                integration_mode:
                  enum: ["T", "Y", "N"]
                  type: string
                  description: |
                    Identifies the method for integrating the application with iManage Work clients: <br>
                    * COM Integration- Application is integrated with iManage using macros supplied with the iManage DMS.
                    * ODMA Integration- Application is integrated using the ODMA method.
                    * Non-Integrated- Application cannot be integrated using macros or ODMA integration.
                location:
                  maxLength: 254
                  type: string
                  description: |+
                    Location of the application. In most of the cases, merely the name of the executable file is sufficient, but full path name can also be specified.
                    For example, if the application is Microsoft Word and the executable file is WINWORD.EXE, it is sufficient to specify WINWORD.EXE. Maximum string length&#58; 254.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                name:
                  maxLength: 32
                  type: string
                  description: |
                    Descriptive name for the file-handling application.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                primary:
                  type: boolean
                  description: |-
                    Indicates if it is a primary application for a document type.<br><br>If there are multiple applications associated with a document type, one application may be identified as the primary one.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: alias
      in: path
      description: |-
        Application ID to be used in the endpoints.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types:
    description: |
      Each document in an iManage library is identified by an iManage file type or document type.<br><br>
      File type is a part of the document profile information. iManage uses this information to associate documents with their native applications.
      Each file type is mapped to an file-handling application, and the mapped application is used to open the document.
      Multiple file types can be mapped to the same application by adding more entries in the file-handling application table.
      If a file type is not mapped to an entry in the Application table, iManage Work Server is unable to automatically open the document in its native application
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: alias
      in: path
      description: |-
        Application ID to be used in the endpoints.
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types/{doctype_alias}:
    description: |-
      None
    get:
      tags:
      - File Handlers
    # - customers-{customerId}-libraries-{libraryId}-appsetup-{alias}-types-{doctype_alias}
  #summary: GET /customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types/{doctype_alias}
      summary: Get file type
      description: |-
        Gets the information about the file type for the given document alias.
      operationId: GET_customers_{customerId}_libraries_{libraryId}_appsetup_{alias}_types_{doctype_alias}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    app_extension: doc
                    auto_detect: false
                    database: ACTIVE
                    description: Document
                    dms_extension: '%V'
                    hipaa: false
                    id: BAT
                required:
                - data
                type: object
                properties: *id550
                additionalProperties: true
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - File Handlers
  #- customers-{customerId}-libraries-{libraryId}-appsetup-{alias}-types-{doctype_alias}
  #summary: PUT /customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types/{doctype_alias}
      summary: Update file type
      description: |-
        Updates the file type for the given document alias.
      operationId: PUT_customers_{customerId}_libraries_{libraryId}_appsetup_{alias}_types_{doctype_alias}
      requestBody:
        content:
          application/json:
            schema:
              example:
                app_extension: BAT
                auto_detect: false
                description: BAT
                dms_extension: '%V'
                hipaa: false
                id: BAT
              required:
              - app_extension
              - description
              - dms_extension
              - id
              type: object
              properties: *id551
              additionalProperties: true
              description: |-
                Represents a document type creation request.
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
      parameters:
      - *id004
    delete:
      tags:
      - File Handlers
  #- customers-{customerId}-libraries-{libraryId}-appsetup-{alias}-types-{doctype_alias}
  #summary: DELETE /customers/{customerId}/libraries/{libraryId}/appsetup/{alias}/types/{doctype_alias}
      summary: Delete file type
      description: |-
        Deletes the file type with the given document alias.
      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_appsetup_{alias}_types_{doctype_alias}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example: {}
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
    - name: alias
      in: path
      description: |-
        Application ID to be used in the endpoints.
      required: true
      schema:
        description: needs defining
    - name: doctype_alias
      in: path
      description: |-
        The alias, or name, of the document type.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/groups:
    description: |
      A group defines a sets of users who are intended to have identical access permission to containers and documents.
      For example, if a group has access to a document, all users in that group can access the document. A group can then be added to a
      container's or document's default security. This helps to provide the same access to all the members of a group together.
      It is important to note that groups do not have privileges assigned to them. That is, a group is not defined to have access
      to a container or document. Instead, a container or document must have that group added to its default security list.
      Groups can be created, and modified as required, with the exception of the NRTADMIN group. See NRTADMIN Group for more information. Groups cannot be deleted.
      If the directory server from which the user list is maintained already includes groups, those groups and members can be imported into iManage Work. This is a one-way synchronization only; groups and memberships cannot be updated from iManage Work back to the directory service.


    get:
      tags:
      - Global Groups
  #- customers-{customerId}-groups
  #summary: GET /customers/{customerId}/groups
      summary: Get global groups
      description: |-
        Gets all the groups that match the specified search criteria.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user does not require any special global role privilege to execute this request.

      operationId: GET_customers_{customerId}_groups
      parameters:
      - *id004
      - *id013
      - *id014
      - *id015
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Filters groups based on their `id` or `full_name`.
          The `id` is unique for each global group.

          * The wildcard character (&ast;) is supported and matches any number of contiguous characters, including spaces.
          * To match partial fields, include the asterisk wildcard before or after the query value.
          * If wildcard character is not included, it still matches partial words. For example: *as* matches with *acase*.
          * Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        schema:
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - create_date: '2021-01-18T08:28:19.57Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2021-01-18T11:34:13.462Z'
                    enabled: true
                    full_name: Matters Related Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  - create_date: '2019-10-31T19:34:47.405Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2020-08-20T17:58:47.501Z'
                    enabled: true
                    full_name: Case Management Applications
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979709
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                  total_count: 2
                required:
                - data
                type: object
                properties: *id012
                additionalProperties: true
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/groups/admin-import:
    description: |-
      None
    post:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-admin-import
  #summary: POST /customers/{customerId}/groups/admin-import
      summary: Import global groups
      description: |
        Creates a batch of groups.<br><br>
        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.
      operationId: POST_customers_{customerId}_groups_admin-import
      requestBody:
        content:
          application/json:
            schema:
              example:
                import_id: 123abc
                groups:
                - profile:
                    database: ACTIVE
                    enabled: true
                    full_name: nrtadmin
                    group_nos: 2
                    id: NRTADMIN
                    is_external: false
                  members:
                  - userId1
                  - userId2
                - profile:
                    database: ACTIVE
                    distinguished_name: cn=all corporate,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: false
                    full_name: All Corporate
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    id: ALL CORPORATE
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: a9236a2b-abb0-4648-aac1-795f942be45f
                  members:
                  - userId1
                  - userId2
                - profile:
                    database: ACTIVE
                    full_name: virtualadmin
                    group_nos: 2
                    id: VIRTUALADMIN
                    is_external: false
                  members:
                  - userId2
                  - userId3
                - profile:
                    database: ACTIVE
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: false
                    full_name: All External
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    id: ALL EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be45f
                  members:
                  - userId4
                  - userId5
                overwrite: false
              required:
              - import_id
              - groups
              - overwrite
              type: object
              properties: *id552
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    import_id: 123abc
                    task_id: 456def
                    status: successful
                    groups:
                    - id: NRTADMIN
                      ssid: oisd98rfh23
                    - id: ALL CORPORATE
                      ssid: oj2e8f2kjd8
                  warnings:
                  - data:
                      profile:
                        database: active_us
                        full_name: virtualadmin
                        group_nos: 2
                        id: VIRTUALADMIN
                        is_external: false
                      members:
                      - userId2
                      - userId3
                    code: NRC_INVALID_PARAM
                    error: Missing enabled flag
                    field: enabled
                  - data:
                      profile:
                        database: ACTIVE
                        distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                        enabled: false
                        full_name: All External
                        group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                        group_nos: 6
                        id: ALL EXTERNAL
                        is_external: true
                        last_sync_ts: '2018-05-01T10:15:29Z'
                        sync_id: b9236a2b-abb0-4648-aac1-795f942be45f
                      members:
                      - userId4
                      - userId5
                    code: NRC_DUP_RECORD
                    error: The group was not migrated as it already exists
                    field: sync_id
                required:
                - data
                type: object
                properties: *id553
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/groups/{groupId}:
    description: |-
      None
    get:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-{groupId}
  #summary: GET /customers/{customerId}/groups/{groupId}
      summary: Get details of a global group
      description: |-
        Gets the profile of the specified global group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        A user does not require any special global role privilege to execute this request.

      operationId: GET_customers_{customerId}_groups_{groupId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    create_date: '2021-01-18T08:28:19.57Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2021-02-08T18:59:53.578Z'
                    enabled: true
                    full_name: External Users
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 2
                    group_number: 171135823649979709
                    id: EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                required:
                - data
                type: object
                properties: &id554
                  data:
                    description: Global group profile
                    $ref: '#/components/schemas/Groups.group'
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-{groupId}
  #summary: PUT /customers/{customerId}/groups/{groupId}
      summary: Create or update a group
      description: |-
        Creates or updates a global group.<br><br>

        If the group already exists, it is updated with the field values provided in the request body.
        If it does not exist, a new group is created with the field values provided in the request body.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management level privilege required to execute this request: Group Management.<br>
        That means, a user must be assigned to a global role with the Group Management privilege enabled.

      operationId: PUT_customers_{customerId}_groups_{groupId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                full_name: External Users
                id: EXTERNAL
                is_external: true
                group_nos: 2
              type: object
              properties: &id1125
                id:
                  type: string
                  description: |+
                    Specifies the ID of the group to be updated.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

                directory_id:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the ID from external repository (such as ADFS), which is used for group profile synchronization.
                distinguished_name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.<br>
                    For example, cn=username,dc=example,dc=ajubalaw,dc=com.<br><br>
                    The field supports null as a value.
                enabled:
                  type: boolean
                  description: |-
                    Specifies if the group is enabled or disabled.

                    If `true`, the group is enabled.<br>
                    If `false`, the group is disabled.
                full_name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the name of the group.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                group_domain:
                  type: string
                  description: |
                    Specifies  the fully qualified domain name for the group's directory service.

                    It is the metadata from LDAP server that determines the unit to which the group belongs to.
                    This information is mainly used by iManage system administrators.
                  example: cn=Users,dc=dc=ajubalaw,dc=com
                group_nos:
                  type: integer
                  description: |-
                    Specifies the type of group.

                    The following are valid nos values for groups:

                    | Value | Description |
                    | :-: | - |
                    | 2 | Group for virtual users.|
                    | 6 | Group for enterprise users. |
                is_external:
                  type: boolean
                  description: |
                    Specifies  if the group is intended for external users.

                    If `true`, the group is intended for external users.<br>
                    If `false`, the group is intended for regular users (non-external users).

                    For more information, see <a href="#overview--external-users"> External users</a>.
              additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    create_date: '2021-01-18T08:28:19.57Z'
                    directory_id: b9236a2b-abb0-4648-aac1-795f942be4
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    edit_date: '2021-02-08T18:59:53.578Z'
                    enabled: true
                    full_name: External Users
                    global_id: 171135823649979709
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 2
                    group_number: 171135823649979709
                    id: EXTERNAL
                    is_external: true
                    last_sync_ts: '2018-05-01T10:15:29Z'
                required:
                - data
                type: object
                properties: *id554
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/groups/{groupId}/copy:
    description: |-
      None
    post:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-{groupId}-copy
  #summary: POST /customers/{customerId}/groups/{groupId}/copy
      summary: Create a copy of a group
      description: |
        Creates a copy of an existing group as a new group.

        All the properties and members of the existing group are copied to the new group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privilege required to call this request: Group Management.<br>
        That means, a user must be assigned to a global role with the Group Management privilege enabled.

      operationId: POST_customers_{customerId}_groups_{groupId}_copy
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: EXTERNAL
              required:
              - id
              type: object
              properties: &id1126
                id:
                  type: string
                  description: |
                    Specifies the ID for the new copy of a group.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    database: ACTIVE_UK
                    enabled: true
                    full_name: External Users Copy
                    group_nos: 2
                    id: EXTERNAL
                    is_external: false
                required:
                - data
                type: object
                properties: *id554
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/groups/{groupId}/members:
    description: |-
      None
    get:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-{groupId}-members
  #summary: GET /customers/{customerId}/groups/{groupId}/members
      summary: Get group members
      description: |-
        Gets the profiles of all users who belong to the specified global group.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privilege required to call this request: Group Management.<br>
        That means, a user must be assigned to a global role with the Group Management privilege enabled.

      operationId: GET_customers_{customerId}_groups_{groupId}_members
      parameters:
      - *id004
      - *id085
      - *id086
      - *id087
      - *id088
      - *id089
      - *id011
      - *id090
      - *id260
      - *id006
      - *id091
      - *id092
      - name: query
        in: query
        description: |+
          Filters users based on this string found in at least one of the `id`, `full_name`, or `email` properties.<br>

          This search:
          * is case insensitive. For example: *Enron* matches *enron*.
          * matches whole words. For example: *Microso* does not match *Microsoft*.
          * supports the wildcard character (&ast;) that matches any number of contiguous characters
           For example: *Microso&ast;* matches *Microsoft*, and *&ast;icroso&ast;* matches *Microsoft*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: jan
      - name: ssid
        in: query
        description: |
          Filters users based on SSIDs that were generated by iManage Work.<br><br>
          Multiple values can be included using a comma-separated list.
        schema:
          type: string
          example: 170486260463309443

      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: *id093
                additionalProperties: false
        401: *id002
        404: *id005
    put:
      tags:
      - Global Groups
  #- customers-{customerId}-groups-{groupId}-members
  #summary: PUT /customers/{customerId}/groups/{groupId}/members
      summary: Add or remove members
      description: |-
        Adds users to or removes them from the specified global group.


        This is done by specifying an array of user aliases under the `data` field, and the `action` field as `add` or `delete`.
        In a single call, users can only be either added or removed from a global group.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privilege required to call this request: Group Management.<br>
        That means, a user must be assigned to a global role with the Group Management privilege enabled.

      operationId: PUT_customers_{customerId}_groups_{groupId}_members
      requestBody:
        content:
          application/json:
            schema:
              example:
                database: ACTIVE_UK
                data_type: users
                data:
                - ACASE
                action: add
                ds_members_hash: 2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              required:
              - action
              - data_type
              - data
              type: object
              properties: *id555
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    customer_members:
                    - database: ACTIVE_UK
                      distinguished_name: cn=andrew case,cn=users,dc=ajubalaw,dc=com
                      doc_server: DEFSERVER
                      email: acase@ajubalaw.com
                      exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                      full_name: Andrew Case
                      id: ACASE
                      is_external: false
                      login: true
                      preferred_library: ACTIVE_UK
                      sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                      user_domain: cn=users,dc=ajubalaw,dc=com
                      user_nos: 6
                    library_group_members:
                    - library:
                        id: 1
                        customer:
                          id: 101
                          name: Ajuba Law
                          pods: []
                        name: ACTIVE
                        store:
                          id: 1
                          name: POD 1
                      members:
                      - database: ACTIVE_UK
                        distinguished_name: cn=andrew case,cn=users,dc=ajubalaw,dc=com
                        doc_server: DEFSERVER
                        email: acase@ajubalaw.com
                        exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                        full_name: Andrew Case
                        id: ACASE
                        is_external: false
                        login: true
                        preferred_library: ACTIVE_UK
                        sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                        user_domain: cn=users,dc=ajubalaw,dc=com
                        user_nos: 6
                required:
                - data
                type: object
                properties: &id1653
                  data:
                    required:
                    - customer_members
                    - library_group_members
                    type: object
                    properties:
                      customer_members:
                        description: Indicates which users were added to or removed
                          from the target global group.
                        type: array
                        items:
                          type: object
                          properties:
                            allow_logon:
                              type: boolean
                              description: |
                                Indicates if the user is allowed to sign in.<br><br>
                                If `true`, the user is allowed to sign in.<br>
                                If `false`, the user is not allowed to sign in.

                            create_date:
                              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                              description: |-
                                Indicates the date (in ISO 8601 format) when the user profile was created.
                              type: string
                              example: "2020-03-09T17:01:16Z"
                            custom1:
                              type: string
                              description: |
                                Indicates additional information about the user.<br><br>
                                This is descriptive text that does not have to be formatted, and is not validated.
                                This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                <br>
                            custom2:
                              type: string
                              description: |
                                Indicates additional information about the user.<br><br>
                                This is descriptive text that does not have to be formatted, and is not validated.
                                This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                <br>
                            custom3:
                              type: string
                              description: |
                                Indicates additional information about the user.<br><br>
                                This is descriptive text that does not have to be formatted, and is not validated.
                                This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                <br>
                            directory_id:
                              type: string
                              description: |-
                                Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
                            distinguished_name:
                              maxLength: 254
                              type: string
                              description: |
                                Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
                              example: cn=username,dc=example,dc=ajubalaw,dc=com
                            edit_date:
                              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                              type: string
                              description: |-
                                Indicates the date (in ISO 8601 format) when the user profile was last edited.
                              example: "2020-03-09T17:01:16Z"
                            email:
                              type: string
                              maxLength: 254
                            email2:
                              type: string
                              maxLength: 254
                            email3:
                              type: string
                              maxLength: 254
                            email4:
                              type: string
                              maxLength: 254
                            email5:
                              type: string
                              maxLength: 254
                            exch_autodiscover:
                              type: string
                              description: |-
                                Indicates the exchange server details of the user.
                            extension:
                              type: string
                              description: |-
                                Indicates the phone extension number of the user.
                            failed_logins:
                              type: integer
                              description: |-
                                Indicates the current number of user's failed attempts to sign in.
                            fax:
                              type: string
                              description: |-
                                Indicates the fax number of the user.
                            force_password_change:
                              type: boolean
                              description: |
                                Indicates the user must change their password on next sign in.<br><br>
                                This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                                If `true`, the user must change their password on next sign in.<br>
                                If `false`, the user does not have to change their password on next sign in.<br>
                                If omitted, the value is `false`.
                            full_name:
                              type: string
                              description: |-
                                Indicates the full name of the user.
                              example: Andrew Case
                            general:
                              type: string
                              description: |
                                Indicates any additional comments or description applicable for the user.
                            id:
                              type: string
                              description: |-
                                Indicates the user ID.
                              example: ACASE
                            is_external:
                              type: boolean
                              description: |
                                Indicates  the user is an external user.

                                If `true`, the user is an external user.<br>
                                If `false`, the user is not an external user, also called a regular user.

                                For more information, see <a href="#overview--external-users"> External users</a>.
                                <br><br>
                                This is used for temporary team members, consultants, or those external to the organization.
                                External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
                                They do not have default access to any container or document.

                            last_sync_ts:
                              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                              type: string
                              description: |-
                                Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
                              example: "2020-03-09T17:01:16Z"
                            location:
                              type: string
                              description: |-
                                Indicates the geographical location of the user.
                              example: Chicago
                            lockout_ts:
                              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                              type: string
                              description: |-
                                Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
                                This is applicable to virtual users only (whose `user_nos=2`).
                              example: "2020-03-09T17:01:16Z"
                            phone:
                              type: string
                              description: Indicates the phone number of the user.
                            preferred_library:
                              type: string
                              description: |
                                Indicates the preferred library (formerly called a database).<br><br>
                                A preferred library is user's default library. Each user is required to have one preferred library.
                                It stores user's preferred settings such as language preference
                                and default search form for iManage Work advanced search.

                                If a user's preferred library is switched to another, the preferences are reset.
                              example: active_us
                            pwd_changed_ts:
                              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                              type: string
                              description: |
                                Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
                                This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                              example: 2020-03-09T17:01:16Z
                            pwd_never_expire:
                              type: boolean
                              description: |
                                Specifies if the user's password never expires.<br><br>
                                This is applicable to virtual users only (whose `user_nos=2`).

                                If `true`, the user's password never expires.<br>
                                If `false`, the user's password expires.
                            ssid:
                              type: string
                              description: |-
                                Indicates the numeric system ID of the user.
                            user_domain:
                              type: string
                              description: |
                                Indicates  the fully qualified domain name for the user's directory service.

                                It is the metadata from LDAP server that determines the unit to which the user belongs to.
                                This information is mainly used by iManage system administrators.
                            user_id_ex:
                              type: string
                              description: |
                                Indicates the original value of the user ID that is received from the source system such as Active Directory.

                                It is formatted internally to all upper case letters, and then saved as `id`.
                                The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
                                For example, if `user_id_ex` is ACase then the `id` will be ACASE.
                                iManage recommends using `id` when referring to the user.
                            user_nos:
                              type: integer
                              description: |
                                Indicates users based on their user type.

                                The allowed values are:

                                | Value | Description |
                                | :-: | - |
                                | 2 | Virtual User |
                                | 6 | Enterprise user |

                                For more information on types of users, see <a href="#tag--Users">Users</a>
                            user_num:
                              type: integer
                              description: |-
                                Indicates the numeric system ID of the user.
                          additionalProperties: true
                      library_group_members:
                        description: Indicates which users were added to the library-level
                          group with the same ID as the target global group.
                        type: array
                        items:
                          required:
                          - library
                          - members
                          type: object
                          properties:
                            library:
                              required:
                              - id
                              - name
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: |
                                    Indicates the library ID.<br><br>
                                    For example: 6362
                                name:
                                  type: string
                                  description: |
                                    Indicates the library name.<br><br>
                                    For example: active
                              additionalProperties: true
                            members:
                              type: array
                              items:
                                type: object
                                properties:
                                  allow_logon:
                                    type: boolean
                                    description: |
                                      Indicates if the user is allowed to sign in.<br><br>
                                      If `true`, the user is allowed to sign in.<br>
                                      If `false`, the user is not allowed to sign in.

                                  create_date:
                                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                    description: |-
                                      Indicates the date (in ISO 8601 format) when the user profile was created.
                                    type: string
                                    example: "2020-03-09T17:01:16Z"
                                  custom1:
                                    type: string
                                    description: |
                                      Indicates additional information about the user.<br><br>
                                      This is descriptive text that does not have to be formatted, and is not validated.
                                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                      <br>
                                  custom2:
                                    type: string
                                    description: |
                                      Indicates additional information about the user.<br><br>
                                      This is descriptive text that does not have to be formatted, and is not validated.
                                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                      <br>
                                  custom3:
                                    type: string
                                    description: |
                                      Indicates additional information about the user.<br><br>
                                      This is descriptive text that does not have to be formatted, and is not validated.
                                      This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
                                      <br>
                                  directory_id:
                                    type: string
                                    description: |-
                                      Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
                                  distinguished_name:
                                    maxLength: 254
                                    type: string
                                    description: |
                                      Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
                                    example: cn=username,dc=example,dc=ajubalaw,dc=com
                                  edit_date:
                                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                    type: string
                                    description: |-
                                      Indicates the date (in ISO 8601 format) when the user profile was last edited.
                                    example: "2020-03-09T17:01:16Z"
                                  email:
                                    type: string
                                    maxLength: 254
                                  email2:
                                    type: string
                                    maxLength: 254
                                  email3:
                                    type: string
                                    maxLength: 254
                                  email4:
                                    type: string
                                    maxLength: 254
                                  email5:
                                    type: string
                                    maxLength: 254
                                  exch_autodiscover:
                                    type: string
                                    description: |-
                                      Indicates the exchange server details of the user.
                                  extension:
                                    type: string
                                    description: |-
                                      Indicates the phone extension number of the user.
                                  failed_logins:
                                    type: integer
                                    description: |-
                                      Indicates the current number of user's failed attempts to sign in.
                                  fax:
                                    type: string
                                    description: |-
                                      Indicates the fax number of the user.
                                  force_password_change:
                                    type: boolean
                                    description: |
                                      Indicates the user must change their password on next sign in.<br><br>
                                      This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                                      If `true`, the user must change their password on next sign in.<br>
                                      If `false`, the user does not have to change their password on next sign in.<br>
                                      If omitted, the value is `false`.
                                  full_name:
                                    type: string
                                    description: |-
                                      Indicates the full name of the user.
                                    example: Andrew Case
                                  general:
                                    type: string
                                    description: |
                                      Indicates any additional comments or description applicable for the user.
                                  id:
                                    type: string
                                    description: |-
                                      Indicates the user ID.
                                    example: ACASE
                                  is_external:
                                    type: boolean
                                    description: |
                                      Indicates  the user is an external user.

                                      If `true`, the user is an external user.<br>
                                      If `false`, the user is not an external user, also called a regular user.

                                      For more information, see <a href="#overview--external-users"> External users</a>.
                                      <br><br>
                                      This is used for temporary team members, consultants, or those external to the organization.
                                      External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
                                      They do not have default access to any container or document.

                                  last_sync_ts:
                                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                    type: string
                                    description: |-
                                      Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
                                    example: "2020-03-09T17:01:16Z"
                                  location:
                                    type: string
                                    description: |-
                                      Indicates the geographical location of the user.
                                    example: Chicago
                                  lockout_ts:
                                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                    type: string
                                    description: |-
                                      Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
                                      This is applicable to virtual users only (whose `user_nos=2`).
                                    example: "2020-03-09T17:01:16Z"
                                  phone:
                                    type: string
                                    description: Indicates the phone number of the
                                      user.
                                  preferred_library:
                                    type: string
                                    description: |
                                      Indicates the preferred library (formerly called a database).<br><br>
                                      A preferred library is user's default library. Each user is required to have one preferred library.
                                      It stores user's preferred settings such as language preference
                                      and default search form for iManage Work advanced search.

                                      If a user's preferred library is switched to another, the preferences are reset.
                                    example: active_us
                                  pwd_changed_ts:
                                    pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                    type: string
                                    description: |
                                      Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
                                      This is applicable to virtual users only (whose `user_nos=2`).<br><br>
                                    example: 2020-03-09T17:01:16Z
                                  pwd_never_expire:
                                    type: boolean
                                    description: |
                                      Specifies if the user's password never expires.<br><br>
                                      This is applicable to virtual users only (whose `user_nos=2`).

                                      If `true`, the user's password never expires.<br>
                                      If `false`, the user's password expires.
                                  ssid:
                                    type: string
                                    description: |-
                                      Indicates the numeric system ID of the user.
                                  user_domain:
                                    type: string
                                    description: |
                                      Indicates  the fully qualified domain name for the user's directory service.

                                      It is the metadata from LDAP server that determines the unit to which the user belongs to.
                                      This information is mainly used by iManage system administrators.
                                  user_id_ex:
                                    type: string
                                    description: |
                                      Indicates the original value of the user ID that is received from the source system such as Active Directory.

                                      It is formatted internally to all upper case letters, and then saved as `id`.
                                      The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
                                      For example, if `user_id_ex` is ACase then the `id` will be ACASE.
                                      iManage recommends using `id` when referring to the user.
                                  user_nos:
                                    type: integer
                                    description: |
                                      Indicates users based on their user type.

                                      The allowed values are:

                                      | Value | Description |
                                      | :-: | - |
                                      | 2 | Virtual User |
                                      | 6 | Enterprise user |

                                      For more information on types of users, see <a href="#tag--Users">Users</a>
                                  user_num:
                                    type: integer
                                    description: |-
                                      Indicates the numeric system ID of the user.
                                additionalProperties: true
                              description: |-
                                Array of members of a group.
                          additionalProperties: true
                    additionalProperties: true
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/groups/{groupId}/non-members:
    description: |-
      None
    get:
      tags:
      - Global Groups
 # - customers-{customerId}-groups-{groupId}-non-members
  #summary: GET /customers/{customerId}/groups/{groupId}/non-members
      summary: Get non-members of a group
      description: |-
        Gets the profiles of all users who do not belong to the specified global group.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privilege required to call this request: Group Management.<br>
        That means, a user must be assigned to a global role with the Group Management privilege enabled.

      operationId: GET_customers_{customerId}_groups_{groupId}_non-members
      parameters:
      - *id004
      - *id085
      - *id086
      - *id087
      - *id088
      - *id089
      - *id011
      - *id090
      - *id260
      - *id006
      - *id091
      - *id092
      - name: query
        in: query
        description: |+
          Filters users based on this string found in at least one of the `id`, `full_name`, or `email` properties.<br>

          This search:
          * is case insensitive. For example: *Enron* matches *enron*.
          * matches whole words. For example: *Microso* does not match *Microsoft*.
          * supports the wildcard character (&ast;) that matches any number of contiguous characters
           For example: *Microso&ast;* matches *Microsoft*, and *&ast;icroso&ast;* matches *Microsoft*.

          Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=

        schema:
          type: string
          example: jan
      - name: ssid
        in: query
        description: |
          Filters users based on SSIDs that were generated by iManage Work.<br><br>
          Multiple values can be included using a comma-separated list.
        schema:
          type: string
          example: 170486260463309443
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    create_date: '2019-04-16T16:30:19.874Z'
                    edit_date: '2019-07-22T20:39:25.401045Z'
                    email: cpierce@ajubalaw.com
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    location: Chicago
                    preferred_library: active_us
                    ssid: '98126090240790433'
                    user_id_ex: CPierce
                    user_nos: 2
                    user_num: 98126090240790433
                  - allow_logon: true
                    create_date: '2020-01-19T03:52:41.139Z'
                    edit_date: '2020-04-23T22:16:42.036Z'
                    email: acase@ajubalaw.com
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    location: New York
                    preferred_library: active_us
                    ssid: '170606954413043053'
                    user_id_ex: ACase
                    user_nos: 2
                    user_num: 170606954413043053
                  total_count: 2
                required:
                - data
                type: object
                properties: *id093
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/groupId'
  /work/api/v2/customers/{customerId}/folders:
    description: |
      iManage Work organizes its information in a hierarchical tree structure, similar to many computer operating systems, such as Microsoft Windows.
      This is characterized by folders and documents being contained within other folders. <br><br>

      A folder can contain any number of folders and be structured as required in an organization.
      Folders are also known as containers. A folder created directly under a workspace is called a root-level folder.
      As a best practice, iManage recommends using as few root-level folders as possible to better organize the information.
      A subfolder is any folder that has a parent. The parent can be another folder, a workspace, or a tab.
      Folders have various properties. One of them is called doctype, which defines that the folder is specific to a document type.
      Two doctypes are available by default: Document and Email.
        * When a folder of Document doctype is selected, the display is customized for displaying documents and their properties such as file name, size, and location.
        * When a folder of Email doctype is selected, the display is customized for displaying emails and their properties such as email title, when sent, sender and recipient name, and size.
      Other doctypes can be created and customized by the iManage system administrator.

      Actions applicable for folders include open, add to/remove from My Favorites,  copy link, create new folder, create new shared folder, properties, delete, and upload into a folder.
    get:
      tags:
      - Multi-library Folders
    #- customers-{customerId}-folders
  #summary: GET /customers/{customerId}/folders
      summary: Get global folders
      description: |-
        Gets all the folders that match the specified criteria.
      operationId: GET_customers_{customerId}_folders
      parameters:
      - *id004
      - *id556
      - *id557
      - *id558
      - *id011
      - *id559
      - *id560
      - *id006
      - *id561
      - *id562
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - *id563
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!108
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Administrative Record
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!109
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Agency Petitions
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                    - database: active_uk
                      default_security: inherit
                      edit_date: '2007-06-13T02:48:36Z'
                      folder_type: regular
                      has_documents: false
                      has_subfolders: false
                      id: active_uk!110
                      is_container_saved_search: false
                      is_content_saved_search: false
                      is_external_as_normal: false
                      name: Agreements
                      owner: NRTADMIN
                      owner_description: NRTADMIN
                      parent_id: active_uk!106
                      view_type: document
                      workspace_id: active_uk!106
                      workspace_name: Google vs Microsoft
                      wstype: folder
                  total_count: 5000
                required:
                - data
                type: object
                properties: *id307
                additionalProperties: false
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/folders/search:
    description: |-
      None
    post:
      tags:
      - Multi-library Folders
    #- customers-{customerId}-folders-search
  #summary: POST /customers/{customerId}/folders/search
      summary: Search for global folders
      description: |
        Lists the folders returning the requested properties in addition to `id`, and `wstype`.
      operationId: POST_customers_{customerId}_folders_search
      requestBody:
        content:
          application/json:
            schema:
              title: Folder Search Request
              type: object
              properties: &id1610
                limit:
                  type: integer
                  description: |
                    Maximum number of folders to include in the response.
                    For example, click Examples tab in the Folder Search Request above.
                  default: 500
                timezone_offset:
                  maximum: 1080
                  minimum: -1080
                  type: integer
                  description: |-
                    Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
                    iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
                    The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
                    For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
                    Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
                  default: 0
                profile_fields:
                  type: object
                  properties:
                    folder:
                      type: array
                      items:
                        type: string
                      description: |
                        Up to 15 folder profile properties to include in the response.
                  description: |-
                    Specifies fields to return in the response JSON.<br><br>
                    Some searches could return many fields, and not all are of interest for the search.
                    Therefore, this request specifies the fields to return.
                    By default, only the `id` and `wstype` fields are included.<br><br>
                    If more fields are needed to be returned, use the parameter `profile_fields` to specify those.
                    The parameter `profile_fields` is not required. If omitted, only the default fields are returned.
                    Items found during the search are still returned even if the search field specifying them is not included in `profile_fields`.
                    For example, the search can specify `owner=acase` but it does not have to include `owner` in the `profile_fields`.<br><br>

                    To return additional fields, specify both the object type and the fields in `profile_fields`.
                    For example, for the following request body specifies returning the `name` and `owner` fields.
                    This is in addition to the two default `id` and `wstype` fields.
                    ```
                    {
                      "filters": { "libraries": "active_us" },
                      "profile_fields": { "workspace": [ "name", "owner"] }
                    }
                    ```
                    The parameter `profile_fields` can contain multiple entries, one for each of the following object types.<br><br>

                    |Type|Description|
                    |:---|:---|
                    |document|A document object.|
                    |email|A document object.|
                    |folder|A folder object.|
                    |workspace|A workspace object.|
                    |user|A user object.|

                    For each object type, specify additional fields.
                    If an object type is included but no objects of that type are returned, that object type entry is ignored.<br>

                    Multiple object types can also be included. The following example specifies the return fields for workspace and email:
                    ```
                    {
                      "profile_fields":
                      {
                        "workspace": [ "name", "owner" ],
                        "email": [ "sender", "title" ]
                      }
                    }
                    ```

                    The parameter `profile_fields` is often combined with the parameter `filters`, which defines the search criteria.
                    The following example returns workspaces that meet the `filters` criteria, and returns the fields `name` and `owner` in the response:
                    ```
                    {
                        "profile_fields":
                        {
                          "workspace": [ "name", "owner" ]
                        },
                        "filters":
                        {
                          "custom1": "Enron",
                          "name": "Acquisitions"
                        }
                    }
                    ```
                filters:
                  type: object
                  properties:
                    libraries:
                      type: string
                      description: |
                        Specifies libraries holding the containers.<br><br>
                        Multiple libraries can be included using a comma-separated list.
                        For example, `libraries=active,archived`.<br>
                        If empty, containers from all libraries the user is assigned to are returned.
                    container_id:
                      type: string
                      description: |
                        Specifies the unique ID of a workspace or a folder. For example, *Archive!22*, or *Integration!1*.
                        If this parameter is defined, it returns folders only for the specified container ID. Else, all the folders from all the available libraries are returned.
                        This property cannot be comma-separated.
                    email:
                      type: string
                      maxLength: 254
                    include_ids:
                      type: string
                      description: |
                        Specifies to return folders only from the list of folder IDs provided.
                        For example, `include_ids=active_uk!22`
                        Multiple folders can be specified using a comma-separated list.
                        For example, `include_ids=active_uk!22,active_uk!55,active_uk!401`
                        If this parameter is omitted, then the folders from all the available libraries are returned.
                    name:
                      type: string
                      description: |
                        Specifies a value to be found in the `name` property of the folder.<br><br>
                        This parameter is case insensitive and matches whole fields.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.<br>
                        Multiple names can be included using a comma-separated list.
                    description:
                      type: string
                      description: |
                        Specifies a value to be found in the `description` property of the folder.<br><br>
                        This parameter is case insensitive and matches whole fields.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.
                    name_or_description:
                      type: string
                      description: |
                        Specifies the text to search for in the `name` or `description` fields of iManage Work object.<br>

                        * This parameter is case insensitive.<br>
                        * Matches whole fields only and partial matches are not supported.
                          For example, for an object named *Enron Completion*, the search `name_or_description=Enron` does not match.
                          It must be specified as `name_or_description=Enron Completion`.
                        * The wildcard character (&ast;) is supported, and matches any number of contiguous characters, including spaces.<br>
                          To match partial fields, include the wildcard character (&ast;) before, after, or at both ends of the term.<br>
                          For example, all the following searches match with `litigation`:
                          * `name_or_description=litigation`
                          * `name_or_description=*gation`
                          * `name_or_description=litiga*`.
                    owner:
                      type: string
                      description: |
                        Specifies to return folders that match the value provided with the owner of the folder.
                    reference_database:
                      type: string
                      description: |-
                        Specifies a library to which the folder is associated with.
                    workspace_name:
                      type: string
                      description: |
                        Specifies the name of the workspace the folder belongs to.<br><br>
                        This parameter is case insensitive and matches whole fields only.
                        To match partial fields, include the wildcard character (&ast;) before, after, or both ends of the term.
                  description: |
                    Specify the criteria to filter the folders in the result set.<br><br>
                    If `filters` parameter is not included, all items are returned.
                    If `filters` parameter is included, only items matching all the filters in the set are returned.<br>

                    The valid filters are: container_id, email, include_ids, name, description, name_or_description, owner, reference_database.

                    If no filters are specified, all the folders are returned.
                    If one or more filter is specified, only the matching folders are returned.
                    Any field that is invalid but included in the filters list is ignored.<br>

                    The following request is the minimum body JSON to be included.
                    It returns all the folders from all the libraries up to the `limit` parameter value.

                    ```
                    {
                    	"filters": {}
                    }
                    ```

                    The following request specifies that only the folders matching the `name` and `owner` field values are returned.

                    ```
                    {
                      "filters": {
                        "name": "Briefing",
                        "owner": "CPIERCE"
                      }
                    }```
              example: &id1611
                profile_fields:
                  folder:
                  - name
                  - owner
                filters:
                  name_or_description: Briefing
                  owner: CPIERCE
                limit: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Folder Search Response
                required:
                - data
                - overflow
                type: object
                properties: *id564
                example: *id565
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/features:
    get:
      tags:
      - Features
  #- customers-{customerId}-features
  #summary: GET /customers/{customerId}/features
      summary: Get iManage Work features
      description: |
        Returns a list of features and capabilities that are supported by the iManage Work system.<br>

        Features and capabilities are special abilities provided directly by the iManage Work system.
        They can vary by iManage Work environment.
        They can also become available after iManage Work product upgrades.

        These special abilities indicate either that specified requests made be called, or a function may be utilized through specified requests.
        The documentation indicates which features or capabilities must be checked for prior to making specified requests, or before attempting to use a special ability.

        Examples include:
        * A request-related special ability is `rate_limited_downloads`.
         If `true`, the request GET `/customers/{customerId}/libraries/{library}/documents/{docId}/rate-limited-download` is available and can be called.
        * A function-related special ability is `document_class_indexable`.
        If `true`, specified requests can invoke document indexing abilities.

        Features can only be known after a user signs in.
        Capabilities can be known before or after a user signs in.

        To check the availability of a feature or capability, use GET `/customers/{customerId}/features`.
        This returns a list of features and their values.
        * If the value is `true`, the feature or capability is available.
        * If the value is `false`, the feature or capability is not available.
        * If the feature or capability is not present, its default value is indicated in the documentation.

        Attempting to make an unavailable request, or accessing an unavailable function results in an error.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns a list of available behaviors:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/features`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To see a list of supported capabilities, use GET `{hostname}/api`<br>
        For example: `https://www.ajubalaw.com/api`
      operationId: GET_customers_{customerId}_features
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      app_store:
                        type: boolean
                        description: |
                          Indicates the iManage app store support is enabled.<br><br>
                          The application vendors or partners can upload their apps to a global space called the iManage app store.
                          These third-party applications are the add-ons to enhance iManage product features.
                          The iManage Work system administrators can download the applications from iManage Control Center, and enable these application in their organization's environment.<br><br>
                          If `true`, the iManage app store is enabled.<br>
                          If `false`, the iManage app store is not enabled.<br>
                          If not present, the value is `true`.
                      email_conversations:
                        type: boolean
                        description: |
                          Indicates the email conversation view support is enabled.<br><br>
                          The email conversation view support enables emails that are a part of the same conversation to be grouped together and shown as a complete conversation.<br><br>
                          If `true`, the email conversation view support is enabled.<br>
                          If `false`, the email conversation view support is not enabled.<br>
                          If not present, the value is `false`.
                      email_reply:
                        type: boolean
                        description: |
                          Indicates email reply support is enabled.<br><br>
                          The email reply support enables users to reply to emails in iManage Work.<br><br>
                          If `true`, email reply support is enabled.<br>
                          If `false`, email reply support is not enabled.<br>
                          If not present, the value is `false`.
                      eml_attachment_download:
                        type: boolean
                        description: |
                          Indicates that attachments of EML emails can be downloaded.<br><br>
                          If `true`, support for downloading attachments of EML emails is enabled.<br>
                          If `false`, support for downloading attachments of EML emails is disabled.<br>
                          If not present, the value is `false`.
                      forms:
                        type: boolean
                        description: |
                          Indicates forms support is enabled.<br><br>
                          Forms support defines search forms and property forms for workspace, folder, document, and email.
                          For more information, see the `/customers/{customerId}/libraries/{libraryId}/forms` collection.<br><br>
                          If `true`, forms support is enabled.<br>
                          If `false`, forms support is not enabled.<br>
                          If not present, the value is `false`.
                      promote_journal:
                        type: boolean
                        description: |
                          Indicates journal promotion to a new document version is enabled.<br><br>
                          If `true`, and the Journaling feature is enabled, the user can promote a journal entry to the latest version of the document using one click.<br>
                          If `false`, and the Journaling feature is enabled, the user needs to select the **Download Previous Edit** option in document timeline and re-upload the downloaded file as a new version.<br>
                          If not present, the value is `true`.
                      copy_as_new_version:
                        type: boolean
                        description: |
                          Indicates version promotion to a new document version is enabled.<br><br>
                          If `true`, the user can copy an existing version as the latest version of the document.<br>
                          If `false`, the user needs to download the source version and re-upload it as a new version.<br>
                          If not present, the value is `false`.
                      global_users:
                        type: boolean
                        description: |
                          Indicates the global users support is enabled.<br><br>
                          The documentation will note in the specific request if `global_users` needs to be checked.<br>

                          If `true`, global users support is enabled.<br>
                          If `false`, global users support is not enabled.<br>
                          If not present, the value is `true`.
                      km_tags:
                        type: boolean
                        description: |
                          Indicates whether the KM tags APIs are available.<br><br>

                          If `true`, the KM tags APIs are available.<br>
                          If `false`, the KM tags APIs are not available.<br>
                          If not present, the value is `false`.
                      linksite:
                        type: boolean
                        description: |
                          Indicates the legacy Linksite (now called iManage Share) integration with iManage Work classic clients is supported.<br><br>
                          The legacy Linksite integration allows users to browse and work with these folders similarly to iManage Work folders.
                          For more information, see [iManage Share Plug-in for iManage Work Installation and User Guide](https://help.imanage.com/hc/en-us/categories/201733537-iManage-Share-Documentation) in iManage Help Center.<br><br>
                          If `true`, integration with iManage Work classic clients is supported.<br>
                          If `false`, integration with iManage Work classic clients is not supported.<br>
                          If not present, the value is `false`.
                      spm:
                        type: boolean
                        description: |
                          Indicates SPM (Security Policy Manager) support is enabled.<br><br>
                          If `true`, SPM support is enabled.<br>
                          If `false`, SPM support is not enabled.<br>
                          If not present, the value is `false`.
                      subclass_normalization:
                        type: boolean
                        description: |
                          Indicates subclass normalization support is available.<br><br>
                          Subclass normalization is the is ability of the iManage Work Server to return both parameters `sub_class` and `subclass`.<br><br>
                          If `true`, subclass normalization support is available.<br>
                          If `false`, subclass normalization support is not available.<br>
                          If not present, the value is `false`.
                      app_auth_info_v2:
                        type: boolean
                        description: |
                          Indicates requests are available to retrieve signed authentication information.
                          For more information see GET `/customers/{customerId}/apps/{appId}/auth-info`.<br><br>
                          If `true`, signed authentication information request is available.<br>
                          If `false`, signed authentication information request is not available.<br>
                          If not present, the value is `false`.<br>

                          If `app_auth_info_v2` is `true`, the following request is available:
                          * GET `/customers/{customerId}/apps/{appId}/auth-info`
                      rate_limited_downloads:
                        type: boolean
                        description: |
                          Indicates requests are available to rate-limit document downloads.<br><br>
                          If `true`, rate-limit document downloads support is available.<br>
                          If `false`, rate-limit document downloads support is not available.<br>
                          If not present, the value is `false`.<br>

                          If `rate_limited_downloads` is `true`, the following request is available:
                          * GET `/customers/{customerId}/libraries/{library}/documents/{docId}/rate-limited-download`
                      container_shortcuts:
                        type: boolean
                        description: |
                          Indicates requests are available to move shortcuts.<br><br>
                          If `true`, requests are available to move shortcuts.<br>
                          If `false`, no requests are available to move shortcuts.<br>
                          If not present, the value is `false`.
                      tabs:
                        type: boolean
                        description: |
                          Indicates all tab requests are available.<br><br>
                          If `true`, all tab requests are available.<br>
                          If `false`, not all tab requests are available.<br>
                          If not present, the value is `false`.<br>

                          If `tabs` is `true`, the following requests are available:
                          * GET `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security`
                          * POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security`
                          * GET `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/security-policy`
                          * POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folder-shortcuts`
                      my_favorites_admin_import:
                        type: boolean
                        description: |
                          Indicates My Favorites admin import is available.<br><br>
                          If `true`, My Favorites admin import is available.<br>
                          If `false`, My Favorites admin import is not available.<br>
                          If not present, the value is `false`.<br>

                          If `my_favorites_admin_import` is `true`, the following request is available:
                          * POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-favorites/admin-import`
                      my_matters_admin_import:
                        type: boolean
                        description: |
                          Indicates My Matters admin import is available.<br><br>
                          If `true`, My Matters admin import is available.<br>
                          If `false`, My Matters admin import is not available.<br>
                          If not present, the value is `false`.<br>

                          If `my_matters_admin_import` is `true`, the following request is available:
                          * POST `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/admin-import`
                      document_class_indexable:
                        type: boolean
                        description: |
                          Indicates the ability that of documents of specified document classes can be excluded from document search results.<br>

                          This feature provides the means to exclude documents from search results if their contents would not provide useful information.
                          For example, documents used for OCR (optical character recognition) and COMPARE (an iManage tool for tracking changes within a document) contain system information related to those functions and tools.
                          Their contents would not be useful to users, and so, could be excluded from document searches.<br>

                          If `true`, this ability is available.<br>
                          If `false`, this ability is not available.<br>
                          If not present, the value is `false`.<br>

                          For more information and how to exclude documents from a search, see the property `indexable` in the following requests:
                          * <a href="#put-/work/api/v2/customers/-customerId-/libraries/-libraryId-/classes/-aliasId-">PUT /customers/{customerId}/libraries/{libraryId}/classes/{aliasId}</a>
                          * <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/classes">POST /customers/{customerId}/libraries/{libraryId}/classes</a>
                      classic_client_rest_api_support:
                        type: boolean
                        description: |
                          Indicates the availability of REST API support for Classic Middleware (iManage.dll).

                          If `true`, classic clients using iManage.dll can connect to iManage Work Server through REST API requests.<br>
                          If `false`, classic clients using iManage.dll cannot connect to iManage Work Server through REST API requests.<br>
                          If not present, the value is `false`.
                      classic_client_settings:
                        type: boolean
                        description: |
                          Indicates the availability of classic client settings through REST API requests.

                          If `true`, classic client settings are available through REST API requests.<br>
                          If `false`, classic client settings are not available through REST API requests.<br>
                          If not present, the value is `false`.<br>

                          If this feature is available, iManage Control Center will make these options available through the **Work Clients > Classic** settings page.
                          Checking for this feature is intended only for the iManage Work system, and not to be checked by users.
                      other_templates_configurable_visibility:
                        type: boolean
                        description: |
                          Indicates if the setting to configure other templates visibility is available in iManage Control Center.

                          If `true`, the setting to configure other templates visibility in iManage Control Center is available.<br>
                          If `false`, the setting to configure other templates visibility in iManage Control Center is not available.<br>
                          If not present, the value is `false`.

                          When the **Flexible Folders** feature is enabled in iManage Control Center, this setting controls whether users can view other templates in the **Template** drop-down menu in the **New Folder** dialog.
                      document_version_editing_options:
                        type: boolean
                        description: |
                          Indicates version edit options are available in iManage Control Center.

                          If `true`, version edit options are available in iManage Control Center.<br>
                          If `false`, version edit options are not available in iManage Control Center.<br>
                          If not present, the value is `false`.

                          The version edit option allows an iManage Work system administrator to specify which circumstances users can change a document's old version.
                          If this feature is available, iManage Control Center will make these options available through the **Settings > Global** page.
                          Checking for this feature is intended only for the iManage Work system, and not to be checked by users.
                      query_document_history_available_activities:
                        type: boolean
                        description: |
                          Indicates the availability of the request to get a list of all possible document history activity types.

                          If `true`, the request to get the list of document history activity types is available.<br>
                          If `false`, the request to get the list of document history activity types is not available.<br> 
                          If not present, the value is `false`.

                          The request to get document available-activities is:<br>
                          * GET `/customers/{customerId}/libraries/{libraryId}/documents/history/available-activities`
                      update_security_async:
                        type: boolean
                        description: |
                          Indicates the availability of bulk security edit feature.

                          This feature enables to update the security of a bulk set of documents and containers.

                          If `true`, the bulk edit security feature is available.<br>
                          If `false`, the bulk edit security feature is not available.<br>
                          If not present, the value is `false`.

                          If `update_security_async` is `true`, the following requests are available:
                          * <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/security/update-async">PATCH /customers/{customerId}/libraries/{libraryId}/containers/security/update-async</a>
                          * <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/security/update-async">PATCH /customers/{customerId}/libraries/{libraryId}/documents/security/update-async</a>
                      extended_metadata:
                        type: boolean
                        description: |
                          Indicates the availability of the Extended Metadata feature in iManage Control Center.

                          This feature enables configuring an additional set of metadata properties for iManage Work objects.  
                          For example, an additional Taxonomy metadata set can be configured for documents and emails.<br>

                          If `true`, the Extended Metadata feature is available in iManage Control Center.<br>
                          If `false`, the Extended Metadata feature is not available in iManage Control Center.<br>
                          If not present, the value is `false`.

                example:
                  data:
                    app_store: false
                    email_conversations: true
                    email_reply: true
                    eml_attachment_download: true
                    forms: true
                    promote_journal: true
                    copy_as_new_version: true
                    global_users: false
                    km_tags: true
                    linksite: true
                    spm: true
                    subclass_normalization: true
                    app_auth_info_v2: true
                    rate_limited_downloads: true
                    container_shortcuts: true
                    tabs: true
                    my_favorites_admin_import: true
                    my_matters_admin_import: true
                    document_class_indexable: true
                    classic_client_rest_api_support: true
                    classic_client_settings: true
                    other_templates_configurable_visibility: true
                    document_version_editing_options: true
                    query_document_history_available_activities: true
                    update_security_async: true
                    extended_metadata: true
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/feature-overrides:
    get:
      tags:
      - Features
      summary: List upcoming features
      description: |
        Returns a list of upcoming features that are available for evaluation and testing purposes.

        The upcoming features in this list can be individually enabled and disabled by a customer administrator
        with the **Upcoming Feature Management** privilege, to control which specific upcoming features are made available
        to users during the testing period.
      operationId: GET_customers_{customerId}_feature_overrides
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Features.featureOverridesResponse'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                example:
                  data:
                  - name: export_to_csv
                    title: Lorem ipsum dolor sit amet, consectetur adipiscing elit,
                      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua
                    description: Has expiration date
                    link: ''
                    expiration_date: '2021-12-17T00:52:05.997Z'
                    default_value: false
                    customer_value: true
                    overrides_enabled: true
                    resolved_customer_value: true
                    resolved_customer_value_is_forced: false
                  - name: tree_view
                    title: Tree view
                    description: Short description of feature goes here so that the
                      customer CC admin understands what the feature is all about.
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
                      do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    link: https://imanage.com/product/imanage-cloud/
                    default_value: false
                    customer_value: true
                    overrides_enabled: true
                    admin_value: false
                    resolved_customer_value: false
                    resolved_customer_value_is_forced: true
                  total_count: 2
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/feature-overrides/{featureName}:
    get:
      tags:
      - Features
      summary: Upcoming feature details
      description: |
        Returns details of the specified upcoming feature.
      operationId: GET_customers_{customerId}_feature_overrides_{featureName}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Features.featureOverridesResponse'
                example:
                  data:
                    name: export_to_csv
                    title: Export to CSV
                    description: Lorem ipsum dolor sit amet, consectetur adipiscing
                      elit, sed do eiusmod tempor incididunt ut labore et dolore magna
                      aliqua
                    link: ''
                    expiration_date: '2021-12-17T00:52:05.997Z'
                    default_value: false
                    customer_value: true
                    overrides_enabled: true
                    resolved_customer_value: true
                    resolved_customer_value_is_forced: false
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Features
      summary: Add, update, or reset customer value
      description: |
        ## PATCH customers/{customerId}/feature-overrides/{featureName}
        Adds, updates, or resets the customer value for the specified feature.

        If the value is provided as `true` or `false` for a feature, the `customer_value` field is added or updated respectively.
        If the value is provided as null and it was set previously, it is reset and the `customer_value` field does not appear in the response.
      operationId: PATCH_customers_{customerId}_feature_overrides_{featureName}
      requestBody:
        content:
          application/json:
            schema:
              required:
              - customer_value
              type: object
              properties: &id1116
                customer_value:
                  type: boolean
                  description: |
                    Feature value provided by the customer as `true` or `false` to enable or disable the feature respectively.
                    If set to null, then the previously set value is reset.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Features.featureOverridesResponse'
                example:
                  data:
                    name: export_to_csv
                    title: Export to CSV
                    description: Lorem ipsum dolor sit amet, consectetur adipiscing
                      elit, sed do eiusmod tempor incididunt ut labore et dolore magna
                      aliqua
                    link: ''
                    expiration_date: '2021-12-17T00:52:05.997Z'
                    default_value: false
                    customer_value: true
                    overrides_enabled: true
                    resolved_customer_value: true
                    resolved_customer_value_is_forced: false
        409: *id511
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/featureName'
  /work/api/v2/customers/{customerId}/encryption:
    description: |
      ### Introduction
      Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.<br>

      It is also called data at rest encryption, as the data files are encrypted when they are not being used.
      In the event they are compromised, either by theft or unauthorized access (including internal unauthorized access), the files will be encrypted, and therefore unreadable.
      When an authorized user accesses documents (such as through being checked out or viewing within the client application), the documents are decrypted and will be able to be read or edited normally.
      When the user is done with them, such as being checked back in, they are encrypted again.

      The enforcement of encryption varies by iManage Work environment.
      For some environments, encryption is automatic and cannot be turned off.
      For other environments, encryption is optional, and not enabled by default.
      In that case, each library must be explicitly enabled for encryption.
      For details, contact your iManage Work system administrator.

      Encryption uses an electronic cipher, called an encryption key.
      Keys are implemented in one of two ways: customer-managed encryption key (CMEK), or a system-managed encryption key.

      ### Customer-managed encryption key
      A customer-managed encryption key allows customers to manage their own encryption keys.
      Customers control their entire process, from generating the customer-supplied encryption key (the source key), to loading the keys into iManage Work, deciding when to use each key, and when to revoke or to replace keys.

      #### Preparation
      Customers must prepare their key for use within iManage Work by performing the following steps:
      1. **Create the source encryption key**<br>
      The customer creates their encryption key.
      This is called the *customer-supplied encryption key* and is the source encryption cipher for rest of the process.
      It is normally an RSA-2048 bit public/private key generated by the tool and security protocols preferred by the customer.

      1. **Create the key stores**<br>
      A key store is a third-party application that securely stores information.
      A common example is Microsoft Azure.
      In a dual-party CMEK system, two separate key stores are required.
      Two customer team members, known as key holders, independently store a copy of the same customer-supplied encryption key in a key store, such as through Microsoft Azure.
      The security advantage is if the two key stores do not contain identical versions of the customer-supplied encryption key, a warning is generated, and these two key stores cannot be used to generate a master key.

      1. **Register the key stores with iManage**<br>
      Each key holder must contact their designated iManage customer service manager (CSM) or their implementation partner, and provide the key store information.
      This allows the customer to pre-authorize the key stores that are permitted for use.
      The security advantage is if the address of a key store being accessed is not the same address that was registered, a warning is generated that a security breach may have been attempted.

      Customers can add new key stores, rename existing keys, or activate their keys without iManage involvement.
      The iManage Work system does not access or modify the key stores for any reason other than to read them.

      #### Creating a master key
      A master key is an encryption key that can be activated on libraries.
      See **Master keys** section for more information.
      After preparing the customer-managed encryption key, a master key can now be created.
      To create the master key, use POST `/customers/{customerId}/encryption/master-keys`<br>
      The requester must have the global Key Management privilege.
      The master key is now registered with iManage and is available to be activated on libraries.

      ### System-managed encryption key
      A system-managed encryption key is a built-in master key provided by the iManage Work system.
      This is the default master key and no steps are needed to create it.
      It is a master key that is registered and available to be activated on libraries.

      ### Master keys
      A master key is an encryption key that can be activated on libraries.
      Each library requires a master key to be activated on it for encryption and decryption.
      The following requests are available to manage master keys:
      * To see a list of available master keys, those currently being used and those available to be used, use GET `/customers/{customerId}/encryption/master-keys`
      * To see details about a specific master key, such as its create date, health, and its current availability, use GET `/customers/{customerId}/encryption/master-keys/{keyId}`
      * To rename a master key, use PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`
      * To see a list of of libraries that a specific master key is assigned to, use GET `/customers/{customerId}/encryption/library-keys`

      An available master key can be activated for libraries.
      The following conditions apply:
      * Only one master key can be active for each library.
      * More than one library can use the same master key.
      * More than one master key can be enabled in the system at the same time.
      That means, each library can use a different master key.

      To activate a master key for a library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`<br>
      After a master key is activated for a library, the following occurs:
      * The new master key is immediately activated.
      Encryption with the new master key is immediate.
      * The replaced master key is immediately made inactive.
      The replaced key can be deleted, or archived (it could be reactivated and used again).
      However, iManage recommends as a best practice not to reuse master keys except for the system-managed encryption key.

      ### Library keys
      A library key is a master key that is active on a library.
      Once a library is encrypted, it must always be encrypted.
      A library key can be replaced by activating another master key on it.
      However, a library key cannot simply be deleted.

      To see a list of master keys ever applied for a library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`

      ### More Information
      For more information on implementing iManage Control Center procedures, see <a href="https://docs.imanage.com/cc-help/10.3.1/en/Encryption_Keys.html" target="_blank">Encryption Keys</a>.


    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/encryption/master-keys:
# September 2020

    description: |
      The master-keys request collection manages the master keys.<br><br>
      This includes listing the master keys, creating a master key, getting the details of a master key, and renaming a master key.
      To get the correlation between master keys and libraries, see the library keys request collection `/customers/{customerId}/libraries/{libraryId}/encryption/keys`.<br>

      A master key is a key used to encrypt and decrypt files.
      It is created with POST `/customers/{customerId}/encryption/master-keys`.
      This request requires having created two key stores hosting copies of the master key.

      For more information, or for procedures implementing this, see <a href="https://docs.imanage.com/cc-help/10.3.1/en/Encryption_Keys.html" target="_blank">Encryption Keys</a>.<br>
      After the master key is created, it can be activated to start encrypting documents.
      This is done by activating a master key for each library with POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`.

      The following conditions apply:
      * More than one library can use the same master key.
      * More than one master key can be enabled in the system at the same time.
      That means, each library can use a different master key.
      * Only one master key can be active for each library.

      To activate a master key for each library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      After a master key is activated for a library, the following occurs:
      * The new master key is immediately activated, making it the new library key.
      Encryption with the new library key is immediate.
      * The previous library key is immediately deactivated.
      It is possible that a library can have more than one inactive library key.

    get:
      tags:
      - Encryption
  #- customers-{customerId}-encryption-master-keys
  #summary: GET /customers/{customerId}/encryption/master-keys
      summary: Get master keys
      description: |
        Returns a list of registered master keys.<br>

        The global-management privileges required to implement this request: Key Management.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns all the registered master keys:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/encryption/master-keys`<br>

        This request returns all the registered master keys with a name that includes *system*:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/encryption/master-keys?query=system`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To return a list of master keys and libraries assigned to them, see GET `/customers/{customerId}/encryption/library-keys`<br>
        * To create a new master key from key stores, see POST `/customers/{customerId}/encryption/master-keys`<br>
        * To return master key information and health details, see GET `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To update the name for a master key, see PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To return a list of master keys that have been applied to a specific library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`<br>
        * To apply the master key to a specific library, see POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      operationId: GET_customers_{customerId}_encryption_master-keys
      parameters:
      - *id004
      - *id011
      - *id006
      - name: query
        in: query
        description: |
          Specifies text in the `name` field.<br><br>
          This search:
          * Is case insensitive. For example: *system* matches *System*.
          * Matches partial words. For example: *europe_* matches *Europe_3*.
          * Does not support the wildcard character (&ast;).
        schema:
          type: string
      - name: status
        in: query
        description: |
          Specifies the status of the master key.

          |Value|Description|
          |:---|:---|
          |available_for_library_activation|Ready for new activation in libraries.|
          |unavailable_for_library_activation|Not available for new activation in libraries.|
          |ready_to_archive|No longer active in the library but could still be active in other libraries.|
          |archived|No longer in use anywhere within iManage Work.|
        schema:
          enum: [available_for_library_activation, unavailable_for_library_activation,
            ready_to_archive, archived]
          type: string
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: '98587556442013739'
                    name: azureKey1
                    key_type: azure_dual_keys
                    created_time: '2019-02-26T17:26:08Z'
                    status: available_for_library_activation
                    key_store_params:
                    - key_id: https://aa3-bb3.vault.azure.net/keys/Twin-Key/5464bf0ah43a4f71a521c925bie3bc07
                      client_id: 811f7506-46ac-97c2-94c5-650ce0ba07c0
                    - key_id: https://aa4-bb4.vault.azure.net/keys/Twin-Key/28cceh0b78c24b0ab5i2-d85c324ace36
                      client_id: 94c5-97c2-811f7506-46ac-650ce0ba07c0
                  - id: system
                    name: iManage System Key
                  total_count: 2
                required:
                - data
                type: object
                properties: &id1663
                  data:
                    type: array
                    items:
                      required:
                      - name
                      - key_type
                      - created_time
                      - status
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Indicates the master key ID.
                        name:
                          type: string
                          description: |
                            Indicates the name of the master key.<br><br>
                            This is a descriptive name.
                        key_type:
                          enum: [azure_dual_keys]
                          type: string
                          description: |
                            Indicates the type of the master key.

                            |Value|Description|
                            |:---|:---|
                            |azure_dual_keys|The key is stored in a dual-party configuration in two separate key stores. The key stores are managed by users outside of the iManage Work system.|
                        created_time:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the creation date (in ISO 8601 format) of the master key.<br><br>
                            This is the date when the master key was entered in the iManage Work system.
                        status:
                          enum: [available_for_library_activation, unavailable_for_library_activation,
                            ready_to_archive, archived]
                          type: string
                          description: |
                            Indicates the status of the master key within iManage Work.<br>

                            |Value|Description|
                            |:---|:---|
                            |available_for_library_activation|Ready for new activation in libraries.|
                            |unavailable_for_library_activation|Not available for new activation in libraries.|
                            |ready_to_archive|No longer active in the library but could still be active in other libraries.|
                            |archived|No longer in use anywhere within iManage Work.|
                        key_store_params:
                          description: |
                            Indicates connection parameters used to identify the master key and to authenticate the key stores in a dual-party configuration.<br><br>
                            This is used only if the type is `azure_dual_keys`.
                          type: array
                          items:
                            required:
                            - client_id
                            - key_id
                            type: object
                            properties:
                              client_id:
                                type: string
                                description: |-
                                  Indicates the application (client) ID of the Azure application used to access the Azure key vault.
                              key_id:
                                type: string
                                description: |
                                  Indicates the Web address of the master key contained in the Azure key vault.<br><br>
                                  The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                                example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                            additionalProperties: false
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
    post:
      tags:
      - Encryption
  #- customers-{customerId}-encryption-master-keys
  #summary: POST /customers/{customerId}/encryption/master-keys
      summary: Register a master key
      description: |
        Registers a master key.<br>

        The global-management privileges required to implement this request: Key Management.<br>

        Registering a master key is a customer-managed encryption key process that validates the two key stores and creates a new master key.
        After the master key is created, the master key is available to be activated on libraries.
        The system-managed encryption key does not need to be created because this system-managed encryption key is always available.

        Before creating a master key, two key stores must be available. Each key store must contain an identical copy of the customer-managed encryption key.
        In creating those vaults, each vault will have:
          * An Azure key vault DNS name. Azure constructs an address to the key vault. For example: `https://www.ajubalaw.vault.azure.net/`.
          This allows the customer to pre-authorize the key vaults that are permitted for use.
          Contact the designated iManage customer service manager (CSM) or implementation partner.
          
          This allows the customer to pre-authorize the vaults that are permitted for use.
          * A key identifier. Also called the Azure Key Version Key Identifier, Azure constructs this address to the master key in the key vault, and uses the Azure key vault DNS name as the base endpoint.
          For example: `https://www.ajubalaw.vault.azure.net/keys/ajubalaw-1/da93550d9b344d04a212dd06b7e7f4dc`
          * An Application ID (also known as a client ID). Azure generates this. It is one of two ID pairings; the other is the Client secret.
          * A Client secret (also known as an application password). Azure generates this. It is one of two ID pairings; the other is the Application ID.

        During the master key creation process, the two key vaults are verified to check if their addresses are accessible, and the keys they contain are identical.
        If successful, the master key is created.
        For more information about any of these values, contact your iManage or network system administrator.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request registers a master key from two key stores:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/encryption/master-keys`<br>
        Request body:<br>
        ```
        {
          "name": "Encryption_Key_1",
          "key_type": "azure_dual_keys",
          "key_store_params":
          [
            {
              "key_id": "https://aa1-bb1.vault.azure.net/keys/Twin-Key/5464bf0a443a4f7ia521c925b8e3bc07",
              "client_id": "46ac-811f7506-97c2-94c5-650ce0ba07c0",
              "secret": "LzFKRWExUUNwTFJRMzgzNTRXa3hVRDFjeEdsWFZFVmtZYTF2cDZjN3hCOD0"
            },
            {
              "key_id": "https://aa2-bb2.vault.azure.net/keys/Twin-Key/5464bf0a443a4f7ia52ic925b8e3bc07",
              "client_id": "97c2-811f7506-46ac-94c5-650ce0ba07c0",
              "secret": "VRDFjeEdsWFZFVmtZYTF2cDZjN3hCOD0LzFKRWExUUNwTFJRMzgzNTRXa3h"
            }
          ]
        }
        ```

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To return a list of libraries and master keys assigned to them, see GET `/customers/{customerId}/encryption/library-keys`<br>
        * To return a list of master keys, see GET `/customers/{customerId}/encryption/master-keys`<br>
        * To return master key information and health details, see GET `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To update the name for a master key, see PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To return a list of master keys that have been applied to a specific library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`<br>
        * To apply the master key to a specific library, see POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      operationId: POST_customers_{customerId}_encryption_master-keys
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: azureKey1
                key_type: azure_dual_keys
                key_store_params:
                - key_id: https://aa1-bb1.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                  client_id: 46ac-811f7506-97c2-94c5-650ce0ba07c0
                  secret: LzFKRWExUUNwTFJRMzgzNTRXa3hVRDFjeEdsWFZFVmtZYTF2cDZjN3hCOD0
                - key_id: https://aa2-bb2.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                  client_id: 97c2-811f7506-46ac-94c5-650ce0ba07c0
                  secret: VRDFjeEdsWFZFVmtZYTF2cDZjN3hCOD0LzFKRWExUUNwTFJRMzgzNTRXa3h
              required:
              - name
              - key_type
              type: object
              properties: &id1662
                name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the new name of the master key.<br><br>
                    This is a descriptive name.

                    |Description|Value|
                    |:---|:---:|
                    | Minimum length | 1 |
                    | Maximum length | 254 |
                    | Spaces allowed | Yes |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |
                key_type:
                  maxLength: 48
                  enum: [azure_dual_keys]
                  type: string
                  description: |
                    Specifies the type of the master key.<br>

                    |Value|Description|
                    |:---|:---|
                    |azure_dual_keys|The key is stored in a dual-party configuration in two separate Azure key vaults and are managed by users outside of the iManage Work system.|
                key_store_params:
                  description: |
                    Specifies connection parameters used to identify the master key and to authenticate the Azure key vault in a dual-party configuration.<br><br>
                    This is used only if the type is `azure_dual_keys`.
                  type: array
                  items:
                    required:
                    - key_id
                    - client_id
                    - secret
                    type: object
                    properties:
                      key_id:
                        type: string
                        description: |
                          Specifies the Web address of the encryption key contained in an Azure key vault.<br><br>
                          The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                        example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id:
                        type: string
                        description: |-
                          Specifies the application (client) ID of the Azure application used to access the Azure key vault.
                      secret:
                        type: string
                        description: |-
                          Specifies the client secret (also called an application password) of the Azure application used to access the Azure key vault.
                    additionalProperties: false
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: '98587556442013739'
                    name: azureKey1
                    key_type: azure_dual_keys
                    created_time: '2018-02-26T17:26:08Z'
                    healthy: true
                    status: unavailable_for_library_activation
                    key_store_params:
                    - key_id: https://aa3-bb3.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 811f7506-46ac-97c2-94c5-650ce0ba07c0
                      health: available
                    - key_id: https://aa4-bb4.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 94c5-97c2-811f7506-46ac-650ce0ba07c0
                      health: available
                required:
                - data
                type: object
                properties: &id568
                  data:
                    required:
                    - name
                    - key_type
                    - created_time
                    - healthy
                    - status
                    type: object
                    properties:
                      id:
                        type: string
                        description: Indicates the master key ID.
                      name:
                        maxLength: 254
                        type: string
                        description: |
                          Indicates the name of the master key.<br><br>
                          This is a descriptive name.
                      key_type:
                        enum: [azure_dual_keys]
                        type: string
                        description: |
                          Indicates the type of the master key.<br>

                          |Value|Description|
                          |:---|:---|
                          |azure_dual_keys|The key is stored in a dual-party configuration in two separate Azure Key Vaults and are managed by users outside of the iManage Work system.|
                      created_time:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the creation date (in ISO 8601 format) of the master key reference.<br><br>
                          This is the date when the master key reference was entered in the iManage Work system.
                      healthy:
                        type: boolean
                        description: |
                          Indicates the master key is accessible (healthy).<br><br>
                          If `true`, the master key is accessible (healthy).<br>
                          If `false`, the master key is not accessible (unhealthy).<br><br>
                          A master key may not be accessible for a number of reasons such as faulty network access, or that the key is corrupted.
                          For detailed information, see the `error` field of the response body.
                      status:
                        enum: [available_for_library_activation, unavailable_for_library_activation,
                          ready_to_archive, archived]
                        type: string
                        description: |
                          Indicates the status of the master key within iManage Work.<br>

                          |Value|Description|
                          |:---|:---|
                          |available_for_library_activation|Ready for new activation in libraries.|
                          |unavailable_for_library_activation|Not available for new activation in libraries.|
                          |ready_to_archive|No longer active in the library but could still be active in other libraries.|
                          |archived|No longer in use anywhere within iManage Work.|
                      key_store_params:
                        description: |
                          Indicates connection parameters used to identify the master key and to authenticate the Azure key vault in a dual-party configuration.<br><br>
                          This is used only if the type is `azure_dual_keys`.
                        type: array
                        items:
                          required:
                          - client_id
                          - key_id
                          - health
                          type: object
                          properties:
                            client_id:
                              type: string
                              description: Indicates the application (client) ID of
                                the Azure application used to access the Azure key
                                vault.
                            key_id:
                              type: string
                              description: |
                                Indicates the Web address of the master key contained in the Azure key vault.<br><br>
                                The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                              example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                            health:
                              enum: [available, unavailable, revoked, mismatch]
                              type: string
                              description: |
                                Indicates the health of an Azure key vault in the dual-party configuration.

                                |Value|Description|
                                |:---|:---|
                                |available|The Azure key vault is accessible.|
                                |unavailable|The Azure key vault is inaccessible.|
                                |revoked|The Azure key vault has been revoked. If this is not intended, iManage recommends evaluating the cause of the revocation.|
                                |mismatch|The key referenced in the Azure key vault does not match the other key in the dual-party configuration. iManage recommends evaluating the cause of the mismatch.|
                          additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
        400:
          description: ''
          content:
            application/json:
              schema:
                example:
                  error:
                    code: NRC_INVALID_PARAM
                    code_message: Parameter is invalid
                    messages: *id566
                required:
                - error
                type: object
                properties: *id567
                additionalProperties: false
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/encryption/master-keys/{keyId}:
    description: |-
      None
    get:
      tags:
      - Encryption
  #- customers-{customerId}-encryption-master-keys-{keyId}
  #summary: GET /customers/{customerId}/encryption/master-keys/{keyId}
      summary: Get master key information
      description: |
        Returns the master key information and health details.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to implement this request: Key Management.

      operationId: GET_customers_{customerId}_encryption_master-keys_{keyId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: '98587556442013739'
                    name: azureKey1
                    key_type: azure_dual_keys
                    created_time: '2018-02-26T17:26:08Z'
                    healthy: true
                    status: unavailable_for_library_activation
                    key_store_params:
                    - key_id: https://aa3-bb3.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 811f7506-46ac-97c2-94c5-650ce0ba07c0
                      health: available
                    - key_id: https://aa4-bb4.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 94c5-97c2-811f7506-46ac-650ce0ba07c0
                      health: available
                required:
                - data
                type: object
                properties: *id568
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Encryption
  #- customers-{customerId}-encryption-master-keys-{keyId}
  #summary: PATCH /customers/{customerId}/encryption/master-keys/{keyId}
      summary: Update a master key
      description: |
        Updates the specified master key.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global-management privileges required to implement this request: Key Management.

        The name must be unique among the other key names.

        The master key can be renamed at any time, and the state of the key's health or activation status is not affected.

      operationId: PATCH_customers_{customerId}_encryption_master-keys_{keyId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: azureKey1
                key_store_params:
                - client_id: 8676dc8f-973d-4799-9c4d-eeaceba62762
                  key_id: https://imanlabs3.vault.azure.net/keys/integrationtest1/455e848ff66e468aaacd9b2ae44e595e
                  secret: NDV4_p8VPq29-S7N-vOg5~n_6RoXUo711i
                - client_id: e3f0a2a7-e913-453b-99e3-c6dbcfcd25d5
                  key_id: https://imanlabs4.vault.azure.net/keys/integrationtest1/8fdad0fc04194411a8868fd468acaf91
                  secret: z60-D3MF90.ESWu.K1oXpJ9vtE-Vwsv31v
              type: object
              properties: &id1664
                name:
                  maxLength: 254
                  type: string
                  description: |
                    Specifies the new name of the master key. This name is for descriptive purposes only.

                    | Description | Value |
                    | :--- | :---: |
                    | Minimum length | 1 |
                    | Maximum length | 254 |
                    | Spaces allowed | Yes |
                    | Unicode allowed | Yes |
                    | Special Characters allowed | Yes |

                key_store_params:
                  description: |
                    Specifies connection parameters used to identify the master key and to authenticate the Azure key vault in a dual-party configuration.
                  type: array
                  items:
                    required:
                    - key_id
                    - secret
                    type: object
                    properties:
                      key_id:
                        type: string
                        description: |
                          Specifies the Web address of the encryption key contained in an Azure key vault using the following Web address format:<br>
                          `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`

                          Example: `https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07`
                      client_id:
                        type: string
                        description: |-
                          Specifies the ID of the Azure client application.<br>
                          Used for accessing the Azure key vault.
                      secret:
                        type: string
                        description: |-
                          Specifies the secret (also called an application password) of the Azure client application.<br>
                          Used for accessing the Azure key vault.
                    additionalProperties: false
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: '98587556442013739'
                    name: azureKey1
                    key_type: azure_dual_keys
                    created_time: '2018-02-26T17:26:08Z'
                    healthy: true
                    status: unavailable_for_library_activation
                    key_store_params:
                    - key_id: https://aa1-bb1.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 46ac-811f7506-97c2-94c5-650ce0ba07c0
                      health: available
                    - key_id: https://aa2-bb2.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                      client_id: 97c2-811f7506-46ac-94c5-650ce0ba07c0
                      health: available
                required:
                - data
                type: object
                properties: *id568
                additionalProperties: false
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - name: keyId
      in: path
      description: |
        The master key ID.

        To see a list of all the available master key IDs, see GET `/customers/{customerId}/encryption/master-keys`
      required: true
      schema:
        description: needs defining
  /work/api/v2/customers/{customerId}/encryption/library-keys:
    description: |
      The library keys request collection correlates the master keys and the libraries they are activated against.
      For more information, see the request collection `/customers/{customerId}/encryption/library-keys`.

      A library key is based off a master key and has been activated or applied to a library.
      To see a list of master keys ever applied for a library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`

      To activate a master key for a library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      The system generates a library key out of the master key, and that library key is used for encryption and decryption while it is active.
      Only one library key can be active in the library at any given time.
    get:
      tags:
      - Encryption
  #- customers-{customerId}-encryption-library-keys
  #summary: GET /customers/{customerId}/encryption/library-keys
      summary: Get library keys
      description: |
        Returns a list of libraries for each master key.<br>

        The global-management privileges required to implement this request: Key Management.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns a list of libraries for each active master key:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/encryption/master-keys/library-keys`<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To return a list of master keys, see GET `/customers/{customerId}/encryption/master-keys`<br>
        * To create a new master key from two key stores, see POST `/customers/{customerId}/encryption/master-keys`<br>
        * To return master key information and health details, see GET `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To update the name for a master key, see PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To return a list of master keys that have been applied to a specific library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`<br>
        * To apply the master key to a specific library, see POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      operationId: GET_customers_{customerId}_encryption_library-keys
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: '98587556442013739'
                    libraries:
                    - id: active_us
                      activated_time: '2018-02-27T12:10:07Z'
                      status: active
                      encryption_details:
                        encrypted_items: 101329
                        total_items: 101329
                    - id: active_uk
                      activated_time: 2020-06-13T23:08:16:434
                      status: active
                      encryption_details:
                        encrypted_items: 328003
                        total_items: 832468
                    - id: active_au
                      activated_time: 2021-01-13T04:34:008
                      status: active
                      encryption_details:
                        encrypted_items: 67532
                        total_items: 67532
                  - id: '83472346272364223'
                    libraries:
                    - id: active_uk
                      activated_time: '2018-02-27T12:10:07Z'
                      status: inactive
                      encryption_details:
                        encrypted_items: 504326
                        total_items: 832147
                  - id: '36473254039485284'
                    libraries:
                    - id: active_us
                      activated_time: 2016-04-03T14:23:011
                      status: retired
                  - id: '2367347263462363'
                    libraries:
                    - id: active_uk
                      activated_time: 2015-03-20T17:11:43:508
                      status: retired
                  total_count: 6
                required:
                - data
                type: object
                properties: &id1665
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - libraries
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Indicates the master key ID.
                        libraries:
                          description: |-
                            Indicates the set of libraries being encrypted with the associated master key ID.
                          type: array
                          items:
                            required:
                            - id
                            - activated_time
                            - status
                            type: object
                            properties:
                              id:
                                type: string
                                description: |-
                                  Indicates the library ID.
                              activated_time:
                                pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                                type: string
                                description: |
                                  Indicates the activated date (in ISO 8601 format).<br><br>
                                  This is the date that the master key was assigned to the library.
                              status:
                                enum: [active, inactive, archived]
                                type: string
                                description: |
                                  Indicates the status of the master key within iManage Work.<br>

                                  |Value|Description|
                                  |:---|:---|
                                  |active|The master key ID is the current key.|
                                  |inactive|The master key ID is no longer used for encryption, but could still be in use for decryption. There can be documents that use it for decryption.|
                                  |retired|The master key ID is no longer used for encryption or decryption. No documents are encrypted by it within the iManage Work system.|
                              encryption_details:
                                type: object
                                description: |
                                  Indicates this key's document encryption details for this library. This section is not present when the status is retired.
                                properties:
                                  encrypted_items:
                                    type: integer
                                    description: Indicates the approximate number
                                      of items encrypted with this key in this library.
                                  total_items:
                                    type: integer
                                    description: Indicates the approximate number
                                      of total items in this library.
                            additionalProperties: false
                      additionalProperties: false
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/encryption:
    description: |
      The library keys request collection correlates the master keys and the libraries they are activated against.
      For more information, see the request collection `/customers/{customerId}/encryption/library-keys`.

      A library key is based off a master key and has been activated or applied to a library.
      To see a list of master keys ever applied for a library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`

      To activate a master key for a library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      The system generates a library key out of the master key, and that library key is used for encryption and decryption while it is active.
      Only one library key can be active in the library at any given time.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/encryption/keys:
    description: |
      The library keys request collection correlates the master keys and the libraries they are activated against.
      For more information, see the request collection `/customers/{customerId}/encryption/library-keys`.

      A library key is based off a master key and has been activated or applied to a library.
      To see a list of master keys ever applied for a library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`

      To activate a master key for a library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      The system generates a library key out of the master key, and that library key is used for encryption and decryption while it is active.
      Only one library key can be active in the library at any given time.
    get:
      tags:
      - Encryption
    # - customers-{customerId}-libraries-{libraryId}-encryption-keys
      summary: Get the master key applied to a library
      description: |
        Returns the master keys that have been activated for the specified library.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request returns master keys that have been applied to library active_us<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/encryption/keys`

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To return a list of libraries and master keys assigned to them, see GET `/customers/{customerId}/encryption/library-keys`<br>
        * To return a list of master keys, see GET `/customers/{customerId}/encryption/master-keys`<br>
        * To create a new master key from two key stores, see POST `/customers/{customerId}/encryption/master-keys`<br>
        * To return master key information and health details, see GET `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To update the name for a master key, see PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`<br>
        * To apply the master key to a specific library, see POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      operationId: GET_customers_{customerId}_libraries_{libraryId}_encryption_keys
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - status: archived
                    master_key_id: system
                    activated_time: '2018-02-25T17:26:08Z'
                  - status: active
                    master_key_id: '98587556442013719'
                    activated_time: '2019-01-16T03:05:57Z'
                required:
                - data
                type: object
                properties: &id1660
                  data:
                    type: array
                    items:
                      required:
                      - status
                      - master_key_id
                      - activated_time
                      type: object
                      properties:
                        status:
                          enum: [active, inactive, archived]
                          type: string
                          description: |
                            Indicates the status of the library key with respect to its usage in iManage Work.

                            |Value|Description|
                            |:---|:---|
                            |active|Designated as the current key to use for encryption.|
                            |inactive|No longer used for encryption, but could still be in use for decryption, as there may be documents encrypted by it.|
                            |archived|No longer used for encryption nor decryption, and no content is encrypted by it anywhere within iManage Work.|
                        master_key_id:
                          type: string
                          description: |-
                            Indicates the master key ID.<br><br>
                            This value is either the keyword *system* for the system-managed encryption key, or the numeric ID for the master key.
                        activated_time:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the activation date (in ISO 8601 format) with the master key reference.<br><br>
                            This is the date when the master key reference was activated for the library.
                          example: "2019-09-18T00:00:00Z"
                      additionalProperties: false
                additionalProperties: false
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    post:
      tags:
      - Encryption
    # - customers-{customerId}-libraries-{libraryId}-encryption-keys
      summary: Activate the master key for a library
      description: |
        Activates a master key for the specified library.

        The minimum access permission required on the library to implement this request: NRTADMIN.

        After a master key is activated for a library, the following occurs:
        * The new master key is immediately activated, making it the new library key.
        Encryption with the new library key is immediate.
        * The previous library key is immediately deactivated.
        It is possible that a library can have more than one inactive library key.

        <font style="color:black;font-size: 15px;font-weight: bold;">Sample request(s)</font><br>
        The following request activates master key 345849038530853 for library active_us:<br>
        POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/encryption/keys`<br>
        Request body: See **Request samples** in the Example section in the right pane.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To return a list of libraries and master keys assigned to them, see GET `/customers/{customerId}/encryption/library-keys`
        * To return a list of master keys, see GET `/customers/{customerId}/encryption/master-keys`
        * To create a new master key from key stores, see POST `/customers/{customerId}/encryption/master-keys`
        * To return master key information and health details, see GET `/customers/{customerId}/encryption/master-keys/{keyId}`
        * To update the name for a master key, see PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`
        * To return a list of master keys that have been applied to a specific library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
        * To apply the master key to a specific library, see POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`
      operationId: POST_customers_{customerId}_libraries_{libraryId}_encryption_keys
      requestBody:
        content:
          application/json:
            schema:
              example:
                master_key_id: '345849038530853'
              required:
              - master_key_id
              type: object
              properties: &id1659
                master_key_id:
                  maxLength: 20
                  type: string
                  description: |-
                    ID of the master key that is used to create a new encryption key.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    status: active
                    master_key_id: system
                    activated_time: '2018-02-25T17:26:08Z'
                required:
                - data
                type: object
                properties: &id1661
                  data:
                    required:
                    - status
                    - master_key_id
                    - activated_time
                    type: object
                    properties:
                      status:
                        enum: [active, inactive, archived]
                        type: string
                        description: |
                          Indicates the status of the library key with respect to its usage in iManage Work.

                          |Value|Description|
                          |:---|:---|
                          |active|Designated as the current key to use for encryption.|
                          |inactive|No longer used for encryption, but could still be in use for decryption, as there may be documents encrypted by it.|
                          |archived|No longer used for encryption nor decryption, and no content is encrypted by it anywhere within iManage Work.|
                      master_key_id:
                        type: string
                        description: |-
                          Indicates the master key ID.<br><br>
                          This value is either the keyword *system* for the system-managed encryption key, or the numeric ID for the master key.
                      activated_time:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |
                          Indicates the activation date (in ISO 8601 format) with the master key reference.<br><br>
                          This is the date when the master key reference was activated for the library.
                        example: "2019-09-18T00:00:00Z"
                    additionalProperties: false
                additionalProperties: false
        400:
          description: ''
          content:
            application/json:
              schema:
                example:
                  error:
                    code: NRC_INVALID_PARAM
                    code_message: Parameter is invalid
                    messages: *id566
                required:
                - error
                type: object
                properties: *id567
                additionalProperties: false
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: libraryId
      in: path
      description: |-
        The library ID of the target library (formerly called a database).
      required: true
      schema:
        example: active_us
  /work/api/v2/customers/{customerId}/documents:
    description: |
      Documents are the files used to record the internal and client information of an organization. 

      In iManage Work, the documents are configurable items and can be of almost any file type such as text, graphics, video, or a proprietary format such as Microsoft Word (.doc, and .docx)
      and Adobe PDF. Documents have properties associated with them, and the set of its properties is referred to document profile.

      Actions available for documents in iManage Work include check in/check out, where used, preview, download, upload new version,
      add to/remove from My Favorites, copy link, share (as link, as document, or both, as secure link), copy to share folder, move,
      delete, see properties, declare/undeclare as record, relate to another document, lock/unlock, and view timeline. 

      Following are some of the properties of a document:
      - Document owner. Also called an author, this is the user who created or imported the document.
      - Document operator. This ss the user who last modified (edited, created, or renamed) a document.
      - Document number. This is number assigned at the time the document is created or first loaded into iManage system. This number is unique for
        a specific library.
      - Document version number. This indicates the current version, or the number of times the document has been edited or modified.
      - Document ID. This uniquely identifies the document. The document ID is a combination of the library name, the document number separated by an exclamation mark, and the document version number.
        For example, for *active_us436025.2*, active_us is the library name, 436025 is the document number and 2 indicates the second version of document.
    get:
      tags:
      - Multi-library Documents
  #- customers-{customerId}-documents
  #summary: GET /customers/{customerId}/documents
      summary: Get global documents
      description: |
        Gets all the documents that match the specified search criteria.
        For more information, see *Crafting Searches* in [iManage Work REST API Documentation](#/docs/documentation-0).
      operationId: GET_customers_{customerId}_documents
      parameters:
      - *id004
      - *id137
      - *id138
      - *id139
      - *id140
      - *id141
      - *id142
      - *id143
      - *id144
      - *id145
      - *id146
      - *id147
      - *id148
      - *id149
      - *id150
      - *id151
      - *id152
      - *id153
      - *id154
      - *id155
      - *id156
      - *id157
      - *id158
      - *id159
      - *id160
      - *id161
      - *id162
      - *id163
      - *id164
      - *id165
      - *id166
      - *id167
      - *id168
      - *id169
      - *id170
      - *id171
      - *id172
      - *id173
      - *id174
      - *id175
      - *id176
      - *id177
      - *id178
      - *id179
      - *id180
      - *id181
      - *id182
      - *id183
      - *id184
      - *id185
      - *id186
      - *id187
      - name: email_only
        in: query
        description: |
          Includes only emails in the results set.<br><br>
          If `true`, only emails are included.<br>
          If `false`, documents are also included.<br><br>
          For a document-only return list, see the `exclude_emails` parameter.
        schema:
          type: boolean
          default: false
      - *id189
      - *id190
      - name: facets
        in: query
        description: |
          Specifies the facets to return.

          For more information, see <a href="#overview--facets">Facets</a> in Key Concepts section.
        schema:
          type: string
      - *id191
      - *id192
      - *id193
      - *id194
      - *id073
      - *id195
      - *id558
      - name: limit
        in: query
        description: |-
          Maximum number of items to include in the response.
        schema:
          maximum: 9999
          minimum: 1
          type: integer
          default: 500
      - *id196
      - *id006
      - *id197
      - *id198
      - name: personalized
        in: query
        description: |
          Specifies whether to return documents and emails only from the user's Recent Matters list. <br><br>
          The user's Recent Matters list is the content user has accessed in matters in the past 30 days.<br><br>
          If `true`, returns documents and emails only from user's Recent Matters list.<br>
          If `false`, does not return documents and emails only from user's Recent Matters list.<br>
          All other searchable locations are included.
        schema:
          type: boolean
          default: false
      - *id199
      - *id200
      - *id201
      - *id202
      - name: results
        in: query
        description: |
          Specifies whether to include search results.<br><br>
          By default, the value is `true` and the search results are returned. If `false`, no search results are returned.<br>

          This parameter is often used along with the facets parameter.
          If no parameters are included, only the search results are returned.
          If `results=false`, and a facets value is specified, only the facets information is returned without any of the search results.
          If both the parameters are specified, both facets and search results are returned.
          It is possible to specify `results=false` and no valid facets parameters.
          In this case, no data of either type is returned although a valid but empty JSON object is returned.
        schema:
          type: boolean
          default: true
      - *id203
      - *id204
      - *id205
      - *id206
      - *id207
      - name: timezone_offset
        in: query
        description: |-
          Specifies the offset in whole minutes from Coordinated Universal Time (UTC).<br><br>
          iManage Work returns date values in UTC. Timezone offset can be used to translate UTC to the local time for display in the client application.
          The value may be positive (minutes ahead of UTC) or negative (minutes behind UTC).
          For example, India is 5 hours and 30 minutes ahead of UTC, which is 330 minutes, and is specified as `timezone_offset=330`.
          Houston is six hours behind UTC, which is -360 minutes, and is specified as `timezone_offset=-360`.
        schema:
          maximum: 1080
          minimum: -1080
          type: integer
          default: 0
      - *id007
      - *id208
      - *id209
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    results:
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:22:10-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: public
                      document_number: 105895
                      edit_date: '2016-12-02T04:34:17-05:00'
                      edit_profile_date: '2016-12-02T04:34:17-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:19:50-05:00'
                      file_edit_date: '2016-12-02T04:34:29-05:00'
                      has_attachment: false
                      id: Active!105895.2
                      is_in_use: true
                      in_use_by: ACASE
                      is_declared: false
                      is_checked_out: true
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                      last_user: ACASE
                      name: microsoft_manual_of_style_fourth_edition_Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 10003063
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T04:00:23-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105892
                      edit_date: '2016-12-02T04:10:19-05:00'
                      edit_profile_date: '2016-12-02T04:10:20-05:00'
                      extension: pdf
                      file_create_date: '2016-12-02T04:02:16-05:00'
                      file_edit_date: '2016-12-02T04:02:16-05:00'
                      has_attachment: false
                      id: Active!105892.2
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                      last_user: ACASE
                      name: ACME 2014 Audit Engagement Contract (1) Doc Test
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 422553
                      type: ACROBAT
                      version: 2
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    - author: ACASE
                      author_description: Andrew Case
                      class: DOC
                      create_date: '2016-12-02T00:27:24-05:00'
                      custom1: '9999'
                      custom1_description: Firm General
                      custom2: '1045'
                      custom29: LABOR
                      custom29_description: Labor & Employment
                      custom2_description: Labor Section
                      database: Active
                      default_security: private
                      document_number: 105893
                      edit_date: '2016-12-02T00:28:30-05:00'
                      edit_profile_date: '2016-12-02T00:28:30-05:00'
                      extension: pdf
                      file_create_date: '2016-11-29T14:15:18-05:00'
                      file_edit_date: '2016-11-29T14:15:18-05:00'
                      has_attachment: false
                      id: Active!105893.1
                      is_in_use: false
                      is_declared: false
                      is_checked_out: false
                      is_hipaa: false
                      is_restorable: true
                      iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                      last_user: ACASE
                      name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                        as Copy'
                      operator: ACASE
                      operator_description: Andrew Case
                      size: 419637
                      type: ACROBAT
                      version: 1
                      workspace_id: Active!9192
                      workspace_name: Labor Practice
                      wstype: document
                      wopi_file_size_limit: 300000000
                      wopi_file_size_warning: false
                    facets:
                      senders: []
                      types:
                      - alias: ANSI
                        count: 132
                        description: Windows Ansi Text
                      - alias: EML
                        count: 2
                        description: EML
                      - alias: ACROBAT
                        count: 1
                        description: Adobe Acrobat Reader
                  total_count: 302
                required:
                - data
                type: object
                properties: *id370
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/documents/search:
    description: |-
      None
    post:
      tags:
      - Multi-library Documents
  #- customers-{customerId}-documents-search
  #summary: POST /customers/{customerId}/documents/search
      summary: Search for global documents
      description: |
        Lists the documents returning the requested profile fields in addition to `id`, `wstype`.
      operationId: POST_customers_{customerId}_documents_search
      requestBody:
        content:
          application/json:
            schema:
              title: Document Search Request
              type: object
              properties: *id569
              example: *id570
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Post Document Search Response
                required:
                - data
                - overflow
                type: object
                properties: *id571
                example: *id572
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/documents/my-checked-out:
    description: |-
      None
    get:
      tags:
      - Multi-library Documents
  #- customers-{customerId}-documents-my-checked-out
  #summary: GET /customers/{customerId}/documents/my-checked-out
      summary: Get current user's checked-out documents
      description: |-
        Gets all the checked-out documents of the current user.
      operationId: GET_customers_{customerId}_documents_my-checked-out
      parameters:
      - *id004
      - *id573
      - *id011
      - *id006
      - *id007
      - name: type
        in: query
        description: |
          Specifies the file type of a document.<br><br>

          For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*.
          Each document is identified by a file type.
          File type associate documents with an applications.
          This value is not necessarily same as the file extension such as *doc*, *docx*, *pdf*, or *ppt*.<br><br>

          Multiple values may be specified using a comma-separated list. For example: `type=WORD,WORDX,WORDXT`
          The term is not case sensitive, and both *Word* and *word* match.
          There is no stemming and the wildcard character (&ast;) is not supported. Therefore, *acrob* or *acrob&#42;* do not match *acrobat*.<br><br>

          To retrieve a complete list of file types, see GET `/customers/{customerId}/libraries/{libraryname}/types`.<br>
          The complete list of file types can be viewed in iManage Control Center by selecting **Metadata > File Types**.
        schema:
          type: string
          example: type=WORD
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T04:22:10-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: public
                    document_number: 105895
                    edit_date: '2016-12-02T04:34:17-05:00'
                    edit_profile_date: '2016-12-02T04:34:17-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:19:50-05:00'
                    file_edit_date: '2016-12-02T04:34:29-05:00'
                    has_attachment: false
                    id: Active!105895.2
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                    last_user: ACASE
                    name: microsoft_manual_of_style_fourth_edition_Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 10003063
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T04:00:23-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105892
                    edit_date: '2016-12-02T04:10:19-05:00'
                    edit_profile_date: '2016-12-02T04:10:20-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:02:16-05:00'
                    file_edit_date: '2016-12-02T04:02:16-05:00'
                    has_attachment: false
                    id: Active!105892.2
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                    last_user: ACASE
                    name: ACME 2014 Audit Engagement Contract (1) Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 422553
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T00:27:24-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105893
                    edit_date: '2016-12-02T00:28:30-05:00'
                    edit_profile_date: '2016-12-02T00:28:30-05:00'
                    extension: pdf
                    file_create_date: '2016-11-29T14:15:18-05:00'
                    file_edit_date: '2016-11-29T14:15:18-05:00'
                    has_attachment: false
                    id: Active!105893.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                    last_user: ACASE
                    name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                      as Copy'
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 419637
                    type: ACROBAT
                    version: 1
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  total_count: 302
                required:
                - data
                type: object
                properties: &id809
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.document'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    post:
      tags:
      - Multi-library Documents
  #- customers-{customerId}-documents-my-checked-out
  #summary: POST /customers/{customerId}/documents/my-checked-out
      summary: Scoped search for checked-out global documents
      description: |-
        Gets all the checked-out documents of the current user.
      operationId: POST_customers_{customerId}_documents_my-checked-out
      requestBody:
        content:
          application/json:
            schema:
              title: Checked Out Documents Request
              type: object
              properties: *id574
              example: *id575
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Checked Out Documents Response
                required:
                - data
                - overflow
                type: object
                properties: *id576
                example: *id577
        400: *id003
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/documents/checked-out:
    description: |-
      None
    get:
      tags:
      - Multi-library Documents
  #- customers-{customerId}-documents-checked-out
  #summary: GET /customers/{customerId}/documents/checked-out
      summary: Get global checked-out documents
      description: |-
        Gets all the checked-out documents.
      operationId: GET_customers_{customerId}_documents_checked-out
      parameters:
      - *id004
      - *id573
      - *id011
      - *id006
      - *id007
      - name: type
        in: query
        description: |
          Specifies the file type of a document.<br><br>

          For example, *Word*, *WordX*, *Acrobat*, *Powerpoint*.
          Each document is identified by a file type.
          File type associate documents with an applications.
          This value is not necessarily same as the file extension such as *doc*, *docx*, *pdf*, or *ppt*.<br><br>

          Multiple values may be specified using a comma-separated list. For example: `type=WORD,WORDX,WORDXT`
          The term is not case sensitive, and both *Word* and *word* match.
          There is no stemming and the wildcard character (&ast;) is not supported. Therefore, *acrob* or *acrob&#42;* do not match *acrobat*.<br><br>

          To retrieve a complete list of file types, see GET `/customers/{customerId}/libraries/{libraryname}/types`.<br>
          The complete list of file types can be viewed in iManage Control Center by selecting **Metadata > File Types**.
        schema:
          type: string
          example: type=WORD
      - name: user
        in: query
        description: |-
          Specifies the user ID of the checked out document.
        schema:
          type: string
          example: ACASE
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T04:22:10-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: public
                    document_number: 105895
                    edit_date: '2016-12-02T04:34:17-05:00'
                    edit_profile_date: '2016-12-02T04:34:17-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:19:50-05:00'
                    file_edit_date: '2016-12-02T04:34:29-05:00'
                    has_attachment: false
                    id: Active!105895.2
                    in_use: true
                    in_use_by: ACASE
                    is_declared: false
                    is_checked_out: true
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105895&&ver=2
                    last_user: ACASE
                    name: microsoft_manual_of_style_fourth_edition_Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 10003063
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T04:00:23-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105892
                    edit_date: '2016-12-02T04:10:19-05:00'
                    edit_profile_date: '2016-12-02T04:10:20-05:00'
                    extension: pdf
                    file_create_date: '2016-12-02T04:02:16-05:00'
                    file_edit_date: '2016-12-02T04:02:16-05:00'
                    has_attachment: false
                    id: Active!105892.2
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105892&&ver=2
                    last_user: ACASE
                    name: ACME 2014 Audit Engagement Contract (1) Doc Test
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 422553
                    type: ACROBAT
                    version: 2
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  - author: ACASE
                    author_description: Andrew Case
                    class: DOC
                    create_date: '2016-12-02T00:27:24-05:00'
                    custom1: '9999'
                    custom1_description: Firm General
                    custom2: '1045'
                    custom29: LABOR
                    custom29_description: Labor & Employment
                    custom2_description: Labor Section
                    database: Active
                    default_security: private
                    document_number: 105893
                    edit_date: '2016-12-02T00:28:30-05:00'
                    edit_profile_date: '2016-12-02T00:28:30-05:00'
                    extension: pdf
                    file_create_date: '2016-11-29T14:15:18-05:00'
                    file_edit_date: '2016-11-29T14:15:18-05:00'
                    has_attachment: false
                    id: Active!105893.1
                    in_use: false
                    is_declared: false
                    is_checked_out: false
                    is_hipaa: false
                    is_restorable: true
                    iwl: iwl:dms=AJUBALAW&&lib=Active&&num=105893&&ver=1
                    last_user: ACASE
                    name: 'ACME 2014 Audit Engagement Contract (1) Doc Test: Open
                      as Copy'
                    operator: ACASE
                    operator_description: Andrew Case
                    size: 419637
                    type: ACROBAT
                    version: 1
                    workspace_id: Active!9192
                    workspace_name: Labor Practice
                    wstype: document
                    wopi_file_size_limit: 300000000
                    wopi_file_size_warning: false
                  total_count: 302
                required:
                - data
                type: object
                properties: &id808
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Documents.document'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/directory-sync/users:
    description: |
      The directory sync APIs support bulk import of global users and groups for the customers into iManage Work system.<br><br>
      The directory sync runs regularly per the configured sync-schedule for the customer's directory-sync client application.
      During each such sync, only the affected records are added, updated, or disabled.<br>

      The directory sync client application first fetches hashes for all the Microsoft Active Directory users, groups, and group memberships from iManage.
      The hashes are encrypted values for the original user and group profile data. Then it calculates hashes for users, groups,
      and group memberships based on the current information in the customer’s identity provider (IDP) and the client application’s configuration.
      The directory sync client then compares the calculated hashes to the ones it retrieved from iManage in order to determine which users,
      groups, and group memberships need to be added, updated, or disabled. After determining the changes, it sends updates only for
      the affected users, groups, and group memberships to iManage Work.
    patch:
      tags:
      - Directory Sync Groups and Users
  #- customers-{customerId}-directory-sync-users
  #summary: PATCH /customers/{customerId}/directory-sync/users
      summary: Add or update global users
      description: |
        Submits a collection of users to be added or updated in iManage Work.
        The delete action is achieved by updating `allow_logon` as `false`.
      operationId: PATCH_customers_{customerId}_directory-sync_users
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                Collection of users to be added or updated.
              example:
              - allow_logon: true
                directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=andrew case,cn=users,dc=ajubalaw,dc=com
                email: acase@ajubalaw.com
                fax: 1-202-555-1075
                full_name: Andrew Case
                is_external: false
                location: United States
                preferred_library: REACTIVE
                phone: 1-202-555-1075
                photo_data: 7701DA387701DA387701DA38==
                id: ACASE
                user_id_ex: ACASE
                ds_hash: 11324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              - allow_logon: false
                directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDG
                email: ACTIVE_NRTADMIN@AJUBALAW.COM
                id: active_nrtadmin
                user_id_ex: active_nrtadmin
                ds_hash: 22324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              - allow_logon: true
                directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDH
                distinguished_name: cn=adam smith,cn=users,dc=ajubalaw,dc=com
                email: ASMITH@AJUBALAW.COM
                fax: 1-202-555-1075
                full_name: Adam Smith
                is_external: false
                location: United States
                preferred_library: REACTIVE
                phone: 1-202-555-1075
                photo_data: 7701DA387701DA387701DA38==
                id: ACASE
                user_id_ex: ACASE
                ds_hash: 33324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              - allow_logon: false
                directory_id: ''
                email: REACTIVE_ADMIN@AJUBALAW.COM
                id: reactive_nrtadmin
                user_id_ex: reactive_nrtadmin
                ds_hash: 44324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
              type: array
              items: &id1565
                required:
                - directory_id
                - ds_hash
                type: object
                properties:
                  directory_id:
                    type: string
                    description: |-
                      Specifies users based on directory IDs that are set by an organization's directory service.<br><br>
                      Multiple values can be included using a comma-separated list.
                  ds_hash:
                    type: string
                    description: |-
                      A hash calculated by the directory sync client application, based on the profile fields of the user entity in customer's identity provider (IDP).<br><br>Maximum length is 64.
                  id:
                    type: string
                    description: |
                      The user ID.<br><br>
                      This parameter is required if adding a user.
                      It is optional if updating a user.<br><br>
                      Maximum length is 64.
                  user_id_ex:
                    type: string
                    description: |
                      The user ID.<br><br>
                      This is the orginal value for the user's ID.
                      Its formatting can get changed to all upper case letters, and then assigned to `id`.<br><br>
                      This parameter is required if adding a user.<br>
                      It is optional if updating a user.<br><br>
                      Maximum length is 64.
                  full_name:
                    type: string
                    description: |-
                      Full name of the user. Null is allowed.<br><br>Maximum length is 254.
                    nullable: true
                  location:
                    type: string
                    description: |-
                      Geographical location of the user. Null is allowed.<br><br>Maximum length is 254.
                    nullable: true
                  phone:
                    type: string
                    description: |-
                      Phone number of the user. Null is allowed.<br><br>Maximum length is 32.
                    nullable: true
                  extension:
                    type: string
                    description: |-
                      Phone number extension of the user. Null is allowed.<br><br>Maximum length is 32.
                    nullable: true
                  allow_logon:
                    type: boolean
                    description: |
                      Specifies the user is allowed to sign in.<br><br>
                      If `true`, the user is allowed to sign in.<br>
                      If `false`, the user is not allowed to sign in.<br>
                      If omitted, the value is `false`.<br><br>
                      Required if adding a user.<br>
                      Optional if updating a user.
                  fax:
                    type: string
                    description: |-
                      Fax number of the user. Null is allowed.<br><br>Maximum length is 32.
                    nullable: true
                  email:
                    type: string
                    maxLength: 254
                  preferred_library:
                    type: string
                    description: |-
                      Specifies that only users whose `preferred_library` matches the provided value should be returned.<br><br>
                      If specified, returns only users whose preferred library is equal to the specified value.<br>
                      If omitted, returns users with any preferred library.

                      This search:<br>
                      * is case insensitive. For example: *ACTIVE_US* matches with *active_us*.<br>
                      * matches whole words. For example: *ACTIVE_* does not match with *ACTIVE_US*.<br>
                      * does not support the wildcard character (&ast;).<br><br>
                      A preferred library is user's default library. Each user is required to have one preferred library.
                      It stores user's preferred settings such as language preference
                      and default search form for iManage Work advanced search.

                      If a user's preferred library is switched to another, the preferences are reset.
                    nullable: true
                  user_domain:
                    type: string
                    description: |
                      Specifies  the fully qualified domain name for the user's directory service.

                      It is the metadata from LDAP server that determines the unit to which the user belongs to.
                      This information is mainly used by iManage system administrators.
                    nullable: true
                  user_nos:
                    type: integer
                    description: |-
                      Specifies the type of user.

                      The allowed values are:

                      | Value | Description |
                      | :-: | - |
                      | 2 | Virtual User |
                      | 6 | Enterprise user |
                  custom1:
                    type: string
                    description: |-
                      Alias for custom1 property.<br><br>Custom1 is parent of custom2 field. Null is allowed.<br><br>Maximum length is 254.
                    nullable: true
                  custom2:
                    type: string
                    description: |-
                      Alias of custom2 property.<br><br>Custom2 is child of custom1 field. Null is allowed.<br><br>Maximum length is 254.
                    nullable: true
                  custom3:
                    type: string
                    description: |-
                      Alias for custom3 property. Null is allowed.<br><br>Maximum length is 254.
                    nullable: true
                  distinguished_name:
                    type: string
                    description: |
                      Unique name of the user which represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.<br><br>
                      For example: cn=username,dc=example,dc=ajubalaw,dc=com.<br><br>
                      Maximum length: 254.<br>
                      The field supports null as a value.
                    nullable: true
                  is_external:
                    type: boolean
                    description: |
                      Specifies  the user is an external user.<br><br>
                      If `true`, the user is an external user.<br>
                      If `false`, the user is not an external user, also called a regular user.

                      For more information, see <a href="#overview--external-users"> External users</a>.
                    nullable: true
                  exch_autodiscover:
                    type: string
                    description: |-
                      Exchange server details of the user. Null is allowed.<br><br>Maximum length is 1024.
                    nullable: true
                  photo_data:
                    type: string
                    description: |-
                      A base-64 encoded string representation of the user's photo. Null is allowed.<br><br>Maximum size is 32kB.
                    nullable: true
                additionalProperties: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                  - directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDG
                  - directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDH
                  warnings:
                  - data:
                      allow_logon: false
                      directory_id: ''
                      email: REACTIVE_ADMIN@AJUBALAW.COM
                      id: reactive_nrtadmin
                      user_id_ex: reactive_nrtadmin
                      ds_hash: 44324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    code: NRC_INVALID_PARAM
                    error: Missing directory ID for AD user
                    field: directory_id
                required:
                - data
                type: object
                properties: *id578
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/directory-sync/users/hashes:
    description: |-
      None
    get:
      tags:
      - Directory Sync Groups and Users
  #- customers-{customerId}-directory-sync-users-hashes
  #summary: GET /customers/{customerId}/directory-sync/users/hashes
      summary: Get global users hashes
      description: |
        Gets the directory sync hashes for users with `allow_logon` as `true`. <br>
        (In future, the feature will allow getting hashes for all the users irrespective of `allow_logon` value).
      operationId: GET_customers_{customerId}_directory-sync_users_hashes
      parameters:
      - *id004
      - *id083
      - name: limit
        in: query
        description: |-
          Maximum number of user hashes to be returned.
        schema:
          type: integer
          default: 500
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 700daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 70024dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    allow_logon: true
                  - directory_id: 733daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 73324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    allow_logon: true
                  cursor: A1B2C3
                required:
                - data
                type: object
                properties: &id1564
                  data:
                    type: array
                    items:
                      required:
                      - directory_id
                      - ds_hash
                      - allow_logon
                      type: object
                      properties:
                        directory_id:
                          type: string
                          description: |-
                            Specifies users based on directory IDs that are set by an organization's directory service.<br><br>
                            Multiple values can be included using a comma-separated list.
                        ds_hash:
                          type: string
                          description: |-
                            SHA hash of fields for the user computed by the directory sync client
                        allow_logon:
                          type: boolean
                          description: |
                            Indicates users based on their `allow_logon` value.<br><br>
                            If `true`, returns users with `allow_logon` enabled.<br>
                            If `false`, returns users with `allow_logon` disabled.<br>
                            (The initial implementation only returns users with allow_logon is `true`.)
                      additionalProperties: true
                    description: |
                      A paginated collection containing directory ID and directory sync hash of all enabled ADFS managed users
                  cursor:
                    type: string
                    description: |
                      References the last user returned. It is set only if the server found more records to return than the request limit parameter and indicates that the
                      client must make an additional request to retrieve the remaining records.
                      The cursor is not set if the number of records on the server is less than the request limit.

                      For more information, see <a href="#overview--pagination">Pagination</a>.

        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/directory-sync/groups:
    patch:
      tags:
      - Directory Sync Groups and Users
  #- customers-{customerId}-directory-sync-groups
  #summary: PATCH /customers/{customerId}/directory-sync/groups
      summary: Add or update global groups
      description: |
        Submits a collection of groups to be added or updated in iManage Work.
        The delete action is achieved by updating the group status as `enabled=false`.
      operationId: PATCH_customers_{customerId}_directory-sync_groups
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                Collection of groups to be added or updated.
              example:
              - enabled: true
                directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 1,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 1
                is_external: false
                id: group 1
                ds_hash: 11324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: false
                directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 2,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 2
                is_external: false
                id: group 2
                ds_hash: 22324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: true
                directory_id: 3301DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 3,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 3
                is_external: false
                id: group 3
                ds_hash: 33324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
              - enabled: false
                directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                full_name: Test group 4
                is_external: false
                id: group 4
                ds_hash: ''
                ds_members_hash: ''
              type: array
              items: *id579
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 1101DA38-C69C-462B-BEDB-9768FE59ADDF
                  - directory_id: 2201DA38-C69C-462B-BEDB-9768FE59ADDF
                  warnings:
                  - data:
                      enabled: true
                      distinguished_name: cn=group 3,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 3
                      is_external: false
                      id: group 3
                      ds_hash: 33324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                      ds_members_hash: 52324dba5fb0a3e26e83b2ac5b9e290e1b161e5c1fa74254e73043362938b982
                    code: NRC_INVALID_PARAM
                    error: Missing directory ID for AD group
                    field: directory_id
                  - data:
                      enabled: false
                      directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                      distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 4
                      is_external: false
                      id: group 4
                      ds_hash: ''
                      ds_members_hash: ''
                    code: NRC_INVALID_PARAM
                    error: Missing group hash value
                    field: ds_hash
                  - data:
                      enabled: false
                      directory_id: 4401DA38-C69C-462B-BEDB-9768FE59ADDF
                      distinguished_name: cn=group 4,cn=groups,dc=ajubalaw,dc=com
                      full_name: Test group 4
                      is_external: false
                      id: group 4
                      ds_hash: ''
                      ds_members_hash: ''
                    code: NRC_INVALID_PARAM
                    error: Missing group members hash value
                    field: ds_members_hash
                required:
                - data
                type: object
                properties: *id580
        400: *id003
        401: *id002
        403: *id001
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/directory-sync/groups/hashes:
    description: |-
      None
    get:
      tags:
      - Directory Sync Groups and Users
  #- customers-{customerId}-directory-sync-groups-hashes
  #summary: GET /customers/{customerId}/directory-sync/groups/hashes
      summary: Get global groups hashes
      description: |
        Gets the directory sync hashes for enabled groups. <br>
        (In future, the feature will allow getting hashes for all the groups regardless of whether they are enabled or not).
      operationId: GET_customers_{customerId}_directory-sync_groups_hashes
      parameters:
      - *id004
      - *id083
      - name: limit
        in: query
        description: |-
          Maximum number of group hashes to be returned. Default value is `500`.
        schema:
          type: integer
          default: 500
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 700daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 70024dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    ds_members_hash: 80024dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    enabled: true
                  - directory_id: 733daf0c-9c8c-4a4d-adee-79de6d0629ca
                    ds_hash: 73324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    ds_members_hash: 83324dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824
                    enabled: true
                  cursor: A1B2C3
                required:
                - data
                type: object
                properties: *id581
        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/directory-sync/groups/{groupAlias}/members:
    description: |-
      None
    get:
      tags:
      - Directory Sync Groups and Users
  #- customers-{customerId}-directory-sync-groups-{groupAlias}-members
  #summary: GET /customers/{customerId}/directory-sync/groups/{groupAlias}/members
      summary: Get global group members
      description: |-
        Gets a list of directory IDs of the users belonging to the specified group and customer.
      operationId: GET_customers_{customerId}_directory-sync_groups_{groupAlias}_members
      parameters:
      - *id004
      - *id083
      - name: limit
        in: query
        description: |-
          Maximum number of directory IDs to be returned.
        schema:
          type: integer
          default: 500
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - directory_id: 700daf0c-9c8c-4a4d-adee-79de6d0629ca
                  - directory_id: 733daf0c-9c8c-4a4d-adee-79de6d0629ca
                  cursor: A1B2C3
                required:
                - data
                type: object
                properties: *id582
        401: *id002
        403: *id001
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: groupAlias
      in: path
      description: |-
        The group alias.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/dialog-tokens:
    post:
      tags:
      - Dialog Tokens
  #- customers-{customerId}-dialog-tokens
  #summary: POST /customers/{customerId}/dialog-tokens
      summary: Create dialog token
      description: |
        Creates a temporary dialog token by using the X-Auth-Token.<br><br>
        This dialog token is for one-time use.
      operationId: POST_customers_{customerId}_dialog-tokens
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: POST Response
                required:
                - data
                type: object
                properties:
                  data:
                    required:
                    - dialog_token
                    type: object
                    properties:
                      dialog_token:
                        type: string
                        description: |-
                          The dialog token for partner application for one-time use.
                example:
                  data:
                    dialog_token: FKOauFMDcxADKO1646IuoNKolP2Rt-3bkeT-oiPaEzQ
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/dialog-tokens/{dialogToken}:
    description: |-
      None
    get:
      tags:
      - Dialog Tokens
  #- customers-{customerId}-dialog-tokens-{dialogToken}
  #summary: GET /customers/{customerId}/dialog-tokens/{dialogToken}
      summary: Get access token
      description: |
        Returns the access token associated with the specified dialog token. After a 200 response, the dialog token is no
        longer valid.
      operationId: GET_customers_{customerId}_dialog-tokens_{dialogToken}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: GET Response
                required:
                - data
                type: object
                properties:
                  data:
                    required:
                    - access_token
                    type: object
                    properties:
                      access_token:
                        type: string
                        description: |-
                          The access token associated with the provided dialog token.
                example:
                  data:
                    access_token: FKOauFMDcxADKO1646IuoNKolP2Rt-3bkeT-oiPaEzQ
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: dialogToken
      in: path
      required: true
      schema:
        type: string
        example: FKOauFMDcxADKO1646IuoNKolP2Rt-3bkeT-oiPaEzQ
  /work/api/v2/customers/{customerId}/customs:
    description: |
      Custom tables are used to store the customized properties for the content in an organization.<br> <br>
      These properties define the custom categories for identifying and differentiating the documents in a library.
      The properties can be classified and stored in 14 tables as custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.
      The custom1/custom2 and custom29/custom30 have parent-child relationships.<br><br>
      The captions for the custom properties be changed.
      For example, custom1 and custom2 can be captioned as Client and Matter respectively.
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/customs/{custom_table}:
    description: |-
      None
    parameters:
    - $ref: '#/components/parameters/customerId'
    - name: custom_table
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
  /work/api/v2/customers/{customerId}/customs/{custom_table}/recent:
    description: |
      Returns a list of aliases for the specified custom property that had recent activity.
    get:
      tags:
      - Recent Custom Properties
  #- customers-{customerId}-customs-{custom_table}-recent
  #summary: GET /customers/{customerId}/customs/{custom_table}/recent
      summary: Get custom property aliases with recent activity
      description: |
        Returns a list of custom property aliases that had recent activity.<br><br>
        The list is returned in descending order of the last activity date.<br>

        An alias is an entry for a custom property.
        For example, custom1 is captioned as Client.
        It has three entries of 001, 001abc, 001643, and 001HT76.
        Each of the entries is an alias, also referred to as an alias of Client.<br>

        For example, the following returns a list of aliases for custom1 that had any activity within the last three days:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/customs/custom1/recent?since_days=3`<br>
        and would return a response like:
        ```
        {
          "data": [
            {
              "activity_date": "2020-03-25T02:24:04Z",
              "database": "active",
              "description": "Pending cases",
              "enabled": true,
              "hipaa": true,
              "id": "001643",
              "wstype": "custom1"
            },
            {
              "activity_date": "2020-03-24T21:44:11Z",
              "database": "active",
              "description": "Purchase agreements",
              "enabled": true,
              "hipaa": false,
              "id": "001abc",
              "wstype": "custom1"
            }
          ]
        }
        ```

        The property pairings of Custom1/Custom2 and Custom29/Custom30 have a parent/child relationship
        That means each alias of custom1 and custom29 can themselves have aliases.
        Responses including custom2 and custom30 have an additional field, that of the parent ID.<br>

        For example, the following returns a list of aliases for custom2 that had any activity within the last ten days:<br>
        GET `https://www.ajubalaw.com/work/api/v2/customers/100/customs/custom2/recent?activity_date=-10:0d`<br>
        and would return a response like:
        ```
        {
            "data": [
                {
                    "activity_date": "2020-03-24T05:12:32Z",
                    "database": "active",
                    "description": "Purchase agreements - Pending",
                    "enabled": true,
                    "hipaa": true,
                    "id": "Pending",
                    "parent": {
                        "id": "001abc"
                    },
                    "wstype": "custom2"
                }
            ]
        }
        ```
      operationId: GET_customers_{customerId}_customs_{custom_table}_recent
      parameters:
      - *id004
      - name: activity_date
        in: query
        description: |
          Specifies aliases with an activity date between two dates.<br><br>
          Format = [begin]:[end][time unit type of 'd' for days, 'm' for months, 'y' for years].
          If neither `activity_date` nor `since_days` is specified, then all activities from the item's history of the last 30 days are returned.
        schema:
          pattern: ^(([-+]?\d+)([dDwWmMyY])?(:([-+]?(\d+)))([dDwWmMyY]))|(([-+]?\d+)([dDwWmMyY])(:([-+]?(\d+)))([dDwWmMyY])?)|^([-+]?\d+[dDwWmMyY])$
          type: string
          example: -30:0d
      - *id028
      - *id011
      - *id006
      - name: since_days
        in: query
        description: |
          Specifies aliases with an activity within the last number of days.<br><br>
          For example, `since_days=15` returns aliases that have been acted on within the last 15 days.
          This value is ignored if `activity_date` is specified.
          If neither `activity_date` nor `since_days` is specified, then all activities from the item's history of the last 30 days are returned.
        schema:
          type: integer
          default: 30
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - activity_date: '2017-04-20T15:28:19Z'
                    database: Active
                    description: Hewlett-Packard Inc
                    enabled: true
                    id: '1086'
                  - activity_date: '2017-04-20T13:18:24Z'
                    database: Active
                    description: Paccar
                    enabled: true
                    id: '1232'
                  - activity_date: '2017-04-20T13:18:24Z'
                    database: Active
                    description: Alpha Corporation
                    enabled: true
                    id: '2093'
                  - activity_date: '2017-04-20T12:32:31Z'
                    database: Active
                    description: ACME
                    enabled: true
                    id: '0999'
                  - activity_date: '2017-04-19T21:51:55Z'
                    database: Active
                    description: 3COM Corporation
                    enabled: true
                    id: '1022'
                  - activity_date: '2017-04-17T17:02:15Z'
                    database: Active
                    description: Apple Computer Inc
                    enabled: true
                    id: '1017'
                required:
                - data
                type: object
                properties: &id1631
                  data:
                    type: array
                    items:
                      required:
                      - id
                      - enabled
                      - activity_date
                      - database
                      type: object
                      properties:
                        id:
                          type: string
                          description: |-
                            Indicates the name of the alias for the custom property.
                        description:
                          type: string
                          description: |-
                            Indicates additional information about the alias for the custom property.
                        enabled:
                          type: boolean
                          description: |
                            Indicates if the alias for the custom property is enabled.<br><br>
                            If `true`, the alias for the custom property is enabled.<br>
                            If `false`, the alias for the custom property is not enabled.
                        activity_date:
                          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                          type: string
                          description: |
                            Indicates the date (in ISO 8601 format) when the latest activity was performed on the custom property.
                        database:
                          type: string
                          description: |-
                            Indicates the library of the custom property.
                          example: active
                        parent:
                          required:
                          - id
                          type: object
                          properties:
                            id:
                              type: string
                          description: |
                            Indicates the alias for the parent custom property.<br><br>
                            Required when `custom_table` is custom2 or custom30.
                      additionalProperties: true
                      description: |-
                        Describes a custom property.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
                additionalProperties: false
        400: *id003
        401: *id002
    parameters:
    - $ref: '#/components/parameters/customerId'
    - name: custom_table
      in: path
      description: |-
        The custom property ID.
      required: true
      schema:
        type: string
        example: custom3
  /work/api/v2/customers/{customerId}/apps:
    get:
      tags:
      - Apps
     #- customers-{customerId}-apps
      summary: Get registered apps
      description: |-
        Lists all the applications registered on iManage Work Server.
      operationId: GET_customers_{customerId}_apps
      parameters:
      - *id004
      - name: host_app_id
        in: query
        description: |-
          An application's host app ID.
        schema:
          type: string
      - *id011
      - name: name
        in: query
        description: |
          Filters the applications based on `name` field.
          The search term must fully match the name.
          A wildcard (the asterisk character \*) may be used to complete the sequence before and/or after the search term.
        schema:
          type: string
      - *id006
      - name: status
        in: query
        description: |
          The status of an app.<br><br>
          Multiple statuses can be included using a comma-separated list.
          The values are case sensitive. The following are allowed values:
          * **available**: The application is available and can be enabled by the customer.
          * **disabled**: The application is added to the customer's account, but is not currently enabled for use.
          * **enabled**: The application is enabled for the customer.
        schema:
          $ref: '#/components/schemas/Apps.appStatus'
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id630
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apps.appWithHal'
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        401: *id002
    post:
      tags:
      - Apps
    #- customers-{customerId}-apps
  #summary: POST /customers/{customerId}/apps
      summary: Register an app
      description: |-
        Registers an application that does not yet have an OAuth2 client ID.
      operationId: POST_customers_{customerId}_apps
      requestBody:
        content:
          application/json:
            schema:
              required: &id627
              - name
              - status
              properties: &id628
                status: &id587
                  $ref: '#/components/schemas/Apps.appStatus'
                host_app: &id588
                  required:
                  - id
                  type: object
                  properties:
                    id:
                      type: string
                      description: |
                        ID of the app that hosts the extension.

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                  description: |-
                    If the item is an extension, then host app is required. For app, this object must not be provided.
                default_security: &id589
                  $ref: '#/components/schemas/Apps.defaultSecurity'
                oauth: &id590
                  $ref: '#/components/schemas/Apps.oauthWithoutClientIdIssuedAt'
                name: &id583
                  type: string
                  description: |
                    Unique name of the app.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                description: &id584
                  type: string
                  description: |
                    Description of the app.

                    Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                publisher: &id585
                  type: object
                  properties:
                    name:
                      type: string
                      description: |
                        Name of the organization publishing the app.

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                    url:
                      description: |
                        Web address of the publisher.

                        Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
                      title: URL
                      type: string
              type: object
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id586
                  data:
                    required:
                    - name
                    - status
                    - edit_date
                    - _links
                    properties: &id626
                      id:
                        $ref: '#/components/schemas/Apps.appId'
                      oauth:
                        $ref: '#/components/schemas/Apps.oauth'
                      edit_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Date and time when the extension was edited.
                      _links:
                        $ref: '#/components/schemas/Apps.appHal'
                      status: &id622
                        $ref: '#/components/schemas/Apps.appStatus'
                      host_app: &id623
                        required:
                        - id
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              ID of the app that hosts the extension.
                        description: |-
                          If the item is an extension, then host app is required. For app, this object must not be provided.
                      default_security: &id624
                        $ref: '#/components/schemas/Apps.defaultSecurity'
                      type: &id625
                        enum:
                        - external
                        - internal
                        - internal_host
                        type: string
                        description: |
                          Type of the app.<br><br>
                          The following are allowed values:
                          * **external**: A third-party app (default).
                          * **internal**: An iManage app (reserved for iManage use only).
                          * **internal_host**: An iManage app that hosts other apps (reserved for iManage use only).
                      name: *id583
                      description: *id584
                      publisher: *id585
                    type: object
        400: *id003
        401: *id002
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
  /work/api/v2/customers/{customerId}/apps/{appId}:
    description: |-
      None
    get:
      tags:
      - Apps
    # - customers-{customerId}-apps-{appId}
  #summary: GET /customers/{customerId}/apps/{appId}
      summary: Get app details
      description: |-
        Gets the details of an app by appID.
      operationId: GET_customers_{customerId}_apps_{appId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id586
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}
  #summary: PUT /customers/{customerId}/apps/{appId}
      summary: Register and update an app
      description: |
        * Registers an app with a pre-existing OAuth2 client ID.
        * Updates an application.
      operationId: PUT_customers_{customerId}_apps_{appId}
      requestBody:
        content:
          application/json:
            schema:
              properties: &id591
                id:
                  $ref: '#/components/schemas/Apps.appId'
                status: *id587
                host_app: *id588
                default_security: *id589
                oauth: *id590
                name: *id583
                description: *id584
                publisher: *id585
              required: &id592
              - name
              - status
              type: object
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id586
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}
  #summary: DELETE /customers/{customerId}/apps/{appId}
      summary: Delete an app
      description: |-
        Deletes a third-party application.
      operationId: DELETE_customers_{customerId}_apps_{appId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        401: *id002
        404: *id005
      parameters:
      - *id004
    patch:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}
  #summary: PATCH /customers/{customerId}/apps/{appId}
      summary: Update app configuration
      description: |
        Updates an application's configuration.<br><br>
        If an application's `status` is set to `available`, the customer's current security and settings configurations for that application are deleted.
      operationId: PATCH_customers_{customerId}_apps_{appId}
      requestBody:
        content:
          application/json:
            schema:
              properties: *id591
              required: *id592
              type: object
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: *id586
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/apps/{appId}/status:
    description: |-
      None
    patch:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-status
  #summary: PATCH /customers/{customerId}/apps/{appId}/status
      summary: Update app status
      description: |-
        Updates the status of an application. The valid values for status are `available`, `enabled` or `disabled`.
      operationId: PATCH_customers_{customerId}_apps_{appId}_status
      requestBody:
        content:
          application/json:
            schema:
              required:
              - status
              type: object
              properties: &id615
                status:
                  enum:
                  - available
                  - disabled
                  - enabled
                  type: string
                  description: |
                    The status of an app.<br><br>
                    Multiple statuses can be included using a comma-separated list.
                    The values are case sensitive. The following are allowed values:
                    * **available**: The application is available and can be enabled by the customer.
                    * **disabled**: The application is added to the customer's account, but is not currently enabled for use.
                    * **enabled**: The application is enabled for the customer.
              description: |-
                Status of an application.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/apps/{appId}/security:
    description: |-
      None
    get:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-security
  #summary: GET /customers/{customerId}/apps/{appId}/security
      summary: Get app security
      description: |
        Lists the ACLs and default security of an application.<br><br>
        This request returns an error if the application has not been added to a customer account by setting its status to `disabled` or `enabled`.
      operationId: GET_customers_{customerId}_apps_{appId}_security
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id633
                  data:
                    required:
                    - default_security
                    - trustees
                    type: object
                    properties:
                      default_security:
                        $ref: '#/components/schemas/Apps.defaultSecurity'
                      trustees:
                        type: array
                        items:
                          required:
                          - type
                          - id
                          - name
                          type: object
                          properties:
                            type:
                              $ref: '#/components/schemas/Apps.trusteeType'
                            id:
                              $ref: '#/components/schemas/Apps.trusteeId'
                            name:
                              type: string
                              description: |-
                                The user or group's name.
                  total_count:
                    type: integer
                    description: |
                      Indicates the total number of items found.<br>
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
      - *id011
      - *id006
      - *id007
    patch:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-security
  #summary: PATCH /customers/{customerId}/apps/{appId}/security
      summary: Update app security
      description: |
        Adds or removes the ACLs and default security of an application.<br><br>
        This request returns an error if the application has not been added to a customer account by setting its status to `disabled` or `enabled`.
      operationId: PATCH_customers_{customerId}_apps_{appId}_security
      requestBody:
        content:
          application/json:
            schema:
              required:
              - trustees
              type: object
              properties: &id636
                default_security:
                  $ref: '#/components/schemas/Apps.defaultSecurity'
                trustees:
                  type: object
                  properties:
                    add:
                      type: array
                      items:
                        $ref: '#/components/schemas/Apps.securityPatchRequestItem'
                    remove:
                      type: array
                      items:
                        $ref: '#/components/schemas/Apps.securityPatchRequestItem'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        400: *id003
        401: *id002
        403: *id001
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/apps/{appId}/package:
    description: |-
      A collection of files that form the application.
    get:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-package
  #summary: GET /customers/{customerId}/apps/{appId}/package
      summary: Download an app
      description: |-
        Downloads an application package.
      operationId: GET_customers_{customerId}_apps_{appId}_package
      responses:
        200:
          description: ''
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  The file name of a package.
                example: |
                  Content-Disposition: attachment; filename="package.zip"
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Size of a package in bytes.
                example: |
                  Content-Length: 5678
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  MIME type of a package.
                example: |
                  Content-Type: application/zip
          content:
            application/octet-stream:
              schema:
                type: string
        401: *id002
        404: *id005
      parameters:
      - *id004
    put:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-package
  #summary: PUT /customers/{customerId}/apps/{appId}/package
      summary: Update an app
      description: |-
        Uploads an application package.
      operationId: PUT_customers_{customerId}_apps_{appId}_package
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - package
              properties:
                package:
                  type: string
                  description: |-
                    The file to upload. This part should contain Content-Disposition, Content-Length, and Content-Type headers.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                description: This can be any type
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/apps/{appId}/extensions:
    description: |-
      None
    get:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-extensions
  #summary: GET /customers/{customerId}/apps/{appId}/extensions
      summary: Get current user's apps
      description: |-
        ## GET customers/{customerId}/apps/{appId}/extensions
        Lists extensions available to the current user for the host-app referenced by appId in the URI.
      operationId: GET_customers_{customerId}_apps_{appId}_extensions
      parameters:
      - *id004
      - *id011
      - name: name
        in: query
        description: |
          Filters extensions based on the `name` field.
          The search term must fully match the name.
          A wildcard (the asterisk character \*) may be used to complete the sequence before and/or after the search term.
        schema:
          type: string
      - *id006
      - *id007
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id631
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apps.extensionsResponseItem'
        401: *id002
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /work/api/v2/customers/{customerId}/apps/{appId}/auth-info:
    description: |-
      None
    get:
      tags:
      - Apps
  #- customers-{customerId}-apps-{appId}-auth-info
  #summary: GET /customers/{customerId}/apps/{appId}/auth-info
      summary: Get a signed JWT using current user’s information.
      description: |
        Returns a JSON Web Token (JWT) signed with a private key, using the current user’s information.<br><br>
        The JWT retrieved using this request can be provided as credentials to authenticate the bearer in a third-party application, if the application trusts iManage Work.<br><br>
        The JWT always includes the standard claims: `sub`, `aud`, `iss`, `exp`, and `iat`.
        Additionally, this request accepts third-party application settings that can be embedded into the JWT as supplement claims, or returned in the response along with the JWT.<br><br>
        The public key to verify the signature of the JWT can be found using GET https://{hostname}/auth/jwks.<br><br>
        Generated JWT expires in 30 seconds.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To understand the difference between a library-level override value and a default value in context, see <a href="#get-/work/api/v2/customers/-customerId-/settings/-appId-/-settingId-">GET /work/api/v2/customers/{customerId}/settings/{appId}/{settingId}</a>. This request returns the default values as well as any library-level override values if they exist.
      operationId: GET_customers_{customerId}_apps_{appId}_auth-info
      parameters:
      - *id004
      - name: jwt_claims
        in: query
        description: |-
          A comma-separated list of application settings, that is embedded into the JWT.

          For the successful execution of this request:
            * All the settings provided in the request must exist.
            * Each of the settings must be of the type as `value`.

          If an unrecognized or unsupported setting is provided in the request, the HTTP 400 error occurs.
        schema:
          description: needs defining
      - name: library
        in: query
        required: false
        description: |-
          If a library name is passed, library-level overrides of the requested settings are returned.<br>
          If any of the requested settings do not have an override for the specified library, the default value is returned.
        schema:
          type: string
      - name: settings
        in: query
        description: |-
          A comma-separated list of application settings, that is returned in the settings field of the response along with the JWT.

          For the successful execution of this request:
            * All the settings provided in the request must exist.
            * Each of the settings must be of the type as `value`.

          If an unrecognized or unsupported setting is provided in the request, the HTTP 400 error occurs.
        schema:
          description: needs defining
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - data
                type: object
                properties: &id634
                  data:
                    required:
                    - jwt
                    - settings
                    type: object
                    properties:
                      jwt:
                        type: string
                        description: |
                          Generated JWT. Claims included are:
                          * sub: Email of the current user
                          * iss: Indicates the fully qualified domain name of the JWT issuer. For example: www.ajubalaw.com.
                          * aud: ID of the application, which the current user was authorized for
                          * iat: JWT generation epoch time
                          * exp: JWT expiration epoch time (30 seconds past *iat*)
                          * all the application settings that were requested through the `jwt_claims` request parameter
                      settings:
                        type: object
                        additionalProperties: true
                        description: |-
                          Map of settings and their values, which were requested to be sent alongside the JWT.
                example: &id635
                  data:
                    jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9eyJzdWIiOiJzb21lLWN1c3RvbWVyQGltYW5hZ2UuY29tIiwiYXVkIjoic29tZS1hcHAtaWQiLCJpc3MiOiJhdGxkZXYxLmltYW5hZ2VsYWJzLmNvbSIsImFwcF9zZXR0aW5ncy5jb21wYW55X2lkIjoic29tZS1jb21wYW55LWlkIiwiZXhwIjoxNTczNDk1ODE4LCJpYXQiOjE1NzM0OTU3ODh9.aI_TVAc3MNwdcqTA0grsOgHO1kE7FxQeV5BUj21Ck4Rl0MLupmM4yhjcvd1VDdjzOpo-FOIi-PtOsFZz6AKrMy4rqH-hEq1mKS2qswsGi4-eTke5X_RX3yrnotfWBD_yojAAikAliNVM62-GjVtmxD2ogYJ_DD68nXZ8-ROiIRbrXitZ2WJcP6NtsiLkqqNPFXkbZ8-xiFcy7ObnDO5fF7xlSGlPWdCzabFZR3YvzKKX_Ywh3ra6-iG8HBGe0XuMNjoVeDNfwy__4lGE4RdIVfIo4vIuYKW8w2zK7ZKzQHHPxcyXdqIsCNZ66RrY9lIYFRQavJDHF7XfB0qtSyXkng
                    settings:
                      domain: www-share.ajubalaw.com
        400: *id003
        401: *id002
        404: *id005
    parameters:
    - name: customerId
      in: path
      description: |
        The customer ID assigned to the customer.<br><br>
        The customer ID can be found in the discovery request GET `https://{hostname}/api`.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This unique value is permanently assigned to the iManage Work system and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        example: "100"
    - name: appId
      in: path
      description: |
        The application's AppId.
        This is from the `id` field from the application's *appsResponse* structure, and the application's *Client ID* profile field.
      required: true
      schema:
        type: string
  /platform/api/v2/customers/{customerId}/settings/system/domains:
    description: |-
      The domain APIs manage custom domain. Customers may designate a number of subdomains that extend the default domain name and make it specific to the customer.
      For example a customer name Ajuba Law may register the subdomain **ajuba** so they can access the system from `https://ajuba.cloudimange.com/..` instead of `https://cloudimange.com/..`
    get:
      tags:
      - Custom Domains
      #- customers-{customerId}-settings-system-domains
      #summary: GET /customers/{customerId}/settings/system/domains
      summary: Get all registered custom domains
      description: |-
        Gets all registered custom domains for the specified customer.

        If there are no registered custom domains for a customer, this request returns the response as 200 (Success) with an empty body.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        For more information on global roles and privileges, see the <a href="#tag--Global-Roles">Global Roles</a> collection.

      operationId: GET_customers_{customerId}_settings_system_domains
      parameters:
      - *id004
      - name: cursor
        in: query
        description: |+
          Specifies The cursor value to retrieve the next set of results.

          A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.

          If the cursor is not specified, it returns result set starting from the beginning.
          If the response returns a cursor value, it  can be passed in as a query parameter for the subsequent request to retrieve next set of results.
          <br>
          For more information, see <a href="#overview--pagination">Pagination</a>.

        schema:
          type: string
          example: BvHTjghYHffs
      - name: limit
        in: query
        description: |
          Specifies the maximum number of items to be returned in the response, regardless of the total number of items found.
          If the number of items in the result set is more than the limit, then only the number of items defined by the limit are returned.
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 25
          example: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - id: '9446646844'
                    customer_id: '100'
                    subdomain: ajubalaw
                    type: primary
                  - id: '9446646846'
                    customer_id: '100'
                    subdomain: ajb
                    type: secondary
                  - id: '9446646849'
                    customer_id: '100'
                    subdomain: ajuba
                    type: secondary
                title: Custom domains search response
                required:
                - data
                type: object
                properties: &id989
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Domains.domain'
                    description: |-
                      Array of custom domains registered for the customer.
        404: *id005
        403: *id001
        401: *id002
        400: *id003
    post:
      tags:
      - Custom Domains
      #- customers-{customerId}-settings-system-domains
      #summary: POST /customers/{customerId}/settings/system/domains
      summary: Create a new custom domain
      description: |
        Creates a new custom domain.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The request body accepts the `subdomain` name and its `type` that indicates if it is a primary of secondary domain.
        * The name of the subdomain must be gloabally unique.
        * The request fails with the error 409 (CONFLICT), if the subdomain already exists in the system.
        * Each customer can have a maxmimum of one primary domain and 9 secondary domains. If a request
          violates these maximum limits, the request fails with the error 400 (Bad Request).
        * There is no minimum limit for the number of domains.
        * The request to create a primary domain fails if one already exists.
        * The request to create a secondary domain fails if no primary domain exists.

      operationId: POST_customers_{customerId}_settings_system_domains
      requestBody:
        content:
          application/json:
            schema:
              example:
                subdomain: ajubalaw
                type: primary
              required:
              - subdomain
              - type
              title: Create a custom domain
              type: object
              properties: &id988
                subdomain:
                  type: string
                  pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$
                  minLength: 2
                  maxLength: 63
                  description: |-
                    Specifies the name of the custom subdomain. This value must be globally unique across the system.

                    The following are requirements for a custom subdomain name:
                    * The length must be between 2 to 63 characters.
                    * It can consist of lowercase letters between a-z, and numbers between 0-9.
                    * The hyphen character (-) is allowed. However, a hyphen is not allowed as the first or last character of the name.
                type:
                  type: string
                  enum:
                  - primary
                  - secondary
                  description: |-
                    Specifies the type of the custom subdomain. Only one domain can be designated as the primary domain.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    id: '9446646844'
                    customer_id: '100'
                    subdomain: ajubalaw
                    type: primary
                title: Single domain response
                required:
                - data
                type: object
                properties: &id593
                  data:
                    $ref: '#/components/schemas/Domains.domain'
        409: *id511
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /platform/api/v2/customers/{customerId}/settings/system/domains/{domainId}:
    description: |-
      None
    get:
      tags:
      - Custom Domains
      #- customers-{customerId}-settings-system-domains-{domainId}
      #summary: GET /customers/{customerId}/settings/system/domains/{domainId}
      summary: Get a registered custom domain
      description: |-
        Gets details of the specified custom domain ID.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * If a user does not have privileges to view custom domains, the request fails with a 403 (FORBIDDEN) error.
        * If the specified `id` does not exist, the request fails with a 404 (NOT_FOUND) error.
      operationId: GET_customers_{customerId}_settings_system_domains_{domainId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Single domain response
                required:
                - data
                type: object
                properties: *id593
                example: &id594
                  data:
                    id: '9446646844'
                    customer_id: '100'
                    subdomain: ajubalaw
                    type: primary
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    patch:
      tags:
      - Custom Domains
      #- customers-{customerId}-settings-system-domains-{domainId}
      #summary: PATCH /customers/{customerId}/settings/system/domains/{domainId}
      summary: Update a custom domain
      description: |
        Updates a custom domain.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role that has Settings Management privilege.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * The name of the subdomain must be gloabally unique.
        * The request fails with an error if the subdomain already exists in the system.
        * Each customer can have a maxmimum of one primary domain and 9 secondary domains. If a request violates these maximum limits, the request fails.
        * There is no minimum limit for the number of domains.
        * If this request specifies to update a secondary domain to primary, it becomes primary and the current primary domain becomes secondary.
        * The request fails if there is only one existing domain (primary domain) that is attempted to be updated as a secondary domain.

      operationId: PATCH_customers_{customerId}_settings_system_domains_{domainId}
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: '9446646844'
                type: primary
              title: Update a custom domain
              type: object
              properties: &id990
                subdomain:
                  type: string
                  pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$
                  minLength: 2
                  maxLength: 63
                  description: |-
                    Specifies the name of the custom subdomain. The value must be globally unique across the system.
                    The name must be be between 2 and 63 characters in length and may only consist of lowercase letters (a-z),
                    numbers (0-9) and the hyphen character ('-'). A hyphen is not allowed as the first or last character of the name.
                type:
                  type: string
                  enum:
                  - primary
                  - secondary
                  description: |-
                    Specifies the type of domain. Exactly one domain must be designated as primary.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Single domain response
                required:
                - data
                type: object
                properties: *id593
                example: *id594
        409: *id511
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    delete:
      tags:
      - Custom Domains
      #- customers-{customerId}-settings-system-domains-{domainId}
      #summary: DELETE /customers/{customerId}/settings/system/domains/{domainId}
      summary: Delete a custom domain
      description: |
        Deletes a custom domain.

        The request fails with an error if the specified `domainId` is not a valid domain in the system.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        The global privilege required to execute this request: Settings Management.<br>
        That means, a user must be assigned to a global role that has Settings Management privilege.

      operationId: DELETE_customers_{customerId}_settings_system_domains_{domainId}
      responses:
        204:
          description: ''
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/domainId'

  /platform/api/v2/auth/external-auth-types:
    get:
      tags:
      - External Authentication Types
     #- auth-external-auth-types
      summary: Get all supported external authentication types
      description: |
        Returns a list of all supported external authentication types.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        This request is available for specific environments.<br>
        Prior to executing this request, check&nbsp;<a href="#get-/work/api/v2/customers/-customerId-/features">GET `/customers/{customerId}/features`</a>.<br>
        If `global_users` is `true`, this request is available in your environment.

      operationId: GET_auth_external_auth_types

      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: External Authentication Types Response
                required:
                - data
                type: object
                properties: &id1110
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExternalAuthTypes.authType'
                    description: |-
                      Indicates the array of external authentication types supported by the server.
                example: &id1111
                  data:
                  - id: saml_idp_initiated
                  - id: saml
                    signature_alg: SHA-256
                    metadata: /auth/api/v1/customers/{customer_id}/saml/metadata
                    assertion_consumer_endpoint: /auth/api/v1/customers/{customer_id}/saml/login/callback
                    sp_logout_endpoint: /auth/api/v1/customers/{customer_id}/saml/idplogout/callback
                    name_id: User Id
                  - id: oidc
                  - id: explicit
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
  /platform/api/v2/auth/customers/{customerId}/saml/metadata:
    description: |-
      None
    get:
      tags:
      - SAML Service Provider Endpoints
     #- customers-{customerId}-saml-metadata
      summary: Download the SAML service provider (SP) metadata file
      description: |
        Downloads the SAML service provider (SP) XML metadata file that can be used to configure SP in the identity provider (IDP).

        Only applicable if SAML is supported by the environment.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: GET_customers_{customerId}_saml_metadata
      responses:
        200:
          description: ''
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the name of the service provider's (SP) metadata file.
                example: |
                  Content-Disposition: attachment; filename="Work_SPMetaData.xml"
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the size of the service provider's (SP) metadata file in bytes.
                example: |
                  Content-Length: 1234
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the MIME type of the service provider's (SP) metadata file.
                example: |
                  Content-Type: text/plain
          content:
            application/octet-stream:
              schema:
                type: string
        404: *id005
        403: *id001
        401: *id002
        400: *id003
  /platform/api/v2/auth/customers/{customerId}/saml/login/callback:
    description: |-
      None
    post:
      tags:
      - SAML Service Provider Endpoints
     #- customers-{customerId}-saml-login-callback
      summary: SAML service provider (SP) assertion consumer endpoint
      description: |
        Service provider's (SP) assertion consumer endpoint, to which the <saml:AuthnResponse> message must be posted by the identity provider (IDP).

        Only applicable if SAML is supported by the environment and the active external authentication type is SAML.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: POST_customers_{customerId}_saml_login_callback
      responses:
        302:
          description: 'Redirected to OAuth 2.0 authorization'

        404: *id005
        403: *id001
        401: *id002
        400: *id003
  /platform/api/v2/auth/customers/{customerId}/saml/idplogout/callback:
    description: |-
      None
    get:
      tags:
      - SAML Service Provider Endpoints
     #- customers-{customerId}-saml-idplogout-callback
      summary: SAML service provider (SP) logout endpoint
      description: |
        Service provider's (SP) single logout (SLO) endpoint, to which the `<saml:LogoutResponse>` and `<saml:LogoutRequest>` messages must be redirected by the identity provider (IDP).

        Only applicable if SAML is supported by the environment and the active external authentication type is SAML.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: GET_customers_{customerId}_saml_idplogout_callback
      responses:
        302:
          description: 'Redirected to OAuth 2.0 authorization'

        404: *id005
        403: *id001
        401: *id002
        400: *id003
    post:
      tags:
      - SAML Service Provider Endpoints
     #- customers-{customerId}-saml-idplogout-callback
      summary: SAML service provider (SP) logout endpoint
      description: |
        Service provider's (SP) single logout (SLO) endpoint, to which the `<saml:LogoutResponse>` and `<saml:LogoutRequest>` messages must be posted by the identity provider (IDP).

        Only applicable if SAML is supported by the environment and the active external authentication type is SAML.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: POST_customers_{customerId}_saml_idplogout_callback
      responses:
        302:
          description: 'Redirected to OAuth 2.0 authorization'

        404: *id005
        403: *id001
        401: *id002
        400: *id003
  /platform/api/v2/customers/{customerId}/settings/system/auth/external-auth-type:
    description: |-
      None
    get:
      tags:
      - External Authentication Settings
     #- customers-{customerId}-settings-system-auth-external-auth-type
      summary: Get the active external authentication type
      description: |-
        Gets the active external authentication type used by the Work Server. 

        This request may not be available for all environments.
        Prior to executing this request, execute GET `/customers/{customerId}/features` to check the value of `external_authentication_types` field.

        If `external_authentication_types` is `true`, this request is available.

      operationId: GET_customers_{customerId}_settings_system_auth_external_auth_type
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - id
                type: object
                properties: &id595
                  data:
                    properties:
                      id:
                        type: string
                        description: |-
                          Indicates the primary identifier for the external authentication type.
                additionalProperties: false
                example: &id596
                  data:
                    id: saml
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    put:
      tags:
      - External Authentication Settings
     #- customers-{customerId}--settings-system-auth-external-auth-type
      summary: Set the active external authentication type
      description: |-
        Sets the active external authentication type used by the environment. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        For environments that support the Global Roles feature, a user must be assigned to a global role that has the Auth Settings Management privilege.

        For environments that do not support the Global Roles feature, a user must be a member of the NRTADMIN group of the Web library.

        To determine whether an environment supports the Global Roles feature, execute GET `/customers/{customerId}/features`.
        If `global_users` is `true`, the environment supports the Global Roles feature.

      operationId: PUT_customers_{customerId}_settings_system_auth_external_auth_type
      requestBody:
        content:
          application/json:
            schema:
              required:
              - id
              type: object
              properties: &id1112
                id:
                  type: string
                  description: |-
                    Specifies the primary identifier for the external authentication type.
              additionalProperties: false
              example: &id1113
                id: saml
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                required:
                - id
                type: object
                properties: *id595
                additionalProperties: false
                example: *id596
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'

  /platform/api/v2/customers/{customerId}/settings/system/auth/saml-config:
    description: |-
      None
    get:
      tags:
      - External Authentication Settings
     #- customers-{customerId}-settings-system-auth-saml-config
      summary: Get the SAML authentication type settings
      description: |
        Gets the settings of the SAML authentication type.

        Only applicable if SAML is supported by the environment.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: GET_customers_{customerId}_settings_system_auth_saml_config
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: &id597
                  data:
                    properties:
                      require_signed_messages:
                        type: boolean
                        description: |
                          Indicates the service provider (SP) expects `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements to be signed.

                          If `true`, the `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements must be signed.<br>
                          If `false`, the `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements must not be signed.

                      require_signed_assertions:
                        type: boolean
                        description: |
                          Indicates the service provider (SP) expects `<saml:Assertion>` element to be signed.

                          If `true`, the `<saml:Assertion>` element must be signed.<br>
                          If `false`, the `<saml:Assertion>` element must not be signed.

                      enforce:
                        type: boolean
                        description: |
                          Indicates the `saml` authentication is enforced.

                          If `true`, all version of trusted (classic and Kerberos) and network login are blocked. Explicit login is available only for virtual users and is blocked for all other type of users.<br>
                          If `false`, all version of trusted (classic and Kerberos) and network login are not blocked.

                example: &id598
                  data:
                    require_signed_messages: true
                    require_signed_assertions: true
                    enforce: false
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    patch:
      tags:
      - External Authentication Settings
     #- customers-{customerId}-settings-system-auth-saml-config
      summary: Update the SAML authentication type settings
      description: |-
        Updates the settings of the SAML authentication type.

        Only applicable if SAML is supported by the environment.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        For environments that support the Global Roles feature, a user must be assigned to a global role that has the Auth Settings Management privilege.

        For environments that do not support the Global Roles feature, a user must be a member of the NRTADMIN group of the Web library.

        To determine whether an environment supports the Global Roles feature, execute GET `/customers/{customerId}/features`.
        If `global_users` is `true`, the environment supports the Global Roles feature.

      operationId: PATCH_customers_{customerId}_settings_system_auth_saml_config
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: &id1114
                require_signed_messages:
                  type: boolean
                  description: |
                    Specifies if the service provider (SP) expects `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements to be signed.

                    If `true`, the `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements must be signed.<br>
                    If `false`, the `<samlp:Response>`, `<samlp:LogoutRequest>` and `<samlp:LogoutResponse>` elements must not be signed.

                require_signed_assertions:
                  type: boolean
                  description: |
                    Specifies if the service provider (SP) expects `<saml:Assertion>` element to be signed.

                    If `true`, the `<saml:Assertion>` element must be signed.<br>
                    If `false`, the `<saml:Assertion>` element must not be signed.

                enforce:
                  type: boolean
                  description: |
                    Specifies if the `saml` authentication is enforced.

                    If `true`, all version of trusted (classic and Kerberos) and network login are blocked. Explicit login is available only for virtual users and is blocked for all other type of users.<br>
                    If `false`, all version of trusted (classic and Kerberos) and network login are not blocked.

              additionalProperties: false
              example: &id1115
                require_signed_messages: true
                require_signed_assertions: true
                enforce: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: *id597
                example: *id598
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'

  /platform/api/v2/customers/{customerId}/settings/system/auth/saml-idp-metadata:
    description: |-
      None
    get:
      tags:
      - External Authentication Settings
     #- customers-{customerId}-settings-system-auth-saml-idp-metadata
      summary: Download the SAML identity provider (IDP) metadata file
      description: |
        Downloads the SAML identity provider (IDP) XML metadata file.

        Only applicable if SAML is supported by the environment.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.

      operationId: GET_customers_{customerId}_settings_system_auth_saml_idp_metadata
      responses:
        200:
          description: ''
          headers:
            Content-Disposition:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the name of the identity provider's (IDP) metadata file.
                example: |
                  Content-Disposition: attachment; filename="AFDS_IDPMetaData.xml"
            Content-Length:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the size of the identity provider's (IDP) metadata file in bytes.
                example: |
                  Content-Length: 1234
            Content-Type:
              deprecated: false
              allowEmptyValue: false
              schema:
                description: |-
                  Indicates the MIME type of the identity provider's (IDP) metadata file.
                example: |
                  Content-Type: text/plain
          content:
            application/octet-stream:
              schema:
                type: string
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    put:
      tags:
      - External Authentication Settings
     #- customers-{customerId}-settings-system-auth-saml-idp-metadata
      summary: Upload a new SAML identity provider (IDP) metadata file
      description: |-
        Uploads a new SAML identity provider (IDP) XML metadata file. 

        Only applicable if SAML is supported by the environment.

        If SAML is not supported by the environment, error 404 (not found) is returned. 

        The list of supported external authentication types can be retrieved via the <a href="#get-/platform/api/v2/auth/external-auth-types">GET /platform/api/v2/auth/external-auth-types</a> request. However, this request may not be available for all environments. Before using it, execute <a href="#get-/work/api/v2/customers/-customerId-/features">GET /work/api/v2/customers/{customerId}/features</a> to check the value of `external_authentication_types` field. If `external_authentication_types` is `true`, this request is available.


        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        For environments that support the Global Roles feature, a user must be assigned to a global role that has the Auth Settings Management privilege.

        For environments that do not support the Global Roles feature, a user must be a member of the NRTADMIN group of the Web library.

        To determine whether an environment supports the Global Roles feature, execute GET `/customers/{customerId}/features`.
        If `global_users` is `true`, the environment supports the Global Roles feature.

      operationId: PUT_customers_{customerId}_settings_system_auth_saml_idp_metadata
      parameters:
      - name: Content-Disposition
        in: header
        schema:
          example: |
            Content-Disposition: form-data; name="file"; filename="AFDS_IDPMetaData.xml"
      - *id004
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: |-
                    The file content.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                description: |-
                  A JSON body without any properties.
        404: *id005
        403: *id001
        401: *id002
        400: *id003
    parameters:
    - $ref: '#/components/parameters/customerId'

  /platform/api/v2/customers/{customerId}/settings/system/ip-address-authorizations:
    get:
      tags:
      - IP Address Authorizations
      #- customers-{customerId}-settings-system-ip-address-authorizations
      #summary: GET /customers/{customerId}/settings/system/ip-address-authorizations
      summary: Get all registered IP address authorizations
      description: |-
        Lists all registered IP address authorizations for a given customer, ordered by id.

        If there are no IP address authorizations defined, this API returns a successful status with an empty result set.
        An empty authorizations list means that there are no restrictions.
      operationId: GET_customers_{customerId}_settings_system_ip_address_authorizations
      parameters:
      - *id004
      - name: cidr
        in: query
        description: |
          Specifies the search string to match IP address ranges in CIDR format. The search is performed using a "starts with" match.
        schema:
          type: string
          example: 10.198.255.1/24
      - name: cursor
        in: query
        description: |+
          Specifies The cursor value to retrieve the next set of results.

          A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.

          If the cursor is not specified, it returns result set starting from the beginning.
          If the response returns a cursor value, it  can be passed in as a query parameter for the subsequent request to retrieve next set of results.
          <br>
          For more information, see <a href="#overview--pagination">Pagination</a>.

        schema:
          type: string
          example: BvHTjghYHffs
      - name: limit
        in: query
        description: |
          Specifies the maximum number of items to be returned in the response, regardless of the total number of items found.
          If the number of items in the result set is more than the limit, then only the number of items defined by the limit are returned.
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 250
          example: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Get all IP address authorizations
                required:
                - data
                type: object
                properties: &id612
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IpAddressAuthorizations.ipAddressAuthorization'
                    description: |-
                      Array of IP address authorizations registered for the customer.
                  cursor:
                    type: string
                    description: |
                      Indicates The cursor value to retrieve the next set of results.

                      A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.

                      If the cursor is not specified, it returns result set starting from the beginning.
                      If the response returns a cursor value, it  can be passed in as a query parameter for the subsequent request to retrieve next set of results.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                example: &id613
                  data:
                  - id: '2223343222'
                    cidr: 145.13.46.21/24
                    type: ipv4
                    description: Chicago Office
                  - id: '2223343232'
                    cidr: 176.132.200.1/24
                    type: ipv4
                    description: London Office
                  - id: '2223343266'
                    cidr: 44.20.19.55/16
                    type: ipv4
                    description: Moscow Central
                  cursor: Bzy67eeW
        404: *id005
        403: *id001
        401: *id002
        400: *id003
    post:
      tags:
      - IP Address Authorizations
      #- customers-{customerId}-settings-system-ip-address-authorizations
      #summary: POST /customers/{customerId}/settings/system/ip-address-authorizations
      summary: Create a new IP Address Authorization
      description: |
        Creates an IP address authorization given an IP address range in CIDR format.

        The CIDR value must be unique per customer.
        Requests to create IP address authorization with a duplicate CIDR will be rejected.
      operationId: POST_customers_{customerId}_settings_system_ip_address_authorizations
      requestBody:
        content:
          application/json:
            schema:
              required:
              - type
              - cidr
              title: Create an IP address authorization
              type: object
              properties: &id611
                type:
                  type: string
                  enum:
                  - ipv4
                  description: |-
                    Specifies the type of IP address range to be authorized.
                    Currently, only Internet Protocol version 4 (ipv4) is supported.
                cidr:
                  type: string
                  minLength: 7
                  maxLength: 18
                  description: |-
                    Specifies the range of IP addresses to be authorized. The range is specified as an IP prefix using the CIDR format. The CIDR value must be unique per customer.
                description:
                  type: string
                  minLength: 0
                  maxLength: 256
                  description: |-
                    Specifies the description for the IP address authorization.
              additionalProperties: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                title: Single IP Address Authorization Response
                required:
                - data
                type: object
                properties: &id599
                  data:
                    $ref: '#/components/schemas/IpAddressAuthorizations.ipAddressAuthorization'
                example: &id600
                  data:
                    id: '2223343222'
                    cidr: 145.13.46.21/24
                    type: ipv4
                    description: Chicago Office
        409: *id511
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    delete:
      tags:
      - IP Address Authorizations
      #- customers-{customerId}-settings-system-ip-address-authorizations
      #summary: DELETE /customers/{customerId}/settings/system/ip-address-authorizations
      summary: Delete all IP address authorizations for a given customer.
      description: |
        Delete all IP address authorizations for a given customer.
      operationId: DELETE_customers_{customerId}_settings_system_ip_address_authorizations
      responses:
        204:
          description: ''
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
  /platform/api/v2/customers/{customerId}/settings/system/ip-address-authorizations/{authorizationId}:
    description: |-
      None
    get:
      tags:
      - IP Address Authorizations
     #- customers-{customerId}-settings-system-ip-address-authorizations-{authorizationId}
     #summary: GET /customers/{customerId}/settings/system/ip-address-authorization/{authorizationId}
      summary: Get a registered IP address authorization
      description: |-
        Gets the IP address authorization associated with the ID provided.

        Returns an error if the current user does not have privileges to view IP address authorizations or if the requested authorization does not exist.
      operationId: GET_customers_{customerId}_settings_system_ip_address_authorizations_{authorizationId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Single IP Address Authorization Response
                required:
                - data
                type: object
                properties: *id599
                example: *id600
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    patch:
      tags:
      - IP Address Authorizations
      #- customers-{customerId}-settings-system-ip-address-authorization-{authorizationId}
      #summary: PATCH /customers/{customerId}/settings/system/ip-address-authorization/{authorizationId}
      summary: Update an IP address authorization
      description: |
        Updates an IP address authorization.

        The IP address range (in CIDR format) must be unique per customer. The request will be rejected if the IP address range
        duplicates an existing entry for this customer.
      operationId: PATCH_customers_{customerId}_settings_system_ip_address_authorizations_{authorizationId}
      requestBody:
        content:
          application/json:
            schema:
              title: Update an IP address authorization
              type: object
              properties: &id614
                type:
                  type: string
                  enum:
                  - ipv4
                  description: |-
                    Specifies the type of IP address range to be authorized. Currently supports IPv4 only
                cidr:
                  type: string
                  minLength: 7
                  maxLength: 18
                  description: |-
                    Specifies the range of IP addresses to be authorized. The range is specified as an IP address prefix using the CIDR format. The CIDR value must be unique per customer.
                description:
                  type: string
                  nullable: true
                  minLength: 0
                  maxLength: 256
                  description: |-
                    A description for the IP address authorization
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Single IP Address Authorization Response
                required:
                - data
                type: object
                properties: *id599
                example: *id600
        409: *id511
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    delete:
      tags:
      - IP Address Authorizations
      #- customers-{customerId}-settings-system-ip-address-authorization-{authorizationId}
      #summary: DELETE /customers/{customerId}/settings/system/ip-address-authorization/{authorizationId}
      summary: Delete an IP Address Authorization
      description: |
        Deletes an IP address authorization.

        Returns an error if the id does not correspond to an existing authorization.
      operationId: DELETE_customers_{customerId}_settings_system_ip_address_authorizations_{authorizationId}
      responses:
        204:
          description: ''
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/authorizationId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tasks/{taskId}:
    description: |-
      None
    get:
      tags:
      - Asynchronous Task Framework
      summary: Get background task details
      description: |
        Gets the details of the specified background task.

        All the key properties of this background task are returned in the response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To execute this request, the user must be either the owner of the task or a member of the NRTADMIN group of the library.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_tasks_{taskId}

      parameters:
      - *id004
      - name: include_progress
        in: query
        description: |-
          Specifies whether to include the progress details in the response or not.

          If `true`, progress details of the task are returned in the response.<br>
          If `false`, progress details of the task are not returned in the response.
        required: false
        schema:
          type: boolean
          default: false
          example: true

      - name: include_request_payload
        in: query
        description: |-
          Specifies if the original request payload is to be included in the response.

          If `true`, the request payload is returned in the response.<br>
          If `false`, the request payload is not returned in the response.
        required: false
        schema:
          type: boolean
          default: false
          example: true

      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    app_id: 100
                    cancellation_comment: no more needed
                    cancelled_by:
                      full_name: Andrew Case
                      id: ACASE
                    comment: comment
                    create_date: '2007-08-16T20:10:51Z'
                    edit_date: '2007-08-16T20:15:51Z'
                    name: shred_that_doc
                    owner:
                      full_name: Andrew Case
                      id: ACASE
                    priority: 2
                    progress:
                      progress_percentage: 80
                      total_items_targeted: 100
                      items_succeeded: 80
                      items_failed: 0
                    request_payload: {}
                    results: {}
                    scheduled_date: '2007-08-16T20:10:51Z'
                    status: queued
                    type: 1
                  error:
                    code: NRC_NO_RECORD
                    code_message: not found
                  warnings:
                  - {}
                required:
                - data
                type: object
                description: Task details
                properties: &id601
                  data:
                    properties:
                      name:
                        type: string
                        description: |-
                          Indicates the name of the task provided by the user.
                      comment:
                        type: string
                        description: |-
                          Indicates the description of the task.
                      owner:
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the ID of the user who created the task.
                          full_name:
                            type: string
                            description: |-
                              Indicates the full name of the user who created the task.
                        description: |-
                          Indicates the user who created the task.
                      type:
                        type: integer
                        enum: [1, 2]
                        description: |-
                          Indicates the type of the task.
                      priority:
                        type: integer
                        description: |-
                          Indicates the system defined priority of the task.
                      create_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in the ISO 8601 format) when the task was created.
                      scheduled_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in the ISO 8601 format) when the task is scheduled to run.
                      edit_date:
                        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                        type: string
                        description: |-
                          Indicates the date (in the ISO 8601 format) when the task was last updated.
                      status:
                        type: string
                        enum: ["queued", "success", "failed", "cancelled", "aborted"]
                        description: |-
                          Indicates the current status of the task.

                          The following are available task status:

                          | Value     | Description                                       |
                          |-----------|---------------------------------------------------|
                          | queued    | Task is submitted and is in queue for processing. |
                          | success   | Task completed successfully.                      |
                          | failed    | Task has failed.                                  |
                          | cancelled | Task has been cancelled by a user.                |
                          | aborted   | Task was aborted by the system.                   |

                      app_id:
                        type: integer
                        description: |-
                          Indicates the ID corresponding to the application that initiated the task.
                      cancelled_by:
                        type: object
                        properties:
                          id:
                            type: string
                            description: |-
                              Indicates the ID of the user who cancelled the task.
                          full_name:
                            type: string
                            description: |-
                              Indicates the full name of the user who cancelled the task.
                        description: |-
                          Indicates the user who cancelled the task.
                      cancellation_comment:
                        type: string
                        description: |-
                          Indicates the reason for cancellation provided by the user.
                      request_payload:
                        type: object
                        description: |-
                          Indicates the request payload of the task. <br>
                          For example, request payload for bulk workspace creation.
                      progress:
                        type: object
                        description: |-
                          Indicates the progress information of the task.
                        properties:
                          progress_percentage:
                            type: integer
                            description: |-
                              Indicates the percentage of completion of the task.
                          total_items_targeted:
                            type: integer
                            description: |-
                              Indicates the total number of items targeted for processing by the task. <br>
                              For example, number of documents to targeted for bulk security update.
                          items_succeeded:
                            type: integer
                            description: |-
                              Indicates the total number of successfully processed items.
                          items_failed:
                            type: integer
                            description: |-
                              Indicates the total number of failed or aborted items.
                      results:
                        type: object
                        description: |-
                          Indicates the output information upon the successful completion of the task. <br>
                          For example, a bulk workspace creation task returns the newly created workspace IDs.
                  error:
                    type: object
                    description: Error details
                    properties:
                      code:
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.

                  warnings:
                    type: array
                    description: |-
                      An array of warning messages.

                additionalProperties: false
        401: *id002
        404: *id005
    patch:
      tags:
      - Asynchronous Task Framework
      summary: Updates the status of a background task.
      description: |
        Updates the status of the specified background task.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To execute this request, the user must be either the owner of the task or a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * Currently, the status of a task can only be updated to `cancelled`.
        * Only those tasks which are not in progress can be cancelled.
        * If the task is already in the cancelled state, the task details are returned and nothing is updated.<br>

      operationId: PATCH_customers_{customerId}_libraries_{libraryId}_tasks_{taskId}

      requestBody:
        content:
          application/json:
            schema:
              example:
                status: cancelled
                cancellation_comment: A new task will be created with modified values
              required:
              - status
              type: object
              properties: &id1666
                cancellation_comment:
                  type: string
                  description: |
                    Specifies any comment provided by the user while cancelling the task.
                status:
                  type: string
                  description: |
                    Specifies the status to be updated for the background task.

                    Currently, the possible value is `cancelled` that marks the task as cancelled.
                  example: "cancelled"
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                    app_id: 100
                    cancellation_comment: no more needed
                    cancelled_by:
                      full_name: Andrew Case
                      id: ACASE
                    comment: comment
                    create_date: '2007-08-16T20:10:51Z'
                    edit_date: '2007-08-16T20:15:51Z'
                    name: shred_that_doc
                    owner:
                      full_name: Andrew Case
                      id: ACASE
                    priority: 2
                    progress:
                      progress_percentage: 80
                      total_items_targeted: 100
                      items_succeeded: 80
                      items_failed: 0
                    request_payload: {}
                    results: {}
                    scheduled_date: '2007-08-16T20:10:51Z'
                    status: queued
                    type: 1
                  error:
                    code: NRC_NO_RECORD
                    code_message: not found
                  warnings:
                  - {}
                required:
                - data
                type: object
                description: Task details
                properties: *id601
                additionalProperties: false
        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    delete:
      tags:
      - Asynchronous Task Framework
      summary: Delete a background task
      description: |
        Deletes the specified background task.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        To execute this request, the user must be either the owner of the task or a member of the NRTADMIN group of the library.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        * Tasks that are in progress cannot be deleted.
        * Only those tasks can be deleted that have not yet started, or are already complete (with status as `succeeded`, `failed`, or `aborted`).

      operationId: DELETE_customers_{customerId}_libraries_{libraryId}_tasks_{taskId}

      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyJsonResponse'

        403: *id001
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: taskId
      in: path
      description: |-
        Specifies the ID of the background task.
      required: true
      schema:
        example: "10"


  /work/api/v2/customers/{customerId}/libraries/{libraryId}/tasks/{taskId}/results:
    description: |-
      None
    get:
      tags:
      - Asynchronous Task Framework
      summary: Get background task results
      description: |
        Gets the detailed outcome of the specified background task.

        For example, a bulk workspace creation task can return a list of workspace IDs of newly created workspaces.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
            To execute this request, the user must be either the owner of the task or a member of the NRTADMIN group of the library.

      operationId: GET_customers_{customerId}_libraries_{libraryId}_tasks_{taskId}_results

      parameters:
      - *id004
      - name: cursor
        in: query
        description: |-
          Specifies to begin the search from this cursor.<br><br>
          If omitted, the return set is from the beginning.<br>
          A new cursor value is returned on subsequent requests which points to the next record to start querying from.

        required: false
        schema:
          type: string
          example: 100

      - name: limit
        in: query
        description: |-
          Specifies the maximum number of items to be returned in the response.<br>
          The request returns either the actual number of items if there are fewer than or equal to the `limit` value, or the `limit` value if there are more items than the limit value.

        required: false
        schema:
          type: integer
          default: 100
          example: 25

      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - {}
                  cursor: '1'
                  error:
                    code: NRC_NO_RECORD
                    code_message: not found
                required:
                - data
                type: object
                properties: &id1686
                  data:
                    type: array
                    description: |-
                      Indicates the detailed outcome of the background task.
                    items:
                      type: object
                      description: |-
                        Object defined by the task.
                      properties:
                        id:
                          type: string
                          description: |-
                            The ID of the item.
                        status:
                          type: string
                          enum: ["succeeded", "skipped", "failed", "queued", "cancelled"]
                          description: |-
                            Indicates the current status of the item.<br><br>
                            The following are the possible values:

                            |Status|Description|
                            |:---|:---|
                            |succeeded|The item was processed successfully.|
                            |skipped|The item was skipped from processing.|
                            |failed|The item failed during processing.|
                            |queued|The item is in the queue for processing.|
                            |cancelled|The processing is cancelled for this item.|
                        additional_info:
                          type: array
                          description: |-
                            Additional information about the status of the item.
                          items:
                            type: string
                            description: |-
                              <br><br>The following are the possible values:

                              |Value|Description|Applicable Task Types|
                              |:---|:---|:---|
                              |does_not_inherit|This item is not set to inherit security.|Bulk Update Security (1)|
                              |exception|An exception has occurred.|Bulk Update Security (1)|
                              |invalid_id|The ID is of an invalid format.|Bulk Update Security (1)|
                              |multi_ref|This item is multi-referenced.|Bulk Update Security (1)|
                              |no_record|No record found for this ID.|Bulk Update Security (1)|
                              |private_object|This item is private and is not eligible for update.|Bulk Update Security (1)|
                              |insufficient_access|The user has insufficient access to modify this item's security.|Bulk Update Security (1)|
                              |no_update|This item did not require any security changes.|Bulk Update Security (1)|
                              |doc_in_use|This item is locked by another user.|Bulk Update Security (1)|

                              1. <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/containers/security/update-async">Bulk update container security</a>, <a href="#patch-/work/api/v2/customers/-customerId-/libraries/-libraryId-/documents/security/update-async">Bulk update document security</a>
                        error:
                          type: object
                          properties:
                            code:
                              type: string
                              description: |-
                                Indicates the error type.
                            code_message:
                              type: string
                              description: |-
                                Indicates the description of the error.
                  cursor:
                    type: string
                    description: |-
                      Indicates the cursor value to retrieve the next set of results.<br>
                      A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.<br>
                      If the response returns a cursor value, it  can be passed in as a query parameter for the subsequent request to retrieve the next set of results.

                      For more information, see <a href="#overview--pagination">Pagination</a>.
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: |-
                          Indicates the error type.
                      code_message:
                        type: string
                        description: |-
                          Indicates a description of the error.

                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: taskId
      in: path
      description: |-
        Specifies the ID of a background task.
      required: true
      schema:
        type: string
        example: "10"


  /work/api/v2/customers/{customerId}/libraries/{libraryId}/documents/shred-async:
    description: |-
      None
    post:
      tags:
      - Documents
      summary: Shred a list of documents
      description: |-
        Creates an asynchronous task to delete documents and all the related data.

        This endpoint is particularly useful for compliance purposes to eliminate all data related to a document, 
        and to reduce storage usage in iManage Work.

        This request starts a new asynchronous task and returns its `task_id`.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        Only `NRTADMIN` and `IRM Service` customer users may execute this request.

        <font style="color:black;font-size: 15px;font-weight: bold;">Feature availability </font><br>
        Prior to executing this request, check GET `/customers/{customerId}/features`.<br>
        If `shred_document_async` is `true`, this request is available.

        <font style="color:black;font-size: 15px;font-weight: bold;">Related requests</font><br>
        * To view the status of this task, execute <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-">GET /customers/{customerId}/libraries/{libraryId}/tasks/{taskId}</a>
        * To view the results of each shredded document, execute <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/tasks/-taskId-/results">GET /customers/{customerId}/libraries/{libraryId}/tasks/{taskId}/results</a>

      operationId: POST_customers_{customerId}_libraries_{libraryId}_documents_shred_async
      requestBody:
        content:
          application/json:
            schema:
              example:
                document_ids:
                - ACTIVE_US!1.1
                - ACTIVE_US!2.1
                - ACTIVE_US!2.2
              required:
              - document_ids
              type: object
              properties: &id1688
                document_ids:
                  type: array
                  items:
                    type: string
                  description: |-
                    Specifies the collection of document IDs to be shredded. All documents must be in the same library.
              additionalProperties: false
      responses:
        200:
          description: |-
            The new task to shred documents started successfully.
          content:
            application/json:
              schema:
                example:
                  data:
                    task_id: c5c7b85f-55b1-329a-a830-47fafcfae4dc
                required:
                - data
                type: object
                properties: &id1689
                  data:
                    required:
                    - task_id
                    type: object
                    properties:
                      task_id:
                        type: string
                        description: |-
                          Indicates the task ID of the new task to be used to check its status.
        400: *id003
        401: *id002
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /platform/api/v2/customers/{customerId}/sync/users:
    description: |-
      None
    get:
      tags:
      - Platform Sync
  # GET platform/api/v2/customers/{customerId}/sync/users
      summary: Get users of a specified customer
      description: |
        Gets the users that have been edited since the last sync, specified using the `edit_date_from` parameter.

        Note that this endpoint is implemented under the `platform` namespace.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        Specifying the `edit_date_from` parameter in the same request the `cursor` parameter will result in an error response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        This endpoint can be accessed by
        * Any user with NRTAdmin
        * A system user that is listed on an internal list of users that have read permission to sync data about trustees.
        * For iManage Security Policy Manager sync operations, use `SPM-Sync@operations.com`

      operationId: GET_customers_{customerId}_sync_users
      parameters:
      - *id004
      - name: allow_logon
        in: query
        description: |
          Filters users based on their `allow_logon` value.<br><br>
          If `true`, returns users with `allow_logon` enabled.<br>
          If `false`, returns users with `allow_logon` disabled.<br>
          If this parameter is omitted, it returns all users.
        schema:
          type: boolean
      - &id602
        name: cursor
        in: query
        description: |
          Specifies to begin the search from this cursor.<br>
          If omitted, the returned set is from the beginning.<br><br>
          A new cursor value is returned which can be used in subsequent requests to point to the next starting record.
        schema:
          type: string
          example: BdFReRFEGRHEWERj
      - &id603
        name: edit_date_from
        in: query
        description: |-
          Specifies a start date from which to return results.<br>
          Only records edited on or after this date will be returned. If no date is specified, the earliest date in the system is used.
        schema:
          type: string
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
      - &id604
        name: limit
        in: query
        description: |
          Specifies the maximum number of items to be returned by each search, regardless of the total number of items found.<br><br>
          If the number of items in the result set is more than the limit, then only the number of items defined by the limit are returned.
        schema:
          type: integer
          maximum: 1000
          minimum: 1
          default: 100
          example: 50
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - allow_logon: true
                    custom1: HR Specialist
                    custom2: 1027j02
                    custom3: Recruitment
                    database: ACTIVE_UK
                    doc_server: DEFSERVER
                    distinguished_name: cn=cpierce,dc=example,dc=ajubalaw,dc=com
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: CPIERCE@AJUBALAW.COM
                    exch_autodiscover: <WCSMachineName>AjubaLawExchangeServer
                    full_name: Carla Pierce
                    id: CPIERCE
                    is_external: false
                    is_tier1: true
                    is_tier2: false
                    is_tier3: false
                    is_virtual_user: false
                    last_sync_ts: '2020-11-14T04:28:29.071Z'
                    location: Chicago
                    password_never_expire: false
                    preferred_library: ACTIVE_UK
                    ssid: '171135823650325126'
                    sync_id: 7701DA38-C69C-462B-BEDB-9768FE59ADDF
                    user_id_ex: CPiErce
                    user_nos: 6
                    user_num: 87782
                  - allow_logon: true
                    database: ACTIVE_UK
                    edit_date: '2021-02-26T14:22:16.543Z'
                    email: ACASE@AJUBALAW.COM
                    full_name: Andrew Case
                    id: ACASE
                    is_external: false
                    is_tier1: false
                    is_tier2: true
                    is_tier3: false
                    is_virtual_user: true
                    location: Chicago
                    password_never_expire: false
                    preferred_library: ACTIVE_UK
                    ssid: '931135823650820'
                    user_id_ex: ACASE
                    user_nos: 2
                    user_num: 87782
                  cursor: eyREKAJELKEJdfsdyhh6dsfj77sjHJJHKJHKJLKJHLJs77ssgsfgsgdsflllH
                required:
                - data
                type: object
                properties: &id1535
                  data:
                    type: array
                    description: Array of users
                    items:
                      $ref: '#/components/schemas/Users.userGlobal'
                additionalProperties: false
        401: *id002
        404: *id005
    parameters:
    - $ref: '#/components/parameters/customerId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/sync/groups:
    get:
      tags:
      - Work Sync
  # GET work/api/v2/customers/{customerId}/libraries/{libraryId}/sync/groups
      summary: Get groups of a specified customer
      description: |-
        Gets groups that have been modified since the last sync, specified using the `edit_date_from` parameter. 

        The data modifications that affect the results are changes to group attributes or memberships altered.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        Specifying the `edit_date_from` parameter in along with `cursor` will result in an error response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        This endpoint can be accessed by
        * Any user with NRTAdmin
        * A system user that is listed on an internal list of users that have read permission to sync data about trustees.
        * For iManage Security Policy Manager sync operations, use `SPM-Sync@operations.com`

      operationId: GET_customers_{customerId}_libraries_{libraryId}_sync_groups
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - database: ACTIVE_UK
                    distinguished_name: cn=all external,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Matters Related Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979700
                    id: MATTERS MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    ssid: '9000834233'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  - database: ACTIVE_UK
                    distinguished_name: cn=internal,ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    enabled: true
                    full_name: Case Management Applications
                    group_domain: ou=corporate,ou=firm,dc=ajubalaw,dc=com
                    group_nos: 6
                    group_number: 171135823649979700
                    id: CASE MANAGERS
                    is_external: false
                    last_sync_ts: '2018-05-01T10:15:29Z'
                    ssid: '9000834234'
                    sync_id: b9236a2b-abb0-4648-aac1-795f942be4
                  cursor: '99324915689195845'
                type: object
                properties: &id607
                  data:
                    type: array
                    items:
                      required:
                      - database
                      - enabled
                      - group_number
                      - id
                      - is_external
                      - ssid
                      - group_nos
                      type: object
                      properties:
                        database:
                          type: string
                          description: |-
                            Indicates the group's library.
                        distinguished_name:
                          maxLength: 254
                          type: string
                          example: cn=username,dc=example,dc=ajubalaw,dc=com
                          description: |
                            Indicates the name of the group that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
                        enabled:
                          type: boolean
                          description: |-
                            Indicates the status of this group.

                            * If `true`: The group is enabled.
                            * If `false`: The group is disabled.
                        full_name:
                          type: string
                          description: |-
                            Indicates the group's full name.
                        group_domain:
                          type: string
                          description: |
                            Indicates  the fully qualified domain name for the group's directory service.

                            It is the metadata from LDAP server that determines the unit to which the group belongs to.
                            This information is mainly used by iManage system administrators.
                          example: cn=Users,dc=ajubalaw,dc=com
                        group_nos:
                          type: integer
                          description: |-
                            Indicates the type of group.

                            The following are valid nos values for groups:

                            | Value | Description |
                            | :-: | - |
                            | 2 | Group for virtual users.|
                            | 6 | Group for enterprise users. |
                        group_number:
                          type: number
                          description: |-
                            Indicates the group number.
                        id:
                          pattern: |-
                            ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
                          maxLength: 254
                          type: string
                          description: |-
                            Indicates the group ID.

                            The group ID can contain spaces.
                        is_external:
                          type: boolean
                          description: |
                            Indicates  if the group is intended for external users.

                            If `true`, the group is intended for external users.<br>
                            If `false`, the group is intended for regular users (non-external users).

                            For more information, see <a href="#overview--external-users"> External users</a>.
                        last_sync_ts:
                          type: string
                          description: |-
                            Indicates the group's last sync time.
                        ssid:
                          type: number
                          format: long
                          description: Specifies the unique ID of the group that was
                            generated by iManage Work.
                        sync_id:
                          maxLength: 254
                          type: string
                          description: |
                            Indicates the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.
                          example: cn=username,dc=example,dc=ajubalaw,dc=com
                  cursor:
                    type: string
                    description: |-
                      Indicates the next position of the cursor for retrieving the next page.
                      It is only returned when the total data set is larger than the amount of requested data.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
      - *id602
      - *id603
      - *id604
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/sync/groups/members/search:
    post:
      tags:
      - Work Sync
  # POST work/api/v2/customers/{customerId}/libraries/{libraryId}/sync/groups/members/search
      summary: Search for group members
      description: |-
        Gets group membership for all groups in the specified list.

        This request can optionally restrict results to groups that were modified after a specified date using the `edit_date_from` parameter.<br>

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        Specifying the `edit_date_from` parameter in the same request the `cursor` parameter will result in an error response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        This endpoint can be accessed by
        * Any user with NRTAdmin priviledges.
        * A system user that is listed on an internal list of users that have read permission to sync data about trustees.
        * For iManage Security Policy Manager sync operations, use `SPM-Sync@operations.com`

      operationId: POST_customers_{customerId}_libraries_{libraryId}_sync_groups_members_search
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: &id609
                cursor:
                  type: string
                  example: BdFReRFEGRHEWERj
                  description: |-
                    Specifies the cursor value to retrieve the next set of results.<br><br>
                    A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.<br>
                    If the cursor is not specified, it returns result set starting from the beginning.<br>
                    If the response returns a cursor value, it can be passed in as request body property for the subsequent request to retrieve next set of results.<br>
                    This property cannot be combined with the `edit_date_from` or groups filters.
                    <br>
                    For more information, see <a href="#overview--pagination">Pagination</a>.

                edit_date_from:
                  type: string
                  pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                  example: 2021-09-17T12:04:03.445000
                  description: |-
                    Specifies a start date for the search.<br>
                    Only records edited on or after this date will be returned.<br>
                    This property cannot be used in combination with a cursor.<br>
                limit:
                  type: integer
                  maximum: 1000
                  minimum: 1
                  default: 100
                  example: 50
                  description: |-
                    Specifies the maximum number of items to be returned by each search, regardless of the total number of items found.<br>
                    Only the number of items defined by the limit parameter is returned even if the total items found are more.<br>
                groups:
                  type: array
                  items:
                    type: string
                  description: |-
                    Specifies the groups in use for this batch synchronization. This property cannot be used in combination with a cursor.
                    If no cursor is specified, then this property is required and must not be empty.
              additionalProperties: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - user_id: ACASE
                    user_ssid: '98886773222'
                    group_id: MATTERS MANAGERS
                    group_ssid: '906867738653'
                  - user_id: BPIERCE
                    user_ssid: '90876373444'
                    group_id: MATTERS MANAGERS
                    group_ssid: '907867748667'
                  cursor: eyDEGj78eR3g88fG
                type: object
                properties: &id608
                  data:
                    type: array
                    items:
                      required:
                      - group_number
                      - user_alias
                      - user_rsid
                      - group_rsid
                      type: object
                      properties:
                        user_id:
                          type: string
                          description: |-
                            Indicates the user alias.
                        user_ssid:
                          type: string
                          description: |-
                            Indicates the numeric system ID of the user.
                        group_id:
                          type: string
                          description: |-
                            Indicates the group ID.
                        group_ssid:
                          type: string
                          description: |-
                            Indicates the group ssid.
                  cursor:
                    type: string
                    description: |-
                      Indicates the cursor value to retrieve the next set of results.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
  /work/api/v2/customers/{customerId}/libraries/{libraryId}/sync/metadata/{customTableName}:
    get:
      tags:
      - Work Sync
  # GET work/api/v2/customers/{customerId}/libraries/{libraryId}/sync_metadata/{customPropertyId}
      summary: Get custom metadata of a specified customer
      description: |-
        Gets the custom variables that have been updated since the last sync, specified using the `edit_date_from` parameter.

        Note that this request accepts `customPropertyId` values `custom1` through `custom31` with no restrictions. Generally, `custom1` is used for clients, `custom2` for matters, and in the event that different properties are used to represent client and matter, this API can still be used to get the desired information.

        <font style="color:black;font-size: 15px;font-weight: bold;">Important to know</font><br>
        Specifying the `edit_date_from` parameter in the same request the `cursor` parameter will result in an error response.

        <font style="color:black;font-size: 15px;font-weight: bold;">Required authorization</font><br>
        This endpoint can be accessed by
        * Any user with NRTAdmin
        * A system user that is listed on an internal list of users that have read permission to sync data about trustees.
        * For iManage Security Policy Manager sync operations, use `SPM-Sync@operations.com`

      operationId: GET_customers_{customerId}_libraries_{libraryId}_sync_metadata_{customPropertyId}
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                example:
                  data:
                  - description: IBM Corp
                    enabled: true
                    hipaa: false
                    id: IBM
                    ssid: 99934857029386
                    wstype: custom1
                  cursor: '99324915689195828'
                type: object
                properties: &id610
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: |-
                            Indicates the alias for the custom field.
                        enabled:
                          type: boolean
                          description: |-
                            Indicates if the alias for the custom property is enabled.<br><br>
                            If `true`, the alias for the custom property is enabled.<br>
                            If `false`, the alias for the custom property is not enabled.
                        hipaa:
                          type: boolean
                          description: |-
                            Indicates if HIPAA-compliant encryption is enabled for the custom property.<br><br>
                            If `true`, HIPAA-compliant encryption is enabled.<br>
                            If `false`, HIPAA-compliant encryption is disabled.
                        id:
                          type: string
                          description: |-
                            Indicates the ID of the custom field alias.
                        parent:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Indicates the ID of the parent custom property.
                        ssid:
                          type: string
                          description: |-
                            Indicates a unique ID assigned by iManage Work to the custom field.
                        wstype:
                          type: string
                          description: |-
                            Indicates the type of custom property.
                  cursor:
                    type: string
                    description: |
                      Indicates The cursor value to retrieve the next set of results.

                      A cursor is returned only when there are more pages that can be retrieved, according to the `cursor` and `limit` combination provided in the current request. For more information, see the `limit` parameter.

                      If the cursor is not specified, it returns result set starting from the beginning.
                      If the response returns a cursor value, it  can be passed in as a query parameter for the subsequent request to retrieve next set of results.
                      <br>
                      For more information, see <a href="#overview--pagination">Pagination</a>.
                additionalProperties: false
        401: *id002
        400: *id003
        404: *id005
      parameters:
      - *id004
      - *id602
      - *id603
      - *id604
    parameters:
    - $ref: '#/components/parameters/customerId'
    - $ref: '#/components/parameters/libraryId'
    - name: customTableName
      in: path
      description: |-
        Specifies the custom property whose aliases are to be returned.
      required: true
      schema:
        type: string
        enum: ["custom1", "custom2", "custom3", "custom4", "custom5", "custom6", "custom7",
          "custom8", "custom9", "custom10", "custom11", "custom12", "custom13", "custom14",
          "custom15", "custom16", "custom17", "custom18", "custom19", "custom20",
          "custom21", "custom22", "custom23", "custom24", "custom25", "custom26",
          "custom27", "custom28", "custom29", "custom30", "custom31"]
    - name: edit_date_from
      in: query
      description: |-
        Specifies a start date for the search.

        Only custom field values edited on or after this date will be returned.
      schema:
        type: string
        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
  /dummy-customer-requests/:
    get:
      tags:
      - --Customer Level Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /dummy-multi-library-requests/:
    get:
      tags:
      - --Multi-library Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /dummy-library-requests/:
    get:
      tags:
      - --Library Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /dummy-platform-requests/:
    get:
      tags:
      - --Platform Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /dummy-authentication-requests/:
    get:
      tags:
      - --Authentication Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /dummy-miscellaneous-requests/:
    get:
      tags:
      - --Miscellaneous Requests--
      description: Dummy path

      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /platform/api/v2/customers/{customerId}/settings/system/idp:
    get:
      tags:
      - IDP Settings
      #- customers-{customerId}-settings-system-idp
      #summary: GET /customers/{customerId}/settings/system/idp
      summary: Get the current IDP settings
      description: |-
        Returns IDP settings that are currently applied for the customer.
      operationId: GET_customers_{customerId}_settings_system_idp
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Per customer IDP settings
                required:
                - data
                type: object
                properties: &id605
                  data:
                    $ref: '#/components/schemas/CustomerIdpSettings.customerIdpSettings'
                example: &id606
                  data:
                    seamless_idp_enabled: true
                    login_hint_enabled: true
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
      - *id083
      - *id134
    patch:
      tags:
      - IDP Settings
      #- customers-{customerId}-settings-system-idp
      #summary: PATCH /customers/{customerId}/settings/system/idp
      summary: Update IDP settings
      description: |
        Updates IDP settings of the customer.
      operationId: PATCH_customers_{customerId}_settings_system_idp
      requestBody:
        content:
          application/json:
            schema:
              title: Update IDP settings
              type: object
              properties: &id652
                seamless_idp_enabled:
                  type: boolean
                  description: |-
                    Specifies if the seamless IDP functionality is enabled for the customer.

                    If `true`, the seamless IDP functionality is enabled.
                    If `false`, the seamless IDP functionality is disabled.
                login_hint_enabled:
                  type: boolean
                  description: |-
                    Specifies if the `login_hint` query param is sent to the IDP for the customer during the login process.

                    If `true`, the login hint functionality is enabled.
                    If `false`, the login hint functionality is disabled. 
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                title: Per customer IDP settings
                required:
                - data
                type: object
                properties: *id605
                example: *id606
        409: *id511
        404: *id005
        403: *id001
        401: *id002
        400: *id003
      parameters:
      - *id004
components:
  schemas:
    GroupSync.response:
      type: object
      properties: *id607
      additionalProperties: false
    GroupMemberSync.response:
      type: object
      properties: *id608
      additionalProperties: false
    GroupMemberBatchSync.request:
      type: object
      properties: *id609
      additionalProperties: false
    CustomFieldSync.response:
      type: object
      properties: *id610
      additionalProperties: false
    IpAddressAuthorizations.createRequest:
      required:
      - type
      - cidr
      title: Create an IP address authorization
      type: object
      properties: *id611
      additionalProperties: false
    IpAddressAuthorizations.ipAddressAuthorization:
      required:
      - id
      - type
      - cidr
      - description
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the identifier for the IP address authorization.
        type:
          type: string
          enum:
          - ipv4
          description: |-
            Indicates the type of IP address range authorized. Currently supports IPv4 only.
        cidr:
          type: string
          minLength: 7
          maxLength: 18
          description: |-
            Indicates the range of IP addresses to be to be authorized. The range is specified as an IP prefix using the CIDR format.
            The CIDR value must be unique per customer.
        description:
          type: string
          minLength: 0
          maxLength: 256
          description: |-
            Indicates the description for the IP address authorization.
      additionalProperties: false
    IpAddressAuthorizations.getAllResponse:
      title: Get all IP address authorizations
      required:
      - data
      type: object
      properties: *id612
      example: *id613
    IpAddressAuthorizations.singleIpAddressAuthorizationResponse:
      title: Single IP Address Authorization Response
      required:
      - data
      type: object
      properties: *id599
      example: *id600
    IpAddressAuthorizations.updateRequest:
      title: Update an IP address authorization
      type: object
      properties: *id614
      additionalProperties: false
    Applications.applicationPolicyHtml5GetResponse:
      required:
      - group_access_list
      - prevent_data_leakage
      type: object
      properties:
        group_access_list:
          type: array
          items:
            type: string
          description: |
            The HTML5 policy to restrict access to iManage Work only for the users of specific groups.<br><br>
            The group IDs are specified using a comma-separated list.
            For example, `group_access_list=NRTADMIN,ADMINISTRATORS,HR`
            If the list is not empty, only the users belonging to these groups can access iManage Work.
        prevent_data_leakage:
          enum: [low, medium, high]
          type: string
          description: |
            The HTML5 policy to secure the data of an organization by preventing its leakage. <br><br>
            The valid values are:<br>
            * `low` displays the download document and sends document links. All the functionalities are available to users.
            * `medium` removes the download links. It allows users to email documents and links through iManage Work.
            * `high` removes all the share and download links. It disables users to download documents and email attachments. The option to attach a document to the email is disabled.
            If a user forwards an email with attachments, it is stripped out automatically.
      additionalProperties: false
    Applications.applicationPolicyIosGetResponse:
      required:
      - managed_only
      type: object
      properties:
        managed_only:
          type: boolean
          description: |
            iOS Policy to allow only managed instances of the iOS application.<br><br>
            The managed applications are deployed automatically on the user devices through Mobile Data Management (MDM).
            Applications that are downloaded from iOS App Store by the user are considered as unmanaged.
            If `managed_only` property is set to `true`, only the managed applications can connect to iManage Work Server.
            If this property is set to `false`, the connection is refused for unmanaged applications.
      additionalProperties: false
    Applications.applicationPolicyGetResponseData:
      required:
      - data
      type: object
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/Applications.applicationPolicyHtml5GetResponse'
          - $ref: '#/components/schemas/Applications.applicationPolicyIosGetResponse'
      additionalProperties: false
    Apps.defaultSecurity:
      enum:
      - private
      - public
      type: string
      description: |
        The default security of an app.<br><br>
        The following are allowed values:
        * **private**: Only explicitly added users and groups can access the app.
        * **public**: All the users and groups of a customer can access the app.
    Apps.url:
      title: URL
      type: string
      description: |-
        Indicates the URL to a web page, resource, or file.
    Apps.appDescription:
      required:
      - name
      type: object
      properties:
        name: *id583
        description: *id584
        publisher: *id585
    Apps.appHal:
      required:
      - package
      type: object
      properties:
        package:
          required:
          - href
          type: object
          properties:
            href:
              description: |-
                Http link to download the application.
              title: URL
              type: string
          description: |-
            Link for downloading the application package.
    Apps.appId:
      type: string
      description: |-
        Unique UUID of the app. It is used as the app's OAuth2 client ID.
    Apps.appStatus:
      enum:
      - available
      - disabled
      - enabled
      type: string
      description: |
        The status of an app.<br><br>
        Multiple statuses can be included using a comma-separated list.
        The values are case sensitive. The following are allowed values:
        * **available**: The application is available and can be enabled by the customer.
        * **disabled**: The application is added to the customer's account, but is not currently enabled for use.
        * **enabled**: The application is enabled for the customer.
    Apps.applicationStatus:
      required:
      - status
      type: object
      properties: *id615
      description: |-
        Status of an application.
    Apps.oauthWithoutClientIdIssuedAt:
      required:
      - redirect_uris
      type: object
      properties:
        application_type: &id616
          enum:
          - native
          - web
          type: string
          description: |
            Type of the application.<br><br>
            Type of the application. The following are allowed values:
            * **web**: Application is running on a web server and accessed through a website. This is the default value.
            * **native**: Application is installed and accessed on a user’s computer or device.
        client_secret: &id617
          type: string
          description: |
            Secret key required by the client application to authenticate itself against iManage Work Server.

            Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        client_secret_expires_at: &id618
          type: number
          description: |
            Time when the client secret expires.<br><br>
            Default is `0`.
        client_type: &id619
          enum:
          - confidential
          - public
          type: string
          description: |
            The client type of the app.<br><br>
            The following are allowed values:
            * **public**: Application not capable of protecting its client secret. For example, a desktop or mobile phone application that cannot securely store the client secret.<br>
            * **confidential**: Application capable of protecting its client secret from users and performing secured authentication on iManage Work Server.<br>
            For example, a web application that has the client ID and secret stored on its own web server.<br>

            If the *application_type* (see **oauth.application_type**) is *native*, then the *client_type* must be **public**.
        contacts: &id620
          type: array
          items:
            type: string
          description: |-
            Array of email addresses of people responsible for this client to be contacted for any assistance.
        redirect_uris: &id621
          type: array
          items:
            $ref: '#/components/schemas/Apps.url'
          description: |
            URL to redirect the user to the client application after iManage Work Server successfully authorizes the application. Multiple redirect URLs can be provided as an array.

            Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
      description: |
        If the item is an App, this object is required. If it is an Extension, this object is optional.<br>

        See the following external documents for additional information:
        * For Client Metadata information, see [OpenID Connect Dynamic Client Registration 1.0 section 2 Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata)
        * For property definitions, see [3.2 Client Registration Response](https://openid.net/specs/openid-connect-registration-1_0.html#RegistrationResponse)
        * client_type definition, see [The OAuth 2.0 Authorization Framework section 2.1 Client Types](https://tools.ietf.org/html/rfc6749#section-2.1)
    Apps.oauth:
      required:
      - redirect_uris
      - client_id_issued_at
      properties:
        client_id_issued_at:
          type: number
          description: |-
            Time when the client ID was issued. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the current date/time.
        application_type: *id616
        client_secret: *id617
        client_secret_expires_at: *id618
        client_type: *id619
        contacts: *id620
        redirect_uris: *id621
      type: object
      description: |
        If the item is an App, this object is required. If it is an Extension, this object is optional.<br>

        See the following external documents for additional information:
        * For Client Metadata information, see [OpenID Connect Dynamic Client Registration 1.0 section 2 Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata)
        * For property definitions, see [3.2 Client Registration Response](https://openid.net/specs/openid-connect-registration-1_0.html#RegistrationResponse)
        * client_type definition, see [The OAuth 2.0 Authorization Framework section 2.1 Client Types](https://tools.ietf.org/html/rfc6749#section-2.1)
    Apps.appWithoutId:
      required:
      - name
      - status
      properties:
        status: *id622
        host_app: *id623
        default_security: *id624
        type: *id625
        oauth:
          $ref: '#/components/schemas/Apps.oauthWithoutClientIdIssuedAt'
        name: *id583
        description: *id584
        publisher: *id585
      type: object
    Apps.appWithHal:
      required:
      - name
      - status
      - edit_date
      - _links
      properties: *id626
      type: object
    Apps.appRequestCreate:
      required: *id627
      properties: *id628
      type: object
    Apps.appRequestUpdate:
      properties: *id591
      required: *id592
      type: object
    Apps.appIdObj:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Indicates the app's client ID.
          example: 3eedae58-3b11-6473-a741-f2c50151147e
    Apps.appIdMultiple:
      required:
      - data
      type: object
      properties: *id629
    Apps.appResponse:
      required:
      - data
      type: object
      properties: *id586
    Apps.appsResponse:
      required:
      - data
      type: object
      properties: *id630
    Apps.extensionsResponseItem:
      required:
      - name
      - edit_date
      - _links
      properties:
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date and time when the extension was last edited.
        _links:
          $ref: '#/components/schemas/Apps.appHal'
        name: *id583
        description: *id584
        publisher: *id585
      type: object
    Apps.extensionsResponse:
      required:
      - data
      type: object
      properties: *id631
    Apps.libraryOverrideSettingPutRequest:
      required:
      - value
      type: object
      properties: *id632
    Apps.libraryOverrideSettingResponse:
      required:
      - data
      type: object
      properties: *id024
    Apps.libraryOverrideSetting:
      required:
      - edit_date
      - library
      - value
      type: object
      properties:
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            The date (in ISO 8601 format) when the library override setting was last edited.
        library:
          type: string
          description: |
            The library name.
        value:
          type: string
          description: |
            The library override setting value.
    Apps.trusteeId:
      type: string
      description: |-
        User or Group ID.
    Apps.trusteeType:
      enum:
      - group
      - user
      type: string
      description: |
        * `group`: The ID is for a group.
        * `user`: The ID is for a user.
    Apps.securityResponse:
      required:
      - data
      type: object
      properties: *id633
    Apps.authInfoResponse:
      required:
      - data
      type: object
      properties: *id634
      example: *id635
    Apps.securityPatchRequestItem:
      required:
      - type
      - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Apps.trusteeType'
        id:
          $ref: '#/components/schemas/Apps.trusteeId'
    Apps.securityPatchRequest:
      required:
      - trustees
      type: object
      properties: *id636
    Apps.settingType:
      enum:
      - file
      - value
      type: string
      description: |
        Indicates or specifies how the settings are stored.<br><br>
        The following are allowed values:

        |Value|Description|
        |:---|:---|
        |file|The values are stored in a settings file.<br><br>The settings file location is returned in the `_links` field of the settings object. To read a settings file, use GET `/customers/{customerId}/settings/{appId}/{settingId}/file`|
        |value|The values are stored as a settings collection.<br><br>To read a settings collection, use GET `/customers/{customerId}/settings/{appId}/{settingId}`.|
    Apps.setting:
      required:
      - id
      - edit_date
      - type
      type: object
      properties: *id637
    Apps.settingResponse:
      required:
      - data
      type: object
      properties: *id023
    Apps.settingWithLibraryOverrides:
      properties: *id638
      required:
      - id
      - edit_date
      - type
      type: object
    Apps.settingsResponse:
      required:
      - data
      type: object
      properties: *id639
    Apps.settingPutRequest:
      title: setting
      required:
      - type
      type: object
      properties: *id640
    Apps.userSettingPutRequest:
      title: setting
      required:
      - type
      type: object
      properties: *id641
    Apps.userSettingResponse:
      required:
      - data
      type: object
      properties: *id016
    Apps.userSettingsResponse:
      required:
      - data
      type: object
      properties: *id642
    Appsetup.appsetupItem:
      required:
      - dde
      - id
      - integration_mode
      - name
      type: object
      properties:
        database:
          type: string
          description: |-
            Name of the library to which the file-handling application belongs to.
        dde:
          type: boolean
          description: |
            Indicates that indicates that Dynamic Data Exchange(DDE) is enabled.<br><br>
            The DDE protocol allows data to be communicated or shared between the applications.
            This protocol uses command lines for data transfer. The DDE command line is different for each application.<br><br>
            If `true`, indicates that Dynamic Data Exchange(DDE) is enabled.<br>
            If `false`, DDE is disabled.
        dde_app_name:
          maxLength: 32
          type: string
          description: |-
            DDE application name which is usually the executable filename for the server application without .exe extension.
        dde_open:
          maxLength: 254
          type: string
          description: |-
            DDE command line to open a document in this file-handling application.
        dde_print:
          maxLength: 254
          type: string
          description: |-
            DDE command line to print a document. The command line assumes that the file-handling application is already running.
        dde_print_1:
          maxLength: 254
          type: string
          description: |-
            DDE Command Line to print a document when the file-handling application is not already running.
        dde_read_open:
          maxLength: 254
          type: string
          description: |-
            DDE command Line to open a document for read-only viewing in this application.
        dde_topic:
          maxLength: 32
          type: string
          description: |-
            DDE Topic for the application which usually identifies a category of data associated with the server application.
        id:
          type: string
          description: |-
            Valid Type name.
        integration_mode:
          enum: ["T", "Y", "N"]
          type: string
          description: |
            Identifies the method for integrating the application with iManage Work clients: <br>
            * COM Integration- Application is integrated with iManage using macros supplied with the iManage DMS.
            * ODMA Integration- Application is integrated using the ODMA method.
            * Non-Integrated- Application cannot be integrated using macros or ODMA integration.
        location:
          maxLength: 254
          type: string
          description: |
            Location of the application.<br><br>
            In most of the cases, he name of the executable file is sufficient, but full path name can also be specified.
            For example, if the application is Microsoft Word and the executable file is WINWORD.EXE, it is sufficient to specify WINWORD.EXE.<br><br>
            Maximum string length&#58; 254.
        name:
          maxLength: 32
          type: string
          description: |-
            Descriptive name for the file-handling application.
        primary:
          type: boolean
          description: |-
            Indicates if it is a primary application for this document type.<br><br> If there are multiple applications associated with a document type, one application may be identified as the primary one.
      additionalProperties: false
    Appsetup.appsetupItemCreateRequest:
      required:
      - id
      - name
      type: object
      properties: *id643
      additionalProperties: false
    Appsetup.appsetupResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Appsetup.appsetupItem'
    Appsetup.appsetupResponseMultiple:
      required:
      - data
      type: object
      properties: *id549
    Appsetup.appsetupItemUpdateRequest:
      type: object
      properties: *id644
      additionalProperties: false
    Artifacts.emptyJsonResponse:
      type: object
      additionalProperties: false
      description: |-
        A JSON body without any properties.
    Artifacts.documentArtifact:
      required:
      - source
      - destination
      type: object
      properties: *id645
      additionalProperties: false
    Artifacts.documentArtifactResponse:
      required:
      - data
      type: object
      properties: *id646
      additionalProperties: false
    Artifacts.containerArtifact:
      required:
      - source
      - destination
      type: object
      properties: *id647
      additionalProperties: false
    Artifacts.containerArtifactResponse:
      required:
      - data
      type: object
      properties: *id648
      additionalProperties: false
    Captions.caption:
      required:
      - database
      - id
      - label
      - type
      type: object
      properties:
        database:
          type: string
          description: |-
            Indicates the library name that the captions are applicable to.
        id:
          type: string
          description: |-
            Indicates the name, or alias, of the caption.
        label:
          type: string
          description: |-
            Indicates the customized label for the profile field.
        locale:
          type: integer
          description: |-
            Indicates the locale number.<br><br>
            The locale number is the Microsoft Locale ID.
            The following are the allowed values:
            * Chinese: 2052
            * English: 1033
            * German: 1031
            * French: 1036
            * French (Canadian): 3084
            * Japanese: 1041
            * Spanish: 3028
            * Portuguese: 1046
          default: 1033
        num:
          type: integer
          description: |-
            Indicates the caption number.<br><br>
            The custom fields are assigned with a caption number that identifies the caption.
            For example, custom1 can be assigned the custom number as 7, and custom2 as 8.

            Each caption is a set of entries, one for each supported language.
            For example, custom1 could have eight entries, one for each language.
          default: -1
        type:
          type: string
          description: |
            Indicates the data type of the custom field.<br><br>
            For example: *string*, *float*, *boolean*, *custom*, or a custom value such as *custom1*.
      additionalProperties: false
    Captions.captionCreateRequest:
      required:
      - id
      - label
      - type
      type: object
      properties:
        id:
          type: string
          description: |-
            Name of the profile field on which the caption is created.
        label:
          type: string
          description: |-
            Customized label for the profile field.
        locale:
          type: integer
          description: |-
            Locale ID. For the complete list, see [Locale Codes in the Overview](/#/docs/documentation-0).
          default: 1033
        num:
          type: integer
          description: |-
            Indicates the caption number.<br><br>
            The custom fields are assigned with a caption number that identifies the caption.
            For example, custom1 can be assigned the custom number as 7, and custom2 as 8.

            Each caption is a set of entries, one for each supported language.
            For example, custom1 could have eight entries, one for each language.

            Users interested in only one of the languages can use the parameter `locale`.
            For example, `locale=1033` specifies returning the English (American) caption.
          default: -1
        type:
          type: string
          description: |
            Data type of the custom field.<br><br>
            For example: *string*, *float*, *boolean*, *custom*, or a custom value such as *custom1*.
      additionalProperties: false
    Captions.captionResponseSingle:
      required:
      - data
      type: object
      properties: *id649
    Captions.captionResponseMultiple:
      required:
      - data
      type: object
      properties: *id650
    Captions.captionUpdateRequest:
      required:
      - label
      type: object
      properties: *id651
      additionalProperties: true
    CustomerIdpSettings.customerIdpSettings:
      type: object
      properties:
        seamless_idp_enabled:
          type: boolean
          description: |-
            Indicates if the seamless IDP functionality is enabled for the customer.
        login_hint_enabled:
          type: boolean
          description: |-
            Indicates if the `login_hint` query param is sent to the IDP for the customer during the login process.
    CustomerIdpSettings.response:
      title: Per customer IDP settings
      required:
      - data
      type: object
      properties: *id605
      example: *id606
    CustomerIdpSettings.setRequest:
      title: Update IDP settings
      type: object
      properties: *id652
    Change-events.changeEvent:
      required:
      - action_type
      - event_date
      - id
      - object_id
      - item_type
      type: object
      properties:
        action_type:
          enum: ["insert", "update", "delete", "profile_update", "security_update",
            "document_link", "container_link", "document_unlink", "container_unlink",
            "name_value_pair_update", "declared", "undeclared", "container_move",
            "restored_from_trash", "purged_from_trash", "kmtag_update"]
          type: string
          description: |-
            Action that was performed on iManage Work object.
        event_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Datetime stamp when the action was performed.
        id:
          type: string
          description: |-
            Unique ID of the event.
        object_id:
          type: string
          description: |-
            ID of the iManage Work object on which an event was performed.
        item_type:
          enum: ["document", "container", "type", "user", "group", "worklist", "checkout_list",
            "sync_preference", "container_item", "group_member", "client_security_policy",
            "matter_security_policy"]
          type: string
          description: |-
            The type of iManage Work object on which an action was performed.
        related_object_id:
          type: string
          description: |-
            ID of the related object on which an event was performed.
        root_id:
          type: string
          description: |-
            ID of the container tree on which an event was performed.
        app_id:
          type: string
          description: |
            An ID corresponding to the application or extension that generated the change event.<br><br>
            The `app_id` value is set based on the type of environment:<br>
            * If  the `cloud` capability is `true`, it is set as an app ID.
            * If  the `cloud` capability is `false`, it is set as the application's name.<br><br>
            See **Capabilities** section in the [Overview](#/docs/documentation-0) page.
      additionalProperties: false
    Change-events.changeEventQueue:
      required:
      - event_id
      type: object
      properties:
        event_id:
          type: string
          description: |-
            Latest event ID from the queue.
        queue_id:
          type: string
          description: |-
            The ID of the queue.
        event_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Datetime stamp when the queue was last updated.
        filter_options:
          type: string
          description: |-
            Optional filter parameters related to this queue. [Currently not implemented]
      additionalProperties: true
    Change-events.changeEventQueueSingle:
      required:
      - data
      type: object
      properties: *id541
      additionalProperties: false
    Change-events.changeEventQueueUpdateRequest:
      required:
      - event_id
      type: object
      properties: *id653
      additionalProperties: true
      description: |-
        Post body to update ChangeEvent queue.
    Change-events.changeEventQueueCreateRequest:
      required:
      - queue_id
      type: object
      properties: *id654
      additionalProperties: false
    Change-events.changeEventResponseMultiple:
      required:
      - data
      - overflow
      - cursor
      type: object
      properties: *id655
      additionalProperties: false
    Classes.accessRule:
      enum: [public, view, private]
      type: string
      description: |
        Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container.<br><br>
        This field is present only if `default_security` is inherit. <br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Classes.class:
      required:
      - database
      - default_security
      - description
      - hipaa
      - id
      - retain
      - shadow
      - subclass_required
      type: object
      properties:
        database: *id656
        default_security: *id657
        description: *id658
        hipaa: *id659
        indexable: *id660
        id: *id661
        required_fields: *id662
        retain: *id663
        shadow: *id664
        subclass_required: *id665
      additionalProperties: true
    Classes.classCreateRequest:
      required:
      - description
      - id
      type: object
      properties: *id666
      additionalProperties: true
      description: |-
        Represents a new document class creation request.
    Classes.classCreateRequest-v1:
      required:
      - id
      - description
      - database
      properties:
        database:
          type: string
        field_required:
          type: integer
        field_required_details:
          type: array
          items:
            type: string
        default_security: *id667
        description: *id668
        hipaa: *id669
        indexable: *id670
        id: *id671
        required_fields: *id672
        retain: *id673
        shadow: *id674
        subclass_required: *id675
      additionalProperties: true
      type: object
      description: |-
        Represents a new document class creation request.
    Classes.classResponseMultiple:
      required:
      - data
      type: object
      properties: *id676
      additionalProperties: false
    Classes.classResponseSingle:
      required:
      - data
      type: object
      properties: *id677
      additionalProperties: false
    Classes.classUpdateRequest:
      type: object
      properties: *id678
      additionalProperties: true
      description: |-
        Represents a document class update request.
    Classes.subclass:
      required:
      - database
      - default_security
      - description
      - hipaa
      - id
      - parent
      - retain
      - shadow
      type: object
      properties:
        database: *id679
        default_security: *id680
        description: *id681
        hipaa: *id682
        id: *id683
        parent: *id684
        required_fields: *id685
        retain: *id686
        shadow: *id687
      additionalProperties: false
    Classes.subclassCreateRequest:
      required:
      - description
      - id
      type: object
      properties: *id688
      additionalProperties: true
      description: |-
        Represents a new document subclass creation request.
    Classes.subclassResponseMultiple:
      required:
      - data
      type: object
      properties: *id689
      additionalProperties: false
    Classes.subclassResponseSingle:
      required:
      - data
      type: object
      properties: *id690
      additionalProperties: false
    Classes.subclassUpdateRequest:
      type: object
      properties: *id691
      additionalProperties: true
      description: |-
        Represents a document subclass update request.
    Common.effectiveSecurityPolicy:
      required:
      - security_policy
      type: object
      properties:
        allow_list:
          type: array
          items:
            $ref: '#/components/schemas/Common.user'
          description: |-
            List of users who are allowed to access an iManage Work object. This takes precedence over the default security setting on an object.
        deny_list:
          type: array
          items:
            $ref: '#/components/schemas/Common.user'
          description: |-
            List of users who are not allowed to access an iManage Work object. This takes precedence over the default security setting on an object.
        security_policy:
          $ref: '#/components/schemas/Common.securityPolicyType'
      additionalProperties: false
    Common.securityPolicyType:
      enum: [exclusionary, restricted]
      type: string
      description: |
        If the security policy is `exclusionary`, it contains a `deny_list` of the users who cannot access the object.<br>
        If it is `restricted`, it contains an `allow_list` of the users who can access the object.
    Common.user:
      type: object
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.

        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
          type: string
          example: "2020-03-09T17:01:16Z"
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        directory_id:
          type: string
          description: |-
            Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
        distinguished_name:
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email:
          type: string
          maxLength: 254
        email2:
          type: string
          maxLength: 254
        email3:
          type: string
          maxLength: 254
        email4:
          type: string
          maxLength: 254
        email5:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins:
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        fax:
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change:
          type: boolean
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        general:
          type: string
          description: |
            Indicates any additional comments or description applicable for the user.
        id:
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.

        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
          example: "2020-03-09T17:01:16Z"
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        lockout_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).
          example: "2020-03-09T17:01:16Z"
        phone:
          type: string
          description: Indicates the phone number of the user.
        preferred_library:
          type: string
          description: |
            Indicates the preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
          example: active_us
        pwd_changed_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          example: 2020-03-09T17:01:16Z
        pwd_never_expire:
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num:
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
    Config.configFile:
      type: object
      properties:
        extension:
          type: string
          description: |-
            Configuration file extension, if applicable.
          example: "cfg"
        filename:
          type: string
          description: |-
            Name of the configuration file.
          example: "client.cfg"
        lastupdated:
          type: string
          description: |-
            Time when the configuration file was last updated.
        type:
          type: string
          description: |-
            Type of the configuration file.
          example: "cfg"
        uri:
          type: string
          description: |-
            URI to retrieve the configuration file.
          example: "/api/v2/config/outlook/client.cfg"
      description: |-
        Represents a configuration file/entity in a given configuration category/namespace.
    Config.configFieldFilesPutRequest:
      required:
      - doc_profile
      type: object
      properties:
        doc_profile:
          required:
          - name
          - extension
          - size
          type: object
          properties:
            name:
              type: string
              description: |-
                Name of the document.
            extension:
              type: string
              description: |-
                File format of the document. For example, .doc ,.xls ,.pdf.
            size:
              type: integer
              description: |-
                Size of the document in bytes.
        warnings_for_required_and_disabled_fields:
          type: boolean
          description: |
            Specifies to include warnings if required fields are missing, or disabled fields are included.<br><br>
            If `true`, warnings are included, and the request will attempt to complete.<br>
            If `false`, warnings are not included, and the request will fail if any are present.
          default: true
      additionalProperties: false
    Config.configFieldPutRequest:
      required:
      - oldfield
      - newfield
      - oldfilename
      - newfilename
      type: object
      properties:
        oldfield:
          type: string
          description: |-
            Old configuration field.
        newfield:
          type: string
          description: |-
            New configuration field.
        oldfilename:
          type: string
          description: |-
            Name of the old configuration file.
        newfilename:
          type: string
          description: |-
            Name of the new configuration file.
      additionalProperties: false
    Config.configurationCategoryFileList:
      type: object
      additionalProperties: true
    Config.configFileListResponse:
      required:
      - Data
      type: object
      properties:
        Data:
          type: object
          additionalProperties: true
      additionalProperties: false
      description: |-
        Configuration categories and a list of their respective files.
    Config.configFilesDescriptionResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Config.configFile'
      additionalProperties: false
      description: |-
        Description of a configuration category's files.
    Containers.defaultSecurityRequest:
      enum: [public, view, private]
      type: string
      description: |
        Specifies the default access permission assigned to an iManage Work object that is inherited from its parent container.<br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the container, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the container unless explicitly excluded.|
        |view|All users can view the container unless explicitly granted Read/Write or No Access.|
    Customs.customSearchItem:
      required:
      - id
      - enabled
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the alias ID for the custom property.
        ssid:
          type: string
          description: |-
            Indicates the SSID for the custom property.
        description:
          maxLength: 254
          type: string
          description: |-
            Indicates additional information about the custom property.
        enabled:
          type: boolean
          description: |-
            Indicates the custom property is enabled.

            If `true`, custom property is enabled.<br>
            If `false`, custom property is disabled.<br>

            An enabled custom property alias means that it can be selected.
            All the custom field aliases are validated when assigning to a document, email, or container.
            It must already a member in that custom property, and enabled.
            Any other combination prevents that custom property alias from being assigned, and may result in an error.
        hipaa:
          type: boolean
          description: |
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        database:
          type: string
          description: |-
            Indicates the library ID that the custom property is stored in.
        wstype:
          type: string
          description: |-
            Indicates the type of custom property.<br><br>
            For example: custom1 or custom3.
        parent:
          required:
          - id
          type: object
          properties:
            id:
              type: string
              description: |-
                Indicates the alias of the parent custom property.<br><br>
                This must be specified when `customPropertyId` is either custom2 or custom30.
            ssid:
              type: string
              description: |-
                Indicates the SSID of the parent custom property.
          additionalProperties: false
      additionalProperties: false
    Customs.customItem:
      required:
      - enabled
      - id
      type: object
      properties:
        description:
          maxLength: 254
          type: string
          description: |-
            Indicates additional information about the custom property.
        enabled:
          type: boolean
          description: |-
            Indicates aliases are enabled.<br><br>
            If `true`, aliases are enabled.<br>
            If `false`, aliases are disabled.<br>
        hipaa:
          type: boolean
          description: |
            Indicates HIPAA-compliant encryption is enabled.<br><br>
            If `true`, HIPAA-compliant encryption is enabled.<br>
            If `false`, HIPAA-compliant encryption is disabled.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.

            The enforcement of encryption varies by iManage Work environment.
            Depending on the iManage Work environment, encryption can be either automatic for all documents, or specified explicitly through custom properties.
            For more information, contact your iManage Work system administrator.
        database:
          type: string
          description: |-
            Indicates the name of the library where the custom property is stored.
        wstype:
          type: string
          description: |-
            Indicates the type of custom property.<br><br>
            For example: `custom1` or `custom3`.
        id:
          maxLength: 32
          type: string
          description: |-
            Indicates the name of the alias.
        ssid:
          type: string
          description: |-
            Indicates the SSID for the custom property.
        parent:
          required:
          - id
          type: object
          properties:
            id:
              type: string
              description: |-
                Indicates the caption of the parent custom property.
            ssid:
              type: string
              description: |-
                Indicates the SSID of the parent custom property.
          description: |-
            Indicates caption of the parent custom property.<br><br>
            This must be specified when the endpoint parameter `custom_table` is either custom2 or custom30.
      additionalProperties: false
    Customs.customItemCreateRequest:
      required:
      - id
      type: object
      properties: *id692
      additionalProperties: true
    Customs.customItemResponseSingle:
      required:
      - data
      type: object
      properties: *id693
    Customs.customItemResponseMultiple:
      required:
      - data
      type: object
      properties: *id694
    Customs.customItemUpdateRequest:
      type: object
      properties: *id695
      additionalProperties: true
    Customs.postSearchRequest:
      title: Custom Search Request
      type: object
      properties: *id696
    Customs.postSearchRequestFilter:
      type: object
      properties:
        alias:
          type: string
          description: |-
            Indicates the name, or alias, of the custom property.
        parent_alias:
          type: string
          description: |-
            Indicates the name, or alias, of the custom property's parent property.<br><br>
            This is required only for custom2 or custom30.
    Customs.postSearchResponse:
      required:
      - data
      - cursor
      - overflow
      type: object
      properties: *id697
    Documents.accessRule:
      enum: [public, view, private]
      type: string
      description: |
        Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container.<br><br>
        This field is present only if `default_security` is inherit. <br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Documents.attachment:
      required:
      - id
      - size
      type: object
      properties:
        attachment_id:
          type: string
          description: |-
            The document ID if the attachment is in the library. Currently it applies to *.nrl files.
        id:
          type: string
          description: |-
            Unique identifier for the attachment.
        name:
          type: string
          description: |-
            File name of the attachment.
        size:
          type: integer
          description: |-
            Size of the attachment in bytes.
          format: int64
      additionalProperties: false
      description: |-
        Document Attachment
    Documents.auditEntryBase:
      required:
      - activity
      - activity_code
      type: object
      properties:
        activity: *id521
        activity_code: *id522
        activity_date: *id523
        comments: *id524
        data1: *id525
        data2: *id526
        document_id: *id527
        duration: *id528
        location: *id529
        pages_printed: *id530
        num1: *id531
        num2: *id532
        num3: *id533
        version: *id534
      additionalProperties: true
    Documents.auditEntry:
      type: object
      properties: *id698
      additionalProperties: true
      required:
      - activity
      - activity_code
    Documents.auditEntryPartial:
      type: object
      properties: *id699
      additionalProperties: true
    Documents.defaultSecurityRequest:
      enum: [public, view, private]
      type: string
      description: |
        Specifies the default access permission assigned to an iManage Work object that is inherited from its parent container.<br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Documents.userTrustees:
      type: array
      items: *id394
      description: |-
        List of users and their access permissions.
    Documents.groupTrustees:
      type: array
      items: *id395
      description: |-
        List of groups and their access permissions.
    Documents.docHighlightsResponse:
      required:
      - data
      type: object
      properties: *id700
      additionalProperties: false
    Documents.documentBase:
      type: object
      properties:
        id: &id867
          type: string
          description: |-
            Indicates the document ID.
        database: &id868
          type: string
          description: |-
            Indicates the library where the document is located.
        document_number: &id869
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        version: &id870
          type: integer
          description: |-
            Indicates the version number of the document.
        name: &id871
          type: string
          description: |-
            Indicates the file name of the document.
        checksum: &id872
          type: string
          description: |
            Indicates the value of the document's checksum.

            The document checksum is a calculated value based the document's content.
            It is used to verify the integrity of a document content during transfer.

            During a file upload, the checksum of the content is calculated and saved along with the document profile.
            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
            If the checksum values do not match, the request fails.
            If the document profile in the request does not include checksum property, the comparison is not performed.

            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        alias: &id873
          type: string
          description: |-
            The alias of this document. Alias is an additional metadata property available on the documents.
        author: &id874
          type: string
          description: |-
            ID of the user who created the document.
        operator: &id875
          type: string
          description: |-
            Indicates user ID of the document's operator.
        type: &id876
          type: string
          description: |
            Indicates the type of the document.<br><br>
            The document type is used to associate it to an application.
            For example, WORD for Microsoft Word.
        class: &id877
          type: string
          description: |-
            Indicates the document class.
        subclass: &id878
          type: string
          description: |-
            Indicates the document subclass.
        edit_date: &id879
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the most recent date (in ISO 8601 format) when the document was edited.
        create_date: &id880
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was saved or imported to iManage Work Server.
        retain_days: &id881
          type: integer
          description: |-
            Indicates the number of days before the inactive document is eligible for archiving.
        size: &id882
          type: integer
          description: |-
            Indicates the size of the document in bytes.
          format: int64
        indexable: &id883
          type: boolean
          description: |-
            Indicates if the document can be indexed.
        is_related: &id884
          type: string
          description: |
            Indicates that the document is related to another document.<br><br>
            Document relations are used to group documents and their attachments. For example: A contract and its amendments. <br>
            They are also used to link a document with the documents that were used to create it. For example, a final report with its inserts,
            which could be spreadsheets, graphics files, tables, figures, and charts.<br><br>
            If `true`, the document is related to another document. <br>
            If `false`, the document is related to another document.
        location: &id885
          type: string
          description: |
            Indicates the file path on the iManage Work server.<br><br>
            This may null if it is not available for the platform.
        default_security: &id886
          enum: ["public", "view", "private", "inherited"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        last_user: &id887
          type: string
          description: |-
            Indicates the user ID who most recently edited the document.
        in_use_by: &id888
          type: string
          description: |-
            Indicates the user ID who is currently working on the document or has checked it out.
        in_use: &id889
          type: boolean
          description: |
            Indicates the document is currently in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.<br><br>
            To check if the document is checked out, see the parameter `is_checked_out`.
        is_checked_out: &id890
          type: boolean
          description: |
            Indicates the document is currently checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.<br><br>
            To check if the document is in use, see the parameter `in_use`.
        archived: &id891
          type: boolean
          description: |-
            Indicates that the document is archived to an archive location.
        comment: &id892
          type: string
          description: |
            Indicates additional information about the document.<br><br>
            It is fully searchable. Maximum string length&colon; 8,000.
        custom1: &id893
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 property.
        custom1_description: &id894
          type: string
          description: |-
            Additional information about the property.
        custom2: &id895
          type: string
          description: |-
            Alias of custom2 . Custom2 is child of custom1 property.
        custom2_description: &id896
          type: string
          description: |-
            Additional information about the custom2 property.
        custom3: &id897
          type: string
          description: |-
            Alias for custom3 property.
        custom3_description: &id898
          type: string
          description: |-
            Additional information about the custom3 property.
        custom4: &id899
          type: string
          description: |-
            Alias for custom4 property.
        custom4_description: &id900
          type: string
          description: |-
            Additional information about the custom4 property.
        custom5: &id901
          type: string
          description: |-
            Alias for custom5 property.
        custom5_description: &id902
          type: string
          description: |-
            Additional information about the custom5 property.
        custom6: &id903
          type: string
          description: |-
            Alias for custom6 property.
        custom6_description: &id904
          type: string
          description: |-
            Additional information about the custom6 property.
        custom7: &id905
          type: string
          description: |-
            Alias for custom7 property.
        custom7_description: &id906
          type: string
          description: |-
            Additional information about the custom7 property.
        custom8: &id907
          type: string
          description: |-
            Alias for custom8 property.
        custom8_description: &id908
          type: string
          description: |-
            Additional information about the custom8 property.
        custom9: &id909
          type: string
          description: |-
            Alias for custom9 property.
        custom9_description: &id910
          type: string
          description: |-
            Additional information about the custom9 property.
        custom10: &id911
          type: string
          description: |-
            Alias for custom10 property.
        custom10_description: &id912
          type: string
          description: |-
            Additional information about the custom10 property.
        custom11: &id913
          type: string
          description: |-
            Alias for custom11 property.
        custom11_description: &id914
          type: string
          description: |-
            Additional information about the property.
        custom12: &id915
          type: string
          description: |-
            Alias for custom12 property.
        custom12_description: &id916
          type: string
          description: |-
            Additional information about the custom12 property.
        custom13: &id917
          type: string
          description: |-
            Alias for custom13 property.
        custom14: &id918
          type: string
          description: |-
            Alias for custom14 property.
        custom15: &id919
          type: string
          description: |-
            Alias for custom15 property.
        custom16: &id920
          type: string
          description: |-
            Alias for custom16 property.
        custom17: &id921
          type: number
          description: |-
            Alias for custom17 property.
          format: double
        custom18: &id922
          type: number
          description: |-
            Alias for custom18 property.
          format: double
        custom19: &id923
          type: number
          description: |-
            Alias for custom19 property.
          format: double
        custom20: &id924
          type: number
          description: |-
            Alias for custom20 property.
          format: double
        custom21: &id925
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 property.
        custom22: &id926
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 property.
        custom23: &id927
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 property.
        custom24: &id928
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 property.
        custom25: &id929
          type: boolean
          description: |-
            Alias for custom25 property.
        custom26: &id930
          type: boolean
          description: |-
            Alias for custom26 property.
        custom27: &id931
          type: boolean
          description: |-
            Alias for custom27 property.
        custom28: &id932
          type: boolean
          description: |-
            Alias for custom28 property.
        custom29: &id933
          type: string
          description: |-
            Alias of custom29 property. Custom29 is parent of custom30 property.
        custom29_description: &id934
          type: string
          description: |-
            Additional information about the custom29 property.
        custom30: &id935
          type: string
          description: |-
            Alias of custom30 property. Custom30 is child of custom29 property.
        custom30_description: &id936
          type: string
          description: |-
            Additional information about the custom30 property.
        custom31: &id937
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description: &id938
          type: string
          description: |-
            Reserved. Do not use.
        access: &id939
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        checkout_path: &id940
          type: string
          description: |-
            Indicates the path where the document is checked out.
        checkout_due_date: &id941
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the due date (in ISO 8601 format) for checkout.<br><br>
            The document should be checked in within this due date.
        checkout_comment: &id942
          type: string
          description: |-
            Indicates additional information provided by the user when the document is checked out.
        author_description: &id943
          type: string
          description: |-
            Indicates the full name of the user who created the document.
        operator_description: &id944
          type: string
          description: |-
            Indicates the user ID of the operator.
        type_description: &id945
          type: string
          description: |-
            Indicates a description of the document type.
        class_description: &id946
          type: string
          description: |-
            Indicates additional information about the document class.
        subclass_description: &id947
          type: string
          description: |-
            Indicates additional information about the subclass.
        last_user_description: &id948
          type: string
          description: |-
            Indicates the user ID who last edited the document.
        in_use_by_description: &id949
          type: string
          description: |-
            Indicates the user ID who currently has the document checked out.
        extension: &id950
          type: string
          description: |-
            Indicates the file extension of the document.
        content_type: &id951
          type: string
          description: |-
            Indicates the content type of the document.
        edit_profile_date: &id952
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document profile was last changed.
        access_time: &id953
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when an activity was performed on the document.
        checkout_date: &id954
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was last checked out.
        is_declared: &id955
          type: boolean
          description: |
            Indicates if a document is declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the document is declared as a record.<br>
            If `false`, the document is not declared as a record.<br><br>
            For the date it was declared as a record, see the parameter `declared_date`.
        is_external: &id956
          type: boolean
          description: |-
            Is `true` when the document is shared with the external users.
        has_attachment: &id957
          type: boolean
          description: |
            Indicates the document has an attachment.<br><br>
            If `true`, the document has an attachment.<br>
            If `false`, the document does not have an attachment.
        is_external_as_normal: &id958
          type: boolean
          description: |-
            If `true`, the external user is treated as normal user and can access public document.
        effective_security: &id959
          enum: ["no_access", "read", "read_write", "full_access"]
          type: string
          description: |
            Indicates the effective security access level available to the user.

            Effective security is the access level that is the net result of a combination of the following:
            * an objects's default security
            * a user's access permission for that object
            * possible conflicts among groups to which the user belongs to
            * the security model being used.

            The available access levels are:

            |Access level|Description|
            |:---|:---|
            |no_access|The user has no access, or any permissions to the container or document.|
            |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        declared_date: &id960
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
            A record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
            To see if a document has been declared, see the parameter `is_declared`.
        file_create_date: &id961
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was saved or imported to the iManage Work system.<br>
        file_edit_date: &id962
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being saved or imported into the iManage Work system.
            This date can be different than `edit_date`.
            The `edit_date` is the date when the file was edited in the iManage Work system.<br>
        arch_req: &id963
          type: string
          description: |
            Indicates the document is marked for archive.<br><br>
            If `true`, the document is marked for archive.<br>
            If `false`, the document is not marked for archive.
        is_hipaa: &id964
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        workspace_name: &id965
          type: string
          description: |-
            Indicates the name of the workspace where the document is located.
        linksite_url: &id966
          type: string
          description: |-
            Indicates the secure document URL created by LinkSite application.
        activity_date: &id967
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) of the last activity performed by the current user for the document.
        is_latest: &id968
          type: boolean
          description: |-
            Indicates whether to return the latest version of the document.
        is_restorable: &id969
          type: boolean
          description: |
            Indicates if the document can be restored.<br><br>
            If `true`, the document can be restored.<br>
            If `false`, the document cannot be restored.
        is_most_recent_activity: &id970
          type: boolean
          description: |
            Indicates if the edit date is same as the recent activity date.<br><br>
            If `true`, the edit date is same as the recent activity date.<br>
            If `false`, the edit date is not same as the recent activity date.
        attachments: &id971
          type: array
          items:
            required:
            - id
            - size
            type: object
            properties:
              attachment_id:
                type: string
                description: |-
                  The document ID if the attachment is in the library. Currently it applies to *.nrl files.
              id:
                type: string
                description: |-
                  Unique identifier for the attachment.
              name:
                type: string
                description: |-
                  File name of the attachment.
              size:
                type: integer
                description: |-
                  Size of the attachment in bytes.
                format: int64
            additionalProperties: false
            description: |-
              Document Attachment
          description: |
            Indicates the document ID of an attachment in the same library.<br><br>
            This applies to .nrl files only.
        wstype: &id972
          type: string
          description: |-
            Indicates the iManage Work object type.
        iwl: &id973
          type: string
          description: |
            Indicates the iManage Work Link (iWL) of a document.<br><br>
            The iManage Work Link is used to open a document in Protected View Mode by a user who has read/write or full access to it.
        workspace_id: &id974
          type: string
          description: |-
            Indicates the workspace ID where the document is located.
        lock_type: &id975
          type: string
          enum: ["S", "E"]
          description: |-
            Indicates the type of lock applied when the document was checked out.
            This field is applicable only to checked out documents.

            |Value|Lock Type|Description|
            |---|---|---|
            |S|Shared|The document was locked for a co-authoring session.|
            |E|Exclusive|The document was locked for editing by a single user.|
        co_authors: &id976
          type: array
          description: |-
            Indicates a list of co-authors of a document that was checked out for a co-authoring session.

            This field is applicable only when the document is locked for co-authoring.
          items:
            type: string
        wopi_file_size_limit: &id977
          type: integer
          description: |-
            Indicates the maximum file size (in bytes) supported for co-authoring.
        wopi_file_size_warning: &id978
          type: boolean
          description: |-
            Indicates if the file size is approaching its upper limit for co-authoring.

            If `true`, the file size is approaching its upper limit.<br>
            If `false`, the file size is well within the upper limit.
      additionalProperties: true
    Documents.document:
      required:
      - author
      - create_date
      - database
      - default_security
      - document_number
      - extension
      - file_create_date
      - file_edit_date
      - id
      - is_hipaa
      - iwl
      - size
      - type
      - version
      type: object
      properties:
        author: *id408
        author_description: *id409
        checksum: *id410
        class: *id411
        class_description: *id412
        comment: *id413
        content_type: *id414
        create_date: *id415
        custom1: *id416
        custom1_description: *id417
        custom2: *id418
        custom2_description: *id419
        custom3: *id420
        custom3_description: *id421
        custom4: *id422
        custom4_description: *id423
        custom5: *id424
        custom5_description: *id425
        custom6: *id426
        custom6_description: *id427
        custom7: *id428
        custom7_description: *id429
        custom8: *id430
        custom8_description: *id431
        custom9: *id432
        custom9_description: *id433
        custom10: *id434
        custom10_description: *id435
        custom11: *id436
        custom11_description: *id437
        custom12: *id438
        custom12_description: *id439
        custom13: *id440
        custom14: *id441
        custom15: *id442
        custom16: *id443
        custom17: *id444
        custom18: *id445
        custom19: *id446
        custom20: *id447
        custom21: *id448
        custom22: *id449
        custom23: *id450
        custom24: *id451
        custom25: *id452
        custom26: *id453
        custom27: *id454
        custom28: *id455
        custom29: *id456
        custom29_description: *id457
        custom30: *id458
        custom30_description: *id459
        custom31: *id460
        custom31_description: *id461
        database: *id462
        declared_date: *id463
        default_security: *id464
        document_number: *id465
        edit_date: *id466
        edit_profile_date: *id467
        extension: *id468
        file_create_date: *id469
        file_edit_date: *id470
        id: *id471
        is_in_use: *id472
        in_use_by: *id473
        in_use_by_description: *id474
        is_checked_out: *id475
        is_declared: *id476
        is_external: *id477
        is_external_as_normal: *id478
        is_hipaa: *id479
        is_related: *id480
        is_restorable: *id481
        iwl: *id482
        last_user: *id483
        last_user_description: *id484
        name: *id485
        operator: *id486
        operator_description: *id487
        retain_days: *id488
        size: *id489
        subclass: *id490
        subclass_description: *id491
        type: *id492
        type_description: *id493
        version: *id494
        workspace_id: *id495
        workspace_name: *id496
        wstype: *id497
        bcc: *id498
        cc: *id499
        conversation_id: *id500
        conversation_name: *id501
        from: *id502
        has_attachment: *id503
        received_date: *id504
        sent_date: *id505
        to: *id506
        lock_type: *id507
        co_authors: *id508
        wopi_file_size_limit: *id509
        wopi_file_size_warning: *id510
      additionalProperties: true
    Documents.document-admin-search:
      required:
      - author
      - content_type
      - create_date
      - library
      - default_security
      - document_number
      - extension
      - file_create_date
      - file_edit_date
      - id
      - is_hipaa
      - iwl
      - size
      - type
      - version
      type: object
      properties:
        author: &id701
          type: string
          description: |-
            Indicates the user ID who created the document.
        checksum: &id702
          type: string
          description: |
            Indicates the value of the document's checksum.

            The document checksum is a calculated value based the document's content.
            It is used to verify the integrity of a document content during transfer.

            During a file upload, the checksum of the content is calculated and saved along with the document profile.
            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
            If the checksum values do not match, the request fails.
            If the document profile in the request does not include checksum property, the comparison is not performed.

            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        class: &id703
          type: string
          description: |
            Indicates the document's class.<br><br>
            Document class is categorized by genre, department, region, and so on.<br>
            To get the document's subclass, see the parameter `subclass`.
        co_authors: &id704
          type: array
          description: |-
            Indicates a list of co-authors of a document that was checked out for a co-authoring session.

            This field is applicable only when the document is locked for co-authoring.
          items:
            type: string
        content_type: &id705
          enum: ["D", "5"]
          type: string
          description: |-
            Indicates the document content type.
        comment: &id706
          type: string
          description: |
            Indicates additional information about the document.<br><br>
            Maximum string length&colon; 8,000.
        create_date: &id707
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the document was imported into the iManage Work system.<br><br>
            This date can be different than the `file_create_date`.
            The `file_create_date` is the date when the file was created, which could have been outside of the iManage Work system.<br>
        custom1: &id708
          type: string
          description: |-
            Alias for custom1 property. Custom1 is the parent of custom2 metadata.
        custom1_description: &id709
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom2: &id710
          type: string
          description: |
            Indicates the alias for this custom property.
        custom2_description: &id711
          type: string
          description: |-
            Alias for custom2 property. Custom2 is the child of custom1 property.
        custom3: &id712
          type: string
          description: |-
            Alias for custom3 property.
        custom3_description: &id713
          type: string
          description: |-
            Indicates additional information about the custom3 property.
        custom4: &id714
          type: string
          description: |-
            Alias for custom4 property.
        custom4_description: &id715
          type: string
          description: |-
            Indicates additional information about the custom4 property.
        custom5: &id716
          type: string
          description: |-
            Alias for custom5 property.
        custom5_description: &id717
          type: string
          description: |-
            Indicates additional information about the custom5 property.
        custom6: &id718
          type: string
          description: |-
            Alias for custom6 property.
        custom6_description: &id719
          type: string
          description: |-
            Indicates additional information about the custom6 property.
        custom7: &id720
          type: string
          description: |-
            Alias for custom7 property.
        custom7_description: &id721
          type: string
          description: |-
            Indicates additional information about the custom7 property.
        custom8: &id722
          type: string
          description: |-
            Alias for custom8 property.
        custom8_description: &id723
          type: string
          description: |-
            Indicates additional information about the custom8 property.
        custom9: &id724
          type: string
          description: |-
            Alias for custom9 property.
        custom9_description: &id725
          type: string
          description: |-
            Indicates additional information about the custom9 property.
        custom10: &id726
          type: string
          description: |-
            Alias for custom10 property.
        custom10_description: &id727
          type: string
          description: |-
            Indicates additional information about the custom10 property.
        custom11: &id728
          type: string
          description: |-
            Alias for custom11 property.
        custom11_description: &id729
          type: string
          description: |-
            Indicates additional information about the custom11 property.
        custom12: &id730
          type: string
          description: |-
            Alias for custom12 property.
        custom12_description: &id731
          type: string
          description: |-
            Indicates additional information about the custom12 property.
        custom13: &id732
          type: string
          description: |-
            Contents of custom13 property.
        custom14: &id733
          type: string
          description: |-
            Contents of custom14 property.
        custom15: &id734
          type: string
          description: |-
            Contents of custom15 property.
        custom16: &id735
          type: string
          description: |-
            Contents of custom16 property.
        custom17: &id736
          type: number
          description: |-
            Contents of custom17 property.
          format: double
        custom18: &id737
          type: number
          description: |-
            Contents of custom18 property.
          format: double
        custom19: &id738
          type: number
          description: |-
            Contents of custom19 property.
          format: double
        custom20: &id739
          type: number
          description: |-
            Contents of custom20 property.
          format: double
        custom21: &id740
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom21 property in ISO 8601 date format.
        custom22: &id741
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom22 property in ISO 8601 date format.
        custom23: &id742
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom23 property in ISO 8601 date format.
        custom24: &id743
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom24 property in ISO 8601 date format.
        custom25: &id744
          type: boolean
          description: |-
            Boolean value of custom25 property.
        custom26: &id745
          type: boolean
          description: |-
            Boolean value of custom26 property.
        custom27: &id746
          type: boolean
          description: |-
            Boolean value of custom27 property.
        custom28: &id747
          type: boolean
          description: |-
            Boolean value of custom28 property.
        custom29: &id748
          type: string
          description: |
            Indicates the alias for this custom property.
        custom29_description: &id749
          type: string
          description: |-
            Indicates additional information about the custom29 property.
        custom30: &id750
          type: string
          description: |
            Indicates the alias for this custom property.
        custom30_description: &id751
          type: string
          description: |-
            Indicates additional information about the custom30 property.
        custom31: &id752
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description: &id753
          type: string
          description: |-
            Reserved. Do not use.
        library: &id754
          type: string
          description: |-
            Indicates the library where the document is stored.
        declared: &id755
          type: boolean
          description: |-
            Indicates if the document is declared as a record.
        declared_date: &id756
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage system administrator.
        default_security: &id757
          enum: ["public", "view", "private", "inherited"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        document_number: &id758
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        edit_date: &id759
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the most recent date (in ISO 8601 format) when the document was edited.
        edit_profile_date: &id760
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the time of the last change to the document profile (in ISO 8601 format).
        effective_security: &id761
          enum: ["full_access", "read_write", "read", "no_access"]
          type: string
          description: |-
            Indicates the user's access permission on the document.
        extension: &id762
          type: string
          description: |
            Indicates the file name extension, also called the application extension, of the document.<br><br>
            For example: doc, xls, pdf.
        file_create_date: &id763
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
        file_edit_date: &id764
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being uploaded into the iManage Work system.
        id: &id765
          type: string
          description: |-
            Indicates the document ID.
        in_use: &id766
          type: boolean
          description: |
            Indicates is the document is in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.
        in_use_by: &id767
          type: string
          description: |
            Indicates the user ID who is currently working on the document or has it checked out.<br><br>
            If empty, the document is not currently being worked on, or is not checked out.
        in_use_by_description: &id768
          type: string
          description: |-
            Indicates additional information about the user who is currently working on the document or has checked it out.
        is_checked_out: &id769
          type: boolean
          description: |
            Indicates if the document is currently checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.
        is_declared: &id770
          type: boolean
          description: |
            Indicates if the document has been declared as a record.
            A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the document is declared as a record.<br>
            If `false`, the document is declared as a record. <br><br>
            For the date when the document was declared, see the field `declared_date`.
        is_external: &id771
          type: boolean
          description: |
            Indicates if the document is external.<br><br>
            If `true`, the document is external.<br>
            If `false`, the document is not external, and is considered a normal document.
        is_external_as_normal: &id772
          type: boolean
          description: |
            Indicates if the document is external as normal.<br><br>
            If `true`, the document is external as normal.<br>
            If `false`, the document is not external as normal, and is considered a normal document.
        is_hipaa: &id773
          type: boolean
          description: |
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        is_in_use: &id774
          type: boolean
          description: |
            Indicates is the document is in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.
        is_related: &id775
          type: boolean
          description: |
            Indicates the document is related to another document.<br><br>
            If `true`, the document is related to another document.<br>
            If `false`, the document is not related to another document.
        is_restorable: &id776
          type: boolean
          description: |
            Indicates that an archived document can be restored.<br><br>
            If `true`, the archived document can be restored.<br>
            If `false`, the archived document cannot be restored.
        iwl: &id777
          type: string
          description: |
            Indicates the iManage Work Link (iWL) for the document.<br><br>
            It is used to open it in Protected View Mode by the user who has read/write or full access to it.
        last_user: &id778
          type: string
          description: |-
            Indicates the user ID who most recently edited the document.
        last_user_description: &id779
          type: string
          description: |-
            Indicates additional information about the last user.
        lock_type: &id780
          type: string
          enum: ["S", "E"]
          description: |-
            Indicates the type of lock applied when the document was checked out.
            This field is applicable only to checked out documents.

            |Value|Lock Type|Description|
            |---|---|---|
            |S|Shared|The document was locked for a co-authoring session.|
            |E|Exclusive|The document was locked for editing by a single user.|
        operator: &id781
          type: string
          description: |-
            Indicates the user ID who has checked out the document or is currently editing its profile.
        retain_days: &id782
          type: integer
          description: |-
            Indicates the number of days before the inactive document is eligible for archiving.
        size: &id783
          type: integer
          description: |-
            Indicates the size of the document in bytes.
        subclass: &id784
          type: string
          description: |
            Indicates the document's subclass.<br><br>
            For example, 'Employment Letter' can be a subclass of the 'Human Resources' document class.<br>
            To get the document's class, see the parameter `class`.
        type: &id785
          type: string
          description: |-
            Indicates the type of the document which is used by the iManage Work Server to associate it to an application to open and edit. For example, WORD for Microsoft Word.
        version: &id786
          type: integer
          description: |-
            Indicates the version number of the document.
        workspace_id: &id787
          type: string
          description: |-
            Indicates the name of the workspace where the document is located.
        wopi_file_size_limit: &id788
          type: integer
          description: |-
            Indicates the maximum file size (in bytes) supported for co-authoring.
        wopi_file_size_warning: &id789
          type: boolean
          description: |-
            Indicates if the file size is approaching its upper limit for co-authoring.

            If `true`, the file size is approaching its upper limit.<br>
            If `false`, the file size is well within the upper limit.
        wstype: &id790
          $ref: '#/components/schemas/Documents.wsType'
    Documents.document-checked-out:
      properties:
        checkout_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date when the document was checked out.<br><br>Only for /checkout-info API.
        name:
          type: string
          description: |-
            Indicates the file name of the document. Excluded from admin search results.
        workspace_name:
          type: string
          description: |-
            Indicates the name of the workspace where the document is located.
        author: *id701
        checksum: *id702
        class: *id703
        co_authors: *id704
        content_type: *id705
        comment: *id706
        create_date: *id707
        custom1: *id708
        custom1_description: *id709
        custom2: *id710
        custom2_description: *id711
        custom3: *id712
        custom3_description: *id713
        custom4: *id714
        custom4_description: *id715
        custom5: *id716
        custom5_description: *id717
        custom6: *id718
        custom6_description: *id719
        custom7: *id720
        custom7_description: *id721
        custom8: *id722
        custom8_description: *id723
        custom9: *id724
        custom9_description: *id725
        custom10: *id726
        custom10_description: *id727
        custom11: *id728
        custom11_description: *id729
        custom12: *id730
        custom12_description: *id731
        custom13: *id732
        custom14: *id733
        custom15: *id734
        custom16: *id735
        custom17: *id736
        custom18: *id737
        custom19: *id738
        custom20: *id739
        custom21: *id740
        custom22: *id741
        custom23: *id742
        custom24: *id743
        custom25: *id744
        custom26: *id745
        custom27: *id746
        custom28: *id747
        custom29: *id748
        custom29_description: *id749
        custom30: *id750
        custom30_description: *id751
        custom31: *id752
        custom31_description: *id753
        library: *id754
        declared: *id755
        declared_date: *id756
        default_security: *id757
        document_number: *id758
        edit_date: *id759
        edit_profile_date: *id760
        effective_security: *id761
        extension: *id762
        file_create_date: *id763
        file_edit_date: *id764
        id: *id765
        in_use: *id766
        in_use_by: *id767
        in_use_by_description: *id768
        is_checked_out: *id769
        is_declared: *id770
        is_external: *id771
        is_external_as_normal: *id772
        is_hipaa: *id773
        is_in_use: *id774
        is_related: *id775
        is_restorable: *id776
        iwl: *id777
        last_user: *id778
        last_user_description: *id779
        lock_type: *id780
        operator: *id781
        retain_days: *id782
        size: *id783
        subclass: *id784
        type: *id785
        version: *id786
        workspace_id: *id787
        wopi_file_size_limit: *id788
        wopi_file_size_warning: *id789
        wstype: *id790
      required:
      - author
      - content_type
      - create_date
      - library
      - default_security
      - document_number
      - extension
      - file_create_date
      - file_edit_date
      - id
      - is_hipaa
      - iwl
      - size
      - type
      - version
      type: object
    Documents.document-my-check-out:
      required:
      - data
      properties: *id791
    Documents.documentCreateRequest:
      required:
      - doc_profile
      type: object
      properties: *id792
      additionalProperties: true
    Documents.supervisedDocumentCreateRequest:
      required:
      - doc_profile
      type: object
      properties:
        warnings_for_required_and_disabled_fields: *id793
        keep_locked: *id794
        doc_profile: *id795
        user_trustees: *id796
        group_trustees: *id797
      additionalProperties: true
    Documents.supervisedDocProfile:
      required:
      - name
      - extension
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the document.
        comment:
          type: string
          description: |-
            Additional information about the document. It is fully searchable. Maximum string length: 8,000.
        extension:
          type: string
          description: |
            Specifies the file name extension, also called the application extension, of the document.<br><br>
            For example: doc, xls, pdf.
        size:
          type: integer
          description: |-
            Size of the document in bytes.
        author:
          type: string
          description: |-
            The user ID of the user who created the document.
        class:
          type: string
          description: |
            The classification for identifying and differentiating the document.
            Document class is categorized by genre, department, region, and so on.
        subclass:
          type: string
          description: |-
            Sub category of the document class. For example, 'Employment Letter' is a subclass of 'HR' document class.
        content_type:
          enum: ["D", "5"]
          type: string
          description: |-
            Document content type.
        default_security:
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
          enum: [public, view, private]
          type: string
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being uploaded into the iManage Work system.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        retain_days:
          type: integer
          description: |-
            Number of days before the inactive document is eligible for archiving.
        type:
          type: string
          description: |
            Type of the document which is used by the iManage Work Server to associate it to an application to open and edit.
            For example, WORD for Microsoft Word.
        operator:
          type: string
          description: |-
            The user ID of the user who has checked out the document or is currently editing its profile.
        document_number:
          type: integer
          description: |
            Specifies the document number when using the `supervised_import_type` mode as `overwrite_doc` or `specify_doc_num`.
        version:
          type: integer
          description: |
            Specifies the document version when using the `supervised_import_type` mode as `overwrite_doc` or `specify_doc_num`.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the document was last edited.
        edit_profile_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) of the last change to the document profile.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the document was imported to iManage Work Server.
        alias:
          type: string
          description: |-
            The alias of this document.
        last_user:
          type: string
          description: |-
            Name of the user who most recently edited the document in iManage Work.
        is_declared:
          type: boolean
          description: |
            Specifies if the document has been declared as a record.<br><br>
            A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br>

            If `true`, the document is declared as a record.<br>
            If `false`, the document is declared as a record.<br>

            This field is used with `declared_date`.
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the document was declared as a record.<br><br>
            This field is used with `is_declared`. If `is_declared` is set to `true`, but `declared_date` is not provided, then the current date is used for the `declared_date`.
        is_external_as_normal:
          type: boolean
          description: |-
            If `true`, the external user is treated as normal user and can access public document.
        msg_id:
          type: string
          description: |-
            Message ID of the email.
        has_attachment:
          description: |
            Specifies to return emails that have attachments.<br><br>
            If `true`, the email must have at least one attachment.<br>
            If `false`, the email cannot have any attachments.<br>
            If this parameter is omitted, then attachment status is ignored and emails of either status are returned.
          type: boolean
        custom1:
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 metadata.
        custom2:
          type: string
          description: |-
            Alias of custom2 property. Custom2 is child of custom1 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 property.
        custom11:
          type: string
          description: |-
            Alias for custom11 property.
        custom12:
          type: string
          description: |-
            Alias for custom12 property.
        custom13:
          type: string
          description: |-
            Contents of custom13 property.
        custom14:
          type: string
          description: |-
            Contents of custom14 property.
        custom15:
          type: string
          description: |-
            Contents of custom15 property.
        custom16:
          type: string
          description: |-
            Contents of custom16 property.
        custom17:
          type: number
          description: |-
            Contents of custom17 property.
          format: double
        custom18:
          type: number
          description: |-
            Contents of custom18 property.
          format: double
        custom19:
          type: number
          description: |-
            Contents of custom19 property.
          format: double
        custom20:
          type: number
          description: |-
            Contents of custom20 property.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom24 property.
        custom25:
          type: boolean
          description: |-
            Boolean value of custom25 property.
        custom26:
          type: boolean
          description: |-
            Boolean value of custom26 property.
        custom27:
          type: boolean
          description: |-
            Boolean value of custom27 property.
        custom28:
          type: boolean
          description: |-
            Boolean value of custom28 property.
        custom29:
          type: string
          description: |-
            Alias of custom29 property. Custom29 is the parent of custom30 property.
        custom30:
          type: string
          description: |-
            Alias of custom30 property. Custom30 is the child of custom29 property.
      additionalProperties: true
    Documents.documentDocIdPatchActionRequest:
      required:
      - action
      type: object
      properties:
        action:
          enum: [unlock]
          type: string
      additionalProperties: false
    Documents.documentDocIdHistoryListPostRequest:
      type: array
      items: *id798
    Documents.documentDocIdHistoryListPostResponse:
      required:
      - error
      type: object
      properties:
        error:
          required:
          - code
          type: object
          properties:
            code:
              enum: ["NRC_INVALID_PARAM", "NRC_INDEX_PROMISCUOUS", "NRC_INVALID_PROFILE",
                "NRC_INVALID_DOCUMENT_TYPE", "NRC_INVALID_FOLDER_TYPE"]
              type: string
              description: |-
                Indicates the error type.
            code_message:
              type: string
              description: |-
                Indicates a description of the error.
            dms_version:
              type: string
              description: |-
                Indicates the DMS version.
            transaction:
              type: string
              description: |-
                Indicates transaction name on which an error occurred.
            messages:
              type: array
              items:
                required:
                - code
                type: object
                properties:
                  code:
                    type: string
                    description: |-
                      Indicates the error code.
                  code_message:
                    type: string
                    description: |-
                      Indicates a description of the error.
                  field:
                    type: string
                    description: |-
                      Indicates the field that contains the error associated with document profiles.
                  data:
                    anyOf:
                    - type: object
                    - type: array
                      items: {}
                    - type: string
                    - type: integer
                    description: |-
                      Indicates detailed JSON structure related to the failed data.
                additionalProperties: false
              description: |-
                Indicates additional details about the error for the request or for fields.
          additionalProperties: false
      additionalProperties: false
      description: |-
        Audit details.
    Documents.documentDocIdHistoryMultiplePostRequest:
      type: array
      properties: *id799
      additionalProperties: true
      required:
      - activity
      - activity_code
    Documents.documentDocIdVersionPromotePostRequest:
      type: object
      anyOf:
      - *id800
      - *id801
    Documents.documentDocIdVersionPromotePostResponse:
      required:
      - data
      type: object
      properties: *id802
      additionalProperties: false
    Documents.documentDocIdVersionPromoteByJournalId:
      allOf:
      - properties:
          doc_profile:
            type: object
            properties:
              name:
                type: string
                description: |-
                  The name of the document.
                example: Trial Preparation Notes
              comment:
                type: string
                description: |-
                  Additional information about the document. It is fully searchable. Maximum string length: 8,000.
                example: Created a new version from an older document revision.
              author:
                type: string
                description: |-
                  The user ID of the user who created the document.
                example: CPIERCE
              class:
                type: string
                description: |
                  The classification for identifying and differentiating the document.
                  Document class is categorized by genre, department, region, and so on.
                example: DOC
              default_security:
                description: |-
                  The default access level.

                  |Value|Description|
                  |:---|:---|
                  |inherit|The container or document inherits security settings from its parent container.|
                  |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                  |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                  |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                x-inherit:
                  $ref: '#/components/schemas/Documents.accessRule'
                example: public
              custom1:
                type: string
                description: |-
                  Alias of custom1 property. Custom1 is parent of custom2 metadata.
                example: ACME
            additionalProperties: true
          group_trustees:
            x-inherit:
              $ref: '#/components/schemas/Documents.groupTrustees'
          user_trustees:
            x-inherit:
              $ref: '#/components/schemas/Documents.userTrustees'
          warnings_for_required_and_disabled_fields:
            type: boolean
            description: |
              Specifies to include warnings if required fields are missing, or disabled fields are included.

              If `true`, warnings are included, and the request will attempt to complete.<br>
              If `false`, warnings are not included, and the request will fail if any are present.
            default: false
            example: true
        additionalProperties: true
      - type: object
        properties:
          journal_id:
            type: string
            description: |-
              The journal ID of the document to copy the document stream from.

              Either `journal_id` or `version` must be specified.
            example: 98391386243474030
        required:
        - journal_id
      title: Using Journal ID
    Documents.documentDocIdVersionPromoteByVersion:
      allOf:
      - properties:
          doc_profile:
            type: object
            properties:
              name:
                type: string
                description: |-
                  The name of the document.
                example: Trial Preparation Notes
              comment:
                type: string
                description: |-
                  Additional information about the document. It is fully searchable. Maximum string length: 8,000.
                example: Created a new version from an older document revision.
              author:
                type: string
                description: |-
                  The user ID of the user who created the document.
                example: CPIERCE
              class:
                type: string
                description: |
                  The classification for identifying and differentiating the document.
                  Document class is categorized by genre, department, region, and so on.
                example: DOC
              default_security:
                description: |-
                  The default access level.

                  |Value|Description|
                  |:---|:---|
                  |inherit|The container or document inherits security settings from its parent container.|
                  |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
                  |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
                  |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
                x-inherit:
                  $ref: '#/components/schemas/Documents.accessRule'
                example: public
              custom1:
                type: string
                description: |-
                  Alias of custom1 property. Custom1 is parent of custom2 metadata.
                example: ACME
            additionalProperties: true
          group_trustees:
            x-inherit:
              $ref: '#/components/schemas/Documents.groupTrustees'
          user_trustees:
            x-inherit:
              $ref: '#/components/schemas/Documents.userTrustees'
          warnings_for_required_and_disabled_fields:
            type: boolean
            description: |
              Specifies to include warnings if required fields are missing, or disabled fields are included.

              If `true`, warnings are included, and the request will attempt to complete.<br>
              If `false`, warnings are not included, and the request will fail if any are present.
            default: false
            example: true
        additionalProperties: true
      - type: object
        properties:
          version:
            type: integer
            description: |-
              The document version number to copy the document stream from.

              Either `journal_id` or `version` must be specified.
            example: 5
        required:
        - version
      title: Using Version
    Documents.documentDocIdHistoryPostRequest:
      required:
      - audit
      type: object
      properties: *id803
      additionalProperties: false
      description: |-
        Audit details.
    Security.multipleTrusteesSecurityResponse:
      required:
      - data
      type: object
      properties: *id515
      additionalProperties: true
    Documents.documentDocIdSharePostRequest:
      required:
      - to
      type: object
      properties: *id804
      additionalProperties: false
    Documents.documentOrDocumentPatchActionRequest:
      anyOf:
      - $ref: '#/components/schemas/Documents.documentDocIdPatchActionRequest'
      - $ref: '#/components/schemas/Documents.documentPutRequest-v1'
      additionalProperties: false
    Documents.documentCheckProfileRequest:
      type: object
      properties: *id805
      additionalProperties: false
    Documents.documentPatchProfileRequest:
      type: object
      properties: *id806
      additionalProperties: false
    Documents.documentResponseSingle:
      required:
      - data
      type: object
      properties: *id396
      additionalProperties: false
    Documents.documentsResponseMultiple:
      required:
      - data
      type: object
      properties: *id407
      additionalProperties: false
    Documents.documentsSearchResponseExcludingTotalCount-v1:
      required:
      - data
      type: object
      properties:
        data: *id807
      additionalProperties: false
    Documents.documentsSearchResponse-v1:
      required:
      - data
      type: object
      properties:
        data: &id862
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Documents.emailWithFlattenedParticipants'
            - $ref: '#/components/schemas/Documents.documentBase'
        total_count: &id863
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Documents.documentsResponseMultiple-checkedOut:
      required:
      - data
      type: object
      properties: *id808
      additionalProperties: false
    Documents.documentsResponseMultiple-myCheckedOut:
      required:
      - data
      type: object
      properties: *id809
      additionalProperties: false
    Documents.documentsResponseMultiple-CursorPaginated:
      required:
      - data
      - cursor
      properties:
        cursor:
          type: string
          description: |-
            The next position of cursor returned by the server.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
        data: *id810
        total_count: *id811
      additionalProperties: false
      type: object
    Documents.documentsSearchResponse:
      required:
      - data
      type: object
      properties: *id370
      additionalProperties: false
    Documents.documentProfileSingleResponse:
      required:
      - data
      type: object
      properties: *id812
      additionalProperties: false
    Documents.documentPutRequest-v1:
      type: object
      properties:
        name:
          type: string
          description: |-
            File name of the document
        author:
          type: string
          description: |-
            ID of the user who created the document.
        operator:
          type: string
          description: |-
            ID of the user who has checked out the document or is currently editing its profile.
        class:
          type: string
          description: |-
            Class of the document
        subclass:
          type: string
          description: |-
            Sub category of the document class. For example, 'Employment Letter' is a subclass of 'HR' document class.
        retain_days:
          type: integer
          description: |-
            Number of days before the inactive document is eligible for archiving.
        indexable:
          type: boolean
          description: |-
            Is `true` if the document can be indexed.
        default_security:
          $ref: '#/components/schemas/Documents.accessRule'
        is_checked_out:
          type: boolean
          description: |-
            Indicates if the document is currently checked out.<br><br>
            If `true`, it is checked out.<br>
            If `false`, it is not checked out.
        comment:
          type: string
          description: |-
            Additional information about the document. It is fully searchable. Maximum string length&colon; 8,000.
        custom1:
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 property.
        custom2:
          type: string
          description: |-
            Alias of custom2 property. Custom2 is child of custom1 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 property.
        custom11:
          type: string
          description: |-
            Alias for custom11 property.
        custom12:
          type: string
          description: |-
            Alias for custom12 property.
        custom13:
          type: string
          description: |-
            Alias for custom13 property.
        custom14:
          type: string
          description: |-
            Alias for custom14 property.
        custom15:
          type: string
          description: |-
            Alias for custom15 property.
        custom16:
          type: string
          description: |-
            Alias for custom16 property.
        custom17:
          type: number
          description: |-
            Alias for custom17 property.
          format: double
        custom18:
          type: number
          description: |-
            Alias for custom18 property.
          format: double
        custom19:
          type: number
          description: |-
            Alias for custom19 property.
          format: double
        custom20:
          type: number
          description: |-
            Alias for custom20 property.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 property.
        custom25:
          type: boolean
          description: |-
            Boolean value of custom25 property.
        custom26:
          type: boolean
          description: |-
            Boolean value of custom26 property.
        custom27:
          type: boolean
          description: |-
            Boolean value of custom27 property.
        custom28:
          type: boolean
          description: |-
            Boolean value of custom28 property.
        custom29:
          type: string
          description: |-
            Alias of custom29 property. Custom29 is the parent of custom30 property.
        custom30:
          type: string
          description: |-
            Alias of custom30 property. Custom30 is the child of custom29 property.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        extension:
          type: string
          description: |
            Indicates the file name extension, also called the application extension, of the document.<br><br>
            For example: doc, xls, pdf.
        content_type:
          enum: ["D", "5"]
          type: string
          description: |-
            Document content type.
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being uploaded into the iManage Work system.
        has_attachment:
          description: |
            Specifies to return emails that have attachments.<br><br>
            If `true`, the email must have at least one attachment.<br>
            If `false`, the email cannot have any attachments.<br>
            If this parameter is omitted, then attachment status is ignored and emails of either status are returned.
          type: boolean
        is_external:
          type: string
          description: |-
            Is `true` when the document is shared with the external users.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
    Documents.documentProfile:
      type: object
      properties:
        audit: &id813
          description: |-
            Audit information.
          type: object
          properties: *id699
          additionalProperties: true
        author: &id814
          type: string
          description: |-
            ID of the user who created the document.
        class: &id815
          type: string
          description: |-
            Classification for identifying and differentiating the document. Document class is categorized by genre, department, region, and so on.
        name: &id816
          type: string
          description: |-
            File name of the document.
        operator: &id817
          type: string
          description: |-
            ID of the user who has checked out the document or is currently editing its profile.
        subclass: &id818
          type: string
          description: |-
            Sub category of the document class. For example, 'Employment Letter' is a subclass of 'HR' document class.
        retain_days: &id819
          type: integer
          description: |-
            Number of days before the inactive document is eligible for archiving.
        is_declared: &id820
          type: boolean
          description: |
            Indicates if the document has been declared as a record.
            A document that has been declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the document is declared as a record.<br>
            If `false`, the document is declared as a record. <br><br>
            This field is used with `declared_date`.
        default_security: &id821
          $ref: '#/components/schemas/Documents.accessRule'
        is_checked_out: &id822
          type: boolean
          description: |-
            Indicates if the document is currently checked out.<br><br>
            If `true`, it is checked out.<br>
            If `false`, it is not checked out.
        comment: &id823
          type: string
          description: |-
            Additional information about the document. It is fully searchable. Maximum string length&colon; 8,000.
        custom1: &id824
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 metadata.
        custom2: &id825
          type: string
          description: |-
            Alias of custom2 property. Custom2 is child of custom1 property.
        custom3: &id826
          type: string
          description: |-
            Alias for custom3 property.
        custom4: &id827
          type: string
          description: |-
            Alias for custom4 property.
        custom5: &id828
          type: string
          description: |-
            Alias for custom5 property.
        custom6: &id829
          type: string
          description: |-
            Alias for custom6 property.
        custom7: &id830
          type: string
          description: |-
            Alias for custom7 property.
        custom8: &id831
          type: string
          description: |-
            Alias for custom8 property.
        custom9: &id832
          type: string
          description: |-
            Alias for custom9 property.
        custom10: &id833
          type: string
          description: |-
            Alias for custom10 property.
        custom11: &id834
          type: string
          description: |-
            Alias for custom11 property.
        custom12: &id835
          type: string
          description: |-
            Alias for custom12 property.
        custom13: &id836
          type: string
          description: |-
            Contents of custom13 property.
        custom14: &id837
          type: string
          description: |-
            Contents of custom14 property.
        custom15: &id838
          type: string
          description: |-
            Contents of custom15 property.
        custom16: &id839
          type: string
          description: |-
            Contents of custom16 property.
        custom17: &id840
          type: number
          description: |-
            Contents of custom17 property.
          format: double
        custom18: &id841
          type: number
          description: |-
            Contents of custom18 property.
          format: double
        custom19: &id842
          type: number
          description: |-
            Contents of custom19 property.
          format: double
        custom20: &id843
          type: number
          description: |-
            Contents of custom20 property.
          format: double
        custom21: &id844
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom21 property.
        custom22: &id845
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom22 property.
        custom23: &id846
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom23 property.
        custom24: &id847
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Contents of custom24 property.
        custom25: &id848
          type: boolean
          description: |-
            Boolean value of custom25 property.
        custom26: &id849
          type: boolean
          description: |-
            Boolean value of custom26 property.
        custom27: &id850
          type: boolean
          description: |-
            Boolean value of custom27 property.
        custom28: &id851
          type: boolean
          description: |-
            Boolean value of custom28 property.
        custom29: &id852
          type: string
          description: |-
            Alias of custom29 property. Custom29 is the parent of custom30 property.
        custom30: &id853
          type: string
          description: |-
            Alias of custom30 property. Custom30 is the child of custom29 property.
        custom31: &id854
          type: string
          description: |-
            Reserved. Do not use.
        extension: &id855
          type: string
          description: |
            Indicates the file name extension, also called the application extension, of the document.<br><br>
            For example: doc, xls, pdf.
        content_type: &id856
          type: string
          description: |-
            Document content type.
        file_create_date: &id857
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date in (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was created in, or imported to, the iManage Work system.
        file_edit_date: &id858
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being uploaded into the iManage Work system.
        is_external: &id859
          type: boolean
          description: |-
            Is `true` when the document is shared with the external users.
        is_hipaa: &id860
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
      additionalProperties: false
    Documents.documentProfileWithChecksum:
      properties:
        checksum:
          type: string
          description: |
            Indicates the value of the document's checksum.

            The document checksum is a calculated value based the document's content.
            It is used to verify the integrity of a document content during transfer.

            During a file upload, the checksum of the content is calculated and saved along with the document profile.
            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
            If the checksum values do not match, the request fails.
            If the document profile in the request does not include checksum property, the comparison is not performed.

            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        audit: *id813
        author: *id814
        class: *id815
        name: *id816
        operator: *id817
        subclass: *id818
        retain_days: *id819
        is_declared: *id820
        default_security: *id821
        is_checked_out: *id822
        comment: *id823
        custom1: *id824
        custom2: *id825
        custom3: *id826
        custom4: *id827
        custom5: *id828
        custom6: *id829
        custom7: *id830
        custom8: *id831
        custom9: *id832
        custom10: *id833
        custom11: *id834
        custom12: *id835
        custom13: *id836
        custom14: *id837
        custom15: *id838
        custom16: *id839
        custom17: *id840
        custom18: *id841
        custom19: *id842
        custom20: *id843
        custom21: *id844
        custom22: *id845
        custom23: *id846
        custom24: *id847
        custom25: *id848
        custom26: *id849
        custom27: *id850
        custom28: *id851
        custom29: *id852
        custom30: *id853
        custom31: *id854
        extension: *id855
        content_type: *id856
        file_create_date: *id857
        file_edit_date: *id858
        is_external: *id859
        is_hipaa: *id860
      additionalProperties: false
      type: object
    Documents.documentUserSecurityResponse:
      required:
      - data
      type: object
      properties: *id861
    Documents.documentsSearchResponse-CursorPaginatedIncludeTotalCount-v1:
      properties:
        cursor:
          type: string
          description: |-
            The next position of the cursor returned by the server.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
        data: *id862
        total_count: *id863
      additionalProperties: false
      required:
      - data
      type: object
    Documents.documentsSearchResponse-CursorPaginated-v1:
      properties: *id864
      additionalProperties: false
      required:
      - data
      type: object
    Documents.documentsSearchResponse-CursorPaginated:
      properties: *id865
      additionalProperties: false
      required:
      - data
      type: object
    Documents.documentUpdateRequest-v1:
      required:
      - doc_profile
      type: object
      properties:
        doc_profile:
          $ref: '#/components/schemas/Documents.documentPutRequest-v1'
      additionalProperties: false
    Documents.documentUpdateRequest:
      required:
      - doc_profile
      type: object
      properties: *id866
      additionalProperties: false
    Documents.effectiveSecurity:
      enum: ["no_access", "read", "read_write", "full_access"]
      type: string
      description: |
        Indicates the effective security access level available to the user.

        Effective security is the access level that is the net result of a combination of the following:
        * an objects's default security
        * a user's access permission for that object
        * possible conflicts among groups to which the user belongs to
        * the security model being used.

        The available access levels are:

        |Access level|Description|
        |:---|:---|
        |no_access|The user has no access, or any permissions to the container or document.|
        |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
    Documents.emailParticipant:
      required:
      - address
      type: object
      properties:
        address:
          type: string
          description: |-
            The email address of a recipient.
        name:
          type: string
          description: |-
            The display name of a recipient.
      additionalProperties: true
      description: |-
        Email Participant
    Documents.emailWithFlattenedParticipants:
      required:
      - subject
      properties:
        conversation_count:
          type: integer
          description: |-
            Number of emails that are part of the same conversation thread. Returned only for email folder children and recent emails.
        conversation_id:
          type: string
          description: |-
            Serialized form of the email's normalized subject header to identify an email thread. For example, base64-encoded.
        conversation_name:
          type: string
          description: |-
            Normalized subject header of the email with "RE:" and "FWD:" stripped. Note that this is language specific.
        received_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the email was received.
        sent_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the email was sent.
        subject:
          type: string
          description: |-
            Email subject header.
        bcc:
          type: string
          description: |-
            Recipients to whom the email is blind carbon copied.
        cc:
          type: string
          description: |-
            Recipients to whom the email is carbon copied.
        from:
          type: string
          description: |-
            Sender of the email.
        to:
          type: string
          description: |-
            Recipient of the email.
        id: *id867
        database: *id868
        document_number: *id869
        version: *id870
        name: *id871
        checksum: *id872
        alias: *id873
        author: *id874
        operator: *id875
        type: *id876
        class: *id877
        subclass: *id878
        edit_date: *id879
        create_date: *id880
        retain_days: *id881
        size: *id882
        indexable: *id883
        is_related: *id884
        location: *id885
        default_security: *id886
        last_user: *id887
        in_use_by: *id888
        in_use: *id889
        is_checked_out: *id890
        archived: *id891
        comment: *id892
        custom1: *id893
        custom1_description: *id894
        custom2: *id895
        custom2_description: *id896
        custom3: *id897
        custom3_description: *id898
        custom4: *id899
        custom4_description: *id900
        custom5: *id901
        custom5_description: *id902
        custom6: *id903
        custom6_description: *id904
        custom7: *id905
        custom7_description: *id906
        custom8: *id907
        custom8_description: *id908
        custom9: *id909
        custom9_description: *id910
        custom10: *id911
        custom10_description: *id912
        custom11: *id913
        custom11_description: *id914
        custom12: *id915
        custom12_description: *id916
        custom13: *id917
        custom14: *id918
        custom15: *id919
        custom16: *id920
        custom17: *id921
        custom18: *id922
        custom19: *id923
        custom20: *id924
        custom21: *id925
        custom22: *id926
        custom23: *id927
        custom24: *id928
        custom25: *id929
        custom26: *id930
        custom27: *id931
        custom28: *id932
        custom29: *id933
        custom29_description: *id934
        custom30: *id935
        custom30_description: *id936
        custom31: *id937
        custom31_description: *id938
        access: *id939
        checkout_path: *id940
        checkout_due_date: *id941
        checkout_comment: *id942
        author_description: *id943
        operator_description: *id944
        type_description: *id945
        class_description: *id946
        subclass_description: *id947
        last_user_description: *id948
        in_use_by_description: *id949
        extension: *id950
        content_type: *id951
        edit_profile_date: *id952
        access_time: *id953
        checkout_date: *id954
        is_declared: *id955
        is_external: *id956
        has_attachment: *id957
        is_external_as_normal: *id958
        effective_security: *id959
        declared_date: *id960
        file_create_date: *id961
        file_edit_date: *id962
        arch_req: *id963
        is_hipaa: *id964
        workspace_name: *id965
        linksite_url: *id966
        activity_date: *id967
        is_latest: *id968
        is_restorable: *id969
        is_most_recent_activity: *id970
        attachments: *id971
        wstype: *id972
        iwl: *id973
        workspace_id: *id974
        lock_type: *id975
        co_authors: *id976
        wopi_file_size_limit: *id977
        wopi_file_size_warning: *id978
      additionalProperties: true
      type: object
    Documents.emptyJsonResponse:
      type: object
      additionalProperties: false
      description: |-
        A JSON body without any properties.
    Documents.newDocumentVersionRequest:
      required:
      - doc_profile
      - group_trustees
      - user_trustees
      type: object
      properties: *id979
      additionalProperties: true
      description: |-
        Describes a create request for a new document version.
    Documents.parent:
      required:
      - document
      - folder
      type: object
      properties:
        document:
          type: integer
          description: |-
            Indicates the document number.
          example: 112
        folder:
          type: integer
          description: |-
            Indicates the folder number of the parent folder of a document.
          example: 222
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The creation time (in ISO 8601 format) of the document-folder relation.
            A document-folder relation is created when a document is uploaded to a folder or added as a reference to it.
          example: "2020-11-13T20:40:34Z"
      additionalProperties: false
    Documents.parentsPostRequest:
      required:
      - document_numbers
      type: object
      properties: *id980
      additionalProperties: false
      description: |-
        Represents a request for retrieving the parents of a list of items.
    Documents.parentsPostResponse:
      required:
      - data
      type: object
      properties: *id981
      additionalProperties: false
    Documents.relatedDocumentsPostRequest:
      required:
      - id
      type: object
      properties: *id982
      additionalProperties: true
    Documents.searchFilterAggregationResult:
      required:
      - alias
      - count
      - description
      type: object
      properties:
        alias: &id983
          type: string
          description: |-
            Alias of the search filter.
        count: &id984
          type: integer
          description: |-
            Aggregated count for the filter.
        description: &id985
          type: string
          description: |-
            Description of the search filter.
      additionalProperties: false
    Documents.searchFilterAggregationOwnerResult:
      properties:
        is_external:
          type: boolean
          description: |+
            Indicates that  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.

        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.

            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.
        alias: *id983
        count: *id984
        description: *id985
      additionalProperties: false
      required:
      - alias
      - count
      - description
      type: object
    Documents.searchFilter:
      type: object
      properties:
        class:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Class aggregated search filter results.
        custom1:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom1 aggregated search filter results.
        custom2:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom2 aggregated search filter results.
        custom3:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom3 aggregated search filter results.
        custom4:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom4 aggregated search filter results.
        custom5:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom5 aggregated search filter results.
        custom6:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom6 aggregated search filter results.
        custom7:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom7 aggregated search filter results.
        custom8:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom8 aggregated search filter results.
        custom9:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom9 aggregated search filter results.
        custom10:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom10 aggregated search filter results.
        custom11:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom11 aggregated search filter results.
        custom12:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom12 aggregated search filter results.
        custom29:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom29 aggregated search filter results.
        custom30:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Custom30 aggregated search filter results.
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationOwnerResult'
          description: |-
            Owners aggregated search filter results.
        senders:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Senders aggregated search filter results.
        subclass:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Subclass aggregated search filter results.
        types:
          type: array
          items:
            $ref: '#/components/schemas/Documents.searchFilterAggregationResult'
          description: |-
            Aggregated search filter results for file types.
      additionalProperties: false
    Documents.supervisedImportRequest:
      required: *id986
      properties: *id987
      additionalProperties: true
      type: object
    Documents.warning:
      required:
      - field
      - error
      type: object
      properties:
        field:
          type: string
          description: |-
            Field with a validation warning.
        error:
          type: string
          description: |-
            Type of the error associated with the field.
      additionalProperties: false
    Documents.wsType:
      enum: ["document", "folder", "workspace", "email", "document_shortcut", "folder_shortcut",
        "workspace_shortcut", "user"]
      type: string
      description: |
        Indicates the iManage Work object type.

        |Value|Description|
        |:---|:---|
        |document|A document object.|
        |folder|A folder object.|
        |workspace|A workspace object.|
        |email|An email object.|
        |document_shortcut|A shortcut to the document object.|
        |folder_shortcut|A shortcut to the folder object.|
        |workspace_shortcut|A shortcut to the workspace object.|
        |user|A user object.|
    DocumentSearch.request:
      title: Document Search Request
      type: object
      properties: *id569
      example: *id570
    DocumentSearch.response:
      title: Post Document Search Response
      required:
      - data
      - overflow
      type: object
      properties: *id571
      example: *id572
    Domains.createRequest:
      required:
      - subdomain
      - type
      title: Create a custom domain
      type: object
      properties: *id988
      additionalProperties: false
    Domains.domain:
      required:
      - id
      - subdomain
      - type
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the ID of the custom domain.
        customer_id:
          type: number
          description: |-
            Indicates the customer ID of the customer associated with this domain.
        subdomain:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
          minLength: 3
          maxLength: 63
          description: |-
            Indicates the name of the custom subdomain. This value must be globally unique across the iManage systems.
        type:
          type: string
          enum:
          - primary
          - secondary
          description: |-
            Indicates the type of the custom domain. Only one domain must be designated as the primary domain.

            The following are types of domains:

            |Type|Description|
            |---|---|
            |primary| The main domain name that represents an organization's website address. If there is only one domain, it is registered as the primary domain by default. If there are more than one domains, then one of them must be registered as the primary domain.|
            |secondary| Any additional domain other than the primary domain is a secondary domain.|
      additionalProperties: false
    Domains.getAllResponse:
      title: Custom domains search response
      required:
      - data
      type: object
      properties: *id989
      example:
        data:
        - id: '9446646844'
          customer_id: '100'
          subdomain: ajubalaw
          type: primary
        - id: '9446646846'
          customer_id: '100'
          subdomain: ajb
          type: secondary
        - id: '9446646849'
          customer_id: '100'
          subdomain: ajuba
          type: secondary
    Domains.singleDomainResponse:
      title: Single domain response
      required:
      - data
      type: object
      properties: *id593
      example: *id594
    Domains.updateRequest:
      title: Update a custom domain
      type: object
      properties: *id990
      additionalProperties: false
    Emails.document:
      type: object
      properties: &id1101
        id:
          type: string
          description: |-
            Indicates the document ID.
        database:
          type: string
          description: |-
            Indicates the library where the document is located.
        document_number:
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        version:
          type: integer
          description: |-
            Indicates the version number of the document.
        name:
          type: string
          description: |-
            Indicates the file name of the document.
        checksum:
          type: string
          description: |
            Indicates the value of the document's checksum.

            The document checksum is a calculated value based the document's content.
            It is used to verify the integrity of a document content during transfer.

            During a file upload, the checksum of the content is calculated and saved along with the document profile.
            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
            If the checksum values do not match, the request fails.
            If the document profile in the request does not include checksum property, the comparison is not performed.

            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        alias:
          type: string
          description: |-
            The alias of this document. Alias is an additional metadata property available on the documents.
        author:
          type: string
          description: |-
            ID of the user who created the document.
        operator:
          type: string
          description: |-
            Indicates user ID of the document's operator.
        type:
          type: string
          description: |
            Indicates the type of the document.<br><br>
            The document type is used to associate it to an application.
            For example, WORD for Microsoft Word.
        class:
          type: string
          description: |-
            Indicates the document class.
        subclass:
          type: string
          description: |-
            Indicates the document subclass.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the most recent date (in ISO 8601 format) when the document was edited.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was saved or imported to iManage Work Server.
        retain_days:
          type: integer
          description: |-
            Indicates the number of days before the inactive document is eligible for archiving.
        size:
          type: integer
          description: |-
            Indicates the size of the document in bytes.
          format: int64
        indexable:
          type: boolean
          description: |-
            Indicates if the document can be indexed.
        is_related:
          type: string
          description: |
            Indicates that the document is related to another document.<br><br>
            Document relations are used to group documents and their attachments. For example: A contract and its amendments. <br>
            They are also used to link a document with the documents that were used to create it. For example, a final report with its inserts,
            which could be spreadsheets, graphics files, tables, figures, and charts.<br><br>
            If `true`, the document is related to another document. <br>
            If `false`, the document is related to another document.
        location:
          type: string
          description: |
            Indicates the file path on the iManage Work server.<br><br>
            This may null if it is not available for the platform.
        default_security:
          enum: ["public", "view", "private", "inherited"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        last_user:
          type: string
          description: |-
            Indicates the user ID who most recently edited the document.
        in_use_by:
          type: string
          description: |-
            Indicates the user ID who is currently working on the document or has checked it out.
        in_use:
          type: boolean
          description: |
            Indicates the document is currently in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.<br><br>
            To check if the document is checked out, see the parameter `is_checked_out`.
        is_checked_out:
          type: boolean
          description: |
            Indicates the document is currently checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.<br><br>
            To check if the document is in use, see the parameter `in_use`.
        archived:
          type: boolean
          description: |-
            Indicates that the document is archived to an archive location.
        comment:
          type: string
          description: |
            Indicates additional information about the document.<br><br>
            It is fully searchable. Maximum string length&colon; 8,000.
        custom1:
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 property.
        custom1_description:
          type: string
          description: |-
            Additional information about the property.
        custom2:
          type: string
          description: |-
            Alias of custom2 . Custom2 is child of custom1 property.
        custom2_description:
          type: string
          description: |-
            Additional information about the custom2 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 property.
        custom3_description:
          type: string
          description: |-
            Additional information about the custom3 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 property.
        custom4_description:
          type: string
          description: |-
            Additional information about the custom4 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 property.
        custom5_description:
          type: string
          description: |-
            Additional information about the custom5 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 property.
        custom6_description:
          type: string
          description: |-
            Additional information about the custom6 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 property.
        custom7_description:
          type: string
          description: |-
            Additional information about the custom7 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 property.
        custom8_description:
          type: string
          description: |-
            Additional information about the custom8 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 property.
        custom9_description:
          type: string
          description: |-
            Additional information about the custom9 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 property.
        custom10_description:
          type: string
          description: |-
            Additional information about the custom10 property.
        custom11:
          type: string
          description: |-
            Alias for custom11 property.
        custom11_description:
          type: string
          description: |-
            Additional information about the property.
        custom12:
          type: string
          description: |-
            Alias for custom12 property.
        custom12_description:
          type: string
          description: |-
            Additional information about the custom12 property.
        custom13:
          type: string
          description: |-
            Alias for custom13 property.
        custom14:
          type: string
          description: |-
            Alias for custom14 property.
        custom15:
          type: string
          description: |-
            Alias for custom15 property.
        custom16:
          type: string
          description: |-
            Alias for custom16 property.
        custom17:
          type: number
          description: |-
            Alias for custom17 property.
          format: double
        custom18:
          type: number
          description: |-
            Alias for custom18 property.
          format: double
        custom19:
          type: number
          description: |-
            Alias for custom19 property.
          format: double
        custom20:
          type: number
          description: |-
            Alias for custom20 property.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 property.
        custom25:
          type: boolean
          description: |-
            Alias for custom25 property.
        custom26:
          type: boolean
          description: |-
            Alias for custom26 property.
        custom27:
          type: boolean
          description: |-
            Alias for custom27 property.
        custom28:
          type: boolean
          description: |-
            Alias for custom28 property.
        custom29:
          type: string
          description: |-
            Alias of custom29 property. Custom29 is parent of custom30 property.
        custom29_description:
          type: string
          description: |-
            Additional information about the custom29 property.
        custom30:
          type: string
          description: |-
            Alias of custom30 property. Custom30 is child of custom29 property.
        custom30_description:
          type: string
          description: |-
            Additional information about the custom30 property.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description:
          type: string
          description: |-
            Reserved. Do not use.
        access:
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        checkout_path:
          type: string
          description: |-
            Indicates the path where the document is checked out.
        checkout_due_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the due date (in ISO 8601 format) for checkout.<br><br>
            The document should be checked in within this due date.
        checkout_comment:
          type: string
          description: |-
            Indicates additional information provided by the user when the document is checked out.
        author_description:
          type: string
          description: |-
            Indicates the full name of the user who created the document.
        operator_description:
          type: string
          description: |-
            Indicates the user ID of the operator.
        type_description:
          type: string
          description: |-
            Indicates a description of the document type.
        class_description:
          type: string
          description: |-
            Indicates additional information about the document class.
        subclass_description:
          type: string
          description: |-
            Indicates additional information about the subclass.
        last_user_description:
          type: string
          description: |-
            Indicates the user ID who last edited the document.
        in_use_by_description:
          type: string
          description: |-
            Indicates the user ID who currently has the document checked out.
        extension:
          type: string
          description: |-
            Indicates the file extension of the document.
        content_type:
          type: string
          description: |-
            Indicates the content type of the document.
        edit_profile_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document profile was last changed.
        access_time:
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when an activity was performed on the document.
        checkout_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was last checked out.
        is_declared:
          type: boolean
          description: |
            Indicates if a document is declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the document is declared as a record.<br>
            If `false`, the document is not declared as a record.<br><br>
            For the date it was declared as a record, see the parameter `declared_date`.
        is_external:
          type: boolean
          description: |-
            Is `true` when the document is shared with the external users.
        has_attachment:
          type: boolean
          description: |
            Indicates the document has an attachment.<br><br>
            If `true`, the document has an attachment.<br>
            If `false`, the document does not have an attachment.
        is_external_as_normal:
          type: boolean
          description: |-
            If `true`, the external user is treated as normal user and can access public document.
        effective_security:
          enum: ["no_access", "read", "read_write", "full_access"]
          type: string
          description: |
            Indicates the effective security access level available to the user.

            Effective security is the access level that is the net result of a combination of the following:
            * an objects's default security
            * a user's access permission for that object
            * possible conflicts among groups to which the user belongs to
            * the security model being used.

            The available access levels are:

            |Access level|Description|
            |:---|:---|
            |no_access|The user has no access, or any permissions to the container or document.|
            |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
            A record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
            To see if a document has been declared, see the parameter `is_declared`.
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was saved or imported to the iManage Work system.<br>
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being saved or imported into the iManage Work system.
            This date can be different than `edit_date`.
            The `edit_date` is the date when the file was edited in the iManage Work system.<br>
        arch_req:
          type: string
          description: |
            Indicates the document is marked for archive.<br><br>
            If `true`, the document is marked for archive.<br>
            If `false`, the document is not marked for archive.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        workspace_name:
          type: string
          description: |-
            Indicates the name of the workspace where the document is located.
        linksite_url:
          type: string
          description: |-
            Indicates the secure document URL created by LinkSite application.
        activity_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) of the last activity performed by the current user for the document.
        is_latest:
          type: boolean
          description: |-
            Indicates whether to return the latest version of the document.
        is_restorable:
          type: boolean
          description: |
            Indicates if the document can be restored.<br><br>
            If `true`, the document can be restored.<br>
            If `false`, the document cannot be restored.
        is_most_recent_activity:
          type: boolean
          description: |
            Indicates if the edit date is same as the recent activity date.<br><br>
            If `true`, the edit date is same as the recent activity date.<br>
            If `false`, the edit date is not same as the recent activity date.
        attachments:
          type: array
          items:
            required:
            - id
            - size
            type: object
            properties:
              attachment_id:
                type: string
                description: |-
                  The document ID if the attachment is in the library. Currently it applies to *.nrl files.
              id:
                type: string
                description: |-
                  Unique identifier for the attachment.
              name:
                type: string
                description: |-
                  File name of the attachment.
              size:
                type: integer
                description: |-
                  Size of the attachment in bytes.
                format: int64
            additionalProperties: false
            description: |-
              Document Attachment
          description: |
            Indicates the document ID of an attachment in the same library.<br><br>
            This applies to .nrl files only.
        wstype:
          type: string
          description: |-
            Indicates the iManage Work object type.
        iwl:
          type: string
          description: |
            Indicates the iManage Work Link (iWL) of a document.<br><br>
            The iManage Work Link is used to open a document in Protected View Mode by a user who has read/write or full access to it.
        workspace_id:
          type: string
          description: |-
            Indicates the workspace ID where the document is located.
        lock_type:
          type: string
          enum: ["S", "E"]
          description: |-
            Indicates the type of lock applied when the document was checked out.
            This field is applicable only to checked out documents.

            |Value|Lock Type|Description|
            |---|---|---|
            |S|Shared|The document was locked for a co-authoring session.|
            |E|Exclusive|The document was locked for editing by a single user.|
        co_authors:
          type: array
          description: |-
            Indicates a list of co-authors of a document that was checked out for a co-authoring session.

            This field is applicable only when the document is locked for co-authoring.
          items:
            type: string
        wopi_file_size_limit:
          type: integer
          description: |-
            Indicates the maximum file size (in bytes) supported for co-authoring.
        wopi_file_size_warning:
          type: boolean
          description: |-
            Indicates if the file size is approaching its upper limit for co-authoring.

            If `true`, the file size is approaching its upper limit.<br>
            If `false`, the file size is well within the upper limit.
      additionalProperties: true
    Emails.email:
      properties:
        attachments: *id991
        access: *id992
        access_time: *id993
        activity_date: *id994
        arch_req: *id995
        archived: *id996
        author: *id997
        author_description: *id998
        checkout_comment: *id999
        checkout_date: *id1000
        checkout_due_date: *id1001
        checkout_path: *id1002
        class: *id1003
        class_description: *id1004
        comment: *id1005
        create_date: *id1006
        custom1: *id1007
        custom1_description: *id1008
        custom2: *id1009
        custom2_description: *id1010
        custom3: *id1011
        custom3_description: *id1012
        custom4: *id1013
        custom4_description: *id1014
        custom5: *id1015
        custom5_description: *id1016
        custom6: *id1017
        custom6_description: *id1018
        custom7: *id1019
        custom7_description: *id1020
        custom8: *id1021
        custom8_description: *id1022
        custom9: *id1023
        custom9_description: *id1024
        custom10: *id1025
        custom10_description: *id1026
        custom11: *id1027
        custom11_description: *id1028
        custom12: *id1029
        custom12_description: *id1030
        custom13: *id1031
        custom14: *id1032
        custom15: *id1033
        custom16: *id1034
        custom17: *id1035
        custom18: *id1036
        custom19: *id1037
        custom20: *id1038
        custom21: *id1039
        custom22: *id1040
        custom23: *id1041
        custom24: *id1042
        custom25: *id1043
        custom26: *id1044
        custom27: *id1045
        custom28: *id1046
        custom29: *id1047
        custom29_description: *id1048
        custom30: *id1049
        custom30_description: *id1050
        custom31: *id1051
        custom31_description: *id1052
        database: *id1053
        declared_date: *id1054
        default_security: *id1055
        document_number: *id1056
        edit_date: *id1057
        edit_profile_date: *id1058
        effective_security: *id1059
        extension: *id1060
        file_create_date: *id1061
        file_edit_date: *id1062
        has_attachment: *id1063
        id: *id1064
        in_use: *id1065
        in_use_by: *id1066
        in_use_by_description: *id1067
        is_declared: *id1068
        is_checked_out: *id1069
        is_external: *id1070
        is_external_as_normal: *id1071
        is_hipaa: *id1072
        is_latest: *id1073
        is_most_recent_activity: *id1074
        is_related: *id1075
        is_restorable: *id1076
        iwl: *id1077
        last_user: *id1078
        last_user_description: *id1079
        share_url: *id1080
        msg_id: *id1081
        name: *id1082
        operator: *id1083
        operator_description: *id1084
        retain_days: *id1085
        size: *id1086
        subclass: *id1087
        subclass_description: *id1088
        type: *id1089
        type_description: *id1090
        version: *id1091
        workspace_id: *id1092
        workspace_name: *id1093
        wstype: *id1094
        conversation_count: *id1095
        conversation_id: *id1096
        conversation_name: *id1097
        received_date: *id1098
        sent_date: *id1099
        subject: *id1100
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
      additionalProperties: false
    Emails.emailWithoutAttachment:
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
      properties:
        access: *id992
        access_time: *id993
        activity_date: *id994
        arch_req: *id995
        archived: *id996
        author: *id997
        author_description: *id998
        checkout_comment: *id999
        checkout_date: *id1000
        checkout_due_date: *id1001
        checkout_path: *id1002
        class: *id1003
        class_description: *id1004
        comment: *id1005
        create_date: *id1006
        custom1: *id1007
        custom1_description: *id1008
        custom2: *id1009
        custom2_description: *id1010
        custom3: *id1011
        custom3_description: *id1012
        custom4: *id1013
        custom4_description: *id1014
        custom5: *id1015
        custom5_description: *id1016
        custom6: *id1017
        custom6_description: *id1018
        custom7: *id1019
        custom7_description: *id1020
        custom8: *id1021
        custom8_description: *id1022
        custom9: *id1023
        custom9_description: *id1024
        custom10: *id1025
        custom10_description: *id1026
        custom11: *id1027
        custom11_description: *id1028
        custom12: *id1029
        custom12_description: *id1030
        custom13: *id1031
        custom14: *id1032
        custom15: *id1033
        custom16: *id1034
        custom17: *id1035
        custom18: *id1036
        custom19: *id1037
        custom20: *id1038
        custom21: *id1039
        custom22: *id1040
        custom23: *id1041
        custom24: *id1042
        custom25: *id1043
        custom26: *id1044
        custom27: *id1045
        custom28: *id1046
        custom29: *id1047
        custom29_description: *id1048
        custom30: *id1049
        custom30_description: *id1050
        custom31: *id1051
        custom31_description: *id1052
        database: *id1053
        declared_date: *id1054
        default_security: *id1055
        document_number: *id1056
        edit_date: *id1057
        edit_profile_date: *id1058
        effective_security: *id1059
        extension: *id1060
        file_create_date: *id1061
        file_edit_date: *id1062
        has_attachment: *id1063
        id: *id1064
        in_use: *id1065
        in_use_by: *id1066
        in_use_by_description: *id1067
        is_declared: *id1068
        is_checked_out: *id1069
        is_external: *id1070
        is_external_as_normal: *id1071
        is_hipaa: *id1072
        is_latest: *id1073
        is_most_recent_activity: *id1074
        is_related: *id1075
        is_restorable: *id1076
        iwl: *id1077
        last_user: *id1078
        last_user_description: *id1079
        share_url: *id1080
        msg_id: *id1081
        name: *id1082
        operator: *id1083
        operator_description: *id1084
        retain_days: *id1085
        size: *id1086
        subclass: *id1087
        subclass_description: *id1088
        type: *id1089
        type_description: *id1090
        version: *id1091
        workspace_id: *id1092
        workspace_name: *id1093
        wstype: *id1094
        conversation_count: *id1095
        conversation_id: *id1096
        conversation_name: *id1097
        received_date: *id1098
        sent_date: *id1099
        subject: *id1100
      additionalProperties: false
    Emails.emailConversationResponse:
      required:
      - data
      type: object
      properties: *id400
      additionalProperties: false
      description: |-
        Email conversation response.
    Emails.emailFilingRequestEmailProfile:
      description: |-
        Describes email properties retrieved from Microsoft Outlook that are used to create an email filing request.
      required:
      - client_type
      - folder_id
      - locale
      - mailbox_id
      - msg_id
      - options
      - project_id
      - retry_count
      - shared_access
      - status
      - submit_date
      - type
      - user
      type: object
      additionalProperties: false
      properties: &id1102
        client_type:
          type: integer
          description: |-
            Specifies the client application type used for filing an email.<br><br>
            The client applications can be Microsoft Outlook, iManage Work Communication Server, or third-party applications.<br>

            | Client_type | Description                                    |
            |-------------|------------------------------------------------|
            | 3           | iManage Work Communication Server              |
            | 11          | Microsoft Outlook and third-party applications |

        locale:
          type: string
          description: |-
            Specifies the client application locale ID. For the complete list, see [Locale Codes in the Overview](/#/docs/documentation-0)
        mailbox_id:
          type: string
          description: |-
            Specifies the PR_ENTRYID property of the source Microsoft Outlook mailbox of the user.<br><br>
            This property remains same for all the emails belonging to the mailbox of a user.
          example: 00000000CB0AC7261E0CD4448CAFCDD5DB3FC4780100C3B68E10F77511CEB4CD00AA00BBB6E60000000000050000
        folder_id:
          type: string
          description: |-
            Specifies the client application mailbox folder ID. <br>
            It is the PR_ENTRYID property of the folder in Outlook. The email to be filed resides in this folder.
            This Outlook folder is linked with iManage Work folder for email filing.
          example: 00000000CB0AC7261E0CD4448CAFCDD5DB3FC4780100CC89723E1992B847BDD0BA5CA38D8C1F0004694020590000
        msg_id:
          type: string
          description: |-
            Specifies the PR_ENTRYID property of the email in Outlook to be filed to iManage Work.
          example: 00000000CB0AC7261E0CD4448CAFCDD5DB3FC4780700CC89723E1992B847BDD0BA5CA38D8C1F0004694020590000CC89723E1992B847BDD0BA5CA38D8C1F0004694024540000
        options:
          type: integer
          description: |-
            Specifies the options available for filing an email.<br><br>
            The following filing options are available:<br>

            |Value|Action|Description|
            |:-|:---|:---------------|
            |1|Copy filed email|A copy of an email is filed to an iManage Work folder.|
            |2|Move filed email|The email is moved to an iManage Work folder and deleted from Outlook.|

        project_id:
          type: integer
          description: |-
            Specifies the target folder ID where the email is filed. It corresponds to PRJ_ID from the PROJECTS table for the target iManage folder.
        retry_count:
          type: integer
          description: |-
            Specifies the maximum number of times the email is attempted to be filed in case of any failure.
        shared_access:
          type: integer
          description: |-
            Accessibility on an email. For example, private or public.
        status:
          maximum: 10
          minimum: 0
          type: integer
          description: |-
            Specifies the status of the email filing request.<br>

            | Status | Description                                                                            |
            |--------|----------------------------------------------------------------------------------------|
            | -1     | Email filing request submitted but not yet processed.                                  |
            | -3     | Email filed and needs to be verified.                                                  |
            | -6     | Email filing failed and will not be processed.                                         |
            | -10    | Email filed successfully but failed to mark item in user’s mailbox                     |
            | -11    | Email queued for filing but not marked as queued in mailbox                            |
            | -12    | Email search key differs in the mailbox copy and the iManage Work database table.      |

        submit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Specifies the date when the filing request was created.
        type:
          type: integer
          description: |-
            Specifies the type of filing based on filing object type.<br><br>
            The following options are available:<br>

            | Value | Filing type |
            |-------|-------------|
            | 1     | email       |
            | 2     | folder      |
        user:
          type: string
          description: |-
            Specifies the user ID of the owner of the email.
    Emails.emailFilingRequestEmailProperties:
      description: |-
        Email properties in the client application that are used to identify an email on Microsoft Exchange.
      required:
      - email-searchkey
      type: object
      properties: &id1103
        email-searchkey:
          type: string
          description: |-
            Specifies the unique search key of an email in a user's Outlook inbox. <br><br>
            It is the PR_SEARCH_KEY property of an email in Outlook.
            This key is used to find an email in iManage Work, as it does not change even if the email is moved to another folder.
          example: 515D26677CC9BA44AC0FE90144112230
        PR_X-AUTHN_GUID:
          type: string
          description: Deprecated. Do not use.
        PR_OPERATOR:
          type: string
          description: |-
            Specifies the user ID who makes the filing request.
    Emails.emailFilingRequestPostRequest:
      required:
      - doc_profile
      - email_profile
      - properties
      type: object
      properties:
        doc_profile:
          type: object
          properties: *id1101
          additionalProperties: true
        email_profile:
          description: |-
            Email properties generated by the client application that are used to identify an email on Microsoft Exchange.
          required:
          - client_type
          - folder_id
          - locale
          - mailbox_id
          - msg_id
          - options
          - project_id
          - retry_count
          - shared_access
          - status
          - submit_date
          - type
          - user
          type: object
          additionalProperties: false
          properties: *id1102
        properties:
          description: |-
            Email properties in the client application that are used to identify an email on Microsoft Exchange.
          required:
          - email-searchkey
          type: object
          properties: *id1103
      additionalProperties: false
      description: |-
        Create a filing request. This does not guarantee that the email has actually been filed, as the filing is an asynchronous process by iManage Work Communication Server.
    Emails.emailFilingRequestResponse:
      required:
      - hipaa
      - indexable
      - subclass_required
      type: object
      properties: *id1104
      additionalProperties: false
    Emails.emailForwardPostRequest:
      required: *id1105
      properties: *id1106
      additionalProperties: false
      description: |-
        Request sent by iManage Work when forwarding to an email.
      type: object
    Emails.emailParticipant:
      required:
      - address
      type: object
      properties:
        address:
          type: string
          description: |-
            The email address of a recipient.
        name:
          type: string
          description: |-
            The display name of a recipient.
      additionalProperties: true
      description: |-
        Email Participant
    Emails.emailReplyPostRequest:
      description: |-
        Request sent by iManage Work when replying to an email.
      required:
      - subject
      - body
      type: object
      properties: *id1107
      additionalProperties: false
    Emails.emailSendRequest:
      required:
      - subject
      - body
      type: object
      properties: *id1107
      additionalProperties: false
    Emails.emailResponseSingle-Detailed:
      required:
      - data
      type: object
      properties: *id1108
      additionalProperties: false
      description: |-
        Email response with detailed participant list.
    Emails.emailResponseMultiple-Flattened:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Emails.emailWithFlattenedParticipants'
          description: |-
            The response data.
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
      description: |-
        Email response with flattened participant list.
    Emails.emailWithDetailedParticipants:
      properties: *id1109
      additionalProperties: false
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
    Emails.emailWithFlattenedParticipants:
      properties:
        bcc:
          type: string
          description: |-
            Indicates a semicolon-separated list of recipients to whom the email is blind carbon copied.
        cc:
          type: string
          description: |-
            Indicates a semicolon-separated list of recipients to whom the email is blind carbon copied.
        from:
          type: string
          description: |-
            Indicates sender of the email.
        to:
          type: string
          description: |-
            Indicates a semicolon-separated list of recipients of the email.
        attachments: *id991
        access: *id992
        access_time: *id993
        activity_date: *id994
        arch_req: *id995
        archived: *id996
        author: *id997
        author_description: *id998
        checkout_comment: *id999
        checkout_date: *id1000
        checkout_due_date: *id1001
        checkout_path: *id1002
        class: *id1003
        class_description: *id1004
        comment: *id1005
        create_date: *id1006
        custom1: *id1007
        custom1_description: *id1008
        custom2: *id1009
        custom2_description: *id1010
        custom3: *id1011
        custom3_description: *id1012
        custom4: *id1013
        custom4_description: *id1014
        custom5: *id1015
        custom5_description: *id1016
        custom6: *id1017
        custom6_description: *id1018
        custom7: *id1019
        custom7_description: *id1020
        custom8: *id1021
        custom8_description: *id1022
        custom9: *id1023
        custom9_description: *id1024
        custom10: *id1025
        custom10_description: *id1026
        custom11: *id1027
        custom11_description: *id1028
        custom12: *id1029
        custom12_description: *id1030
        custom13: *id1031
        custom14: *id1032
        custom15: *id1033
        custom16: *id1034
        custom17: *id1035
        custom18: *id1036
        custom19: *id1037
        custom20: *id1038
        custom21: *id1039
        custom22: *id1040
        custom23: *id1041
        custom24: *id1042
        custom25: *id1043
        custom26: *id1044
        custom27: *id1045
        custom28: *id1046
        custom29: *id1047
        custom29_description: *id1048
        custom30: *id1049
        custom30_description: *id1050
        custom31: *id1051
        custom31_description: *id1052
        database: *id1053
        declared_date: *id1054
        default_security: *id1055
        document_number: *id1056
        edit_date: *id1057
        edit_profile_date: *id1058
        effective_security: *id1059
        extension: *id1060
        file_create_date: *id1061
        file_edit_date: *id1062
        has_attachment: *id1063
        id: *id1064
        in_use: *id1065
        in_use_by: *id1066
        in_use_by_description: *id1067
        is_declared: *id1068
        is_checked_out: *id1069
        is_external: *id1070
        is_external_as_normal: *id1071
        is_hipaa: *id1072
        is_latest: *id1073
        is_most_recent_activity: *id1074
        is_related: *id1075
        is_restorable: *id1076
        iwl: *id1077
        last_user: *id1078
        last_user_description: *id1079
        share_url: *id1080
        msg_id: *id1081
        name: *id1082
        operator: *id1083
        operator_description: *id1084
        retain_days: *id1085
        size: *id1086
        subclass: *id1087
        subclass_description: *id1088
        type: *id1089
        type_description: *id1090
        version: *id1091
        workspace_id: *id1092
        workspace_name: *id1093
        wstype: *id1094
        conversation_count: *id1095
        conversation_id: *id1096
        conversation_name: *id1097
        received_date: *id1098
        sent_date: *id1099
        subject: *id1100
      additionalProperties: false
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
    Emails.emailWithFlattenedParticipantsWithoutAttachment:
      properties:
        bcc:
          type: string
          description: |-
            A semicolon-separated list of participants.
        cc:
          type: string
          description: |-
            A semicolon-separated list of participants.
        from:
          type: string
          description: |-
            Sender of the email.
        to:
          type: string
          description: |-
            A semicolon-separated list of participants.
        access: *id992
        access_time: *id993
        activity_date: *id994
        arch_req: *id995
        archived: *id996
        author: *id997
        author_description: *id998
        checkout_comment: *id999
        checkout_date: *id1000
        checkout_due_date: *id1001
        checkout_path: *id1002
        class: *id1003
        class_description: *id1004
        comment: *id1005
        create_date: *id1006
        custom1: *id1007
        custom1_description: *id1008
        custom2: *id1009
        custom2_description: *id1010
        custom3: *id1011
        custom3_description: *id1012
        custom4: *id1013
        custom4_description: *id1014
        custom5: *id1015
        custom5_description: *id1016
        custom6: *id1017
        custom6_description: *id1018
        custom7: *id1019
        custom7_description: *id1020
        custom8: *id1021
        custom8_description: *id1022
        custom9: *id1023
        custom9_description: *id1024
        custom10: *id1025
        custom10_description: *id1026
        custom11: *id1027
        custom11_description: *id1028
        custom12: *id1029
        custom12_description: *id1030
        custom13: *id1031
        custom14: *id1032
        custom15: *id1033
        custom16: *id1034
        custom17: *id1035
        custom18: *id1036
        custom19: *id1037
        custom20: *id1038
        custom21: *id1039
        custom22: *id1040
        custom23: *id1041
        custom24: *id1042
        custom25: *id1043
        custom26: *id1044
        custom27: *id1045
        custom28: *id1046
        custom29: *id1047
        custom29_description: *id1048
        custom30: *id1049
        custom30_description: *id1050
        custom31: *id1051
        custom31_description: *id1052
        database: *id1053
        declared_date: *id1054
        default_security: *id1055
        document_number: *id1056
        edit_date: *id1057
        edit_profile_date: *id1058
        effective_security: *id1059
        extension: *id1060
        file_create_date: *id1061
        file_edit_date: *id1062
        has_attachment: *id1063
        id: *id1064
        in_use: *id1065
        in_use_by: *id1066
        in_use_by_description: *id1067
        is_declared: *id1068
        is_checked_out: *id1069
        is_external: *id1070
        is_external_as_normal: *id1071
        is_hipaa: *id1072
        is_latest: *id1073
        is_most_recent_activity: *id1074
        is_related: *id1075
        is_restorable: *id1076
        iwl: *id1077
        last_user: *id1078
        last_user_description: *id1079
        share_url: *id1080
        msg_id: *id1081
        name: *id1082
        operator: *id1083
        operator_description: *id1084
        retain_days: *id1085
        size: *id1086
        subclass: *id1087
        subclass_description: *id1088
        type: *id1089
        type_description: *id1090
        version: *id1091
        workspace_id: *id1092
        workspace_name: *id1093
        wstype: *id1094
        conversation_count: *id1095
        conversation_id: *id1096
        conversation_name: *id1097
        received_date: *id1098
        sent_date: *id1099
        subject: *id1100
      additionalProperties: false
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
    Emails.emailResponseMultiple-Flattened-NoAttachment:
      required:
      - data
      type: object
      properties: *id308
      additionalProperties: false
      description: |-
        Email response with flattened participant list.
    ExternalAuthTypes.authType:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the primary identifier for the external authentication type.

            The value `explicit` indicates explicit login that uses iManage Work user ID and password for authentication.
        signature_alg:
          type: string
          description: |-
            Indicates the algorithm that the service provider (SP) will use for signing SAML requests. Work Server is the SAML service provider (SP).

            Applicable only if the active external authentication type is SAML.
        metadata:
          type: string
          description: |-
            Indicates the endpoint for downloading the service provider (SP) XML metadata file that can be used to configure SP in the identity provider (IDP).

            Applicable only if the active external authentication type is SAML.
        assertion_consumer_endpoint:
          type: string
          description: |-
            Indicates the service provider (SP) endpoint where the `<saml:AuthnResponse>` message must be posted.

            Applicable only if the active external authentication type is SAML.
        sp_logout_endpoint:
          type: string
          description: |-
            Indicates the service provider (SP) Single Logout (SLO) endpoint where the `<saml:LogoutResponse>`, `<saml:LogoutRequest>` messages must be redirected or posted.

            Applicable only if the active external authentication type is SAML.
        name_id:
          type: string
          description: |-
            Indicates that the SAML assertion must have Name Identifier `<NameID>` (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier) in the response.

            The value of `<NameID>` should match with iManage Work's *UserID* value. In case of ADFS, *SAM-Account-Name* is the most common matching attribute that can be mapped to `<NameID>`.

            Applicable only if the active external authentication type is SAML.
      additionalProperties: false

    ExternalAuthTypes.getAllResponse:
      title: External Authentication Types Response
      required:
      - data
      type: object
      properties: *id1110
      example: *id1111
    ExternalAuthTypes.activeExternalAuthType:
      required:
      - id
      type: object
      properties: *id595
      additionalProperties: false
      example: *id596
    ExternalAuthTypes.setActiveExternalAuthType:
      required:
      - id
      type: object
      properties: *id1112
      additionalProperties: false
      example: *id1113
    ExternalAuthTypes.samlConfigRequest:
      type: object
      properties: *id1114
      additionalProperties: false
      example: *id1115
    ExternalAuthTypes.samlConfigResponse:
      type: object
      properties: *id597
      example: *id598
    Features.featureOverridesResponse:
      required:
      - name
      - title
      - description
      - link
      - default_value
      - overrides_enabled
      - resolved_customer_value
      - resolved_customer_value_is_forced
      type: object
      properties:
        name:
          type: string
          description: |
            Name of the feature that is used in the request endpoints.
        title:
          type: string
          description: |
            Title of the feature that appears in the application.
        description:
          type: string
          description: |
            Short description of the feature.
        link:
          type: string
          description: |
            The URL that points to the detailed description of the feature.
        expiration_date:
          type: string
          description: |
            The date and time (in ISO 8601 format) when the feature will become part of an iManage application and will be not manageable by the customer anymore.
        default_value:
          type: boolean
          description: |
            The current default status of the feature. Normally, it is set as `false`.
        overrides_enabled:
          type: boolean
          description: |
            Indicates if `customer_value` or `admin_value` may affect the `resolved_value`.
            Normally, it is set to `true`. However, if set to `false`, the request does not accept new `customer_value` for the feature.
        customer_value:
          type: boolean
          description: |
            The feature value set by the customer as `true` or `false` to enable or disable the feature respectively.
            If the customer value is missing in the response, then it is not yet set or has been reset.
        admin_value:
          type: boolean
          description: |
            The feature value set by the iManage system administrator for the current customer.

            When present, the request does not accept new `customer_value` for the feature.
            If `overrides_enabled` is set to `true`, then the iManage Work system uses the `admin_value` to resolve the actual feature value.
        resolved_customer_value:
          type: boolean
          description: |
            It represents the actual resolved feature value for the current customer.
        resolved_customer_value_is_forced:
          type: boolean
          description: |
            This field is set to `true` if the resolved value was enforced by iManage system administrator, either by setting the `admin_value` for the current customer
            or by setting `overrides_enabled` to `false`.
    Features.patchFeatureOverridesRequest:
      required:
      - customer_value
      type: object
      properties: *id1116
    FilingFolders.filingFolder:
      type: object
      properties: *id399
      additionalProperties: true
    FilingFolders.filingFolderGetResponse:
      required:
      - data
      type: object
      properties: *id1117
      additionalProperties: true
    FolderChildren.request:
      title: Folder Children Request
      type: object
      properties: *id1118
      example: *id1119
    FolderChildren.response:
      title: Folder Children Response
      required:
      - data
      - overflow
      type: object
      properties: *id1120
      example: *id1121
    Forms.formType:
      enum: ["search", "new_document", "edit_document", "search_workspaces", "edit_workspace"]
      type: string
      description: |-
        Available Form types.
    Forms.formField:
      enum: [alias, author, checked_out, checkout_location, class, comments, container_where_used,
        create_date, custom1, custom2, custom3, custom4, custom5, custom6, custom7,
        custom8, custom9, custom10, custom11, custom12, custom13, custom14, custom15,
        custom16, custom17, custom18, custom19, custom20, custom21, custom22, custom23,
        custom24, custom25, custom26, custom27, custom28, custom29, custom30, default_security,
        description, document_number, edit_date, file_target, is_archived, is_declared,
        keyword, last_user, name, operator, owner, related_documents, size, subclass,
        type, version, where_used]
      type: string
      description: |-
        Indicates the field types available to be included in an object's form.
    Forms.fieldSpec:
      required:
      - version
      - fields
      type: object
      properties: *id1122
    Forms.formInfo:
      required:
      - description
      - field_spec
      type: object
      properties: *id386
    Forms.formsVisibleFieldsGetResponse:
      type: array
      items: *id1123
    Forms.formTypePutBody:
      required:
      - description
      - field_spec
      type: object
      properties: *id386
    Forms.formTypeGetResponse:
      required:
      - data
      type: object
      properties: *id388
    Forms.formTypePutResponse:
      required:
      - data
      type: object
      properties: *id387
    Groups.adminImportRequest:
      required:
      - import_id
      - groups
      - overwrite
      type: object
      properties: *id552
    Groups.adminImportResponse:
      required:
      - data
      type: object
      properties: *id553
    Groups.adminImportRequestGroup:
      required:
      - profile
      - members
      type: object
      properties:
        profile:
          description: |-
            The group to be imported.
          required:
          - id
          type: object
          properties: &id1124
            create_date:
              type: string
              description: Indicates the date (in the ISO 8601 format) when the group
                was created.
            directory_id:
              type: string
              description: |-
                Indicates the ID from external repository (such as AD FS), which is used for group profile synchronization.
            distinguished_name:
              type: string
              description: |
                Indicates the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.<br>
              example: cn=username,dc=example,dc=ajubalaw,dc=com
            edit_date:
              type: string
              description: Indicates the date (in the ISO 8601 format) when the group
                was last updated.
            enabled:
              type: boolean
              description: |-
                Indicates if the group is enabled or disabled.

                If `true`, the group is enabled.<br>
                If `false`, the group is disabled.
            full_name:
              type: string
              description: |-
                Indicates the name of the group.
            group_domain:
              type: string
              description: |-
                Indicates  the fully qualified domain name for the group's directory service.

                It is the metadata from LDAP server that determines the unit to which the group belongs to.
                This information is mainly used by iManage system administrators.
              example: cn=Users,dc=dc=ajubalaw,dc=com
            group_nos:
              type: integer
              description: |-
                Indicates the type of group.

                The following are valid nos values for groups:

                | Value | Description |
                | :-: | - |
                | 2 | Group for virtual users.|
                | 6 | Group for enterprise users. |
            id:
              type: string
              description: Indicates the group ID.
            is_external:
              type: boolean
              description: |
                Indicates if the group is intended for external users.

                If `true`, the group is intended for external users.<br>
                If `false`, the group is intended for regular users (non-external users).

                For more information, see <a href="#overview--external-users">External users</a>.
            last_sync_ts:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                Indicates the date (in the ISO 8601 format) when the group profile was last synced with a directory service, such as LDAP or Microsoft Active Directory.
            ssid:
              type: number
              format: long
              description: Indicates the unique ID of the group that was generated
                by iManage Work.
            sync_id:
              maxLength: 254
              type: string
              description: |
                Indicates the unique ID from external ADFS repository or external user repository which is used for user profile synchronization. Maximum length is 254 chars.
          additionalProperties: true
        members:
          type: array
          items:
            type: string
          description: |-
            A list of users belonging to this group.
    Groups.adminImportResponseGroup:
      required:
      - id
      - ssid
      type: object
      properties:
        id:
          type: string
          description: |-
            The imported group's unique ID to be used for matching the imported group to its newly assigned SSID.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
    Groups.directorySyncGetHashesResponse:
      required:
      - data
      type: object
      properties: *id581
    Groups.directorySyncGetAllMembersResponse:
      required:
      - data
      type: object
      properties: *id582
    Groups.directorySyncGroupMember:
      required:
      - directory_id
      type: object
      properties:
        directory_id:
          type: string
          description: |-
            Directory ID of the group member (user belonging to a group).
    Groups.directorySyncUploadRequest:
      type: array
      items: *id579
    Groups.directorySyncUploadResponse:
      required:
      - data
      type: object
      properties: *id580
    Groups.directorySyncUploadResponseDatum:
      required:
      - directory_id
      type: object
      properties:
        directory_id:
          type: string
          description: |-
            ID from external ADFS repository or external repository.
    Groups.group:
      required:
      - id
      type: object
      properties: *id1124
      additionalProperties: true
    Groups.groupResponseMultiple:
      required:
      - data
      type: object
      properties: *id012
      additionalProperties: true
    Groups.groupResponseSingle:
      required:
      - data
      type: object
      properties: *id554
      additionalProperties: false
    Groups.groupLibraryResponseSingle:
      required:
      - data
      type: object
      properties: *id384
      additionalProperties: false
    Groups.groupGlobalCreateOrUpdateRequest:
      type: object
      properties: *id1125
      additionalProperties: true
    Groups.groupLibraryCreateOrUpdateRequest:
      required:
      - id
      type: object
      properties: *id383
      additionalProperties: true
    Groups.warning:
      required:
      - error
      type: object
      properties:
        data:
          type: object
          description: |-
            The input data on which the warning applies.
        code:
          type: string
          description: |-
            The warning code. For example, NRC_INVALID_PARAM, or OTHER.
        error:
          type: string
          description: |-
            The warning message.
        field:
          type: string
          description: |-
            The field to which the warning applies.
      additionalProperties: true
    Groups.groupCopyRequest:
      required:
      - id
      type: object
      properties: *id1126
      additionalProperties: false
    groupLibrary:
      required:
      - id
      type: object
      properties:
        database:
          type: string
          description: Indicates the name of the library where the group exists.
        distinguished_name:
          type: string
          description: |
            Indicates the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        enabled:
          type: boolean
          description: |-
            Indicates if the group is enabled or disabled.

            If `true`, the group is enabled.<br>
            If `false`, the groups is disabled.
        full_name:
          type: string
          description: |-
            Indicates the name of the group.
        group_domain:
          type: string
          description: |-
            Indicates  the fully qualified domain name for the group's directory service.

            It is the metadata from LDAP server that determines the unit to which the group belongs to.
            This information is mainly used by iManage system administrators.
          example: cn=Users,dc=dc=ajubalaw,dc=com
        group_nos:
          type: integer
          description: |-
            Indicates the type of group.

            The following are valid nos values for groups:

            | Value | Description |
            | :-: | - |
            | 2 | Group for virtual users.|
            | 6 | Group for enterprise users. |
        group_number:
          type: integer
          description: Indicates the unique group number assigned by iManage Work
            to the group.
        id:
          type: string
          description: Indicates the group ID.
        is_external:
          type: boolean
          description: |+
            Indicates  if the group is intended for external users.

            If `true`, the group is intended for external users.<br>
            If `false`, the group is intended for regular users (non-external users).

            For more information, see <a href="#overview--external-users"> External users</a>.

        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in the ISO 8601 format) when the group profile was last synced with a directory service, such as LDAP or Microsoft Active Directory.
        sync_id:
          type: string
          description: |-
            Indicates the ID from an external directory (such as AD FS), which is used for group profile synchronization.
      additionalProperties: false
    Groups.libraryGroupResponseMultiple:
      required:
      - data
      type: object
      properties: *id125
      additionalProperties: true
    PostMyCheckedOutDocuments.request:
      title: Checked Out Documents Request
      type: object
      properties: *id574
      example: *id575
    PostMyCheckedOutDocuments.response:
      title: Checked Out Documents Response
      required:
      - data
      - overflow
      type: object
      properties: *id576
      example: *id577
    PostRecentDocuments.request:
      title: Recent Documents Request
      type: object
      properties: *id371
      example: *id372
    PostRecentDocuments.response:
      title: Recent Documents Response
      required:
      - data
      - overflow
      type: object
      properties: *id373
      example: *id374
    PostRecentWorkspaces.request:
      title: Recent Workspace Request
      type: object
      properties: *id303
      example: *id304
    PostRecentWorkspaces.response:
      title: Recent Workspace Response
      required:
      - data
      - overflow
      type: object
      properties: *id305
      example: *id306
    PostRecentEmail.request:
      title: Recent Email Request
      type: object
      properties: *id309
      example: *id310
    PostRecentEmail.response:
      title: Recent Email Response
      required:
      - data
      - overflow
      type: object
      properties: *id311
      example: *id312
    Projects.Shortcuts.accessRule:
      enum: [public, view, private]
      type: string
      description: |
        Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container.<br><br>
        This field is present only if `default_security` is inherit. <br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Projects.Shortcuts.documentShortcutTarget:
      required:
      - database
      - document_number
      - id
      - type
      - version
      - wstype
      type: object
      properties:
        database:
          type: string
          description: |-
            Indicates the name of the library where the target document exists to which the shortcut is pointing to.
          example: active_us
        document_number:
          type: integer
          description: |
            Indicates the document number of the target document.<br><br>
            The document number is the middle portion of the document ID.
            For example, the document number of document active_uk!7483.3 is 7483.
          example: 7483
        id:
          type: string
          description: |
            Indicates the target document ID referenced by the document shortcut.<br><br>
            The document ID is the fully qualifying identifer for a document.
            For example: active_uk!7483.3.<br><br>
            See parameters `version` for the current document version, and `document_number` for its document number.
          example: active_uk!7483.3
        type:
          type: string
          description: |
            Indicates the document type.<br><br>
            The document type is used by the iManage Work system to associate the document to an application.
            For example: WORD for Microsoft Word.
          example: WORD
        version:
          type: integer
          description: |
            Indicates the version number of the target document.<br><br>
            The document version number is number of times the document has been edited and is the numeric end portion of the document ID.
            For example, the version number of document active_uk!7483.3 is 3.
          example: 3
        wstype:
          enum:
          - "user"
          - "workspace_shortcut"
          - "folder_shortcut"
          - "document_shortcut"
          - "email"
          - "workspace"
          - "folder"
          - "document"
          example: document
          type: string
          description: |
            Indicates the iManage Work object type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Projects.Shortcuts.documentShortcut:
      required:
      - name
      - id
      - database
      - target
      - wstype
      type: object
      properties:
        database:
          type: string
          description: |-
            Indicates the library that the document shortcut was created in.
        id:
          type: string
          description: |-
            Indicates the document shortcut ID.
        iwl:
          type: string
          description: |-
            Indicates the iManage Work Link (iWL) of a document which is used to open it in Protected View Mode by the user who has read/write or full access.
        name:
          type: string
          description: |-
            Indicates the name of the document shortcut.
        parent_id:
          type: string
          description: |
            Indicates the container ID where the shortcut was created.

            This value is null if the iManage Work environment does not require this parameter.
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.documentShortcutTarget'
        wstype:
          enum:
          - "user"
          - "workspace_shortcut"
          - "folder_shortcut"
          - "email"
          - "workspace"
          - "folder"
          - "document"
          - "document_shortcut"
          type: string
          description: |
            Indicates the iManage Work object type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Projects.Shortcuts.documentShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.documentShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.Shortcuts.documentShortcutResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.documentShortcut'
      additionalProperties: false
    Projects.Shortcuts.documentShortcutUpdateRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: |-
            Name for the document shortcut.
      additionalProperties: false
    Projects.Shortcuts.effectiveSecurity:
      enum: ["no_access", "read", "read_write", "full_access"]
      type: string
      description: |
        Indicates the effective security access level available to the user.

        Effective security is the access level that is the net result of a combination of the following:
        * an objects's default security
        * a user's access permission for that object
        * possible conflicts among groups to which the user belongs to
        * the security model being used.

        The available access levels are:

        |Access level|Description|
        |:---|:---|
        |no_access|The user has no access, or any permissions to the container or document.|
        |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
    Projects.Shortcuts.folderShortcut:
      required:
      - database
      - default_security
      - edit_date
      - id
      - is_container_saved_search
      - is_content_saved_search
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - view_type
      type: object
      properties:
        database: &id1127
          type: string
          description: |-
            Name of the destination library (formerly called a database).
        default_security: &id1128
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date: &id1129
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the shortcut was last edited.
        effective_security: &id1130
          $ref: '#/components/schemas/Projects.Shortcuts.effectiveSecurity'
        id: &id1131
          type: string
          description: |-
            The shortcut ID.
        inherited_default_security: &id1132
          $ref: '#/components/schemas/Projects.Shortcuts.accessRule'
        is_container_saved_search: &id1133
          type: boolean
          description: |-
            Indicates the folder search is saved in this folder.<br><br>
            If `true`, the folder search is saved in this folder.<br>
            If `false`, folder search is not saved in this folder.
        is_content_saved_search: &id1134
          type: boolean
          description: |-
            Indicates the document search is saved in this folder.<br><br>
            If `true`, the document search is saved in this folder.<br>
            If `false`, the document search is not saved in this folder.
        is_external: &id1135
          type: boolean
          description: |-
            Indicates if the shortcut points to an external container.
        is_external_as_normal: &id1136
          type: boolean
          description: |-
            Indicates if the external container is treated as a normal container.
        name: &id1137
          type: string
          description: |-
            The name of the destination container.
        owner: &id1138
          type: string
          description: |-
            The owner's user ID.
        owner_description: &id1139
          type: string
          description: |-
            Full name of the owner.
        parent_id: &id1140
          type: string
          description: |-
            The container ID where the shortcut is created.
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.folderShortcutTarget'
        view_type: &id1141
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        workspace_id: &id1142
          type: string
          description: |-
            The parent workspace ID where the folder shortcut is created.
        workspace_name: &id1143
          type: string
          description: |-
            The name of the parent workspace where the folder shortcut is created.
        wstype: &id1144
          $ref: '#/components/schemas/Projects.Shortcuts.worksiteType'
      additionalProperties: true
    Projects.Shortcuts.folderShortcutCreateRequest:
      required:
      - name
      - target
      type: object
      properties:
        name:
          type: string
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.folderShortcutTarget'
      additionalProperties: false
    Projects.Shortcuts.folderShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.folderShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.Shortcuts.folderShortcutResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.folderShortcut'
      additionalProperties: true
    Projects.Shortcuts.folderShortcutTarget:
      required:
      - database
      - id
      type: object
      description: Properties of the target object.
      properties:
        database: &id1145
          type: string
          description: |
            The source library (formerly called a database) name.<br><br>
            This is only the library name (such as `active`), not the library ID (such as `active!745834`).
            This parameter is needed only if the source library is different than the destination library.
        folder_type: &id1146
          enum: ["regular", "search", "tab", "category", "my_matters", "my_favorites",
            "imanage_share_folder"]
          type: string
          description: |
            The container type.

            |Value|Description|
            |:---|:---|
            |regular|This is a regular folder, also called a document folder. It can contain documents, shortcuts, and folders.|
            |search|This is a search folder, and contains results from predefined searches.|
            |tab|This is tab folder. These are containers only at the root level of a workspace. There can be more than one tab in a workspace. Each tab can contain document folders and search folders but not documents.|
            |category|This is a category folder. These are containers only at the root level of My Favorites or My Matters. Categories can contain categories and shortcuts.|
            |my_matters|This is a My Matters container. My Matters contains shortcuts only to workspaces the user has explicitly added to this folder. Users can also list workspaces they subscribe to from other users.|
            |my_favorites|This is a My Favorites container. My Favorites contains shortcuts to folders and documents that the user has explicitly added to this folder.|
            |imanage_share_folder|This is an iManage Share folder. iManage Share is a separate iManage product and may not be available for all installations.|
        id: &id1147
          type: string
          description: |
            The source container ID.
          example: active_us!64733
        imanage_share_eid:
          type: string
          description: |
            Indicates the encrypted ID of the folder to access in iManage Share.<br><br>
            For example: iManage Share EID&#58; `X4LuVCmhYFCsXYW4HFb3Y--Sm2HMdoAE23yXOmgS1OA`.<br>
            This property is displayed only for the iManage Share folder shortcut.
        subtype: &id1148
          enum: ["Q", "C", "S", "F", "T", "N", "E", "D", "template", "work", "imanage_share_folder"]
          type: string
          description: |+
            Indicates the subtype of the container.

            |Value|Description|
            |:---|:---|
            |Q|Tab|
            |C|Search folder.|
            |S|If the container is at the root level of a workspace, it is My Matters. If the container has a valid parent container, it is a category.|
            |F|My Favorites container|
            |T|Task|
            |N|Note|
            |E|Event|
            |D|Discussion|
            |work|Workspace|
            |imanage_share_folder|iManage Share folder|
            |template|Workspace template|

        wstype: &id1149
          $ref: '#/components/schemas/Projects.Shortcuts.worksiteType'
      additionalProperties: false
    Projects.Shortcuts.shareFolderShortcut:
      required:
      - view_type
      - parent_id
      - owner_description
      - owner
      - name
      - is_content_saved_search
      - is_container_saved_search
      - id
      - edit_date
      - default_security
      - database
      - target
      properties:
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcutTarget'
        database: *id1127
        default_security: *id1128
        edit_date: *id1129
        effective_security: *id1130
        id: *id1131
        inherited_default_security: *id1132
        is_container_saved_search: *id1133
        is_content_saved_search: *id1134
        is_external: *id1135
        is_external_as_normal: *id1136
        name: *id1137
        owner: *id1138
        owner_description: *id1139
        parent_id: *id1140
        view_type: *id1141
        workspace_id: *id1142
        workspace_name: *id1143
        wstype: *id1144
      additionalProperties: true
      type: object
    Projects.Shortcuts.shareFolderShortcutCreateRequest:
      required:
      - name
      - target
      type: object
      properties:
        name:
          type: string
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcutTarget'
      additionalProperties: false
    Projects.Shortcuts.shareFolderShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.Shortcuts.shareFolderShortcutResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcut'
      additionalProperties: false
    Projects.Shortcuts.shareFolderShortcutTarget:
      required:
      - id
      - database
      - imanage_share_eid
      properties:
        imanage_share_eid:
          type: string
          description: |-
            The encrypted ID of the folder to access in iManage Share.
          example: X4LuVCmhYFCsXYW4HFb3Y--Sm2HMdoAE23yXOmgS1OA
        database: *id1145
        folder_type: *id1146
        id: *id1147
        subtype: *id1148
        wstype: *id1149
      additionalProperties: false
      type: object
      description: Properties of the target object.
    Projects.Shortcuts.workspaceShortcut:
      type: object
      required:
      - database
      - default_security
      - edit_date
      - id
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - wstype
      properties: &id1167
        database: &id1150
          type: string
          description: |-
            Name of the destination library (formerly called a database) where the container is located.
        default_security: &id1151
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date: &id1152
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the shortcut was last edited.
        effective_security: &id1153
          $ref: '#/components/schemas/Projects.Shortcuts.effectiveSecurity'
        id: &id1154
          type: string
          description: |-
            The shortcut ID.
        inherited_default_security: &id1155
          $ref: '#/components/schemas/Projects.Shortcuts.accessRule'
        is_container_saved_search: &id1156
          type: boolean
          description: |-
            The folder search is saved in this container.<br><br>
            If `true`, the folder search is saved in this container.<br>
            If `false`, folder search is not saved in this container.
        is_content_saved_search: &id1157
          type: boolean
          description: |-
            The document search is saved in this container.<br><br>
            If `true`, the document search is saved in this container.<br>
            If `false`, the document search is not saved in this container.
        is_external: &id1158
          type: boolean
          description: |-
            Indicates if the shortcut points to an external container.
        is_external_as_normal: &id1159
          type: boolean
          description: |-
            Indicates if the external container is treated as a normal container.
        name: &id1160
          type: string
          description: |-
            The name of the destination container.
        owner: &id1161
          type: string
          description: |-
            The user ID of the owner of the container.
        owner_description: &id1162
          type: string
          description: |-
            Full name of the owner.
        parent_id: &id1163
          type: string
          description: |
            The container ID where the shortcut is created.<br><br>
            This is the folder ID of either *My Matters* or *My Favorites*.
        target: &id1164
          type: object
          properties:
            database:
              type: string
              description: |-
                Name of the library (formerly called a database) the target is found in.
            id:
              type: string
              description: |-
                The ID of the target container.
            subtype:
              type: string
              description: |
                The subtype of the target container.

                |Value|Description|
                |:---|:---|
                |Q|The object is a tab.|
                |S|The object is the My Matters folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |F|The object is the My Favorites folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |C|The object is a search folder.|
            wstype:
              description: |
                The item's type.

                |Value|Description|
                |:---|:---|
                |document|A document object.|
                |folder|A folder object.|
                |workspace|A workspace object.|
                |email|An email object.|
                |document_shortcut|A shortcut to the document object.|
                |folder_shortcut|A shortcut to the folder object.|
                |workspace_shortcut|A shortcut to the workspace object.|
                |user|A user object.|
              enum: ["document", "folder", "workspace", "email", "document_shortcut",
                "folder_shortcut", "workspace_shortcut", "user"]
              type: string
          additionalProperties: true
          description: |-
            Information about the target workspace.
        view_type: &id1165
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        wstype: &id1166
          description: |
            The item's type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
          enum: ["document", "folder", "workspace", "email", "document_shortcut",
            "folder_shortcut", "workspace_shortcut", "user"]
          type: string
      additionalProperties: true
    Projects.Shortcuts.workspaceRequestShortcut:
      properties:
        group_trustees:
          type: array
          items:
            $ref: '#/components/schemas/groupSecurityItem'
          description: |-
            List of groups and their access permissions.
        user_trustees:
          type: array
          items:
            $ref: '#/components/schemas/userSecurityItem'
          description: |-
            List of users and their access permissions.
        database: *id1150
        default_security: *id1151
        edit_date: *id1152
        effective_security: *id1153
        id: *id1154
        inherited_default_security: *id1155
        is_container_saved_search: *id1156
        is_content_saved_search: *id1157
        is_external: *id1158
        is_external_as_normal: *id1159
        name: *id1160
        owner: *id1161
        owner_description: *id1162
        parent_id: *id1163
        target: *id1164
        view_type: *id1165
        wstype: *id1166
      additionalProperties: true
      type: object
      required:
      - database
      - default_security
      - edit_date
      - id
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - wstype
    Projects.Shortcuts.workspaceResponseShortcut:
      additionalProperties: true
      type: object
      required:
      - database
      - default_security
      - edit_date
      - id
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - wstype
      properties: *id1167
    Projects.Shortcuts.workspaceShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.workspaceRequestShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.Shortcuts.workspaceShortcutResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.workspaceResponseShortcut'
      additionalProperties: false
    Projects.Shortcuts.containerShortcut:
      type: object
      properties:
        database:
          type: string
          description: |-
            Name of the library (formerly called a database) the container shortcut is found in.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Most recent date (in ISO 8601 format) when the item of container shortcut was edited.
        effective_security:
          $ref: '#/components/schemas/Projects.Shortcuts.effectiveSecurity'
        id:
          type: string
          description: |-
            The ID of the container shortcut.
        name:
          type: string
          description: |-
            The name of the container shortcut.
        owner:
          type: string
          description: |-
            The user ID of the container shortcut's owner.
        parent_id:
          type: string
          description: |
            The folder ID of the parent of this container shortcut.<br><br>
        target:
          type: object
          properties:
            database:
              type: string
              description: |-
                Name of the library (formerly called a database) the target is found in.
            id:
              type: string
              description: |-
                The ID of the target container.
            subtype:
              type: string
              description: |
                The subtype of the target container.

                |Value|Description|
                |:---|:---|
                |Q|The object is a tab.|
                |S|The object is the My Matters folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |F|The object is the My Favorites folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |C|The object is a search folder.|
            wstype:
              description: |
                The item's type.

                |Value|Description|
                |:---|:---|
                |document|A document object.|
                |folder|A folder object.|
                |workspace|A folder object.|
                |email|An email object.|
                |document_shortcut|A shortcut to the document object.|
                |folder_shortcut|A shortcut to the folder object.|
                |workspace_shortcut|A shortcut to the workspace object.|
                |user|A user object.|
          additionalProperties: true
          description: |-
            Information about the target container shortcut.
        wstype:
          description: |
            The item's type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A folder object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Projects.Shortcuts.containerShortcutResponse:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.containerShortcut'
      additionalProperties: false
    Projects.Shortcuts.worksiteType:
      enum: ["document", "folder", "workspace", "email", "document_shortcut", "folder_shortcut",
        "workspace_shortcut", "user"]
      type: string
      description: |
        Indicates the iManage Work object type.

        |Value|Description|
        |:---|:---|
        |document|A document object.|
        |folder|A folder object.|
        |workspace|A workspace object.|
        |email|An email object.|
        |document_shortcut|A shortcut to the document object.|
        |folder_shortcut|A shortcut to the folder object.|
        |workspace_shortcut|A shortcut to the workspace object.|
        |user|A user object.|
    Projects.accessRule:
      enum: [public, view, private]
      type: string
      description: |
        Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container.<br><br>
        This field is present only if `default_security` is inherit. <br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Projects.userTrustees:
      type: array
      items: *id096
      description: |-
        List of users and their access permissions.
    Projects.groupTrustees:
      type: array
      items: *id095
      description: |-
        List of groups and their access permissions.
    Projects.category:
      required:
      - id
      - name
      type: object
      properties: *id381
      additionalProperties: true
    Projects.categoryCreateRequest:
      required:
      - name
      type: object
      properties: *id102
      additionalProperties: true
    Projects.categoryAdminImportRequest:
      properties:
        id:
          type: string
          description: |
            Specifies the category ID to be created or updated.

            If specified and points to an existing category, the category is updated.<br>
            If specified and does not point to an existing category, the request creates a new category. The new category will have the specified ID.<br>
            If omitted, the request creates a new category. The new category will have an auto-generated ID.
        owner:
          type: string
          maxLength: 63
          pattern: |-
            ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
          description: |
            Specifies the user ID of the category owner.
        name: *id1168
      additionalProperties: true
      required:
      - name
      type: object
    Projects.categoryResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.category'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.categoryResponseSingle:
      required:
      - data
      type: object
      properties: *id103
      additionalProperties: false
    Projects.categoryWithAdditionalInfoResponseSingle:
      required:
      - data
      type: object
      properties: *id380
      additionalProperties: false
    Projects.myMattersShortcutAdminImportRequest:
      required:
      - target_id
      - name
      type: object
      properties:
        target_id:
          type: string
          description: |
            Specifies the target workspace ID to create the shortcut for.

          example: active!1944.
        name:
          type: string
          description: |
            Specifies the name of the shortcut.

            This is the display name for the shortcut.
            The name is typically the same as the source object's name, such as the workspace name.
        id:
          type: string
          description: |
            Specifies the shortcut ID to be created or updated.

            If specified and points to an existing shortcut, the shortcut is updated.<br>
            If specified and does not point to an existing shortcut, the request creates a new shortcut. The new shortcut will have the specified ID.<br>
            If omitted, the request creates a new workspace shortcut in My Matters or one of its categories. The new shortcut will have an auto-generated ID.
        owner:
          type: string
          maxLength: 63
          pattern: |-
            ^(?!\s*$)[\u0020-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]+$
          description: |
            Specifies the user ID of the shortcut owner.
      additionalProperties: true
    Projects.myFavoritesShortcutAdminImportRequest:
      required:
      - target_id
      - name
      - wstype
      type: object
      properties:
        name:
          type: string
          description: |
            Specifies the name of the shortcut.<br><br>
            The name is typically same as the source object's name, such as the workspace name.
        id:
          type: string
          description: |
            Specifies the ID of the shortcut to be updated.

            If specified, the request points to the shortcut to be updated.
            If absent, the request creates a new workspace, folder, and/or document shortcut in My Favorites or categories within My Favorites.
        target_id:
          type: string
          description: |
            Specifies the ID of the target workspace, folder, and/or document for which the shortcut is to be created.<br>
          example: ACTIVE_UK!1944.
        wstype:
          enum: ["workspace", "folder", "document"]
          type: string
          description: |
            Specifies the type of iManage Work object the shortcut points to.
      additionalProperties: true
    Projects.myFavoritesAdminImportResponse:
      required:
      - data
      type: object
      properties: *id1169
    Projects.myMattersAdminImportResponse:
      required:
      - data
      type: object
      properties: *id1170
    Projects.myFavoritesMattersAdminImportRequest:
      type: object
      properties:
        categories: *id123
        import_id: *id124
      additionalProperties: true
    Projects.myFavoritesAdminImportRequest:
      properties: *id1171
      additionalProperties: true
      type: object
    Projects.myMattersAdminImportRequest:
      properties: *id1172
      additionalProperties: true
      type: object
    Projects.childOfFolder:
      required:
      - database
      - id
      type: object
      properties:
        activity_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when an activity was performed on the folder.
        content_saved_search_id:
          type: string
          description: |-
            ID assigned to a search folder to save the document search results.
        database:
          type: string
          description: |-
            Name of iManage Work library where the folder is located.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description:
          type: string
          description: |-
            Additional information about the folder. It must be less than 255 characters.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the folder profile or its content was last edited.
        email:
          type: string
          maxLength: 254
        folder_type:
          $ref: '#/components/schemas/Projects.folderType'
        inherited_default_security:
          $ref: '#/components/schemas/Projects.accessRule'
        has_documents:
          type: boolean
          description: |
            Indicates if the folder contains documents.<br><br>
            If `true`, the folder contains documents.<br>
            If `false`, the folder does not contain documents.
        has_subfolders:
          type: boolean
          description: |
            Indicates if the folder contains subfolders.<br><br>
            If `true`, the folder contains subfolders.<br>
            If `false`, the folder does not contain subfolders.
        id:
          type: string
          description: |-
            Indicates the folder ID.
        is_container_saved_search:
          type: boolean
          description: |
            Indicates the parent container is a saved search folder.<br><br>
            If `true`, the parent container is a saved search folder.<br>
            If `false`, the parent container is not a saved search folder.
        is_content_saved_search:
          type: boolean
          description: |
            Indicates the document search is saved in this folder.<br><br>
            If `true`, the document search is saved in this folder.<br>
            If `false`, the document search is not saved in this folder.
        is_external:
          type: boolean
          description: |
            Indicates the folder is shared with external users.<br><br>
            If `true`, the folder is shared with external users.<br>
            If `false`, the folder is not shared with external users.
        is_external_as_normal:
          type: boolean
          description: |
            Indicates an external user is treated as a normal user when determining the access permission.<br><br>
            If `true`, an external user is treated as a normal user when determining the access permission.<br>
            If `false`, an external user is not treated as a normal user, and access permission is restricted.
        name:
          type: string
          description: |-
            Name of the folder.
        owner:
          type: string
          description: |-
            Owner of the folder.
        owner_description:
          type: string
          description: |-
            Full name of the owner.
        parent_id:
          type: string
          description: |-
            ID of the parent folder, if exists and is accessible.
        project_custom1:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        target:
          description: |-
            This field is required when iManage Work object is shortcut for a folder or workspace.
          required:
          - database
          - id
          type: object
          properties: &id1234
            database:
              type: string
              description: |-
                iManage Work library name where the folder is located.
            folder_type:
              $ref: '#/components/schemas/Projects.folderType'
            doc_type:
              type: string
              description: |-
                TBD
            document_number:
              type: integer
              description: |-
                Indicates the document number of a document.

                Document number is the number assigned to a document when it is imported to iManage Work,
                and appears as part of the document ID.<br>
                Document ID is the combination of library ID, document number, and document version.<br>
                For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
            name:
              type: string
              description: |-
                File name of the document.
            type:
              type: string
              description: |-
                Type of the document which is used by the iManage Work Server to associate it to an application to open and edit.
            id:
              type: string
            subtype:
              enum: ["template", "work", "imanage_share_folder", "C", "F", "O", "Q",
                "S"]
              type: string
              description: |-
                Type of the target object to which the shortcut points to. For example, workspaces, categories, and folders.
            wstype:
              $ref: '#/components/schemas/Projects.wsType'
          additionalProperties: false
        view_type:
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        workspace_id:
          type: string
          description: |-
            The parent workspace ID.
        workspace_name:
          type: string
          description: |-
            Name of the parent workspace.
        wstype:
          $ref: '#/components/schemas/Projects.wsType'
        document_number:
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        author:
          type: string
          description: |-
            ID of the user who created the document.
        author_description:
          type: string
          description: |-
            Full name of the author.
        class:
          type: string
          description: |-
            Classification for identifying and differentiating the document. Document class is categorized by genre, department, region, and so on.
        subclass:
          type: string
          description: |-
            Sub category of the document class. For example, 'Employment Letter' is a subclass of 'HR' document class.
        content_type:
          enum: ["D", "5", "P"]
          type: string
          description: |-
            Document content type.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the document was imported to iManage Work Server.
        declared:
          type: boolean
          description: |
            Indicates the document is declared as a record.<br><br>
            A document that is declared as a record can no longer be edited or deleted, except by an iManage Work system administrator.<br>

            If `true`, the document is declared as a record.<br>
            If `false`, the document is declared as a record.
        edit_profile_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) of the last change to the document profile.
        extension:
          type: string
          description: |-
            File extension of the document.
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the document was initially created before uploading to iManage Work Server.
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being imported into the iManage Work system.
        has_attachment:
          type: boolean
          description: |
            Indicates the emails in the results have attachments. This is applicable only to emails.<br><br>
            If `true`, the emails in the results have attachments.<br>
            If `false`, the emails in the results does not have attachments.
        in_use:
          type: boolean
          description: |-
            Is `true` when a user is working on the document.
        indexable:
          type: boolean
          description: |-
            Is `true` if the document can be indexed.
        is_checked_out:
          type: boolean
          description: |
            Indicates if the document is checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        is_restorable:
          type: boolean
          description: |-
            Is `true` when an archived document can be restored.
        iwl:
          type: string
          description: |-
            The iManage Work Link (iWL) of a document which is used to open it in Protected View Mode by the user who has Read/Write or Full Access.
        last_user:
          type: string
          description: |-
            Name of the user who most recently edited the document in iManage Work.
        last_user_description:
          type: string
          description: |-
            Full name of the last user.
        location:
          type: string
          description: |-
            Indicates the file path on the iManage Work server.<br><br>
            This value will be null if this property is not supported.
        operator:
          type: string
          description: |-
            The user ID who has checked out the document or is currently editing its profile.
        operator_description:
          type: string
          description: |-
            Full name of the operator.
        retain_days:
          type: integer
          description: |-
            Number of days before the inactive document is eligible for archiving.
        size:
          type: integer
          description: |-
            Size of the document in bytes.
        shortcut_id:
          type: string
          description: |-
            Unique ID of the document shortcut.
        type:
          type: string
          description: |-
            Type of the document which is used by iManage Work Server to associate it to an application to open and edit. For example, WORD for Microsoft Word.
        version:
          type: integer
          description: |-
            The latest document version number.
        conversation_id:
          type: string
          description: |-
            Serialized form of the email's normalized subject header to identify an email thread. For example, base64-encoded.
        conversation_name:
          type: string
          description: |-
            Normalized subject header of the email with "RE:" and "FWD:" stripped. Note that this is language specific.
        subject:
          type: string
          description: |-
            Subject header of the email. Only applicable to emails.
        from:
          type: string
          description: |-
            Sender of the email. Only applicable to emails.
        to:
          type: string
          description: |-
            Recipients of the email. Only applicable to emails.
        sent_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the email was sent.
        custom1:
          type: string
          description: |-
            Alias for custom1 metadata property. Custom1 is the parent of custom2 property.
        custom1_description:
          type: string
          description: |-
            Additional information about the custom1 property.
        custom2:
          type: string
          description: |-
            Alias for custom2 metadata property. Custom2 is the child of custom2 property.
        custom2_description:
          type: string
          description: |-
            Additional information about the custom2 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 metadata property.
        custom3_description:
          type: string
          description: |-
            Additional information about the custom3 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 metadata property.
        custom4_description:
          type: string
          description: |-
            Additional information about the custom4 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 metadata property.
        custom5_description:
          type: string
          description: |-
            Additional information about the custom5 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 metadata property.
        custom6_description:
          type: string
          description: |-
            Additional information about the custom6 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 metadata property.
        custom7_description:
          type: string
          description: |-
            Additional information about the custom7 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 metadata property.
        custom8_description:
          type: string
          description: |-
            Additional information about the custom8 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 metadata property.
        custom9_description:
          type: string
          description: |-
            Additional information about the custom9 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 metadata property.
        custom11_description:
          type: string
          description: |-
            Additional information about the custom11 property.
        custom12:
          type: string
          description: |-
            Alias for custom12 metadata property.
        custom12_description:
          type: string
          description: |-
            Additional information about the custom12 property.
        custom13:
          type: string
          description: |-
            The value of custom13 property.
        custom14:
          type: string
          description: |-
            The value of custom14 property.
        custom15:
          type: string
          description: |-
            The value of custom15 property.
        custom16:
          type: string
          description: |-
            The value of custom16 property.
        custom17:
          type: integer
          description: |-
            The value of custom17 property.
        custom18:
          type: integer
          description: |-
            The value of custom18 property.
        custom19:
          type: number
          description: |-
            The value of custom19 property.
          format: double
        custom20:
          type: integer
          description: |-
            The value of custom20 property.
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The value of custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The value of custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The value of custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The value of custom24 property.
        custom25:
          type: boolean
          description: |-
            Boolean value of custom25 property.
        custom26:
          type: boolean
          description: |-
            Boolean value of custom26 property.
        custom27:
          type: boolean
          description: |-
            Boolean value of custom27 property.
        custom28:
          type: boolean
          description: |-
            Boolean value of custom28 property.
        custom29:
          type: string
          description: |-
            Alias for custom29 metadata property.
        custom29_description:
          type: string
          description: |-
            Additional information about the custom29 property. Custom29 is the parent of custom30.
        custom30:
          type: string
          description: |-
            Alias for custom30 metadata property.
        custom30_description:
          type: string
          description: |-
            Additional information about the custom30 property. Custom30 is the child of custom29.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description:
          type: string
          description: |-
            Reserved. Do not use.
      additionalProperties: true
    Projects.childOfFolderDataList-v1:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.childOfFolder'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.childOfFolderDataList:
      required:
      - data
      type: object
      properties: *id1173
      additionalProperties: false
    Projects.project:
      required:
      - id
      - name
      type: object
      properties:
        container_saved_search_id:
          type: string
          description: |-
            Indicates the ID assigned to a search folder to save the folder search results.<br><br>
            This property is returned only if the property `is_container_saved_search` is `true`.
        content_saved_search_id:
          type: string
          description: |-
            Indicates the ID assigned to a search folder to save the document search results.<br><br>
            This property is returned only if the property `is_content_saved_search` is `true`.
        database:
          type: string
          description: |-
            Indicates the name of the library where the folder is located.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description:
          type: string
          description: |-
            Indicates any additional information about the folder.<br><br>
            This property is returned only if a description is set for the folder.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the folder profile or its content was last edited.
        email:
          type: string
          maxLength: 254
        folder_type:
          $ref: '#/components/schemas/Projects.folderType'
        has_documents:
          type: boolean
          description: |-
            Indicates if the folder contains documents.<br><br>
            If `true`, the folder contains documents.<br>
            If `false`, the folder does not contain documents.
        has_subfolders:
          type: boolean
          description: |
            Indicates the folder contains subfolders.<br><br>
            If `true`, the folder contains subfolders.<br>
            If `false`, the folder does not contain subfolders.
        id:
          type: string
          description: |-
            Indicates the folder ID.
        inherited_default_security:
          $ref: '#/components/schemas/Projects.accessRule'
        is_container_saved_search:
          type: boolean
          description: |
            Indicates the folder search is saved in this folder.<br><br>
            If `true`, the folder search is saved in this folder.<br>
            If `false`, folder search is not saved in this folder.
        is_content_saved_search:
          type: boolean
          description: |
            Indicates the document search is saved in this folder.<br><br>
            If `true`, the document search is saved in this folder.<br>
            If `false`, the document search is not saved in this folder.
        is_external:
          type: boolean
          description: |
            Indicates the folder is shared with external users.<br><br>
            If `true`, the folder is shared with external users.<br>
            If `false`, the folder is not shared with external users.
        is_external_as_normal:
          type: boolean
          description: |-
            Indicates if the external folder is treated as a normal folder.<br><br>
            If `true`, the current user's `is_external` value does not affect the access permissions the user has on the folder.
            That is, all the users can access the content of a folder according to their access permission. <br>
            If `false`, the external users can access only the folder content they have been permitted to. <br>

            If it is `true` and `default_security` of folder is not `private`, the property `is_external` is set to `true`.<br>
            If it is `false` and `default_security` of folder is not `private`, the property `is_external` is set to `false`.
        name:
          type: string
          description: |-
            Indicates name of the folder.
        owner:
          type: string
          description: |
            Indicates the user ID of the folder owner.<br><br>
        owner_description:
          type: string
          description: |-
            Indicates full name of the owner.
        parent_id:
          type: string
          description: |-
            Indicates the parent folder ID.
        project_custom1:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3:
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        target:
          $ref: '#/components/schemas/Projects.folderTarget'
        view_type:
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        workspace_id:
          type: string
          description: |-
            Indicates the parent workspace ID.
        workspace_name:
          type: string
          description: |-
            Indicates the name of the parent workspace.
        wstype:
          $ref: '#/components/schemas/Projects.wsType'
      additionalProperties: true
    Projects.documentPath:
      required:
      - data
      type: object
      properties: *id1174
      additionalProperties: false
    Projects.effectiveSecurity:
      enum: ["no_access", "read", "read_write", "full_access"]
      type: string
      description: |
        Indicates the effective security access level available to the user.

        Effective security is the access level that is the net result of a combination of the following:
        * an objects's default security
        * a user's access permission for that object
        * possible conflicts among groups to which the user belongs to
        * the security model being used.

        The available access levels are:

        |Access level|Description|
        |:---|:---|
        |no_access|The user has no access, or any permissions to the container or document.|
        |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
    Projects.folderPath:
      required:
      - data
      type: object
      properties: *id536
      additionalProperties: false
    Projects.folder:
      properties:
        profile: &id1175
          type: object
          description: Folder profile information that is applied on the documents
            automatically when they are uploaded to the folder.
          properties:
            author:
              maxLength: 32
              type: string
              description: |-
                The user ID who created the document.
            class:
              maxLength: 32
              type: string
              description: |
                The class of the folder.<br><br>
                This is a validated field and must be a defined alias of the property `class`.
              example: Doc
            subclass:
              maxLength: 32
              type: string
              description: |
                The subclass of the folder.<br><br>
                This is a validated field and must be a defined alias of the property `subclass`.
              example: Word2007
            custom1:
              maxLength: 32
              type: string
              description: |-
                Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom2:
              maxLength: 32
              type: string
              description: |-
                Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom3:
              maxLength: 32
              type: string
              description: |-
                Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom4:
              maxLength: 32
              type: string
              description: |-
                Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom5:
              maxLength: 32
              type: string
              description: |-
                Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom6:
              maxLength: 32
              type: string
              description: |-
                Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom7:
              maxLength: 32
              type: string
              description: |-
                Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom8:
              maxLength: 32
              type: string
              description: |-
                Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom9:
              maxLength: 32
              type: string
              description: |-
                Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom10:
              maxLength: 32
              type: string
              description: |-
                Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom11:
              maxLength: 32
              type: string
              description: |-
                Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom12:
              maxLength: 32
              type: string
              description: |-
                Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom13:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom13 property.<br><br>Maximum length&colon; 96.
            custom14:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom14 property.<br><br>Maximum length&colon; 96.
            custom15:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom15 property.<br><br>Maximum length&colon; 96.
            custom16:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom16 property.<br><br>Maximum length&colon; 96.
            custom17:
              type: number
              description: |-
                A numeric value for the custom17 property.
              format: double
            custom18:
              type: number
              description: |-
                A numeric value for the custom18 property.
              format: double
            custom19:
              type: number
              description: |-
                A numeric value for the custom19 property.
              format: double
            custom20:
              type: number
              description: |-
                A numeric value for the custom20 property.
              format: double
            custom21:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                Indicates a timestamp for the custom21 property (in ISO 8601 format).
            custom22:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom22 property (in ISO 8601 format).
            custom23:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom23 property (in ISO 8601 format).
            custom24:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom24 property (in ISO 8601 format).
            custom25:
              type: boolean
              description: |-
                A boolean value for the custom25 property.
            custom26:
              type: boolean
              description: |-
                A boolean value for the custom26 property.
            custom27:
              type: boolean
              description: |-
                A boolean value for the custom27 property.
            custom28:
              type: boolean
              description: |-
                A boolean value for the custom28 property.
            custom29:
              maxLength: 32
              type: string
              description: |-
                Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom30:
              maxLength: 32
              type: string
              description: |-
                Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom31:
              maxLength: 32
              type: string
              description: |-
                Reserved. Do not use.
            description:
              maxLength: 254
              type: string
              description: |-
                Reserved. Do not use.
          additionalProperties: true
        activity_date: &id1176
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date when the last activity was performed on a folder.
        container_saved_search_id: &id1177
          type: string
          description: |-
            Indicates the ID assigned to a search folder to save the folder search results.<br><br>
            This property is returned only if the property `is_container_saved_search` is `true`.
        content_saved_search_id: &id1178
          type: string
          description: |-
            Indicates the ID assigned to a search folder to save the document search results.<br><br>
            This property is returned only if the property `is_content_saved_search` is `true`.
        database: &id1179
          type: string
          description: |-
            Indicates the name of the library where the folder is located.
        default_security: &id1180
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description: &id1181
          type: string
          description: |-
            Indicates any additional information about the folder.<br><br>
            This property is returned only if a description is set for the folder.
        edit_date: &id1182
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the folder profile or its content was last edited.
        effective_security: &id1183
          $ref: '#/components/schemas/Projects.effectiveSecurity'
        email: &id1184
          type: string
          maxLength: 254
        folder_type: &id1185
          $ref: '#/components/schemas/Projects.folderType'
        has_documents: &id1186
          type: boolean
          description: |-
            Indicates if the folder contains documents.<br><br>
            If `true`, the folder contains documents.<br>
            If `false`, the folder does not contain documents.
        has_subfolders: &id1187
          type: boolean
          description: |
            Indicates the folder contains subfolders.<br><br>
            If `true`, the folder contains subfolders.<br>
            If `false`, the folder does not contain subfolders.
        id: &id1188
          type: string
          description: |-
            Indicates the folder ID.
        inherited_default_security: &id1189
          $ref: '#/components/schemas/Projects.accessRule'
        is_container_saved_search: &id1190
          type: boolean
          description: |
            Indicates the folder search is saved in this folder.<br><br>
            If `true`, the folder search is saved in this folder.<br>
            If `false`, folder search is not saved in this folder.
        is_content_saved_search: &id1191
          type: boolean
          description: |
            Indicates the document search is saved in this folder.<br><br>
            If `true`, the document search is saved in this folder.<br>
            If `false`, the document search is not saved in this folder.
        is_external: &id1192
          type: boolean
          description: |
            Indicates the folder is shared with external users.<br><br>
            If `true`, the folder is shared with external users.<br>
            If `false`, the folder is not shared with external users.
        is_external_as_normal: &id1193
          type: boolean
          description: |-
            Indicates if the external folder is treated as a normal folder.<br><br>
            If `true`, the current user's `is_external` value does not affect the access permissions the user has on the folder.
            That is, all the users can access the content of a folder according to their access permission. <br>
            If `false`, the external users can access only the folder content they have been permitted to. <br>

            If it is `true` and `default_security` of folder is not `private`, the property `is_external` is set to `true`.<br>
            If it is `false` and `default_security` of folder is not `private`, the property `is_external` is set to `false`.
        name: &id1194
          type: string
          description: |-
            Indicates name of the folder.
        owner: &id1195
          type: string
          description: |
            Indicates the user ID of the folder owner.<br><br>
        owner_description: &id1196
          type: string
          description: |-
            Indicates full name of the owner.
        parent_id: &id1197
          type: string
          description: |-
            Indicates the parent folder ID.
        project_custom1: &id1198
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2: &id1199
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3: &id1200
          type: string
          description: |
            Indicates additional information about the folder.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        security_policy: &id1201
          type: string
          $ref: '#/components/schemas/Common.securityPolicyType'
        subtype: &id1202
          enum: ["Q", "C", "S", "F", "T", "N", "E", "D", "template", "work", "imanage_share_folder"]
          type: string
          description: |+
            Indicates the subtype of the container.

            |Value|Description|
            |:---|:---|
            |Q|Tab|
            |C|Search folder.|
            |S|If the container is at the root level of a workspace, it is My Matters. If the container has a valid parent container, it is a category.|
            |F|My Favorites container|
            |T|Task|
            |N|Note|
            |E|Event|
            |D|Discussion|
            |work|Workspace|
            |imanage_share_folder|iManage Share folder|
            |template|Workspace template|

        view_type: &id1203
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        workspace_id: &id1204
          type: string
          description: |-
            Indicates the parent workspace ID.
        workspace_name: &id1205
          type: string
          description: |-
            Indicates the name of the parent workspace.
        wstype: &id1206
          $ref: '#/components/schemas/Projects.wsType'
      required:
      - id
      type: object
      additionalProperties: true
    Projects.folderWithAdditionalInfo:
      title: Folder
      properties:
        operations:
          description: List of operations allowed on the folder.
          required:
          - add_content
          - remove_content
          - add_folders
          - remove_folders
          - change_name
          - modify
          - remove
          - set_default_security
          - set_security
          - update_content_shortcut
          type: object
          properties:
            add_content:
              type: boolean
              description: |
                Indicates that documents can be added to the folder.<br><br>
                If `true`, documents can be added to the folder.<br>
                If `false`, documents cannot be added to the folder.
            add_custom_folders:
              type: boolean
              description: |
                Indicates a user can create a custom folder.<br><br>
                Custom folders are those that are not defined by a workspace template, or not enforced by flexible folders.
                This parameter applies only to a folder that has been created from a workspace template and the flexible folders option is currently enabled.
                For more information on workspace template, see the <a href="#tag--Workspace-Templates">Workspace Templates</a> collection.<br><br>
                If `true`, users can create custom folders.<br>
                If `false`, users cannot create custom folders.<br><br>
                If the folder was not created from a workspace template, users can create standard folders according their access permission.
            add_folders:
              type: boolean
              description: |
                Indicates subfolders can be added to the folder.<br><br>
                If `true`, subfolders can be added to the folder.<br>
                If `false`, subfolders cannot be added to the folder.
            change_name:
              type: boolean
              description: |
                Indicates the folder can be renamed.<br><br>
                If `true`, the folder can be renamed.<br>
                If `false`, the folder cannot be renamed.
            default_security_values:
              type: array
              items:
                enum: ["private", "view", "public", "inherit"]
                type: string
              description: |
                Indicates the default security setting.<br>

                |Value|Description|
                |:---|:---|
                |inherit|The container or item inherits security settings from its parent container.|
                |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
            modify:
              type: boolean
              description: |
                Indicates the folder profile can be modified.<br><br>
                If `true`, the folder profile can be modified.<br>
                If `false`, the folder profile cannot be modified.
            move:
              type: boolean
              description: |
                Indicates the folder can be moved.<br><br>
                If `true`, the folder can be moved.<br>
                If `false`, the folder cannot be moved.
            remove_content:
              type: boolean
              description: |
                Indicates documents in the folder can be deleted.<br><br>
                If `true`, documents in the folder can be deleted.<br>
                If `false`, documents in the folder cannot be deleted.
            remove_folders:
              type: boolean
              description: |
                Indicates subfolders can be deleted.<br><br>
                If `true`, subfolders can be deleted.<br>
                If `false`, subfolders cannot be deleted.<br>
                A subfolder can be deleted only if it is empty.
            remove:
              type: boolean
              description: |
                Indicates the folder can be deleted.<br><br>
                If `true`, the folder can be deleted.<br>
                If `false`, the folder cannot be deleted.<br>
                A folder can be deleted only if it is empty.
            set_default_security:
              type: boolean
              description: |
                Indicates the default security of the folder can be updated.<br><br>
                If `true`, the default security of the folder can be updated.<br>
                If `false`, the default security of the folder cannot be updated.
            set_security:
              type: boolean
              description: |
                Indicates the security of the folder can be updated.<br><br>
                If `true`, the security of the folder can be updated.<br>
                If `false`, the security of the folder cannot be updated.
            update_content_shortcut:
              type: boolean
              description: |
                Indicates if the user can update the `name` property of document shortcuts in this folder.<br><br>
                If `true`, the user can update the `name` property of document shortcuts in this folder.<br>
                If `false`, the user cannot update the `name` property of document shortcuts in this folder.
          additionalProperties: true
        owner_info:
          type: object
          description: Information about the owner of this folder.
          properties:
            is_external:
              type: boolean
              description: |+
                Indicates that  the user is an external user.

                If `true`, the user is an external user.<br>
                If `false`, the user is not an external user, also called a regular user.

                For more information, see <a href="#overview--external-users"> External users</a>.

            allow_logon:
              type: boolean
              description: |
                Indicates if the user is allowed to sign in.

                If `true`, the user is allowed to sign in.<br>
                If `false`, the user is not allowed to sign in.
        profile: *id1175
        activity_date: *id1176
        container_saved_search_id: *id1177
        content_saved_search_id: *id1178
        database: *id1179
        default_security: *id1180
        description: *id1181
        edit_date: *id1182
        effective_security: *id1183
        email: *id1184
        folder_type: *id1185
        has_documents: *id1186
        has_subfolders: *id1187
        id: *id1188
        inherited_default_security: *id1189
        is_container_saved_search: *id1190
        is_content_saved_search: *id1191
        is_external: *id1192
        is_external_as_normal: *id1193
        name: *id1194
        owner: *id1195
        owner_description: *id1196
        parent_id: *id1197
        project_custom1: *id1198
        project_custom2: *id1199
        project_custom3: *id1200
        security_policy: *id1201
        subtype: *id1202
        view_type: *id1203
        workspace_id: *id1204
        workspace_name: *id1205
        wstype: *id1206
      additionalProperties: true
      required:
      - id
      type: object
    Projects.folderOrShortcutWithAdditionalInfo:
      type: object
      required:
      - data
      properties: *id1207
      additionalProperties: false
    Projects.folderWithOperations:
      properties:
        operations:
          description: List of operations allowed on the folder.
          required:
          - add_content
          - remove_content
          - add_folders
          - remove_folders
          - change_name
          - modify
          - remove
          - set_default_security
          - set_security
          - update_content_shortcut
          type: object
          properties:
            add_content:
              type: boolean
              description: |
                Indicates that documents can be added to the folder.<br><br>
                If `true`, documents can be added to the folder.<br>
                If `false`, documents cannot be added to the folder.
            add_custom_folders:
              type: boolean
              description: |
                Indicates a user can create a custom folder.<br><br>
                Custom folders are those that are not defined by a workspace template, or not enforced by flexible folders.
                This parameter applies only to a folder that has been created from a workspace template and the flexible folders option is currently enabled.
                For more information on workspace template, see the <a href="#tag--Workspace-Templates">Workspace Templates</a> collection.<br><br>
                If `true`, users can create custom folders.<br>
                If `false`, users cannot create custom folders.<br><br>
                If the folder was not created from a workspace template, users can create standard folders according their access permission.
            add_folders:
              type: boolean
              description: |
                Indicates subfolders can be added to the folder.<br><br>
                If `true`, subfolders can be added to the folder.<br>
                If `false`, subfolders cannot be added to the folder.
            change_name:
              type: boolean
              description: |
                Indicates the folder can be renamed.<br><br>
                If `true`, the folder can be renamed.<br>
                If `false`, the folder cannot be renamed.
            default_security_values:
              type: array
              items:
                enum: ["private", "view", "public", "inherit"]
                type: string
              description: |
                Indicates the default security setting.<br>

                |Value|Description|
                |:---|:---|
                |inherit|The container or item inherits security settings from its parent container.|
                |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
            modify:
              type: boolean
              description: |
                Indicates the folder profile can be modified.<br><br>
                If `true`, the folder profile can be modified.<br>
                If `false`, the folder profile cannot be modified.
            move:
              type: boolean
              description: |
                Indicates the folder can be moved.<br><br>
                If `true`, the folder can be moved.<br>
                If `false`, the folder cannot be moved.
            remove_content:
              type: boolean
              description: |
                Indicates documents in the folder can be deleted.<br><br>
                If `true`, documents in the folder can be deleted.<br>
                If `false`, documents in the folder cannot be deleted.
            remove_folders:
              type: boolean
              description: |
                Indicates subfolders can be deleted.<br><br>
                If `true`, subfolders can be deleted.<br>
                If `false`, subfolders cannot be deleted.<br>
                A subfolder can be deleted only if it is empty.
            remove:
              type: boolean
              description: |
                Indicates the folder can be deleted.<br><br>
                If `true`, the folder can be deleted.<br>
                If `false`, the folder cannot be deleted.<br>
                A folder can be deleted only if it is empty.
            set_default_security:
              type: boolean
              description: |
                Indicates the default security of the folder can be updated.<br><br>
                If `true`, the default security of the folder can be updated.<br>
                If `false`, the default security of the folder cannot be updated.
            set_security:
              type: boolean
              description: |
                Indicates the security of the folder can be updated.<br><br>
                If `true`, the security of the folder can be updated.<br>
                If `false`, the security of the folder cannot be updated.
            update_content_shortcut:
              type: boolean
              description: |
                Indicates if the user can update the `name` property of document shortcuts in this folder.<br><br>
                If `true`, the user can update the `name` property of document shortcuts in this folder.<br>
                If `false`, the user cannot update the `name` property of document shortcuts in this folder.
          additionalProperties: true
        profile: *id1175
        activity_date: *id1176
        container_saved_search_id: *id1177
        content_saved_search_id: *id1178
        database: *id1179
        default_security: *id1180
        description: *id1181
        edit_date: *id1182
        effective_security: *id1183
        email: *id1184
        folder_type: *id1185
        has_documents: *id1186
        has_subfolders: *id1187
        id: *id1188
        inherited_default_security: *id1189
        is_container_saved_search: *id1190
        is_content_saved_search: *id1191
        is_external: *id1192
        is_external_as_normal: *id1193
        name: *id1194
        owner: *id1195
        owner_description: *id1196
        parent_id: *id1197
        project_custom1: *id1198
        project_custom2: *id1199
        project_custom3: *id1200
        security_policy: *id1201
        subtype: *id1202
        view_type: *id1203
        workspace_id: *id1204
        workspace_name: *id1205
        wstype: *id1206
      additionalProperties: true
      required:
      - id
      type: object
    Projects.folderWithoutProfile:
      required:
      - id
      type: object
      properties:
        activity_date: *id1176
        container_saved_search_id: *id1177
        content_saved_search_id: *id1178
        database: *id1179
        default_security: *id1180
        description: *id1181
        edit_date: *id1182
        effective_security: *id1183
        email: *id1184
        folder_type: *id1185
        has_documents: *id1186
        has_subfolders: *id1187
        id: *id1188
        inherited_default_security: *id1189
        is_container_saved_search: *id1190
        is_content_saved_search: *id1191
        is_external: *id1192
        is_external_as_normal: *id1193
        name: *id1194
        owner: *id1195
        owner_description: *id1196
        parent_id: *id1197
        project_custom1: *id1198
        project_custom2: *id1199
        project_custom3: *id1200
        security_policy: *id1201
        subtype: *id1202
        view_type: *id1203
        workspace_id: *id1204
        workspace_name: *id1205
        wstype: *id1206
      additionalProperties: true
    Projects.folderCreateRequest-v1:
      required:
      - database
      properties:
        database:
          type: string
        default_security: &id1208
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description: &id1209
          maxLength: 254
          type: string
          description: |
            Additional information about the folder.<br><br>
            Maximum length is 254 characters.
        email: &id1210
          type: string
          maxLength: 254
        group_trustees: &id1211
          type: array
          items: *id095
          description: |-
            List of groups and their access permissions.
        is_external_as_normal: &id1212
          type: boolean
          description: |-
            If set to `true` and `default_security` is not `private`, sets `is_external` to `true`.
        name: &id1213
          maxLength: 254
          type: string
          description: |
            Name of the folder.<br><br>
            Maximum length is 254 characters.
        owner: &id1214
          type: string
          description: |
            The user ID of the folder owner.<br><br>
            This parameter can be updated only by an NRTADMIN.
        parent_id: &id1215
          type: string
          description: |-
            The parent folder ID.
        profile: &id1216
          type: object
          description: Specifies the folder or tab profile information that is applied
            to the documents automatically when they are uploaded to the folder or
            tab.
          properties:
            author:
              maxLength: 32
              type: string
              description: |-
                The ID of the user who created the document.
            class:
              maxLength: 32
              type: string
              description: |
                The class of the folder or tab.

                This is a validated field and must be a defined alias of the property `class`.
              example: Doc
            subclass:
              maxLength: 32
              type: string
              description: |
                The subclass of the folder or tab.

                This is a validated field and must be a defined alias of the property `subclass`.
              example: Word2007
            custom1:
              maxLength: 32
              type: string
              description: |-
                Alias of custom1 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom2:
              maxLength: 32
              type: string
              description: |-
                Alias of custom2 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom3:
              maxLength: 32
              type: string
              description: |-
                Alias for custom3 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom4:
              maxLength: 32
              type: string
              description: |-
                Alias for custom4 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom5:
              maxLength: 32
              type: string
              description: |-
                Alias for custom5 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom6:
              maxLength: 32
              type: string
              description: |-
                Alias for custom6 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom7:
              maxLength: 32
              type: string
              description: |-
                Alias for custom7 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom8:
              maxLength: 32
              type: string
              description: |-
                Alias for custom8 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom9:
              maxLength: 32
              type: string
              description: |-
                Alias for custom9 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom10:
              maxLength: 32
              type: string
              description: |-
                Alias for custom10 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom11:
              maxLength: 32
              type: string
              description: |-
                Alias for custom11 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom12:
              maxLength: 32
              type: string
              description: |-
                Alias for custom12 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom13:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom13 property.<br><br>Maximum length&colon; 96.
            custom14:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom14 property.<br><br>Maximum length&colon; 96.
            custom15:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom15 property.<br><br>Maximum length&colon; 96.
            custom16:
              maxLength: 96
              type: string
              description: |-
                A string value for the custom16 property.<br><br>Maximum length&colon; 96.
            custom17:
              type: number
              description: |-
                A numeric value for the custom17 property.
              format: double
            custom18:
              type: number
              description: |-
                A numeric value for the custom18 property.
              format: double
            custom19:
              type: number
              description: |-
                A numeric value for the custom19 property.
              format: double
            custom20:
              type: number
              description: |-
                A numeric value for the custom20 property.
              format: double
            custom21:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                Specifies a timestamp for the custom21 property (in ISO 8601 format).
            custom22:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom22 property (in ISO 8601 format).
            custom23:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom23 property (in ISO 8601 format).
            custom24:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |-
                A timestamp for the custom24 property (in ISO 8601 format).
            custom25:
              type: boolean
              description: |-
                A boolean value for the custom25 property.
            custom26:
              type: boolean
              description: |-
                A boolean value for the custom26 property.
            custom27:
              type: boolean
              description: |-
                A boolean value for the custom27 property.
            custom28:
              type: boolean
              description: |-
                A boolean value for the custom28 property.
            custom29:
              maxLength: 32
              type: string
              description: |-
                Alias of custom29 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom30:
              maxLength: 32
              type: string
              description: |-
                Alias of custom30 property.<br><br>This is a validated field and must be a currently defined alias of this property.
            custom31:
              maxLength: 32
              type: string
              description: |-
                Reserved. Do not use.
            description:
              maxLength: 254
              type: string
              description: |-
                Reserved. Do not use.
          additionalProperties: true
        project_custom1: &id1217
          maxLength: 254
          type: string
          description: |-
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>

            The text restrictions are:

            |Term|Value|
            |:---|:---:|
            | Minimum length | 0 |
            | Maximum length | 254 |
            | Unicode allowed | Yes |
            | Special Characters allowed | Yes |
        project_custom2: &id1218
          maxLength: 254
          type: string
          description: |-
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>

            The text restrictions are:

            |Term|Value|
            |:---|:---:|
            | Minimum length | 0 |
            | Maximum length | 254 |
            | Unicode allowed | Yes |
            | Special Characters allowed | Yes |
        project_custom3: &id1219
          maxLength: 254
          type: string
          description: |-
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>

            The text restrictions are:

            |Term|Value|
            |:---|:---:|
            | Minimum length | 0 |
            | Maximum length | 254 |
            | Unicode allowed | Yes |
            | Special Characters allowed | Yes |
        user_trustees: &id1220
          type: array
          items: *id096
          description: |-
            List of users and their access permissions.
      additionalProperties: true
      type: object
    Projects.folderCreateRequestV1:
      type: object
      properties:
        default_security: *id1208
        description: *id1209
        email: *id1210
        group_trustees: *id1211
        is_external_as_normal: *id1212
        name: *id1213
        owner: *id1214
        parent_id: *id1215
        profile: *id1216
        project_custom1: *id1217
        project_custom2: *id1218
        project_custom3: *id1219
        user_trustees: *id1220
      additionalProperties: true
    Projects.folderCreateRequest:
      required:
      - name
      type: object
      properties: *id211
      additionalProperties: true
    Projects.folderUpdateRequest:
      type: object
      properties: *id1221
      additionalProperties: true
    Security.projectMultipleTrusteesSecurityResponse:
      properties: *id094
      required:
      - data
      type: object
      additionalProperties: true
    Projects.folderUpdateRequest-v1:
      properties:
        custom1:
          type: string
        custom2:
          type: string
        custom3:
          type: string
        default_security: *id1222
        description: *id1223
        email: *id1224
        is_external_as_normal: *id1225
        name: *id1226
        owner: *id1227
        parent_id: *id1228
        profile: *id1229
        project_custom1: *id1230
        project_custom2: *id1231
        project_custom3: *id1232
      additionalProperties: true
      type: object
    Projects.folderResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.folderWithoutProfile'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.folderResponseSingle:
      required:
      - data
      type: object
      properties: *id097
      additionalProperties: false
    Projects.foldersSearchResponse-v1:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.folder'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.foldersSearchResponse:
      required:
      - data
      type: object
      properties: *id307
      additionalProperties: false
    Projects.foldersLibraryResponse:
      required:
      - id
      type: object
      properties: *id1233
      additionalProperties: true
    Projects.foldersSubfolderResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.folder'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.folderSecurity:
      enum: ["inherit", "public", "view", "private"]
      type: string
      description: |-
        The default access level.

        |Value|Description|
        |:---|:---|
        |inherit|The container or document inherits security settings from its parent container.|
        |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
        |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
        |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
    Projects.folderTarget:
      required:
      - database
      - id
      type: object
      description: |-
        Details of the target folder pointed by the folder shortcut.
      properties:
        database:
          type: string
          description: |-
            The source library (formerly called a database) name.
        folder_type:
          $ref: '#/components/schemas/Projects.folderType'
        id:
          type: string
        subtype:
          enum: ["template", "work", "imanage_share_folder", "C", "F", "O", "Q", "S"]
          type: string
          description: |-
            Type of the target object to which the shortcut points to. For example, workspaces, categories, and folders.
        wstype:
          $ref: '#/components/schemas/Projects.wsType'
      additionalProperties: false
    Projects.folderType:
      enum: ["regular", "search", "tab", "category", "my_matters", "my_favorites"]
      type: string
      description: |
        The container type.

        |Value|Description|
        |:---|:---|
        |regular|This is a regular folder, also called a document folder. It can contain documents, shortcuts, and folders.|
        |search|This is a search folder, and contains results from predefined searches.|
        |tab|This is tab folder. These are containers only at the root level of a workspace. There can be more than one tab in a workspace. Each tab can contain document folders and search folders but not documents.|
        |category|This is a category folder. These are containers only at the root level of My Favorites or My Matters. Categories can contain categories and shortcuts.|
        |my_matters|This is a My Matters container. My Matters contains shortcuts only to workspaces the user has explicitly added to this folder. Users can also list workspaces they subscribe to from other users.|
        |my_favorites|This is a My Favorites container. My Favorites contains shortcuts to folders and documents that the user has explicitly added to this folder.|
    Projects.folderWorkspaceTarget:
      required:
      - database
      - id
      type: object
      properties: *id1234
      additionalProperties: false
    Projects.searchFolder:
      required:
      - id
      - searchprofile
      properties:
        searchprofile:
          type: object
          properties: *id1235
          additionalProperties: false
          description: |-
            A set of criteria to be used as the search.
        profile: *id1175
        activity_date: *id1176
        container_saved_search_id: *id1177
        content_saved_search_id: *id1178
        database: *id1179
        default_security: *id1180
        description: *id1181
        edit_date: *id1182
        effective_security: *id1183
        email: *id1184
        folder_type: *id1185
        has_documents: *id1186
        has_subfolders: *id1187
        id: *id1188
        inherited_default_security: *id1189
        is_container_saved_search: *id1190
        is_content_saved_search: *id1191
        is_external: *id1192
        is_external_as_normal: *id1193
        name: *id1194
        owner: *id1195
        owner_description: *id1196
        parent_id: *id1197
        project_custom1: *id1198
        project_custom2: *id1199
        project_custom3: *id1200
        security_policy: *id1201
        subtype: *id1202
        view_type: *id1203
        workspace_id: *id1204
        workspace_name: *id1205
        wstype: *id1206
      additionalProperties: true
      description: |-
        Folder that contains dynamic search content.
      type: object
    Projects.searchFolderCreateRequest:
      required:
      - database
      - name
      - default_security
      - searchprofile
      type: object
      properties: *id390
      additionalProperties: false
      description: |-
        Search folder to create.
    Projects.searchFolderUpdateRequest:
      type: object
      properties: *id1236
      additionalProperties: false
      description: |-
        Search folder to be updated.
    Projects.searchFolderSearchProfile:
      type: object
      properties: *id1235
      additionalProperties: false
      description: |-
        A set of criteria to be used as the search.
    Projects.searchFolderResponseSingle:
      required:
      - data
      type: object
      properties: *id257
      additionalProperties: false
    Projects.tab:
      required:
      - database
      - default_security
      - edit_date
      - id
      - is_external_as_normal
      - name
      - owner_description
      - parent_id
      - subtype
      - workspace_id
      - workspace_name
      - wstype
      type: object
      properties:
        database: *id1237
        default_security: *id1238
        inherited_default_security: *id1239
        description: *id1240
        edit_date: *id1241
        effective_security: *id1242
        folder_type: *id1243
        has_subfolders: *id1244
        id: *id1245
        is_external: *id1246
        is_external_as_normal: *id1247
        name: *id1248
        owner: *id1249
        owner_description: *id1250
        parent_id: *id1251
        profile: *id1252
        project_custom1: *id1253
        project_custom2: *id1254
        project_custom3: *id1255
        subtype: *id1256
        workspace_id: *id1257
        workspace_name: *id1258
        wstype: *id1259
      additionalProperties: false
    Projects.tabCreateRequest:
      type: object
      properties: *id1260
      additionalProperties: true
    Projects.tabCreateRequest-v1:
      required:
      - database
      properties:
        database:
          type: string
        default_security: *id1261
        description: *id1262
        edit_date: *id1263
        is_external_as_normal: *id1264
        name: *id1265
        owner: *id1266
        profile: *id1267
        project_custom1: *id1268
        project_custom2: *id1269
        project_custom3: *id1270
      additionalProperties: true
      type: object
    Projects.tabResponseSingle:
      required:
      - data
      type: object
      properties: *id1271
      additionalProperties: false
    Projects.tabWithAdditionalInfoResponseSingle:
      required:
      - data
      type: object
      properties: *id1272
      additionalProperties: false
    Projects.tabUpdateRequest:
      type: object
      properties: *id1273
      additionalProperties: true
    Projects.template:
      required:
      - database
      - default_security
      - id
      type: object
      properties:
        activity_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when an activity was performed on the template.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the template was created.
        custom1:
          type: string
          description: |-
            Indicates the value from the custom1 property field.
        custom1_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom2:
          type: string
          description: |-
            Indicates the value from the custom2 property field.
        custom2_description:
          type: string
          description: |-
            Indicates additional information about the custom2 property.
        custom3:
          type: string
          description: |-
            Indicates the value from the custom3 property field.
        custom3_description:
          type: string
          description: |-
            Indicates additional information about the custom3 property.
        custom4:
          type: string
          description: |-
            Indicates the value from the custom4 property field.
        custom4_description:
          type: string
          description: |-
            Indicates additional information about the custom4 property.
        custom5:
          type: string
          description: |-
            Indicates the value from the custom5 property field.
        custom5_description:
          type: string
          description: |-
            Indicates additional information about the custom5 property.
        custom6:
          type: string
          description: |-
            Indicates the value from the custom6 property field.
        custom6_description:
          type: string
          description: |-
            Indicates additional information about the custom6 property.
        custom7:
          type: string
          description: |-
            Indicates the value from the custom7 property field.
        custom7_description:
          type: string
          description: |-
            Indicates additional information about the custom7 property.
        custom8:
          type: string
          description: |-
            Indicates the value from the custom8 property field.
        custom8_description:
          type: string
          description: |-
            Indicates additional information about the custom8 property.
        custom9:
          type: string
          description: |-
            Indicates the value from the custom9 property field.
        custom9_description:
          type: string
          description: |-
            Indicates additional information about the custom9 property.
        custom10:
          type: string
          description: |-
            Indicates the value from the custom10 property field.
        custom10_description:
          type: string
          description: |-
            Indicates additional information about the custom10 property.
        custom11:
          type: string
          description: |-
            Indicates the value from the custom11 property field.
        custom11_description:
          type: string
          description: |-
            Indicates additional information about the custom11 property.
        custom12:
          type: string
          description: |-
            Indicates the value from the custom12 property field.
        custom12_description:
          type: string
          description: |-
            Indicates additional information about the custom12 property.
        custom13:
          type: string
          description: |-
            Indicates the value from the custom13 property field.
        custom14:
          type: string
          description: |-
            Indicates the value from the custom14 property field.
        custom15:
          type: string
          description: |-
            Indicates the value from the custom15 property field.
        custom16:
          type: string
          description: |-
            Indicates the value from the custom16 property field.
        custom17:
          type: number
          description: |-
            Indicates the value from the custom17 property field.
          format: double
        custom18:
          type: number
          description: |-
            Indicates the value from the custom19 property field.
          format: double
        custom19:
          type: number
          description: |-
            Indicates the value from the custom19 property field.
          format: double
        custom20:
          type: number
          description: |-
            Indicates the value from the custom20 property field.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the value from the custom21 property field.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the value from the custom22 property field.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the value from the custom23 property field.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the value from the custom24 property field.
        custom25:
          type: boolean
          description: |-
            Indicates the value from the custom25 property field.
        custom26:
          type: boolean
          description: |-
            Indicates the value from the custom26 property field.
        custom27:
          type: boolean
          description: |-
            Indicates the value from the custom27 property field.
        custom28:
          type: boolean
          description: |-
            Indicates the value from the custom28 property field.
        custom29:
          type: string
          description: |-
            Indicates the value from the custom29 property field.
        custom29_description:
          type: string
          description: |-
            Indicates additional information about the custom29 property.
        custom30:
          type: string
          description: |-
            Indicates the value from the custom30 property field.
        custom30_description:
          type: string
          description: |-
            Indicates additional information about the custom30 property.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description:
          type: string
          description: |-
            Reserved. Do not use.
        database:
          type: string
          description: |-
            Indicates the name of the library the template is found in.
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the template was declared as a record.<br><br>
            As a record, it can no longer be edited or deleted except by an NRTADMIN.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description:
          type: string
          description: |-
            Indicates additional information about the template.
        document_number:
          type: integer
          description: |-
            Indicates the document number associated with the template.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the template was last edited.
        effective_security:
          enum: ["no_access", "read", "read_write", "full_access"]
          type: string
          description: |
            Indicates the effective security access level available to the user.

            Effective security is the access level that is the net result of a combination of the following:
            * an objects's default security
            * a user's access permission for that object
            * possible conflicts among groups to which the user belongs to
            * the security model being used.

            The available access levels are:

            |Access level|Description|
            |:---|:---|
            |no_access|The user has no access, or any permissions to the container or document.|
            |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        has_subfolders:
          type: boolean
          description: |
            Indicates the template has subfolders.<br><br>
            If `true`, the template has subfolders.<br>
            If `false`, the template does not have subfolders.
        id:
          type: string
          description: |-
            Indicates the template ID.
        is_declared:
          type: boolean
          description: |
            Indicates the template is declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the template is declared as a record.<br>
            If `false`, the template is not declared as a record.<br><br>
            For the date it was declared, see the parameter `declared_date`.
        is_hipaa:
          type: boolean
          description: |
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        iwl:
          type: string
          description: |-
            Indicates the iManage Work Link (iWL) of a template.
        last_user_description:
          type: string
          description: |-
            Indicates the full name of the last user most recently worked on a template.
        name:
          type: string
          description: |-
            Indicates the name of the template.
        owner:
          type: string
          description: |-
            Indicates the user ID of the owner of the template.
          example: ACASE
        owner_description:
          type: string
          description: |-
            Indicates the full name of the owner.
          example: Andrew Case
        profile:
          type: object
          additionalProperties: true
          description: |-
            Indicates a set of arbitrary name-value pair properties.
        project_custom1:
          type: string
          description: |
            Indicates additional information about the template.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2:
          type: string
          description: |
            Indicates additional information about the template.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3:
          type: string
          description: |
            Indicates additional information about the template.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        retain_days:
          type: integer
          description: |-
            Indicates the number of days to retain a declared template.
        subclass:
          type: string
          description: |-
            Indicates the subclass of the template.
        wstype:
          $ref: '#/components/schemas/Projects.wsType'
      additionalProperties: true
    Projects.templateCreateRequest:
      type: object
      properties: *id210
      additionalProperties: true
      description: |-
        Represents an object for the creation of a new template.
    Projects.templateCreateResponse:
      required:
      - data
      type: object
      properties: *id1274
      additionalProperties: false
    Projects.templatesSearchResponse:
      required:
      - data
      type: object
      properties: *id1275
      additionalProperties: false
    Projects.workspace:
      required:
      - database
      - default_security
      - is_external_as_normal
      type: object
      properties:
        activity_date: *id1276
        create_date: *id1277
        custom1: *id1278
        custom1_description: *id1279
        custom2: *id1280
        custom2_description: *id1281
        custom3: *id1282
        custom3_description: *id1283
        custom4: *id1284
        custom4_description: *id1285
        custom5: *id1286
        custom5_description: *id1287
        custom6: *id1288
        custom6_description: *id1289
        custom7: *id1290
        custom7_description: *id1291
        custom8: *id1292
        custom8_description: *id1293
        custom9: *id1294
        custom9_description: *id1295
        custom10: *id1296
        custom10_description: *id1297
        custom11: *id1298
        custom11_description: *id1299
        custom12: *id1300
        custom12_description: *id1301
        custom13: *id1302
        custom14: *id1303
        custom15: *id1304
        custom16: *id1305
        custom17: *id1306
        custom18: *id1307
        custom19: *id1308
        custom20: *id1309
        custom21: *id1310
        custom22: *id1311
        custom23: *id1312
        custom24: *id1313
        custom25: *id1314
        custom26: *id1315
        custom27: *id1316
        custom28: *id1317
        custom29: *id1318
        custom29_description: *id1319
        custom30: *id1320
        custom30_description: *id1321
        database: *id1322
        declared_date: *id1323
        default_security: *id1324
        description: *id1325
        document_number: *id1326
        edit_date: *id1327
        effective_security: *id1328
        has_subfolders: *id1329
        id: *id1330
        is_declared: *id1331
        is_external: *id1332
        is_external_as_normal: *id1333
        is_hipaa: *id1334
        iwl: *id1335
        last_user: *id1336
        last_user_description: *id1337
        name: *id1338
        owner: *id1339
        owner_description: *id1340
        profile: *id1341
        project_custom1: *id1342
        project_custom2: *id1343
        project_custom3: *id1344
        retain_days: *id1345
        subclass: *id1346
        wstype: *id1347
      additionalProperties: true
    Projects.workspace-admin-search:
      required:
      - library
      - default_security
      - id
      - is_external_as_normal
      type: object
      properties:
        author:
          type: string
          description: |-
            ID of the user who created the document.
        author_description:
          type: string
          description: |-
            The full name of the author.
        class:
          type: string
          description: |-
            Class is WEBDOC for workspaces.
        class_description:
          type: string
          description: |-
            Additional information about document class.
        content_type:
          enum: ["D", "5", "P"]
          type: string
          description: |-
            Content type of the document.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the workspace was created.
        custom1:
          type: string
          description: |-
            Alias of custom1 metadata field. Custom1 is parent of custom2 metadata.
        custom1_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom2:
          type: string
          description: |-
            Alias of custom2 metadata field. Custom2 is child of custom1 field.
        custom2_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 metadata field.
        custom3_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 metadata field.
        custom4_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 metadata field.
        custom5_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 metadata field.
        custom6_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 metadata field.
        custom7_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 metadata field.
        custom8_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 metadata field.
        custom9_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 metadata field.
        custom10_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom11:
          type: string
          description: |-
            Alias for custom11 metadata field.
        custom11_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom12:
          type: string
          description: |-
            Alias for custom12 metadata field.
        custom12_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom13:
          type: string
          description: |-
            Alias for custom13 metadata field.
        custom14:
          type: string
          description: |-
            Alias for custom14 metadata field.
        custom15:
          type: string
          description: |-
            Alias for custom15 metadata field.
        custom16:
          type: string
          description: |-
            Alias for custom16 metadata field.
        custom17:
          type: number
          description: |-
            Alias for custom17 metadata field.
          format: double
        custom18:
          type: number
          description: |-
            Alias for custom18 metadata field.
          format: double
        custom19:
          type: number
          description: |-
            Alias for custom19 metadata field.
          format: double
        custom20:
          type: number
          description: |-
            Alias for custom20 metadata field.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 metadata field.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 metadata field.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 metadata field.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 metadata field.
        custom25:
          type: boolean
          description: |-
            Alias for custom25 metadata field.
        custom26:
          type: boolean
          description: |-
            Alias for custom26 metadata field.
        custom27:
          type: boolean
          description: |-
            Alias for custom27 metadata field.
        custom28:
          type: boolean
          description: |-
            Alias for custom28 metadata field.
        custom29:
          type: string
          description: |-
            Alias of custom29 metadata field. Custom29 is parent of custom30 metadata.
        custom29_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom30:
          type: string
          description: |-
            Alias of custom30 metadata field. Custom30 is child of custom29 field.
        custom30_description:
          type: string
          description: |-
            Indicates additional information about the custom1 property.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        library:
          type: string
          description: |-
            Name of the library where the workspace is located.
        declared:
          type: boolean
          description: |
            Indicates if the workspace was declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when a workspace was declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
            To see if the workspace has been declared as a record, see the parameter `is_declared`.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description:
          type: string
          description: |-
            Additional information about the workspace.
        document_number:
          type: integer
          description: |-
            Indicates the document number for the document associated with this workspace.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the workspace profile or its content was last edited.
        edit_profile_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) of the last change to the document profile.
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was imported to the iManage Work system.
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Specifies the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being imported into the iManage Work system.
        has_subfolders:
          type: boolean
          description: |
            Indicates if the workspace has subfolders.<br><br>
            If `true`, subfolders exist.<br>
            If `false`, subfolders do not exist.
        id:
          type: string
          description: |-
            Unique ID of the workspace.
        in_use:
          type: boolean
          description: |
            Indicates the document is currently in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.<br><br>
            To check if the document is checked out, see the parameter `is_checked_out`.
        is_checked_out:
          type: boolean
          description: |
            Indicates the document is currently checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.<br><br>
            To check if the document is in use, see the parameter `in_use`.
        is_container_saved_search:
          type: boolean
          description: |
            Indicates the parent container is a saved search folder.<br><br>
            If `true`, the parent container is a saved search folder.<br>
            If `false`, the parent container is not a saved search folder.
        is_content_saved_search:
          type: boolean
          description: |
            Indicates the content is part of a saved search folder.<br><br>
            If `true`, the content is part of a saved search folder.<br>
            If `false`, the content is not part of a saved search folder.
        is_declared:
          type: boolean
          description: |-
            Indicates if a workspace is declared as a record, and can no longer be edited or deleted, except by an NRTADMIN.
        is_external:
          type: boolean
          description: |
            Indicates the workspace is shared with the external users.<br><br>
            If `true`, it is shared with the external users.<br>
            If `false`, it is not shared with the external users.
        is_external_as_normal:
          type: boolean
          description: |
            Indicates the external user is treated as normal user.<br><br>
            The external user can now access public workspaces unless specifically excluded otherwise.<br><br>
            If `true`, the an external user can access public workspaces.<br>
            If `false`, an external user cannot access public workspaces.<br>
            If set to `true` and `default_security` is not `private`, then `is_external` to set to `true`.
        is_hidden:
          type: boolean
          description: |
            Indicates the library is hidden.<br><br>
            If `true`, the library is hidden.<br>
            If `false`, the library is not hidden.
        is_hipaa:
          type: boolean
          description: |
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        is_in_use:
          type: boolean
          description: |
            Indicates the document is in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.
        iwl:
          type: string
          description: |
            Indicates the iManage Work Link (iWL) of a document.<br><br>
            This link can be used to open it in Protected View Mode by the user who has read/write or full access.
        last_user:
          type: string
          description: |
            Indicates the user ID who recently worked on this workspace.<br><br>
            For more information about the last user, see the parameter `last_user_description`.
        last_user_description:
          type: string
          description: |
            Additional information or notes about the last user.<br><br>
            For the last user, see the parameter `last_user`.
        location:
          type: string
          description: |-
            The name or IP address of the computer where the document is to be checked out.
        name:
          type: string
          description: |-
            Name of the workspace.
        operator:
          type: string
          description: |
            The user ID of the items' operator.<br><br>
            For more information about the last user, see the parameter `operator_description`.
        operator_description:
          type: string
          description: |
            Additional information or notes about the operator.<br><br>
            For the operator, see the parameter `operator`.
        owner:
          type: string
          description: |-
            The owner of the folder
        owner_description:
          type: string
          description: |-
            The full name of the owner.
        project_custom1:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        retain_days:
          type: integer
          description: |-
            Number of days to retain a declared workspace.
        size:
          type: integer
          description: |-
            The size of the document in bytes.
        subtype:
          type: string
          description: |-
            The document subtype.
        type:
          type: string
          description: |-
            The document type.
        type_description:
          type: string
          description: |-
            Description of the document type.
        version:
          type: integer
          description: |-
            The version of the document.
        workspace_id:
          type: string
          description: |
            The workspace ID.
            example: active!73784
        wstype:
          $ref: '#/components/schemas/Projects.wsType'
    Projects.workspaceCreateRequestBase:
      required:
      - name
      - default_security
      type: object
      properties: *id1348
      additionalProperties: true
    Projects.workspaceCreateRequest:
      additionalProperties: true
      required:
      - name
      - default_security
      type: object
      properties: *id1348
    Projects.workspaceCreateRequest-supervised:
      properties: *id1349
      additionalProperties: true
      required:
      - name
      - default_security
      type: object
    Projects.workspaceUpdateRequest:
      type: object
      properties: *id1350
      additionalProperties: true
      description: |-
        Represents an object for updating an existing workspace.
    Projects.workspaceResponseSingle:
      required:
      - data
      type: object
      properties: *id084
      additionalProperties: false
    Projects.workspacesChildrenResponse:
      required:
      - data
      type: object
      properties: *id1351
      additionalProperties: false
    Projects.workspacesSearchResponse-v1:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.workspace'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Projects.workspacesSearchResponse:
      required:
      - data
      type: object
      properties: *id027
      additionalProperties: false
    Projects.workspacesSearchResponse-CursorPaginated-v1:
      required:
      - cursor
      - data
      type: object
      properties:
        cursor:
          type: string
          description: |-
            Cursor to be used on the next call.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.workspace'
      additionalProperties: false
    Projects.workspacesSearchResponse-CursorPaginated:
      required: *id1352
      properties: *id1353
      additionalProperties: false
      type: object
    Projects.workspacesSingleUserSecurityResponseData:
      required:
      - data
      type: object
      properties: *id1354
      additionalProperties: false
    Projects.workspaceWithAdditionalInfoResponseSingle:
      required:
      - data
      type: object
      properties: *id1355
      additionalProperties: false
    Projects.workspaceWithOperationsResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          properties:
            operations:
              additionalProperties: true
              required:
              - add_folders
              - change_name
              - modify
              - remove
              - remove_folders
              - set_default_security
              - set_security
              - update_content_shortcut
              - add_content
              type: object
              properties:
                add_content:
                  type: boolean
                  description: |
                    Indicates that documents can be added to the workspace.<br><br>
                    If `true`, documents can be added to the workspace.<br>
                    If `false`, documents cannot be added to the workspace.
                add_custom_folders:
                  type: boolean
                  description: |
                    Indicates a user can upload a folder directly in a container.<br><br>
                    Custom folders are those created other than using the template.
                    This parameter applies only to a workspace that had been created from a template and that the flexible folders option is currently enabled.<br><br>
                    If `true`, users can upload a folder directly in a container.<br>
                    If `false`, users cannot upload a folder directly in a container.<br><br>
                    If the folder was not created from a workspace template, users can create standard folders according their access permission.
                add_folders:
                  type: boolean
                  description: |
                    Indicates the user can add folders to a workspace.<br><br>
                    If `true`, the user can add folders to a workspace.<br>
                    If `false`, the user cannot add folders to a workspace.<br><br>
                    To see if the user can remove folders, see the parameter `remove_folders`.
                change_name:
                  type: boolean
                  description: |
                    Indicates the user can change the name of a workspace.<br><br>
                    If `true`, the user can change the name of a workspace.<br>
                    If `false`, the user cannot change the name of a workspace.
                modify:
                  type: boolean
                  description: |
                    Indicates the user can modify properties of a workspace.<br><br>
                    If `true`, the user can modify properties of a workspace.<br>
                    If `false`, the user cannot modify properties of a workspace.
                remove:
                  type: boolean
                  description: |
                    Indicates the user can delete a workspace.<br><br>
                    If `true`, the user can delete a workspace.<br>
                    If `false`, the user cannot delete a workspace.
                remove_folders:
                  type: boolean
                  description: |
                    Indicates the user can remove folders from a workspace.<br><br>
                    If `true`, the user can remove folders from a workspace.<br>
                    If `false`, the user cannot remove folders from a workspace.<br><br>
                    To see if the user can add folders, see the parameter `add_folders`.
                set_default_security:
                  type: boolean
                  description: |
                    Indicates the user can change the default security for a workspace.<br><br>
                    If `true`, the user can change the default security for a workspace.<br>
                    If `false`, the user cannot change the default security for a workspace.
                set_security:
                  type: boolean
                  description: |
                    Indicates the user can change the security for a workspace.<br><br>
                    If `true`, the user can change the security for a workspace.<br>
                    If `false`, the user cannot change the security for a workspace.
                update_content_shortcut:
                  type: boolean
                  description: |
                    Indicates the user can update the target of the shortcut.<br><br>
                    If `true`, the user can update the target of the shortcut.<br>
                    If `false`, the user can update the target of the shortcut.
                default_security_values:
                  type: array
                  items:
                    enum: ["private", "view", "public"]
                    type: string
                  description: |
                    Indicates the default security setting.<br>

                    |Value|Description|
                    |:---|:---|
                    |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                    |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                    |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
            activity_date: *id1276
            create_date: *id1277
            custom1: *id1278
            custom1_description: *id1279
            custom2: *id1280
            custom2_description: *id1281
            custom3: *id1282
            custom3_description: *id1283
            custom4: *id1284
            custom4_description: *id1285
            custom5: *id1286
            custom5_description: *id1287
            custom6: *id1288
            custom6_description: *id1289
            custom7: *id1290
            custom7_description: *id1291
            custom8: *id1292
            custom8_description: *id1293
            custom9: *id1294
            custom9_description: *id1295
            custom10: *id1296
            custom10_description: *id1297
            custom11: *id1298
            custom11_description: *id1299
            custom12: *id1300
            custom12_description: *id1301
            custom13: *id1302
            custom14: *id1303
            custom15: *id1304
            custom16: *id1305
            custom17: *id1306
            custom18: *id1307
            custom19: *id1308
            custom20: *id1309
            custom21: *id1310
            custom22: *id1311
            custom23: *id1312
            custom24: *id1313
            custom25: *id1314
            custom26: *id1315
            custom27: *id1316
            custom28: *id1317
            custom29: *id1318
            custom29_description: *id1319
            custom30: *id1320
            custom30_description: *id1321
            database: *id1322
            declared_date: *id1323
            default_security: *id1324
            description: *id1325
            document_number: *id1326
            edit_date: *id1327
            effective_security: *id1328
            has_subfolders: *id1329
            id: *id1330
            is_declared: *id1331
            is_external: *id1332
            is_external_as_normal: *id1333
            is_hipaa: *id1334
            iwl: *id1335
            last_user: *id1336
            last_user_description: *id1337
            name: *id1338
            owner: *id1339
            owner_description: *id1340
            profile: *id1341
            project_custom1: *id1342
            project_custom2: *id1343
            project_custom3: *id1344
            retain_days: *id1345
            subclass: *id1346
            wstype: *id1347
          additionalProperties: true
          required:
          - database
          - default_security
          - is_external_as_normal
          type: object
      additionalProperties: false
    Projects.searchFilterAggregationResult:
      required:
      - alias
      - count
      - description
      type: object
      properties:
        alias:
          type: string
          description: |-
            Alias of the search filter.
        count:
          type: integer
          description: |-
            Aggregated count for the filter.
        description:
          type: string
          description: |-
            Description of the search filter.
      additionalProperties: false
    Projects.searchFilter:
      type: object
      properties:
        custom1:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom1 aggregated search filter results.
        custom2:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom2 aggregated search filter results.
        custom3:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom3 aggregated search filter results.
        custom4:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom4 aggregated search filter results.
        custom5:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom5 aggregated search filter results.
        custom6:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom6 aggregated search filter results.
        custom7:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom7 aggregated search filter results.
        custom8:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom8 aggregated search filter results.
        custom9:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom9 aggregated search filter results.
        custom10:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom10 aggregated search filter results.
        custom11:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom11 aggregated search filter results.
        custom12:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom12 aggregated search filter results.
        custom29:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom29 aggregated search filter results.
        custom30:
          type: array
          items:
            $ref: '#/components/schemas/Projects.searchFilterAggregationResult'
          description: |-
            Custom30 aggregated search filter results.
      additionalProperties: false
    Projects.wsType:
      enum: ["document", "folder", "workspace", "email", "document_shortcut", "folder_shortcut",
        "workspace_shortcut", "user"]
      type: string
      description: |
        Indicates the iManage Work object type.

        |Value|Description|
        |:---|:---|
        |document|A document object.|
        |folder|A folder object.|
        |workspace|A workspace object.|
        |email|An email object.|
        |document_shortcut|A shortcut to the document object.|
        |folder_shortcut|A shortcut to the folder object.|
        |workspace_shortcut|A shortcut to the workspace object.|
        |user|A user object.|
    security.update-asyncContainerPatchRequest:
      required:
      - edit_security_type
      - ids
      type: object
      properties: *id1356
    security.update-asyncDocumentPatchRequest:
      required:
      - edit_security_type
      - ids
      type: object
      properties: *id1357
    security.update-asyncResponse:
      required:
      - data
      type: object
      properties: *id539
      additionalProperties: false
    security.update-async.include:
      required:
      - access_level
      - id
      - type
      type: object
      description: Users and groups to add or update.
      properties:
        access_level:
          $ref: '#/components/schemas/accessLevel'
        id:
          $ref: '#/components/schemas/security.update-async.id'
        type:
          $ref: '#/components/schemas/accessType'
      additionalProperties: false
    security.update-async.remove:
      required:
      - id
      - type
      type: object
      description: Users and groups to remove.
      properties:
        id:
          $ref: '#/components/schemas/security.update-async.id'
        type:
          $ref: '#/components/schemas/accessType'
      additionalProperties: false
    security.update-async.replace:
      required:
      - id
      - replacement_id
      - type
      type: object
      description: Users and groups to replace.
      properties:
        id:
          $ref: '#/components/schemas/security.update-async.id'
        replacement_id:
          $ref: '#/components/schemas/security.update-async.id'
        type:
          $ref: '#/components/schemas/accessType'
      additionalProperties: false
    security.update-async.id:
      type: string
      description: |-
        User or group ID.
    Searches.customData:
      required:
      - id
      - wstype
      type: object
      properties:
        id:
          type: string
          description: |-
            Alias for the custom property.
        description:
          type: string
          description: |-
            Description of the custom property.
        enabled:
          type: boolean
          description: |-
            Indicates if the custom property is enabled or disabled.
          default: false
        hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
          default: false
        wstype:
          type: string
          description: |-
            Custom table.
      description: |-
        Describes a custom field.
    Searches.document:
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the document ID.
        database:
          type: string
          description: |-
            Indicates the library where the document is located.
        document_number:
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        version:
          type: integer
          description: |-
            Indicates the version number of the document.
        name:
          type: string
          description: |-
            Indicates the file name of the document.
        checksum:
          type: string
          description: |
            Indicates the value of the document's checksum.

            The document checksum is a calculated value based the document's content.
            It is used to verify the integrity of a document content during transfer.

            During a file upload, the checksum of the content is calculated and saved along with the document profile.
            If the document profile in the request has a checksum value, it is compared with the newly generated checksum.
            If the checksum values do not match, the request fails.
            If the document profile in the request does not include checksum property, the comparison is not performed.

            Only the SHA256 checksum type is supported. For example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
          example: SHA256:FF4085AD157354DC8EA67A848E7C2270B4A19282713CF3A7ECF8E0FFBB159ED1
        alias:
          type: string
          description: |-
            The alias of this document. Alias is an additional metadata property available on the documents.
        author:
          type: string
          description: |-
            ID of the user who created the document.
        operator:
          type: string
          description: |-
            Indicates user ID of the document's operator.
        type:
          type: string
          description: |
            Indicates the type of the document.<br><br>
            The document type is used to associate it to an application.
            For example, WORD for Microsoft Word.
        class:
          type: string
          description: |-
            Indicates the document class.
        subclass:
          type: string
          description: |-
            Indicates the document subclass.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the most recent date (in ISO 8601 format) when the document was edited.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was saved or imported to iManage Work Server.
        retain_days:
          type: integer
          description: |-
            Indicates the number of days before the inactive document is eligible for archiving.
        size:
          type: integer
          description: |-
            Indicates the size of the document in bytes.
          format: int64
        indexable:
          type: boolean
          description: |-
            Indicates if the document can be indexed.
        is_related:
          type: string
          description: |
            Indicates that the document is related to another document.<br><br>
            Document relations are used to group documents and their attachments. For example: A contract and its amendments. <br>
            They are also used to link a document with the documents that were used to create it. For example, a final report with its inserts,
            which could be spreadsheets, graphics files, tables, figures, and charts.<br><br>
            If `true`, the document is related to another document. <br>
            If `false`, the document is related to another document.
        location:
          type: string
          description: |
            Indicates the file path on the iManage Work server.<br><br>
            This may null if it is not available for the platform.
        default_security:
          enum: ["public", "view", "private", "inherited"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        last_user:
          type: string
          description: |-
            Indicates the user ID who most recently edited the document.
        in_use_by:
          type: string
          description: |-
            Indicates the user ID who is currently working on the document or has checked it out.
        in_use:
          type: boolean
          description: |
            Indicates the document is currently in use.<br><br>
            If `true`, the document is in use.<br>
            If `false`, the document is not in use.<br><br>
            To check if the document is checked out, see the parameter `is_checked_out`.
        is_checked_out:
          type: boolean
          description: |
            Indicates the document is currently checked out.<br><br>
            If `true`, the document is checked out.<br>
            If `false`, the document is not checked out.<br><br>
            To check if the document is in use, see the parameter `in_use`.
        archived:
          type: boolean
          description: |-
            Indicates that the document is archived to an archive location.
        comment:
          type: string
          description: |
            Indicates additional information about the document.<br><br>
            It is fully searchable. Maximum string length&colon; 8,000.
        custom1:
          type: string
          description: |-
            Alias of custom1 property. Custom1 is parent of custom2 property.
        custom1_description:
          type: string
          description: |-
            Additional information about the property.
        custom2:
          type: string
          description: |-
            Alias of custom2 . Custom2 is child of custom1 property.
        custom2_description:
          type: string
          description: |-
            Additional information about the custom2 property.
        custom3:
          type: string
          description: |-
            Alias for custom3 property.
        custom3_description:
          type: string
          description: |-
            Additional information about the custom3 property.
        custom4:
          type: string
          description: |-
            Alias for custom4 property.
        custom4_description:
          type: string
          description: |-
            Additional information about the custom4 property.
        custom5:
          type: string
          description: |-
            Alias for custom5 property.
        custom5_description:
          type: string
          description: |-
            Additional information about the custom5 property.
        custom6:
          type: string
          description: |-
            Alias for custom6 property.
        custom6_description:
          type: string
          description: |-
            Additional information about the custom6 property.
        custom7:
          type: string
          description: |-
            Alias for custom7 property.
        custom7_description:
          type: string
          description: |-
            Additional information about the custom7 property.
        custom8:
          type: string
          description: |-
            Alias for custom8 property.
        custom8_description:
          type: string
          description: |-
            Additional information about the custom8 property.
        custom9:
          type: string
          description: |-
            Alias for custom9 property.
        custom9_description:
          type: string
          description: |-
            Additional information about the custom9 property.
        custom10:
          type: string
          description: |-
            Alias for custom10 property.
        custom10_description:
          type: string
          description: |-
            Additional information about the custom10 property.
        custom11:
          type: string
          description: |-
            Alias for custom11 property.
        custom11_description:
          type: string
          description: |-
            Additional information about the property.
        custom12:
          type: string
          description: |-
            Alias for custom12 property.
        custom12_description:
          type: string
          description: |-
            Additional information about the custom12 property.
        custom13:
          type: string
          description: |-
            Alias for custom13 property.
        custom14:
          type: string
          description: |-
            Alias for custom14 property.
        custom15:
          type: string
          description: |-
            Alias for custom15 property.
        custom16:
          type: string
          description: |-
            Alias for custom16 property.
        custom17:
          type: number
          description: |-
            Alias for custom17 property.
          format: double
        custom18:
          type: number
          description: |-
            Alias for custom18 property.
          format: double
        custom19:
          type: number
          description: |-
            Alias for custom19 property.
          format: double
        custom20:
          type: number
          description: |-
            Alias for custom20 property.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 property.
        custom25:
          type: boolean
          description: |-
            Alias for custom25 property.
        custom26:
          type: boolean
          description: |-
            Alias for custom26 property.
        custom27:
          type: boolean
          description: |-
            Alias for custom27 property.
        custom28:
          type: boolean
          description: |-
            Alias for custom28 property.
        custom29:
          type: string
          description: |-
            Alias of custom29 property. Custom29 is parent of custom30 property.
        custom29_description:
          type: string
          description: |-
            Additional information about the custom29 property.
        custom30:
          type: string
          description: |-
            Alias of custom30 property. Custom30 is child of custom29 property.
        custom30_description:
          type: string
          description: |-
            Additional information about the custom30 property.
        custom31:
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description:
          type: string
          description: |-
            Reserved. Do not use.
        access:
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        checkout_path:
          type: string
          description: |-
            Indicates the path where the document is checked out.
        checkout_due_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the due date (in ISO 8601 format) for checkout.<br><br>
            The document should be checked in within this due date.
        checkout_comment:
          type: string
          description: |-
            Indicates additional information provided by the user when the document is checked out.
        author_description:
          type: string
          description: |-
            Indicates the full name of the user who created the document.
        operator_description:
          type: string
          description: |-
            Indicates the user ID of the operator.
        type_description:
          type: string
          description: |-
            Indicates a description of the document type.
        class_description:
          type: string
          description: |-
            Indicates additional information about the document class.
        subclass_description:
          type: string
          description: |-
            Indicates additional information about the subclass.
        last_user_description:
          type: string
          description: |-
            Indicates the user ID who last edited the document.
        in_use_by_description:
          type: string
          description: |-
            Indicates the user ID who currently has the document checked out.
        extension:
          type: string
          description: |-
            Indicates the file extension of the document.
        content_type:
          type: string
          description: |-
            Indicates the content type of the document.
        edit_profile_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document profile was last changed.
        access_time:
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when an activity was performed on the document.
        checkout_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the document was last checked out.
        is_declared:
          type: boolean
          description: |
            Indicates if a document is declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br><br>
            If `true`, the document is declared as a record.<br>
            If `false`, the document is not declared as a record.<br><br>
            For the date it was declared as a record, see the parameter `declared_date`.
        is_external:
          type: boolean
          description: |-
            Is `true` when the document is shared with the external users.
        has_attachment:
          type: boolean
          description: |
            Indicates the document has an attachment.<br><br>
            If `true`, the document has an attachment.<br>
            If `false`, the document does not have an attachment.
        is_external_as_normal:
          type: boolean
          description: |-
            If `true`, the external user is treated as normal user and can access public document.
        effective_security:
          enum: ["no_access", "read", "read_write", "full_access"]
          type: string
          description: |
            Indicates the effective security access level available to the user.

            Effective security is the access level that is the net result of a combination of the following:
            * an objects's default security
            * a user's access permission for that object
            * possible conflicts among groups to which the user belongs to
            * the security model being used.

            The available access levels are:

            |Access level|Description|
            |:---|:---|
            |no_access|The user has no access, or any permissions to the container or document.|
            |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the document was declared as a record.<br><br>
            A record can no longer be edited or deleted, except by an iManage Work system administrator.<br><br>
            To see if a document has been declared, see the parameter `is_declared`.
        file_create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was created.<br><br>
            The file could have been created outside of the iManage Work system.
            This date can be different than `create_date`.
            The `create_date` is the date when the file was saved or imported to the iManage Work system.<br>
        file_edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the file was last edited.<br><br>
            The file could have been edited before being saved or imported into the iManage Work system.
            This date can be different than `edit_date`.
            The `edit_date` is the date when the file was edited in the iManage Work system.<br>
        arch_req:
          type: string
          description: |
            Indicates the document is marked for archive.<br><br>
            If `true`, the document is marked for archive.<br>
            If `false`, the document is not marked for archive.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        workspace_name:
          type: string
          description: |-
            Indicates the name of the workspace where the document is located.
        linksite_url:
          type: string
          description: |-
            Indicates the secure document URL created by LinkSite application.
        activity_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) of the last activity performed by the current user for the document.
        is_latest:
          type: boolean
          description: |-
            Indicates whether to return the latest version of the document.
        is_restorable:
          type: boolean
          description: |
            Indicates if the document can be restored.<br><br>
            If `true`, the document can be restored.<br>
            If `false`, the document cannot be restored.
        is_most_recent_activity:
          type: boolean
          description: |
            Indicates if the edit date is same as the recent activity date.<br><br>
            If `true`, the edit date is same as the recent activity date.<br>
            If `false`, the edit date is not same as the recent activity date.
        attachments:
          type: array
          items:
            required:
            - id
            - size
            type: object
            properties:
              attachment_id:
                type: string
                description: |-
                  The document ID if the attachment is in the library. Currently it applies to *.nrl files.
              id:
                type: string
                description: |-
                  Unique identifier for the attachment.
              name:
                type: string
                description: |-
                  File name of the attachment.
              size:
                type: integer
                description: |-
                  Size of the attachment in bytes.
                format: int64
            additionalProperties: false
            description: |-
              Document Attachment
          description: |
            Indicates the document ID of an attachment in the same library.<br><br>
            This applies to .nrl files only.
        wstype:
          type: string
          description: |-
            Indicates the iManage Work object type.
        iwl:
          type: string
          description: |
            Indicates the iManage Work Link (iWL) of a document.<br><br>
            The iManage Work Link is used to open a document in Protected View Mode by a user who has read/write or full access to it.
        workspace_id:
          type: string
          description: |-
            Indicates the workspace ID where the document is located.
        lock_type:
          type: string
          enum: ["S", "E"]
          description: |-
            Indicates the type of lock applied when the document was checked out.
            This field is applicable only to checked out documents.

            |Value|Lock Type|Description|
            |---|---|---|
            |S|Shared|The document was locked for a co-authoring session.|
            |E|Exclusive|The document was locked for editing by a single user.|
        co_authors:
          type: array
          description: |-
            Indicates a list of co-authors of a document that was checked out for a co-authoring session.

            This field is applicable only when the document is locked for co-authoring.
          items:
            type: string
        wopi_file_size_limit:
          type: integer
          description: |-
            Indicates the maximum file size (in bytes) supported for co-authoring.
        wopi_file_size_warning:
          type: boolean
          description: |-
            Indicates if the file size is approaching its upper limit for co-authoring.

            If `true`, the file size is approaching its upper limit.<br>
            If `false`, the file size is well within the upper limit.
      additionalProperties: true
    Searches.emailWithoutAttachment:
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
      properties:
        access: &id1358
          type: string
          description: |
            Current status of an email.<br><br>
            For example, if it is checked out, available, or declared as a record, and so on.
        access_time: &id1359
          type: string
          description: |-
            Date when an activity was performed on an email.<br><br>The activity can be view, create version, edit, print, and so on.
        activity_date: &id1360
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Activity date on the recent emails.
        arch_req: &id1361
          type: string
          description: |
            Indicates if the email is marked for archive.<br><br>
            If `true`, indicates that the email is marked for archive.<br>
            If `false`, indicates that the email is not marked for archive.
        archived: &id1362
          type: boolean
          description: |
            Indicates that the email has been archived.<br><br>
            If `true`, the email is marked for archive.<br>
            If `false`, the email is marked for archive.
        author: &id1363
          type: string
          description: |-
            The user ID of the user who created the email.
        author_description: &id1364
          type: string
          description: |-
            Full name of the user who created the email.
        checkout_comment: &id1365
          type: string
          description: |-
            Additional information provided by the user when the email is checked out.
        checkout_date: &id1366
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was last checked out.
        checkout_due_date: &id1367
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Due date (in ISO 8601 format) for checkout.<br><br>The email should be checked in before this due date.
        checkout_path: &id1368
          type: string
          description: |
            Path where the email is checked out.<br><br>
            The default paths are:
            * the NRPortbl folder for iManage DeskSite or FileSite clients.
            * the user_profile/roaming/recent folder for iManage Work clients.
        class: &id1369
          type: string
          description: |-
            Classification for identifying and differentiating the document.<br><br>A class is categorized by genre, department, region, and so on.
        class_description: &id1370
          type: string
          description: |-
            Additional information about document class of the email.
        comment: &id1371
          type: string
          description: |-
            Additional information about the document.<br><br> It is fully searchable. Maximum length&colon; 8,000.
        create_date: &id1372
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was imported to iManage Work Server.
        custom1: &id1373
          type: string
          description: |-
            Alias for custom1 metadata property. Custom1 is parent of custom2 metadata property.
        custom1_description: &id1374
          type: string
          description: |-
            Additional information about the custom1 property.
        custom2: &id1375
          type: string
          description: |-
            Alias for custom2 metadata property.
        custom2_description: &id1376
          type: string
          description: |-
            Additional information about the custom2 property.
        custom3: &id1377
          type: string
          description: |-
            Alias for custom3 metadata property.
        custom3_description: &id1378
          type: string
          description: |-
            Additional information about the custom3 property.
        custom4: &id1379
          type: string
          description: |-
            Alias for custom4 metadata property.
        custom4_description: &id1380
          type: string
          description: |-
            Additional information about the custom4 property.
        custom5: &id1381
          type: string
          description: |-
            Alias for custom5 metadata property.
        custom5_description: &id1382
          type: string
          description: |-
            Additional information about the custom5 property.
        custom6: &id1383
          type: string
          description: |-
            Alias for custom6 metadata property.
        custom6_description: &id1384
          type: string
          description: |-
            Additional information about the custom6 property.
        custom7: &id1385
          type: string
          description: |-
            Alias for custom7 metadata property.
        custom7_description: &id1386
          type: string
          description: |-
            Additional information about the custom7 property.
        custom8: &id1387
          type: string
          description: |-
            Alias for custom8 metadata property.
        custom8_description: &id1388
          type: string
          description: |-
            Additional information about the custom8 property.
        custom9: &id1389
          type: string
          description: |-
            Alias for custom9 metadata property.
        custom9_description: &id1390
          type: string
          description: |-
            Additional information about the custom9 property.
        custom10: &id1391
          type: string
          description: |-
            Alias for custom10 metadata property.
        custom10_description: &id1392
          type: string
          description: |-
            Additional information about the custom10 property.
        custom11: &id1393
          type: string
          description: |-
            Alias for custom11 metadata property.
        custom11_description: &id1394
          type: string
          description: |-
            Additional information about the custom11 property.
        custom12: &id1395
          type: string
          description: |-
            Alias for custom12 metadata property.
        custom12_description: &id1396
          type: string
          description: |-
            Additional information about the custom12 property.
        custom13: &id1397
          type: string
          description: |-
            Alias for custom13 metadata property.
        custom14: &id1398
          type: string
          description: |-
            Alias for custom14 metadata property.
        custom15: &id1399
          type: string
          description: |-
            Alias for custom15 metadata property.
        custom16: &id1400
          type: string
          description: |-
            Alias for custom16 metadata property.
        custom17: &id1401
          type: number
          description: |-
            Alias for custom17 metadata property.
          format: double
        custom18: &id1402
          type: number
          description: |-
            Alias for custom18 metadata property.
          format: double
        custom19: &id1403
          type: number
          description: |-
            Alias for custom19 metadata property.
          format: double
        custom20: &id1404
          type: number
          description: |-
            Alias for custom20 metadata property.
          format: double
        custom21: &id1405
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom21 metadata property.
        custom22: &id1406
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom22 metadata property.
        custom23: &id1407
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom23 metadata property.
        custom24: &id1408
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Alias for custom24 metadata property.
        custom25: &id1409
          type: boolean
          description: |-
            Alias for custom25 metadata property.
        custom26: &id1410
          type: boolean
          description: |-
            Alias for custom26 metadata property.
        custom27: &id1411
          type: boolean
          description: |-
            Alias for custom27 metadata property.
        custom28: &id1412
          type: boolean
          description: |-
            Alias for custom28 metadata property.
        custom29: &id1413
          type: string
          description: |-
            Alias for custom29 metadata property. Custom29 is the parent of custom30.
        custom29_description: &id1414
          type: string
          description: |-
            Additional information about the custom29 property.
        custom30: &id1415
          type: string
          description: |-
            Alias for custom30 metadata property.
        custom30_description: &id1416
          type: string
          description: |-
            Additional information about the custom30 property.
        custom31: &id1417
          type: string
          description: |-
            Reserved. Do not use.
        custom31_description: &id1418
          type: string
          description: |-
            Reserved. Do not use.
        database: &id1419
          type: string
          description: |-
            The library (formerly called a database) where the email is stored.
        declared_date: &id1420
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email is declared as a record, and can no longer be edited or deleted, except by an administrator.
        default_security: &id1421
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        document_number: &id1422
          type: integer
          description: |-
            Indicates the document number of a document.

            Document number is the number assigned to a document when it is imported to iManage Work,
            and appears as part of the document ID.<br>
            Document ID is the combination of library ID, document number, and document version.<br>
            For example, if library ID is ACTIVE_UK, document number is 72634, and document version is 3, then document ID is `ACTIVE_UK!72634.3`.
        edit_date: &id1423
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Most recent date (in ISO 8601 format) when the email was edited.
        edit_profile_date: &id1424
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format)  of the last change to the email profile.
        effective_security: &id1425
          enum: ["full_access", "read_write", "read", "no_access"]
          type: string
          description: |-
            A user's access permission on the email.
        extension: &id1426
          type: string
          description: |-
            File format of the email. For example, .msg.
        file_create_date: &id1427
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was initially created before uploading to the iManage Work Server.
        file_edit_date: &id1428
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was edited before uploading to the iManage Work Server.
        has_attachment: &id1429
          type: boolean
          description: |
            Indicated that the email has an attachment.<br><br>
            If `true`, the email has an attachment.<br>
            If `false`, the email does not have an attachment.
        id: &id1430
          type: string
          description: |
            The email ID assigned to the email by iManage Work Server.<br><br>
            the email ID is a combination of one or more properties of a document such as document number, library name, and version number.
            For example, *Reactive!154811.1* where *Reactive* is name of the library, *154811* is the document number, and *1* is the version number.
        in_use: &id1431
          type: boolean
          description: |
            Indicated that a user is working on the email.<br><br>
            If `true`, a user is working on the email.<br>
            If `false`, a user is not working on the email.
        in_use_by: &id1432
          type: string
          description: |-
            ID of the user who is currently working on the email or has checked it out.
        in_use_by_description: &id1433
          type: string
          description: |-
            Full name of the user who is currently working on the email or has checked it out.
        is_declared: &id1434
          type: boolean
          description: |-
            Is `true` when the email is declared as a record.
        is_checked_out: &id1435
          type: boolean
          description: |-
            Indicates if the email is currently checked out.<br><br>
            If `true`, it is checked out.<br>
            If `false`, it is not checked out.
        is_external: &id1436
          type: boolean
          description: |-
            Is `true` when the document is shared with the external users.
        is_external_as_normal: &id1437
          type: boolean
          description: |-
            If `true`, the external user is treated as normal user and can access public document.
        is_hipaa: &id1438
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        is_latest: &id1439
          type: boolean
          description: |-
            Is `true` when it is latest version of the email.
        is_most_recent_activity: &id1440
          type: boolean
          description: |
            Indicates if this email is the most recently edited version by another user.<br><br>
            If `true`, this is the most recently edited version by another user.<br>
            If `false`, this is not the most recently edited version by another user.
        is_related: &id1441
          type: string
          description: |
            Indicates if an email is related to another document.<br><br>
            If `true`, the email is related to another document.<br>
            If `false`, the email is not related to another document.
        is_restorable: &id1442
          type: boolean
          description: |
            Indicates if an archived email can be restored.<br><br>
            If `true`, an archived email can be restored.<br>
            If `false`, an archived email cannot be restored.
        iwl: &id1443
          type: string
          description: |
            The iManage Work Link (iWL) of the email.<br><br>
            This link is used to open the email in Protected View Mode by a user who has Read/Write or Full Access.
        last_user: &id1444
          type: string
          description: |-
            The user ID of the user who most recently edited the email within iManage Work.
        last_user_description: &id1445
          type: string
          description: |-
            Full name of the user who most recently edited the email in iManage Work.
        share_url: &id1446
          type: string
          description: |-
            The secure document URL created by the LinkSite application.
        msg_id: &id1447
          type: string
          description: |
            A message ID generated for the email.<br><br>
            Each Microsoft Outlook email is assigned a message ID that is used for filing operations.
        name: &id1448
          type: string
          description: |-
            Name of the email.
        operator: &id1449
          type: string
          description: |-
            The user ID of the user who has checked out the email or is currently editing its profile.
        operator_description: &id1450
          type: string
          description: |-
            Full name of the operator.
        retain_days: &id1451
          type: integer
          description: |-
            Number of days before an email is eligible for archiving.
        size: &id1452
          type: integer
          description: |-
            Size of the email in bytes.
        subclass: &id1453
          type: string
          description: |
            Subcategory of the document class.<br><br>
            For example, *Employment Letter* can be a subclass of *HR* document class.
        subclass_description: &id1454
          type: string
          description: |-
            Additional information about the subclass.
        type: &id1455
          type: string
          description: |
            Type of the document which is used by the iManage Work Server to associate it to an application to open and edit.<br><br>
            For example, *WORD* for Microsoft Word.
        type_description: &id1456
          type: string
          description: |-
            Description of the document type.
        version: &id1457
          type: integer
          description: |-
            Version number of the document.
        workspace_id: &id1458
          type: string
          description: |-
            The workspace ID where the email is located.
        workspace_name: &id1459
          type: string
          description: |-
            Name of the parent workspace where the email is located.
        wstype: &id1460
          type: string
          description: |
            iManage Work object type.
            <br><br>For example, document, folder, email, and so on.
        conversation_count: &id1461
          type: integer
          description: |-
            The number of emails that are part of the same conversation thread.<br><br>Returned only for email folder children and recent emails.
        conversation_id: &id1462
          type: string
          description: |-
            Serialized form of the email's normalized subject header to identify an email thread.<br><br>For example, base64-encoded.
        conversation_name: &id1463
          type: string
          description: |-
            Normalized subject header of the email with "RE:" and "FWD:" stripped. Note that this is language specific.
        received_date: &id1464
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was received.
        sent_date: &id1465
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the email was sent
        subject: &id1466
          type: string
          description: |-
            Email subject header.
      additionalProperties: false
    Searches.email:
      properties:
        attachments: &id1467
          type: array
          items:
            required:
            - id
            - size
            type: object
            properties:
              attachment_id:
                type: string
                description: |-
                  The document ID if the attachment is in the library. Currently it applies to *.nrl files.
              id:
                type: string
                description: |-
                  Unique identifier for the attachment.
              name:
                type: string
                description: |-
                  File name of the attachment.
              size:
                type: integer
                description: |-
                  Size of the attachment in bytes.
                format: int64
            additionalProperties: false
            description: |-
              Document Attachment
        access: *id1358
        access_time: *id1359
        activity_date: *id1360
        arch_req: *id1361
        archived: *id1362
        author: *id1363
        author_description: *id1364
        checkout_comment: *id1365
        checkout_date: *id1366
        checkout_due_date: *id1367
        checkout_path: *id1368
        class: *id1369
        class_description: *id1370
        comment: *id1371
        create_date: *id1372
        custom1: *id1373
        custom1_description: *id1374
        custom2: *id1375
        custom2_description: *id1376
        custom3: *id1377
        custom3_description: *id1378
        custom4: *id1379
        custom4_description: *id1380
        custom5: *id1381
        custom5_description: *id1382
        custom6: *id1383
        custom6_description: *id1384
        custom7: *id1385
        custom7_description: *id1386
        custom8: *id1387
        custom8_description: *id1388
        custom9: *id1389
        custom9_description: *id1390
        custom10: *id1391
        custom10_description: *id1392
        custom11: *id1393
        custom11_description: *id1394
        custom12: *id1395
        custom12_description: *id1396
        custom13: *id1397
        custom14: *id1398
        custom15: *id1399
        custom16: *id1400
        custom17: *id1401
        custom18: *id1402
        custom19: *id1403
        custom20: *id1404
        custom21: *id1405
        custom22: *id1406
        custom23: *id1407
        custom24: *id1408
        custom25: *id1409
        custom26: *id1410
        custom27: *id1411
        custom28: *id1412
        custom29: *id1413
        custom29_description: *id1414
        custom30: *id1415
        custom30_description: *id1416
        custom31: *id1417
        custom31_description: *id1418
        database: *id1419
        declared_date: *id1420
        default_security: *id1421
        document_number: *id1422
        edit_date: *id1423
        edit_profile_date: *id1424
        effective_security: *id1425
        extension: *id1426
        file_create_date: *id1427
        file_edit_date: *id1428
        has_attachment: *id1429
        id: *id1430
        in_use: *id1431
        in_use_by: *id1432
        in_use_by_description: *id1433
        is_declared: *id1434
        is_checked_out: *id1435
        is_external: *id1436
        is_external_as_normal: *id1437
        is_hipaa: *id1438
        is_latest: *id1439
        is_most_recent_activity: *id1440
        is_related: *id1441
        is_restorable: *id1442
        iwl: *id1443
        last_user: *id1444
        last_user_description: *id1445
        share_url: *id1446
        msg_id: *id1447
        name: *id1448
        operator: *id1449
        operator_description: *id1450
        retain_days: *id1451
        size: *id1452
        subclass: *id1453
        subclass_description: *id1454
        type: *id1455
        type_description: *id1456
        version: *id1457
        workspace_id: *id1458
        workspace_name: *id1459
        wstype: *id1460
        conversation_count: *id1461
        conversation_id: *id1462
        conversation_name: *id1463
        received_date: *id1464
        sent_date: *id1465
        subject: *id1466
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
      additionalProperties: false
    Searches.emailWithFlattenedParticipants:
      properties:
        bcc:
          type: string
          description: |-
            A string containing the recipients or emailParticipant list.
        cc:
          type: string
          description: |-
            A string containing the recipients or emailParticipant list.
        from:
          type: string
          description: |-
            A string containing the actor or emailParticipant list with one element.
        to:
          type: string
          description: |-
            A string containing the recipients or emailParticipant list.
        attachments: *id1467
        access: *id1358
        access_time: *id1359
        activity_date: *id1360
        arch_req: *id1361
        archived: *id1362
        author: *id1363
        author_description: *id1364
        checkout_comment: *id1365
        checkout_date: *id1366
        checkout_due_date: *id1367
        checkout_path: *id1368
        class: *id1369
        class_description: *id1370
        comment: *id1371
        create_date: *id1372
        custom1: *id1373
        custom1_description: *id1374
        custom2: *id1375
        custom2_description: *id1376
        custom3: *id1377
        custom3_description: *id1378
        custom4: *id1379
        custom4_description: *id1380
        custom5: *id1381
        custom5_description: *id1382
        custom6: *id1383
        custom6_description: *id1384
        custom7: *id1385
        custom7_description: *id1386
        custom8: *id1387
        custom8_description: *id1388
        custom9: *id1389
        custom9_description: *id1390
        custom10: *id1391
        custom10_description: *id1392
        custom11: *id1393
        custom11_description: *id1394
        custom12: *id1395
        custom12_description: *id1396
        custom13: *id1397
        custom14: *id1398
        custom15: *id1399
        custom16: *id1400
        custom17: *id1401
        custom18: *id1402
        custom19: *id1403
        custom20: *id1404
        custom21: *id1405
        custom22: *id1406
        custom23: *id1407
        custom24: *id1408
        custom25: *id1409
        custom26: *id1410
        custom27: *id1411
        custom28: *id1412
        custom29: *id1413
        custom29_description: *id1414
        custom30: *id1415
        custom30_description: *id1416
        custom31: *id1417
        custom31_description: *id1418
        database: *id1419
        declared_date: *id1420
        default_security: *id1421
        document_number: *id1422
        edit_date: *id1423
        edit_profile_date: *id1424
        effective_security: *id1425
        extension: *id1426
        file_create_date: *id1427
        file_edit_date: *id1428
        has_attachment: *id1429
        id: *id1430
        in_use: *id1431
        in_use_by: *id1432
        in_use_by_description: *id1433
        is_declared: *id1434
        is_checked_out: *id1435
        is_external: *id1436
        is_external_as_normal: *id1437
        is_hipaa: *id1438
        is_latest: *id1439
        is_most_recent_activity: *id1440
        is_related: *id1441
        is_restorable: *id1442
        iwl: *id1443
        last_user: *id1444
        last_user_description: *id1445
        share_url: *id1446
        msg_id: *id1447
        name: *id1448
        operator: *id1449
        operator_description: *id1450
        retain_days: *id1451
        size: *id1452
        subclass: *id1453
        subclass_description: *id1454
        type: *id1455
        type_description: *id1456
        version: *id1457
        workspace_id: *id1458
        workspace_name: *id1459
        wstype: *id1460
        conversation_count: *id1461
        conversation_id: *id1462
        conversation_name: *id1463
        received_date: *id1464
        sent_date: *id1465
        subject: *id1466
      additionalProperties: false
      description: |-
        Email Model
      required:
      - author
      - database
      - document_number
      - is_checked_out
      - is_hipaa
      - size
      - version
      - wstype
      type: object
    Searches.group:
      required:
      - id
      type: object
      properties:
        create_date:
          type: string
          description: Indicates the date (in the ISO 8601 format) when the group
            was created.
        directory_id:
          type: string
          description: |-
            Indicates the ID from external repository (such as AD FS), which is used for group profile synchronization.
        distinguished_name:
          type: string
          description: |
            Indicates the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.<br>
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          type: string
          description: Indicates the date (in the ISO 8601 format) when the group
            was last updated.
        enabled:
          type: boolean
          description: |-
            Indicates if the group is enabled or disabled.

            If `true`, the group is enabled.<br>
            If `false`, the group is disabled.
        full_name:
          type: string
          description: |-
            Indicates the name of the group.
        group_domain:
          type: string
          description: |-
            Indicates  the fully qualified domain name for the group's directory service.

            It is the metadata from LDAP server that determines the unit to which the group belongs to.
            This information is mainly used by iManage system administrators.
          example: cn=Users,dc=dc=ajubalaw,dc=com
        group_nos:
          type: integer
          description: |-
            Indicates the type of group.

            The following are valid nos values for groups:

            | Value | Description |
            | :-: | - |
            | 2 | Group for virtual users.|
            | 6 | Group for enterprise users. |
        id:
          type: string
          description: Indicates the group ID.
        is_external:
          type: boolean
          description: |
            Indicates if the group is intended for external users.

            If `true`, the group is intended for external users.<br>
            If `false`, the group is intended for regular users (non-external users).

            For more information, see <a href="#overview--external-users">External users</a>.
        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in the ISO 8601 format) when the group profile was last synced with a directory service, such as LDAP or Microsoft Active Directory.
        ssid:
          type: number
          format: long
          description: Indicates the unique ID of the group that was generated by
            iManage Work.
        sync_id:
          maxLength: 254
          type: string
          description: |
            Indicates the unique ID from external ADFS repository or external user repository which is used for user profile synchronization. Maximum length is 254 chars.
      additionalProperties: true
    Searches.searchFilterAggregationResult:
      required:
      - alias
      - count
      - description
      type: object
      properties:
        alias:
          type: string
          description: |-
            Alias for the search filter.
        count:
          type: integer
          description: |-
            Aggregated count for the filter.
        description:
          type: string
          description: |-
            Description of the search filter.
      additionalProperties: false
    Searches.searchFilter:
      type: object
      properties: &id1468
        custom1:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom1 aggregated search filter results.
        custom3:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom3 aggregated search filter results.
        custom4:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom4 aggregated search filter results.
        custom5:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom5 aggregated search filter results.
        custom6:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom6 aggregated search filter results.
        custom7:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom7 aggregated search filter results.
        custom8:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom8 aggregated search filter results.
        custom9:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom9 aggregated search filter results.
        custom10:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom10 aggregated search filter results.
        custom11:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom11 aggregated search filter results.
        custom12:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom12 aggregated search filter results.
        custom29:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Custom29 aggregated search filter results.
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Owners aggregated search filter results.
        senders:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Senders aggregated search filter results.
        types:
          type: array
          items:
            $ref: '#/components/schemas/Searches.searchFilterAggregationResult'
          description: |-
            Aggregated search filter results for file types.
      additionalProperties: false
    Searches.searchFiltersResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties: *id1468
          additionalProperties: false
      additionalProperties: false
    Searches.searchFiltersDocumentsRecentResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties: *id1468
          additionalProperties: false
      additionalProperties: false
    Searches.searchFiltersEmailRecentResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties: *id1468
          additionalProperties: false
      additionalProperties: false
    Searches.searchSuggestionsResponse:
      type: object
      properties:
        custom1:
          type: array
          items:
            $ref: '#/components/schemas/Searches.customData'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Searches.document'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Searches.user'
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Searches.workspace'
        email:
          type: array
          items:
            $ref: '#/components/schemas/Searches.emailWithFlattenedParticipants'
      additionalProperties: false
    Searches.searchSuggestionsResponseData:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Searches.searchSuggestionsResponse'
      additionalProperties: false
    Searches.searchTrusteesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Searches.userOrGroup'
    Searches.searchTrusteesResponseData:
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Searches.searchTrusteesResponse'
      additionalProperties: false
    Searches.user:
      type: object
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.

        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
          type: string
          example: "2020-03-09T17:01:16Z"
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        directory_id:
          type: string
          description: |-
            Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
        distinguished_name:
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email:
          type: string
          maxLength: 254
        email2:
          type: string
          maxLength: 254
        email3:
          type: string
          maxLength: 254
        email4:
          type: string
          maxLength: 254
        email5:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins:
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        fax:
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change:
          type: boolean
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        general:
          type: string
          description: |
            Indicates any additional comments or description applicable for the user.
        id:
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.

        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
          example: "2020-03-09T17:01:16Z"
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        lockout_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).
          example: "2020-03-09T17:01:16Z"
        phone:
          type: string
          description: Indicates the phone number of the user.
        preferred_library:
          type: string
          description: |
            Indicates the preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
          example: active_us
        pwd_changed_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          example: 2020-03-09T17:01:16Z
        pwd_never_expire:
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num:
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
    Searches.userOrGroup:
      anyOf:
      - $ref: '#/components/schemas/Searches.user'
      - $ref: '#/components/schemas/Searches.group'
      additionalProperties: true
    Searches.workspace:
      required:
      - database
      - default_security
      - is_external_as_normal
      type: object
      properties:
        activity_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when an activity was last performed on a document in the workspace.
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the workspace was created.
        custom1:
          type: string
          description: |
            Indicates an alias of the custom1 property.<br><br>
            For example, if the caption of custom1 is Client, then aliases might be DOJ, Pepsi, or Acquisition.<br>
            This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard asterisk is not supported.
        custom1_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom1`.
        custom2:
          type: string
          description: |
            Indicates an alias of the custom2 property.<br><br>
            For example, if the caption of custom2 is Matters, then aliases might be *Active Cases*, or *vs. Texas*.<br>
            This parameter is case insensitive, matches whole fields only (partial matches are not supported), and the wildcard asterisk is not supported.
        custom2_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom2`.
        custom3:
          type: string
          description: |-
            Indicates an alias of the custom3 property.
        custom3_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom3`.
        custom4:
          type: string
          description: |-
            Indicates an alias of the custom4 property.
        custom4_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom4`.
        custom5:
          type: string
          description: |-
            Indicates an alias of the custom5 property.
        custom5_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom5`.
        custom6:
          type: string
          description: |-
            Indicates an alias of the custom6 property.
        custom6_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom6`.
        custom7:
          type: string
          description: |-
            Indicates an alias of the custom7 property.
        custom7_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom7`.
        custom8:
          type: string
          description: |-
            Indicates an alias of the custom8 property.
        custom8_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom8`.
        custom9:
          type: string
          description: |-
            Indicates an alias of the custom9 property.
        custom9_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom9`.
        custom10:
          type: string
          description: |-
            Indicates an alias of the custom10 property.
        custom10_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom10`.
        custom11:
          type: string
          description: |-
            Indicates an alias of the custom11 property.
        custom11_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom11`.
        custom12:
          type: string
          description: |-
            Indicates an alias of the custom12 property.
        custom12_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom12`.
        custom13:
          type: string
          description: |-
            Indicates the text of the custom13 property.
        custom14:
          type: string
          description: |-
            Indicates the text of the custom14 property.
        custom15:
          type: string
          description: |-
            Indicates the text of the custom15 property.
        custom16:
          type: string
          description: |-
            Indicates the text of the custom16 property.
        custom17:
          type: number
          description: |-
            Indicates a numeric value of the custom17 property.
          format: double
        custom18:
          type: number
          description: |-
            Indicates a numeric value of the custom18 property.
          format: double
        custom19:
          type: number
          description: |-
            Indicates a numeric value of the custom19 property.
          format: double
        custom20:
          type: number
          description: |-
            Indicates a numeric value of the custom20 property.
          format: double
        custom21:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) value for the custom21 property.
        custom22:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) value for the custom22 property.
        custom23:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) value for the custom23 property.
        custom24:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) value for the custom24 property.
        custom25:
          type: boolean
          description: |-
            Indicates the boolean value for the custom25 property.
        custom26:
          type: boolean
          description: |-
            Indicates the boolean value for the custom26 property.
        custom27:
          type: boolean
          description: |-
            Indicates the boolean value for the custom27 property.
        custom28:
          type: boolean
          description: |-
            Indicates the boolean value for the custom28 property.
        custom29:
          type: string
          description: |-
            Indicates an alias of the custom29 property.
        custom29_description:
          type: string
          description: |-
            Indicates additional information about the parameter `custom29`.
        custom30:
          type: string
          description: |-
            Indicates an alias of the custom30 property.
        custom30_description:
          type: string
          description: |-
            Indicates additional information about the custom30 property.
        database:
          type: string
          description: |
            Indicates the library name where the workspace is located.<br><br>
            For example: active_us.
        declared_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO format) when a workspace was declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.
            To see if the workspace has been declared as a record, see the parameter `is_declared`.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        description:
          type: string
          description: |
            Indicates additional information or notes about the workspace.<br><br>
            This is not the same as the custom1 property, and is not validated.
            Maximum string length: 254.
        document_number:
          type: integer
          description: |
            Indicates the document number for the document that is associated with workspace.<br><br>
            For example, if the document ID is active!64573.2, the document number is 64573.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date/time (in ISO 8601 format) when the workspace was last edited.
        effective_security:
          enum: ["no_access", "read", "read_write", "full_access"]
          type: string
          description: |
            Indicates the effective security access level available to the user.

            Effective security is the access level that is the net result of a combination of the following:
            * an objects's default security
            * a user's access permission for that object
            * possible conflicts among groups to which the user belongs to
            * the security model being used.

            The available access levels are:

            |Access level|Description|
            |:---|:---|
            |no_access|The user has no access, or any permissions to the container or document.|
            |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        has_subfolders:
          type: boolean
          description: |
            Indicates the workspace has accessible subfolders.<br><br>
            If `true`, accessible subfolders exist.<br>
            If `false`, accessible subfolders do not exist.
        id:
          type: string
          description: |
            Indicates the workspace ID.<br><br>
            For example: active!3643.
        is_declared:
          type: boolean
          description: |
            Indicates if a workspace is declared as a record.<br><br>
            A record cannot be edited or deleted, except by an iManage Work system administrator.<br>
            For the date it was declared as a record, see the parameter `declared_date`.
        is_external:
          type: boolean
          description: |
            Indicates if the workspace is shared with the external users.<br><br>
            If `true`, the workspace is shared with the external users.<br>
            If `false`, the workspace is not shared with the external users.
        is_external_as_normal:
          type: boolean
          description: |
            Indicates if the workspace can be treated as a public workspace.<br><br>
            If `true`, an external user can access public workspaces.<br>
            If `false`, an external user cannot access public workspaces.
        is_hipaa:
          type: boolean
          description: |-
            Indicates the document is encrypted.<br><br>
            If `true`, the document is encrypted.<br>
            If `false`, the document is not encrypted.

            Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.
            Also called *data at rest encryption*, the data files are encrypted when they are not being used.
            This encryption is compliant to HIPAA and other American statutes protecting sensitive information from accidental or wrongful disclosure.
        iwl:
          type: string
          description: |-
            Indicates the <glossary>iManage Work Link</glossary> (iWL) of a workspace.
        last_user:
          type: string
          description: |-
            Indicates the user ID who recently worked on this workspace.
          example: ACASE
        last_user_description:
          type: string
          description: |
            Indicates additional information or notes about the last user.<br><br>
            Maximum string length: 254.
        name:
          type: string
          description: |-
            Indicates the name of the workspace.
          example: Active
        owner:
          type: string
          description: |-
            Indicates the user ID of workspace owner.
          example: ACASE
        owner_description:
          type: string
          description: |
            Indicates additional information or notes about the workspace owner.<br><br>
            Maximum string length: 254.
        profile:
          type: object
          additionalProperties: true
          description: |-
            Indicates the set of arbitrary name-value pair properties.
        project_custom1:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom2:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        project_custom3:
          type: string
          description: |
            Indicates additional information about the workspace.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        retain_days:
          type: integer
          description: |-
            Indicates the number of days to retain a declared workspace.
        subclass:
          type: string
          description: |-
            Indicates the subcategory of the workspace based on the subclass of the document it contains.
        wstype:
          enum: ["document", "folder", "workspace", "email", "document_shortcut",
            "folder_shortcut", "workspace_shortcut", "user"]
          type: string
          description: |
            Indicates the iManage Work object type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Sessions.authTokenRequest:
      required:
      - grant_type
      properties: *id1469
    Sessions.authTokenResponse:
      required:
      - access_token
      type: object
      properties: *id1470
      additionalProperties: false
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.discoveryResponse:
      required:
      - access_token
      type: object
      properties: *id1471
    Sessions.revokeTokenRequest:
      required:
      - access_token
      properties: *id1472
    Sessions.loggedInUser:
      required:
      - user_id
      - email
      - full_name
      - preferred_database
      properties:
        user_id:
          type: string
          description: |-
            The user ID of the current user.
        email:
          type: string
          maxLength: 254
        full_name:
          type: string
          description: |-
            Full name of the current user.
          example: Andrew Case
        preferred_database:
          type: string
          description: |-
            Preferred database of the current user.
        allow_logon: &id1481
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.

        create_date: &id1482
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
          type: string
          example: "2020-03-09T17:01:16Z"
        custom1: &id1483
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2: &id1484
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3: &id1485
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        directory_id: &id1486
          type: string
          description: |-
            Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
        distinguished_name: &id1487
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date: &id1488
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email2: &id1489
          type: string
          maxLength: 254
        email3: &id1490
          type: string
          maxLength: 254
        email4: &id1491
          type: string
          maxLength: 254
        email5: &id1492
          type: string
          maxLength: 254
        exch_autodiscover: &id1493
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension: &id1494
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins: &id1495
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        fax: &id1496
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change: &id1497
          type: boolean
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        general: &id1498
          type: string
          description: |
            Indicates any additional comments or description applicable for the user.
        id: &id1499
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external: &id1500
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.

        last_sync_ts: &id1501
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
          example: "2020-03-09T17:01:16Z"
        location: &id1502
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        lockout_ts: &id1503
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).
          example: "2020-03-09T17:01:16Z"
        phone: &id1504
          type: string
          description: Indicates the phone number of the user.
        preferred_library: &id1505
          type: string
          description: |
            Indicates the preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
          example: active_us
        pwd_changed_ts: &id1506
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          example: 2020-03-09T17:01:16Z
        pwd_never_expire: &id1507
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid: &id1508
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain: &id1509
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex: &id1510
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos: &id1511
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num: &id1512
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
      description: |-
        User profile of the logged in user.
      type: object
    Sessions.m1Bits:
      type: object
      description: Role bits for document and folder operations.
      properties: *id1473
      additionalProperties: false
    Sessions.m2Bits:
      type: object
      description: Role bits for iManage administrative operations.
      properties: *id1474
      additionalProperties: false
    Sessions.m3Bits:
      type: object
      description: Role bits for web page operations.
      properties: *id1475
      additionalProperties: false
    Sessions.m4Bits:
      type: object
      description: Role bits for other administrative operations.
      properties: *id1476
      additionalProperties: true
    Sessions.personaType:
      enum: [admin, user]
      type: string
      description: |-
        User login mode.
    Sessions.session:
      type: object
      properties:
        id:
          type: string
          description: |-
            Session ID of the current user.
        application_name:
          type: string
          description: |-
            Application name of the session.
        ip:
          type: string
          description: |-
            IP of the session.
        user_id:
          type: string
          description: |-
            User ID for to the session.
        persona:
          type: string
          description: |-
            Type of the session.
        last_active:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Last active date (in ISO 8601 format).
      additionalProperties: false
    Sessions.sessionApplicationLoginPutRequest:
      required:
      - application_name
      - login_token
      type: object
      properties:
        application_name:
          type: string
          description: |-
            Application name for the session.
        login_token:
          type: string
          description: |-
            Application authorization login token.
        persona:
          description: |
            Identifies the persona type.<br><br>
            Valid values are `user` and `admin`.
          default: user
          enum: [admin, user]
          type: string
      additionalProperties: false
      description: |-
        Request for logging in to iManage Work Server using an application login token.
    Sessions.sessionApplicationLoginPutResponse:
      additionalProperties: false
      required:
      - X-Auth-Token
      type: object
      properties: &id1477
        customer_id:
          type: integer
        max_age:
          type: integer
          description: |-
            Maximum age of the token.
        persona:
          enum: [admin, user]
          type: string
          description: |-
            User login mode.
        user:
          $ref: '#/components/schemas/Sessions.loggedInUser'
        X-Auth-Token:
          type: string
          description: |-
            Authentication token.
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.sessionDatabaseOperations:
      required:
      - id
      - description
      - database
      - m1
      - m2
      - m3
      - m1_bits
      - m2_bits
      - m3_bits
      - m4_bits
      type: object
      properties:
        id:
          type: string
          description: |-
            Alias
        description:
          type: string
          description: |-
            Additional information about the session.
        database:
          type: string
          description: |-
            Name of the library (formerly called a database).
        m1:
          type: integer
          description: |-
            Bit mask for document and folder operations.
        m2:
          type: integer
          description: |-
            Bit mask for administrative operations.
        m3:
          type: integer
          description: |-
            Bit mask for web page operations.
        m4:
          type: integer
          description: |-
            Bit mask for administrative operations.
        m1_bits:
          type: object
          description: Role bits for document and folder operations.
          properties:
            allow_index_search:
              type: boolean
              description: |-
                Specifies if the user can perform full text search.

                The full-text search locates documents by search terms provided by the user that
                exist in the document content, document profile, or workspace profile in the full-text indexer search engine.
            checkout:
              type: boolean
              description: |
                Specifies if the user can check out documents.

                If the parameter `read_only` is `true`, `checkout` is automatically set to `false` even if it is specified as `true`.
                See `read_only` for additional details.
            create_public_folder:
              type: boolean
              description: |-
                Specifies if the user can create a public folder.

                That is, new folders with the default security as Public can be created.
            create_public_search_folder:
              type: boolean
              description: |
                Specifies if the user can save public searches in a folder and mark them as public.

                That is, new folders with the default security as Public can be created.
            delete:
              type: boolean
              description: |
                Specifies if the user can delete a document.

                Without this privilege, users cannot delete any documents or emails within iManage Work, including those to which they have full access.

                If the parameter `read_only` is `true`, `delete` is automatically set to `false` even if it is specified as `true`.
                See `read_only` for additional details.
            display_public_documents:
              type: boolean
              description: |-
                Specifies if the user can view public documents, that is, documents with the default security set to Public.
            delete_public_folder:
              type: boolean
              description: |-
                Specifies if the user can delete public folders.
            delete_public_search_folder:
              type: boolean
              description: |-
                Specifies if the user can delete public search folders.
            edit_external_default_security:
              type: boolean
              description: |-
                Specifies if the user can edit the default security settings of documents shared to external users.
            edit_external_default_security_folder:
              type: boolean
              description: |-
                Specifies if the user can edit the default security settings of folders shared to external users.
            edit_previous_versions:
              type: boolean
              description: |-
                Specifies if the user can edit previous versions of a document.
            import:
              type: boolean
              description: |
                Specifies if the user is allowed to import documents to iManage Work.

                The user can import documents, upload new document versions, and replace existing documents with new ones.
                If the parameter `read_only` is `true`, `import` is automatically set to `false` even if it is specified as `true`.
                See `read_only` for additional details.
            read_only:
              type: boolean
              description: |
                Specifies if the user has read only access to documents and containers.

                If `true`, the user cannot modify documents, and the following parameters must be set to false: `import`, `checkout`, `release`, and `delete`.<br>
                If `false`, the user can modify documents, subject to the restrictions allowed by the following parameters: `import`, `checkout`, `release`, and `delete`.
            release:
              type: boolean
              description: |
                Specifies if the user can unlock a checked-out document.

                If the parameter `read_only` is `true`, `release` is automatically set to `false` even if it is specified as `true`.
                See `read_only` for additional details.
            view_public_folder:
              type: boolean
              description: |-
                Specifies if the user can view public folders.
            view_public_search_folder:
              type: boolean
              description: |-
                Specifies if the user can view public search folders.

          additionalProperties: false
        m2_bits:
          type: object
          description: Role bits for iManage administrative operations.
          properties:
            document_view:
              type: boolean
              description: |-
                Specifies if the user is allowed to view documents.

                Without this privilege, NRTADMINs cannot view the contents of any documents or emails within iManage Work.

                To allow an NRTADMIN user to view private documents, you must add the user to a role that has `document_view` privilege set to `true`. This is the default setting.<br>
                To prevent an NRTADMIN user assigned to a specific role from viewing documents, set `false` for this privilege.
                However, the user will still be able to search for private documents irrespective of this setting.
            external:
              type: boolean
              description: |-
                Specifies if the role is intended for external users such as a customer, part-time contractor, vendor, or partner.
                For more information, see <a href="#overview--external-users"> External users</a>.
            use_admin_tool:
              type: boolean
              description: |-
                Specifies if the user is allowed to use iManage Work Database Administration (DBAdmin) tool.

                The NRTADMIN group has this permission by default.<br>
                For more information, see *iManage Work Server Administration Guide* in [iManage Help Center](https://help.imanage.com/).
            use_import_tool:
              type: boolean
              description: |-
                Specifies if the user is allowed to use iManage Work Import tool.

                If `true`, it allows users to use the bulk Document Import tool.
                The NRTADMIN group has this permission by default.<br>
                For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).
            use_monitor_tool:
              type: boolean
              description: |-
                Specifies if the user is allowed to use iManage Work Monitor tool.

                If `true`, it provides access to use the iManage Monitor to track library transactions.
                This tool enables users to locate, relocate or delete documents, mark documents for archiving, or change document profile information.
                The NRTADMIN group has this permission by default.<br>
                For more information, see *iManage Work Server Administration Guide* available in [iManage Help Center](https://help.imanage.com/).

          additionalProperties: false
        m3_bits:
          type: object
          description: Role bits for web page operations.
          properties:
            author_workspace:
              type: boolean
              description: |-
                Specifies if the user is allowed to create new workspaces.
            browse_workspace:
              type: boolean
              description: |-
                Specifies if the user is allowed to browse the content of workspaces.
            create_template:
              type: boolean
              description: |-
                Specifies if the user is allowed to create workspace templates.
            customize_personal_views:
              type: boolean
              description: |-
                Specifies if a user is allowed to customize the layout of workspace and folder properties for personal view in the legacy iManage Work Web application.
            customize_public_views:
              type: boolean
              description: |-
                Specifies if a user is allowed to customize the layout of workspace and folder properties for all users in the legacy iManage Work Web application.
            delete_workspace:
              type: boolean
              description: |-
                Specifies if the user is allowed to delete workspaces.
            search_workspace:
              type: boolean
              description: |-
                Specifies if the user is allowed to search for workspaces.
            share_workspace:
              type: boolean
              description: |-
                Specifies if the user is allowed to share workspaces with external users.
          additionalProperties: false
        m4_bits:
          type: object
          description: Role bits for other administrative operations.
          properties:
            admin_custom:
              type: boolean
              description: |-
                Specifies if the user can manage custom tables Custom1-12 and 29-30.
            admin_tier_1:
              type: boolean
              description: |-
                Specifies if the user is a tier 1 administrator.
            admin_tier_2:
              type: boolean
              description: |-
                Specifies if the user is a tier 2 administrator.
            content_assistance:
              type: boolean
              description: |
                Specifies if the user is allowed to check the effective access of other users to documents and workspaces.<br><br>
                The user can also review history of documents, unlock documents, search for documents and workspaces, and restore documents.

            custom_metadata_management:
              type: boolean
              description: |-
                Specifies if a user is allowed to add new values to the lookup lists of custom fields Custom1-12 and 29-30.

                However, a user with this privilege cannot update or delete a custom value.<br>
                To update or delete a custom value, a user must either have a role with `admin_custom` as `true`, or `tier` as 2 or higher.
                For more information, see <a href="#tag--Custom-Properties">Custom Properties</a>.

                An iManage system administrator can allow or deny users with this privilege to add new values to the lookup lists of custom fields
                on a field-by-field basis. For example, if an administrator allows adding Custom1 and 2 only, then a user with this privilege will be able
                to add new values only for Custom1 and 2, and not for any other fields.
                This can be configured in iManage Control Center using the global setting **Allow to Create Metadata**.
                For more information, see <a href="https://docs.imanage.com/cc-help/10.4.0/en/Global.html" target="_blank">Global settings</a>.

            dms_job_operations:
              type: boolean
              description: |-
                Specifies if the user can perform export or import of documents and workspaces.
            govern_security_management:
              type: boolean
              description: |-
                Specifies if the user can govern Security Policy Manager (SPM) settings for other users.

                For more information, see <a href="#tag--Security-Policy">Security policies</a>.
            report:
              type: boolean
              description: |-
                Not in use currently. Specifies if the user can view a report. <br><br>For example, active users report.
            report_management:
              type: boolean
              description: |-
                Not in use currently. Specifies if the user has access to manage reports. This role privilege allows to generate, modify, and delete reports.
            system_management:
              type: boolean
              description: |-
                Reserved for future use. Specifies if the user can view and manage the statistics, logs, and performance, of the iManage Work system.
            role_management:
              type: boolean
              description: |-
                Specifies if the user can add, modify and remove roles, manage user privileges, and manage admininstration privileges.
            system_job_operations:
              type: boolean
              description: |-
                Specifies if the user can re-assign users, perform metadata sync and AD/LDAP Sync, refile documents, and so on.
            system_metadata_management:
              type: boolean
              description: |-
                Specifies if the user can modify system metadata management settings.

                This privilege allows a user to edit captions, create classes, subclasses, document types, templates, and associate applications with document file types.
            trustee_assistance:
              type: boolean
              description: |-
                Specifies if the user is allowed to do the following:
                * Reset other user's password.
                * Configure if their password expires or not.
                * Force user to change their password on next logon.
                * Enable or disable user's sign-in.
            trustee_management:
              type: boolean
              description: |-
                Specifies if a user is allowed to manage other users and groups.
                This role privilege allows to do the following:
                * Create and update users.
                * Create, update, and delete groups.
                * Modify group memberships.
                * Copy group members from one group to another.
                * Perform an admin search of users.
            tier:
              type: integer
              description: |-
                Specifies if the tier category to which the user belongs.
          additionalProperties: true
    Sessions.sessionDatabasesOperationsResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sessions.sessionDatabaseOperations'
      additionalProperties: false
    Sessions.sessionKerberosLoginRequest:
      required:
      - kerberos_token
      type: object
      properties:
        application_name:
          type: string
          description: |-
            Application name for the session.
          default: "Web Mobile"
        kerberos_token:
          type: string
          description: |-
            Base64-encoded Kerberos token.
        persona:
          default: user
          enum: [admin, user]
          type: string
          description: |-
            User login mode.
      additionalProperties: false
      description: |-
        Request for logging in to iManage Work Server using a Kerberos token.
    Sessions.sessionKerberosLoginResponse:
      additionalProperties: false
      required:
      - X-Auth-Token
      type: object
      properties: *id1477
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.sessionLoginRequest:
      required:
      - password
      - user_id
      type: object
      properties: &id1478
        application_name:
          type: string
          description: |-
            Application name for the session.
          default: "Web Mobile"
        password:
          type: string
          description: |-
            Login password of the account.
        persona:
          default: user
          enum: [admin, user]
          type: string
          description: |-
            User login mode.
        user_id:
          type: string
          description: |-
            Login user ID of the account.
      additionalProperties: false
      description: |-
        Request for logging in to iManage Work Server using a user ID and password.
    Sessions.sessionLoginResponse:
      required:
      - X-Auth-Token
      type: object
      properties: *id1477
      additionalProperties: false
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.sessionNetworkLoginRequest:
      additionalProperties: false
      required:
      - password
      - user_id
      type: object
      properties: *id1478
      description: |-
        Request for logging in to iManage Work Server using a user ID and password.
    Sessions.sessionNetworkLoginResponse:
      additionalProperties: false
      required:
      - X-Auth-Token
      type: object
      properties: *id1477
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.sessionOperations:
      required:
      - id
      - description
      - m1
      - m2
      - m3
      - m1_bits
      - m2_bits
      - m3_bits
      - m4_bits
      type: object
      properties: *id1479
      additionalProperties: false
    Sessions.sessionOperationsResponse:
      required:
      - data
      type: object
      properties: *id1480
      additionalProperties: false
    Sessions.sessionRefreshAuthTokenResponse:
      additionalProperties: false
      required:
      - X-Auth-Token
      type: object
      properties: *id1477
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.sessionSamlLoginPutRequest:
      required:
      - saml_token
      type: object
      properties:
        application_name:
          type: string
          description: |-
            Application name for the session.
          default: "Web Mobile"
        persona:
          default: user
          enum: [admin, user]
          type: string
          description: |-
            User login mode.
        saml_token:
          type: string
          description: |-
            Authentication token from an ADFS system.
      additionalProperties: false
      description: |-
        Request for logging in to iManage Work Server using a SAML token from an ADFS system.
    Sessions.sessionSamlLoginPutResponse:
      additionalProperties: false
      required:
      - X-Auth-Token
      type: object
      properties: *id1477
      description: |-
        Response when a user logs into iManage Work Server.
    Sessions.userProfile:
      type: object
      properties:
        allow_logon: *id1481
        create_date: *id1482
        custom1: *id1483
        custom2: *id1484
        custom3: *id1485
        directory_id: *id1486
        distinguished_name: *id1487
        edit_date: *id1488
        email:
          type: string
          maxLength: 254
        email2: *id1489
        email3: *id1490
        email4: *id1491
        email5: *id1492
        exch_autodiscover: *id1493
        extension: *id1494
        failed_logins: *id1495
        fax: *id1496
        force_password_change: *id1497
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        general: *id1498
        id: *id1499
        is_external: *id1500
        last_sync_ts: *id1501
        location: *id1502
        lockout_ts: *id1503
        phone: *id1504
        preferred_library: *id1505
        pwd_changed_ts: *id1506
        pwd_never_expire: *id1507
        ssid: *id1508
        user_domain: *id1509
        user_id_ex: *id1510
        user_nos: *id1511
        user_num: *id1512
      additionalProperties: true
    Sessions.sessionsList:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sessions.session'
          description: |-
            Response data.
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
        cursor:
          type: string
          description: |-
            Cursor to be used for the next iteration.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
      additionalProperties: false
    Shortcuts.accessRule:
      enum: [public, view, private]
      type: string
      description: |
        Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container.<br><br>
        This field is present only if `default_security` is inherit. <br>

        The following are allowed values:<br>

        |Value|Description|
        |---|---|
        |private|Only the user who created the document, and other users or groups to whom the access is granted specifically can see it.|
        |public|All users can view and edit the document unless explicitly excluded.|
        |view|All users can view the document unless explicitly granted Read/Write or No Access.|
    Shortcuts.documentShortcutTarget:
      required:
      - database
      - document_number
      - id
      - type
      - version
      - wstype
      type: object
      properties:
        database:
          type: string
          description: |-
            Indicates the name of the library where the target document exists to which the shortcut is pointing to.
          example: active_us
        document_number:
          type: integer
          description: |
            Indicates the document number of the target document.<br><br>
            The document number is the middle portion of the document ID.
            For example, the document number of document active_uk!7483.3 is 7483.
          example: 7483
        id:
          type: string
          description: |
            Indicates the target document ID referenced by the document shortcut.<br><br>
            The document ID is the fully qualifying identifer for a document.
            For example: active_uk!7483.3.<br><br>
            See parameters `version` for the current document version, and `document_number` for its document number.
          example: active_uk!7483.3
        type:
          type: string
          description: |
            Indicates the document type.<br><br>
            The document type is used by the iManage Work system to associate the document to an application.
            For example: WORD for Microsoft Word.
          example: WORD
        version:
          type: integer
          description: |
            Indicates the version number of the target document.<br><br>
            The document version number is number of times the document has been edited and is the numeric end portion of the document ID.
            For example, the version number of document active_uk!7483.3 is 3.
          example: 3
        wstype:
          enum:
          - "user"
          - "workspace_shortcut"
          - "folder_shortcut"
          - "document_shortcut"
          - "email"
          - "workspace"
          - "folder"
          - "document"
          example: document
          type: string
          description: |
            Indicates the iManage Work object type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Shortcuts.documentShortcut:
      required:
      - name
      - id
      - database
      - target
      - wstype
      type: object
      properties: *id398
      additionalProperties: true
    Shortcuts.documentShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.documentShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Shortcuts.documentShortcutResponseSingle:
      required:
      - data
      type: object
      properties: *id397
      additionalProperties: false
    Shortcuts.documentShortcutUpdateRequest:
      required:
      - name
      type: object
      properties: *id1513
      additionalProperties: false
    Shortcuts.effectiveSecurity:
      enum: ["no_access", "read", "read_write", "full_access"]
      type: string
      description: |
        Indicates the effective security access level available to the user.

        Effective security is the access level that is the net result of a combination of the following:
        * an objects's default security
        * a user's access permission for that object
        * possible conflicts among groups to which the user belongs to
        * the security model being used.

        The available access levels are:

        |Access level|Description|
        |:---|:---|
        |no_access|The user has no access, or any permissions to the container or document.|
        |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
    Shortcuts.folderShortcut:
      required:
      - database
      - default_security
      - edit_date
      - id
      - is_container_saved_search
      - is_content_saved_search
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - view_type
      type: object
      properties:
        database: &id1514
          type: string
          description: |-
            Name of the destination library (formerly called a database).
        default_security: &id1515
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date: &id1516
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            The date (in ISO 8601 format) when the shortcut was last edited.
        effective_security: &id1517
          $ref: '#/components/schemas/Projects.Shortcuts.effectiveSecurity'
        id: &id1518
          type: string
          description: |-
            The shortcut ID.
        inherited_default_security: &id1519
          $ref: '#/components/schemas/Projects.Shortcuts.accessRule'
        is_container_saved_search: &id1520
          type: boolean
          description: |-
            Indicates if the container is a saved search.
        is_content_saved_search: &id1521
          type: boolean
          description: |-
            Indicates if the content is a saved search.
        is_external: &id1522
          type: boolean
          description: |-
            Indicates if the shortcut points to an external container.
        is_external_as_normal: &id1523
          type: boolean
          description: |-
            Indicates if the external container is treated as a normal container.
        name: &id1524
          type: string
          description: |-
            The name of the destination container.
        owner: &id1525
          type: string
          description: |-
            The owner's user ID.
        owner_description: &id1526
          type: string
          description: |-
            Full name of the owner.
        parent_id: &id1527
          type: string
          description: |-
            The container ID of the parent container.
        target: &id1528
          $ref: '#/components/schemas/Projects.Shortcuts.folderShortcutTarget'
        view_type: &id1529
          enum: ["none", "document", "email", "email_search", "document_search", "linksite",
            "imanage_share"]
          type: string
          description: |-
            The folder view type based on its content.<br><br>
            The display in client application is customized for each content type.
            For example, when a document folder (type *document*) is selected, the display is customized for
            displaying documents and their properties such as file name, size, and location.

            The following are folder view types based on the type of content they hold:

            |View Type|Description|
            |:---|:---|
            |document|For document folders and document search folders.|
            |email| For email folders and email search folders.|
            |imanage_share|For iManage Share folder shortcuts.|
        workspace_id: &id1530
          type: string
          description: |-
            The workspace ID the shortcut is in.
        workspace_name: &id1531
          type: string
          description: |-
            The name of the workspace the shortcut is in.
        wstype: &id1532
          $ref: '#/components/schemas/Projects.Shortcuts.worksiteType'
      additionalProperties: true
    Shortcuts.folderShortcutWithAdditionalInfo:
      title: Folder Shortcut
      properties:
        owner_info:
          type: object
          description: Information about the owner of the target of this folder shortcut.
          properties:
            is_external:
              type: boolean
              description: |+
                Indicates that  the user is an external user.

                If `true`, the user is an external user.<br>
                If `false`, the user is not an external user, also called a regular user.

                For more information, see <a href="#overview--external-users"> External users</a>.

            allow_logon:
              type: boolean
              description: |
                Indicates if the user is allowed to sign in.

                If `true`, the user is allowed to sign in.<br>
                If `false`, the user is not allowed to sign in.
        database: *id1514
        default_security: *id1515
        edit_date: *id1516
        effective_security: *id1517
        id: *id1518
        inherited_default_security: *id1519
        is_container_saved_search: *id1520
        is_content_saved_search: *id1521
        is_external: *id1522
        is_external_as_normal: *id1523
        name: *id1524
        owner: *id1525
        owner_description: *id1526
        parent_id: *id1527
        target: *id1528
        view_type: *id1529
        workspace_id: *id1530
        workspace_name: *id1531
        wstype: *id1532
      additionalProperties: true
      required:
      - database
      - default_security
      - edit_date
      - id
      - is_container_saved_search
      - is_content_saved_search
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - view_type
      type: object
    Shortcuts.folderShortcutCreateRequest:
      required:
      - name
      - target
      type: object
      properties: *id1533
      additionalProperties: false
    Shortcuts.folderShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.folderShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Shortcuts.folderShortcutResponseSingle:
      required:
      - data
      type: object
      properties: *id1534
      additionalProperties: true
    Shortcuts.folderShortcutTarget:
      required:
      - database
      - id
      type: object
      properties:
        database:
          type: string
          description: |
            The source library (formerly called a database) name.<br><br>
            This parameter is needed only if the source library is different than the destination library.
          example: active_us
        folder_type:
          enum: ["regular", "search", "tab", "category", "my_matters", "my_favorites",
            "imanage_share_folder"]
          type: string
          description: |
            The container type.

            |Value|Description|
            |:---|:---|
            |regular|This is a regular folder, also called a document folder. It can contain documents, shortcuts, and folders.|
            |search|This is a search folder, and contains results from predefined searches.|
            |tab|This is tab folder. These are containers only at the root level of a workspace. There can be more than one tab in a workspace. Each tab can contain document folders and search folders but not documents.|
            |category|This is a category folder. These are containers only at the root level of My Favorites or My Matters. Categories can contain categories and shortcuts.|
            |my_matters|This is a My Matters container. My Matters contains shortcuts only to workspaces the user has explicitly added to this folder. Users can also list workspaces they subscribe to from other users.|
            |my_favorites|This is a My Favorites container. My Favorites contains shortcuts to folders and documents that the user has explicitly added to this folder.|
            |imanage_share_folder|This is an iManage Share folder. iManage Share is a separate iManage product and may not be available for all installations.|
        id:
          type: string
          description: |
            The source container ID.
          example: active_us!64733
        subtype:
          enum: ["template", "work", "Q", "O", "C", "imanage_share_folder", "S"]
          type: string
          description: |
            The container subtype.

            |Value|Description|
            |:---|:---|
            |Q|The container is a tab|
            |C|The container is a search folder.|
            |S|If the container is in a root directory, the container is My Matters. If the container has a valid parent container, the container is a category.|
        wstype:
          $ref: '#/components/schemas/Projects.Shortcuts.worksiteType'
      additionalProperties: false
    Shortcuts.shareFolderShortcut:
      required:
      - view_type
      - parent_id
      - owner_description
      - owner
      - name
      - is_content_saved_search
      - is_container_saved_search
      - id
      - edit_date
      - default_security
      - database
      - target
      properties:
        target:
          $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcutTarget'
        database: *id1127
        default_security: *id1128
        edit_date: *id1129
        effective_security: *id1130
        id: *id1131
        inherited_default_security: *id1132
        is_container_saved_search: *id1133
        is_content_saved_search: *id1134
        is_external: *id1135
        is_external_as_normal: *id1136
        name: *id1137
        owner: *id1138
        owner_description: *id1139
        parent_id: *id1140
        view_type: *id1141
        workspace_id: *id1142
        workspace_name: *id1143
        wstype: *id1144
      additionalProperties: true
      type: object
    Shortcuts.shareFolderShortcutCreateRequest:
      required:
      - name
      - target
      type: object
      properties: *id392
      additionalProperties: false
    Shortcuts.shareFolderShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.shareFolderShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Shortcuts.shareFolderShortcutResponseSingle:
      required:
      - data
      type: object
      properties: *id393
      additionalProperties: false
    Shortcuts.shareFolderShortcutTarget:
      required:
      - id
      - database
      - imanage_share_eid
      properties:
        imanage_share_eid:
          type: string
          description: |-
            The encrypted ID of the folder to access in iManage Share.
          example: X4LuVCmhYFCsXYW4HFb3Y--Sm2HMdoAE23yXOmgS1OA
        database: *id1145
        folder_type: *id1146
        id: *id1147
        subtype: *id1148
        wstype: *id1149
      additionalProperties: false
      type: object
      description: Properties of the target object.
    Shortcuts.workspaceShortcut:
      type: object
      properties:
        database:
          type: string
          description: |-
            Name of the library (formerly called a database) the item or container is found in.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Most recent date (in ISO 8601 format) when the item of container was edited.
        id:
          type: string
          description: |-
            The ID of the container.
        name:
          type: string
          description: |-
            The name of the container.
        owner:
          type: string
          description: |-
            The user ID of the container's owner.
        owner_description:
          type: string
          description: |-
            Full name of the owner.
        parent_id:
          type: string
          description: |
            The folder ID of the parent of this container.<br><br>
            This is the folder ID of either *My Matters* or *My Favorites*.
        subtype:
          type: string
          description: |
            The subtype of the container.

            |Value|Description|
            |:---|:---|
            |Q|The object is a tab.|
            |S|The object is the My Matters folder if it's in a root directory. The object is a category if the parent ID is not null.|
            |F|The object is the My Favorites folder if it's in a root directory. The object is a category if the parent ID is not null.|
            |C|The object is a search folder.|
        target:
          type: object
          properties:
            database:
              type: string
              description: |-
                Name of the library (formerly called a database) the target is found in.
            id:
              type: string
              description: |-
                The ID of the target container.
            subtype:
              type: string
              description: |
                The subtype of the target container.

                |Value|Description|
                |:---|:---|
                |Q|The object is a tab.|
                |S|The object is the My Matters folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |F|The object is the My Favorites folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |C|The object is a search folder.|
            wstype:
              description: |
                The item's type.

                |Value|Description|
                |:---|:---|
                |document|A document object.|
                |folder|A folder object.|
                |workspace|A workspace object.|
                |email|An email object.|
                |document_shortcut|A shortcut to the document object.|
                |folder_shortcut|A shortcut to the folder object.|
                |workspace_shortcut|A shortcut to the workspace object.|
                |user|A user object.|
              enum: ["document", "folder", "workspace", "email", "document_shortcut",
                "folder_shortcut", "workspace_shortcut", "user"]
              type: string
          additionalProperties: true
          description: |-
            Information about the target workspace.
        wstype:
          description: |
            The item's type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A workspace object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
          enum: ["document", "folder", "workspace", "email", "document_shortcut",
            "folder_shortcut", "workspace_shortcut", "user"]
          type: string
      additionalProperties: true
    Shortcuts.workspaceResponseShortcut:
      additionalProperties: true
      type: object
      required:
      - database
      - default_security
      - edit_date
      - id
      - name
      - owner
      - owner_description
      - parent_id
      - target
      - wstype
      properties: *id1167
    Shortcuts.workspaceShortcutResponseMultiple:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Projects.Shortcuts.workspaceRequestShortcut'
        total_count:
          type: integer
          description: |
            Indicates the total number of items found.<br>
      additionalProperties: false
    Shortcuts.workspaceShortcutResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Projects.Shortcuts.workspaceResponseShortcut'
      additionalProperties: false
    Shortcuts.containerShortcut:
      type: object
      properties:
        database:
          type: string
          description: |-
            Name of the library (formerly called a database) the container shortcut is found in.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |-
            The default access level.

            |Value|Description|
            |:---|:---|
            |inherit|The container or document inherits security settings from its parent container.|
            |private|Only the user who created the container or document, and users and groups who were explicitly granted access permission, can access the container or document.|
            |view|All users can access the container or document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Most recent date (in ISO 8601 format) when the item of container shortcut was edited.
        effective_security:
          $ref: '#/components/schemas/Projects.Shortcuts.effectiveSecurity'
        id:
          type: string
          description: |-
            The ID of the container shortcut.
        name:
          type: string
          description: |-
            The name of the container shortcut.
        owner:
          type: string
          description: |-
            The user ID of the container shortcut's owner.
        parent_id:
          type: string
          description: |
            The folder ID of the parent of this container shortcut.<br><br>
        target:
          type: object
          properties:
            database:
              type: string
              description: |-
                Name of the library (formerly called a database) the target is found in.
            id:
              type: string
              description: |-
                The ID of the target container.
            subtype:
              type: string
              description: |
                The subtype of the target container.

                |Value|Description|
                |:---|:---|
                |Q|The object is a tab.|
                |S|The object is the My Matters folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |F|The object is the My Favorites folder if it's in a root directory. The object is a category if the parent ID is not null.|
                |C|The object is a search folder.|
            wstype:
              description: |
                The item's type.

                |Value|Description|
                |:---|:---|
                |document|A document object.|
                |folder|A folder object.|
                |workspace|A folder object.|
                |email|An email object.|
                |document_shortcut|A shortcut to the document object.|
                |folder_shortcut|A shortcut to the folder object.|
                |workspace_shortcut|A shortcut to the workspace object.|
                |user|A user object.|
          additionalProperties: true
          description: |-
            Information about the target container shortcut.
        wstype:
          description: |
            The item's type.

            |Value|Description|
            |:---|:---|
            |document|A document object.|
            |folder|A folder object.|
            |workspace|A folder object.|
            |email|An email object.|
            |document_shortcut|A shortcut to the document object.|
            |folder_shortcut|A shortcut to the folder object.|
            |workspace_shortcut|A shortcut to the workspace object.|
            |user|A user object.|
      additionalProperties: true
    Shortcuts.containerShortcutResponse:
      required:
      - data
      type: object
      properties: *id377
      additionalProperties: false
    Shortcuts.worksiteType:
      enum: ["document", "folder", "workspace", "email", "document_shortcut", "folder_shortcut",
        "workspace_shortcut", "user"]
      type: string
      description: |
        Indicates the iManage Work object type.

        |Value|Description|
        |:---|:---|
        |document|A document object.|
        |folder|A folder object.|
        |workspace|A workspace object.|
        |email|An email object.|
        |document_shortcut|A shortcut to the document object.|
        |folder_shortcut|A shortcut to the folder object.|
        |workspace_shortcut|A shortcut to the workspace object.|
        |user|A user object.|
    Sync.userGlobalResponseMultiple:
      required:
      - data
      type: object
      properties: *id1535
      additionalProperties: false
    Types.documentType:
      required:
      - app_extension
      - id
      - database
      - description
      - dms_extension
      - hipaa
      type: object
      properties: &id1557
        app_extension: *id1536
        id: *id1537
        database: *id1538
        description: *id1539
        dms_extension: *id1540
        hipaa: *id1541
        auto_detect: *id1542
      additionalProperties: true
      description: |-
        Represents a document type.
    Types.documentTypeCreateRequest:
      required:
      - app_extension
      - description
      - dms_extension
      - id
      type: object
      properties: *id551
      additionalProperties: true
      description: |-
        Represents a document type creation request.
    Types.documentTypeCreateRequest-v1:
      properties:
        indexable:
          type: boolean
          description: |-
            Describes whether any document of this type is declared as a record.
          default: false
        app_extension: *id1543
        database: *id1544
        description: *id1545
        dms_extension: *id1546
        hipaa: *id1547
        id: *id1548
        auto_detect: *id1549
      additionalProperties: true
      required:
      - app_extension
      - description
      - dms_extension
      - id
      type: object
      description: |-
        Represents a document type creation request.
    Types.documentTypeResponseMultiple:
      required:
      - data
      type: object
      properties: *id1550
      additionalProperties: false
    Types.documentTypeResponseSingle:
      required:
      - data
      type: object
      properties: *id550
      additionalProperties: true
    Types.documentTypeUpdateRequest:
      type: object
      properties: *id1551
      additionalProperties: true
      description: |-
        Represents a document type update request.
    Types.documentTypeUpdateRequest-v1:
      required:
      - database
      properties:
        database:
          type: string
        indexable:
          type: boolean
          description: |-
            Describes if any document of this type is declared as a record.
        app_extension: *id1552
        description: *id1553
        dms_extension: *id1554
        hipaa: *id1555
        auto_detect: *id1556
      additionalProperties: true
      type: object
      description: |-
        Represents a document type update request.
    Types.typeMapping:
      required:
      - database
      - description
      - id
      - kv_detected_value
      type: object
      properties:
        database:
          type: string
          description: |-
            Name of the library (formerly, database) to which the record belongs.
        description:
          type: string
          description: |-
            Description of the type mapping.
        doc_type:
          required:
          - app_extension
          - id
          - database
          - description
          - dms_extension
          - hipaa
          type: object
          properties: *id1557
          additionalProperties: true
          description: |-
            Represents a document type.
        id:
          type: string
          description: |-
            Unique identifier of the type mapping.
        kv_detected_value:
          type: integer
          description: |-
            Indicates the KeyView detected format id.
      additionalProperties: true
      description: |-
        Represents a type map.
    Types.typeMappingCreateRequest:
      required:
      - kv_detected_value
      - app_extension
      type: object
      properties: *id1558
      additionalProperties: true
      description: |-
        Represents a type map creation request.
    Types.typeMappingCreateResponse:
      required:
      - data
      type: object
      properties: *id1559
      additionalProperties: true
    Types.typeMappingGetResponse:
      required:
      - data
      type: object
      properties: *id1560
      additionalProperties: true
    Users.activityHistoryResponse:
      required:
      - data
      type: object
      properties: *id1561
      additionalProperties: false
    Users.adminImportRequest:
      required:
      - import_id
      - users
      type: object
      properties: *id1562
    Users.adminImportResponse:
      required:
      - data
      type: object
      properties: *id098
    Users.adminImportResponseDatum:
      required:
      - user_num
      type: object
      properties:
        user_num:
          type: integer
          description: |-
            Server-generated unique identifier of the user.
    Users.libraryAdminImportRequest:
      required:
      - import_id
      - users
      type: object
      properties: *id1563
    Users.directorySyncGetHashesResponse:
      required:
      - data
      type: object
      properties: *id1564
    Users.directorySyncUploadRequest:
      type: array
      items: *id1565
    Users.directorySyncLibraryUploadRequest:
      type: array
      items: *id1566
    Users.directorySyncUploadResponse:
      required:
      - data
      type: object
      properties: *id578
    Users.directorySyncUploadResponseDatum:
      required:
      - directory_id
      type: object
      properties:
        directory_id:
          type: string
          description: |-
            Specifies users based on directory IDs that are set by an organization's directory service.<br><br>
            Multiple values can be included using a comma-separated list.
    Users.group:
      required:
      - id
      type: object
      properties:
        create_date:
          type: string
          description: Indicates the date (in the ISO 8601 format) when the group
            was created.
        directory_id:
          type: string
          description: |-
            Indicates the ID from external repository (such as AD FS), which is used for group profile synchronization.
        distinguished_name:
          type: string
          description: |
            Indicates the fully-qualified path of names that trace the group entry back to the root of the LDAP tree.<br>
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          type: string
          description: Indicates the date (in the ISO 8601 format) when the group
            was last updated.
        enabled:
          type: boolean
          description: |-
            Indicates if the group is enabled or disabled.

            If `true`, the group is enabled.<br>
            If `false`, the group is disabled.
        full_name:
          type: string
          description: |-
            Indicates the name of the group.
        group_domain:
          type: string
          description: |-
            Indicates  the fully qualified domain name for the group's directory service.

            It is the metadata from LDAP server that determines the unit to which the group belongs to.
            This information is mainly used by iManage system administrators.
          example: cn=Users,dc=dc=ajubalaw,dc=com
        group_nos:
          type: integer
          description: |-
            Indicates the type of group.

            The following are valid nos values for groups:

            | Value | Description |
            | :-: | - |
            | 2 | Group for virtual users.|
            | 6 | Group for enterprise users. |
        id:
          type: string
          description: Indicates the group ID.
        is_external:
          type: boolean
          description: |
            Indicates if the group is intended for external users.

            If `true`, the group is intended for external users.<br>
            If `false`, the group is intended for regular users (non-external users).

            For more information, see <a href="#overview--external-users">External users</a>.
        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in the ISO 8601 format) when the group profile was last synced with a directory service, such as LDAP or Microsoft Active Directory.
        ssid:
          type: number
          format: long
          description: Indicates the unique ID of the group that was generated by
            iManage Work.
        sync_id:
          maxLength: 254
          type: string
          description: |
            Indicates the unique ID from external ADFS repository or external user repository which is used for user profile synchronization. Maximum length is 254 chars.
      additionalProperties: true
    Users.role:
      required:
      - database
      - description
      - id
      type: object
      description: User role
      properties:
        database:
          type: string
          description: |-
            Indicates the name of the library (formerly called a database) in which the role exists.
        description:
          type: string
          description: |-
            Indicates additional information about the role.
        id:
          type: string
          description: |-
            Indicates the role ID (also referred to as role name).
        m1:
          type: integer
          description: |-
            Bit mask for document and folder operations.
          default: 0
        m1_bits:
          type: object
          description: Role bits for document and folder operations.
          properties:
            allow_index_search:
              type: boolean
              description: |-
                Indicates if a user can perform full-text searches in iManage Work.

                The full-text search locates documents by search terms provided by the user that
                exist in the document content, document profile, or workspace profile in the full-text indexer search engine.
            checkout:
              type: boolean
              description: |
                Indicates if a user can checkout documents.<br>
                Checking out a document prevents other users from editing it.

                If the parameter `read_only` is `true`, then `checkout` is set to `false`.
                See `read_only` for additional details.
            create_public_folder:
              type: boolean
              description: |-
                Indicates if a user can create public folders.

                Without this privilege, users can still create private folders or subfolders with security inherited from the parent folder.
            create_public_search_folder:
              type: boolean
              description: |
                Indicates if a user can save public searches in a folder and mark them as public.
            delete:
              type: boolean
              description: |
                Indicates if a user can delete documents.

                Without this privilege, users cannot delete any documents or emails within iManage Work, including those to which they have full access.

                If the parameter `read_only` is `true`, `delete` is set to `false`.
                See `read_only` for additional details.
            display_public_documents:
              type: boolean
              description: |-
                Indicates if a user can view public documents.
            delete_public_folder:
              type: boolean
              description: |-
                Indicates if a user can delete public folders.
            delete_public_search_folder:
              type: boolean
              description: |-
                Indicates if a user can delete public search folders.
            edit_external_default_security:
              type: boolean
              description: |-
                Indicates if a user can edit the default security settings of documents shared to external users.
            edit_external_default_security_folder:
              type: boolean
              description: |-
                Indicates if a user can edit the default security settings of folders shared to external users.
            edit_previous_versions:
              type: boolean
              description: |-
                Indicates if a user can edit previous versions of a document.
            import:
              type: boolean
              description: |
                Indicates if a user is allowed to import documents to iManage Work.

                With this privilege, the user can import documents, upload new document version, and replace original document with new one.

                Without this privilege, users cannot import or add content to iManage Work.
                If the parameter `read_only` is `true`, `import` is set to `false`.
                See `read_only` for additional details.
            read_only:
              type: boolean
              description: |
                Indicates if a user has read only access to documents and containers.<br><br>
                If `true`, user cannot modify documents, and the following parameters must be set to false: `import`, `checkout`, `release`, and `delete`.<br>
                If `false`, the user can modify documents, subject to the restrictions allowed by the following parameters: `import`, `checkout`, `release`, and `delete`.
            release:
              type: boolean
              description: |
                Indicates if a user can unlock a document checked-out by another user.

                If the parameter `read_only` is `true`, `release` is set to `false`.
                See `read_only` for additional details.
            view_public_folder:
              type: boolean
              description: |-
                Indicates if a user can view public folders.
            view_public_search_folder:
              type: boolean
              description: |-
                Indicates if a user can view public search folders.
        m2:
          type: integer
          description: |-
            Bit mask for iManage Work administrative operations.
          default: 0
        m2_bits:
          type: object
          description: Role bits for iManage administrative operations.
          properties:
            document_view:
              type: boolean
              description: |-
                Indicates if users who belong to the NRTADMIN group are allowed to view the contents of documents and emails.

                Without this privilege, NRTADMINs cannot view the contents of any documents or emails within iManage Work.

                To allow an NRTADMIN user to view private documents, you must add the user to a role that has `document_view` privilege set to `true`. This is the default setting.<br>
                To prevent an NRTADMIN user assigned to a specific role from viewing documents, set `false` for this privilege.
                However, the user will still be able to search for private documents irrespective of this setting.
            external:
              type: boolean
              description: |-
                Indicates if the role is for external users.
                For more information, see <a href="#overview--external-users"> External users</a>.
            use_admin_tool:
              type: boolean
              description: |-
                Indicates if a user is allowed to use the iManage Database Administration tool.

                The NRTADMIN group has this permission by default.<br>
                For more information, see the *iManage Work Server Administration Guide* available in the [iManage Help Center](https://help.imanage.com/).
            use_import_tool:
              type: boolean
              description: |-
                Indicates if a user is allowed to use the iManage Document Import tool.

                If `true`, this privilege allows users to use the bulk Document Import tool.
                The NRTADMIN group has this permission by default.<br>
                For more information, see the *iManage Work Server Administration Guide* available in the [iManage Help Center](https://help.imanage.com/).
            use_monitor_tool:
              type: boolean
              description: |-
                Indicates if a user is allowed to use the iManage Work Monitor tool.

                If `true`, this privilege provides access to use the iManage Monitor to track library transactions.
                This tool enables users to locate, relocate or delete documents, mark documents for archiving, or change document profile information.
                The NRTADMIN group has this permission by default.<br>
                For more information, see the *iManage Work Server Administration Guide* available in the [iManage Help Center](https://help.imanage.com/).
        m3:
          type: integer
          description: |-
            Bit mask for web page operations.
          default: 0
        m3_bits:
          type: object
          description: Role bits for web page operations.
          properties:
            author_workspace:
              type: boolean
              description: |-
                Indicates if a user is allowed to create new workspaces.
            browse_workspace:
              type: boolean
              description: |-
                Indicates if a user is allowed to browse the content of workspaces.
            create_template:
              type: boolean
              description: |-
                Indicates if a user is allowed to create workspace templates.
                For more information, see <a href="#tag--Workspace-Templates">Workspace Templates</a>.
            customize_personal_views:
              type: boolean
              description: |-
                Indicates if a user is allowed to customize the layout of workspace and folder properties for personal view in the legacy iManage Work Web application.
            customize_public_views:
              type: boolean
              description: |-
                Indicates if a user is allowed to customize the layout of workspace and folder properties for all users in the legacy iManage Work Web application.
            delete_workspace:
              type: boolean
              description: |-
                Indicates if a user is allowed to delete workspaces.
            search_workspace:
              type: boolean
              description: |-
                Indicates if a user is allowed to search for workspaces.
            share_workspace:
              type: boolean
              description: |-
                Indicates if a user is allowed to share workspaces with external users.
        m4_bits:
          type: object
          description: Role bits for iManage Control Center administrative operations.
          properties:
            admin_custom:
              type: boolean
              description: |-
                Indicates if a user can manage lookup lists for custom fields Custom1-12 and 29-30.

                For more information, see <a href="#tag--Custom-Properties">Custom Properties</a>.
            admin_tier_1:
              type: boolean
              description: |-
                Indicates if a user is a tier 1 administrator.
            admin_tier_2:
              type: boolean
              description: |-
                Indicates if a user is a tier 2 administrator.
            content_assistance:
              type: boolean
              description: |
                Indicates if a user is allowed to check the effective access of other users to documents and workspaces.<br><br>
                With this privilege, the user can also review history of documents, unlock documents, search for documents and workspaces, and restore documents.
            custom_metadata_management:
              type: boolean
              description: |-
                Indicates if a user is allowed to add new values to the lookup lists of custom fields Custom1-12 and 29-30.

                However, a user with this privilege cannot update or delete a custom value.<br>
                To update or delete a custom value, a user must either have a role with `admin_custom` as `true`, or `tier` as 2 or higher.
                For more information, see <a href="#tag--Custom-Properties">Custom Properties</a>.

                An iManage system administrator can allow or deny users with this privilege to add new values to the lookup lists of custom fields
                on a field-by-field basis. For example, if an administrator allows adding Custom1 and 2 only, then a user with this privilege will be able
                to add new values only for Custom1 and 2, and not for any other fields.
                This can be configured in iManage Control Center using the global setting **Allow to Create Metadata**.
                For more information, see <a href="https://docs.imanage.com/cc-help/10.4.0/en/Global.html" target="_blank">Global settings</a>.

            dms_job_operations:
              type: boolean
              description: |-
                Indicates if a user can perform export or import of documents and workspaces.
            govern_security_management:
              type: boolean
              description: |-
                Indicates if a user can govern security management settings.
            report:
              type: boolean
              description: |-
                Not in use currently. Indicates if a user can view a report. <br><br>For example, active users report.
            report_management:
              type: boolean
              description: |-
                Not in use currently. Indicates if a user has access to manage reports. This role privilege allows to generate, modify, and delete reports.
            system_management:
              type: boolean
              description: |-
                Reserved for future use. Indicates if a user can view and manage the statistics, logs, and performance, of the iManage Work system.
            role_management:
              type: boolean
              description: |-
                Indicates if a user can add, modify and remove roles, manage user privileges, and manage admininstration privileges.
            system_job_operations:
              type: boolean
              description: |-
                Indicates if a user can re-assign users, perform metadata sync and directory sync, refile documents, and so on.
            system_metadata_management:
              type: boolean
              description: |-
                Indicates if a user can modify system metadata management settings.

                This privilege allows a user to edit captions, create classes, subclasses, document types, templates, and associate applications with documet file types.
            trustee_assistance:
              type: boolean
              description: |-
                Indicates if the user is allowed to do the following:
                * Reset another user's password.
                * Configure whether their password expires or not.
                * Force a user to change their password the next time they sign in.
                * Enable or disable a user's ability to sign in.
            trustee_management:
              type: boolean
              description: |-
                Indicates if a user is allowed to manage users and groups.

                This privilege allows the following actions:
                * Create and update users.
                * Create, update, and delete groups.
                * Modify group memberships.
                * Copy group members from one group to another.
                * Perform an admin search of users.
            tier:
              type: integer
              description: |-
                Indicates the administrative tier to which the user belongs.
      additionalProperties: true
    Users.roleResponseMultiple:
      required:
      - data
      type: object
      properties: *id1567
      additionalProperties: false
    Users.roleResponseSingle:
      required:
      - data
      type: object
      properties: *id258
      additionalProperties: false
    Users.user:
      type: object
      properties:
        allow_logon: &id1570
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.

        create_date: &id1571
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
          type: string
          example: "2020-03-09T17:01:16Z"
        custom1: &id1572
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2: &id1573
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3: &id1574
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        directory_id: &id1575
          type: string
          description: |-
            Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
        distinguished_name: &id1576
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date: &id1577
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email: &id1578
          type: string
          maxLength: 254
        email2: &id1579
          type: string
          maxLength: 254
        email3: &id1580
          type: string
          maxLength: 254
        email4: &id1581
          type: string
          maxLength: 254
        email5: &id1582
          type: string
          maxLength: 254
        exch_autodiscover: &id1583
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension: &id1584
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins: &id1585
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        fax: &id1586
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change: &id1587
          type: boolean
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        full_name: &id1588
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        general: &id1589
          type: string
          description: |
            Indicates any additional comments or description applicable for the user.
        id: &id1590
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external: &id1591
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.

        last_sync_ts: &id1592
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
          example: "2020-03-09T17:01:16Z"
        location: &id1593
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        lockout_ts: &id1594
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).
          example: "2020-03-09T17:01:16Z"
        phone: &id1595
          type: string
          description: Indicates the phone number of the user.
        preferred_library: &id1596
          type: string
          description: |
            Indicates the preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
          example: active_us
        pwd_changed_ts: &id1597
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          example: 2020-03-09T17:01:16Z
        pwd_never_expire: &id1598
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid: &id1599
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain: &id1600
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex: &id1601
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos: &id1602
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num: &id1603
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
    userProfileWithGlobalUsersFeatureOff:
      type: object
      title: Without global_users feature
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.<br>
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        database:
          type: string
          description: The library (formerly called a database) where the user exists.
        doc_server:
          type: string
          description: Indicates the file path on the iManage Work server.
        distinguished_name:
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins:
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        force_password_change:
          type: boolean
          description: |
            Indicates if the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        id:
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.
        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last synchronized with an external directory (such as LDAP or Microsoft Active Directory).
          example: "2020-03-09T17:01:16Z"
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        password_never_expire:
          type: boolean
          description: "Indicates the password never expires for a user.<br><br> This\
            \ is applicable to virtual users only (whose `user_nos=2`).\nIf `true`,\
            \ the user password never expires.<br> If `false`, the user password expires\
            \ after the time interval set by iManage system administrator."
        preferred_library:
          type: string
          description: |
            Indicates the preferred library (formerly called a database) of the user.<br><br>
            For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
          example: active_us
        pwd_changed_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          example: 2020-03-09T17:01:16Z
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        sync_id:
          type: string
          description: |-
            Indicates the ID from an external directory (such as ADFS), which is used for user profile synchronization.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num:
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
    userProfileWithGlobalUsersFeatureOn:
      type: object
      title: With global_users feature
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.<br>
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        database:
          type: string
          description: |-
            Indicates the library in which the group exists.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email:
          type: string
          maxLength: 254
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        id:
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external:
          type: boolean
          description: |
            Indicates if  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.
        is_tier1:
          type: boolean
          description: |
            Indicates if the user is assigned to a role with Tier 1 administrative privileges.
        is_tier2:
          type: boolean
          description: |
            Indicates if the user is assigned to a role with Tier 2 administrative privileges.
        is_tier3:
          type: boolean
          description: |
            Indicates if the user is a member of NRTADMIN group and has complete administrative privileges.
        is_virtual_user:
          type: boolean
          description: "Indicates that the user is a virtual user.\nFor more information,\
            \ see <a href=\"#tag--Users\">Users</a>."
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        preferred_library:
          type: string
          description: |
            Indicates the preferred library (formerly called a database) of the user.<br><br>
            For more information, see <a href="#overview--preferred-library"> Preferred library</a>.
          example: active_us
        password_never_expire:
          type: boolean
          description: "Indicates if the password expiration is enabled for a user.<br><br>\
            \ This is applicable to virtual users only (whose `user_nos=2`).<br>\n\
            If `true`, the user password never expires.<br> If `false`, the user password\
            \ expires after the time interval set by iManage system administrator."
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        sync_id:
          type: string
          description: |-
            Indicates the ID from an external directory (such as AD FS), which is used for user profile synchronization.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num:
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: false
    Users.userGlobal:
      required:
      - create_date
      - edit_date
      - id
      - ssid
      - user_num
      type: object
      properties:
        allow_logon:
          type: boolean
          default: true
          description: |
            Indicates the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.<br>
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        distinguished_name:
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.<br><br>
            For example: *cn=username,dc=example,dc=ajubalaw,dc=com*.<br><br>
            Maximum length: 254.
        directory_id:
          type: string
          description: |-
            Indicates the ID from an external ADFS repository or external user repository, which is used for user profile synchronization.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
        email:
          type: string
          maxLength: 254
        email2:
          type: string
          maxLength: 254
        email3:
          type: string
          maxLength: 254
        email4:
          type: string
          maxLength: 254
        email5:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the Exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        fax:
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change:
          type: boolean
          default: false
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.
        full_name:
          type: string
          description: |-
            Indicates the name of the user.
        general:
          type: string
          description: |-
            Indicates additional information about the user.
        id:
          type: string
          description: |-
            Indicates the user ID.
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access.
            They do not have default access to any container or document.
            External users must be explicitly granted access to each container or document, including those marked as Public or View.
        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
        lockout_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.
        phone:
          type: string
          description: |-
            Indicates the phone number of the user.
        preferred_library:
          type: string
          description: |
            Indicates a user's preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
        pwd_never_expire:
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |-
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |-
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |
        user_num:
          type: integer
          description: |-
            Indicates the internal user number.
      additionalProperties: true
    Users.user-admin-search:
      required:
      - allow_logon
      type: object
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates users based on their `allow_logon` value.<br><br>
            If `true`, returns users with `allow_logon` enabled.<br>
            If `false`, returns users with `allow_logon` disabled.<br>
        library:
          type: string
          description: |-
            Name of the library in which user exists.
        distinguished_name:
          type: string
          description: |
            Unique name of the group which represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.<br><br>
            For example: *cn=username,dc=example,dc=ajubalaw,dc=com*.<br><br>
            Maximum length: 254.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
        email:
          type: string
          maxLength: 254
          description: |-
            Email address of the user.

            Special characters allowed are +*.&-_`~|$%^?!’#={}/
        full_name:
          type: string
          description: |
            Full name of the user

            Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        id:
          type: string
          description: |
            Unique ID of the user.

            Special characters allowed are *().&-_[]`~|@$%^?:{}!',/\\#+<>;"=
        is_external:
          type: boolean
          description: |2+

            If `true`, only the external users are returned.<br>
            If `false`, only the internal users are returned.<br>
            If omitted, both the internal and external users are returned.


        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Date when the user profile was last synced with LDAP or Microsoft Active Directory.
        preferred_library:
          type: string
          description: |-
            Indicates a user's preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
        sync_id:
          type: string
        user_domain:
          type: string
          description: |
            Specifies  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the user ID.<br><br>
            This is the orginal value for the user's ID.
            Its formatting can get changed to all upper case letters, and then assigned to `id`.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |-
            Network operating system value used to record the user's home directory file system.
        wstype:
          $ref: '#/components/schemas/Users.wsType'
    Users.global-user-search:
      required:
      - filters
      type: object
      properties: *id1568
    Users.global-user-filters:
      type: object
      properties: *id1569
    Users.user-detailed:
      required:
      - my_favorites_id
      properties:
        config_database:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Users.group'
          description: |-
            The groups which the user is a member of.
        my_favorites_id:
          type: string
          description: |-
            Indicates the folder ID of the user's My Favorites.
          example: active_us!156
        my_matters_id:
          type: string
          description: |-
            Indicates the folder ID of the user's My Matters.
          example: active_us!14302
        allow_logon: *id1570
        create_date: *id1571
        custom1: *id1572
        custom2: *id1573
        custom3: *id1574
        directory_id: *id1575
        distinguished_name: *id1576
        edit_date: *id1577
        email: *id1578
        email2: *id1579
        email3: *id1580
        email4: *id1581
        email5: *id1582
        exch_autodiscover: *id1583
        extension: *id1584
        failed_logins: *id1585
        fax: *id1586
        force_password_change: *id1587
        full_name: *id1588
        general: *id1589
        id: *id1590
        is_external: *id1591
        last_sync_ts: *id1592
        location: *id1593
        lockout_ts: *id1594
        phone: *id1595
        preferred_library: *id1596
        pwd_changed_ts: *id1597
        pwd_never_expire: *id1598
        ssid: *id1599
        user_domain: *id1600
        user_id_ex: *id1601
        user_nos: *id1602
        user_num: *id1603
      type: object
      additionalProperties: true
    Users.userCreateRequest:
      required:
      - id
      - email
      type: object
      properties: *id009
      additionalProperties: true
    Users.userPreferencesResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties:
            checkedout_documents:
              type: boolean
              description: |
                Indicates to display checked out documents in FileSite.<br><br>
                If `true`, checked out documents are displayed in FileSite.<br>
                If `false`, checked out documents are not displayed in FileSite.
            document_worklist:
              type: boolean
              description: |
                Indicates to display the document worklist in FileSite.<br><br>
                If `true`, the document worklist is displayed in FileSite.<br>
                If `false`, the document worklist is not displayed in FileSite.
            matter_worklist:
              type: boolean
              description: |
                Indicates to display the matter worklist in FileSite.<br><br>
                If `true`, the matter worklist is displayed in FileSite.<br>
                If `false`, the matter worklist is not displayed in FileSite.
            my_favorites:
              type: boolean
              description: |
                Indicates to display My Favorites in FileSite.<br><br>
                If `true`, My Favorites is displayed in FileSite.<br>
                If `false`, My Favorites is not displayed in FileSite.
            my_matters:
              type: boolean
              description: |
                Indicates to display My Matters in FileSite.<br><br>
                If `true`, My Matters is displayed in FileSite.<br>
                If `false`, My Matters is not displayed in FileSite.
            recent_searches:
              type: boolean
              description: |
                Indicates to display Recent Searches in FileSite.<br><br>
                If `true`, Recent Searches is displayed in FileSite.<br>
                If `false`, Recent Searches is not displayed in FileSite.
            worksite_explorer:
              type: boolean
              description: |
                Indicates to display WorkSite Explorer in FileSite.<br><br>
                If `true`, WorkSite Explorer is displayed in FileSite.<br>
                If `false`, WorkSite Explorer is not displayed in FileSite.
          additionalProperties: false
      additionalProperties: false
    Users.userResponseMultiple:
      required:
      - data
      type: object
      properties: *id093
      additionalProperties: false
    Users.userResponseSingle:
      required:
      - data
      type: object
      properties: *id099
      additionalProperties: false
    Users.userLibraryResponseSingle:
      required:
      - data
      type: object
      properties:
        data:
          description: User profile. <br> This request returns two types of user profiles
            based on the <a href="#get-/work/api/v2/customers/-customerId-/features">
            global_users value</a> in your environment.<br><br>
          anyOf:
          - $ref: '#/components/schemas/userProfileWithGlobalUsersFeatureOn'
          - $ref: '#/components/schemas/userProfileWithGlobalUsersFeatureOff'
      additionalProperties: false
    Users.userLibraryResponseMultiple:
      required:
      - data
      type: object
      properties: *id385
      additionalProperties: false
    Users.createOrUpdateGlobalUserResponseSingle:
      required:
      - data
      type: object
      properties: *id010
      additionalProperties: false
    Users.userLibrary:
      required:
      - create_date
      - edit_date
      - id
      - ssid
      - user_num
      type: object
      properties:
        allow_logon:
          type: boolean
          default: true
          description: |
            Indicates the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.<br>
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        distinguished_name:
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.<br><br>
            For example: *cn=username,dc=example,dc=ajubalaw,dc=com*.<br><br>
            Maximum length: 254.
        directory_id:
          type: string
          description: |-
            Indicates the ID from an external ADFS repository or external user repository, which is used for user profile synchronization.
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
        email:
          type: string
          maxLength: 254
        email2:
          type: string
          maxLength: 254
        email3:
          type: string
          maxLength: 254
        email4:
          type: string
          maxLength: 254
        email5:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the Exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        fax:
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change:
          type: boolean
          default: false
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.
        full_name:
          type: string
          description: |-
            Indicates the name of the user.
        general:
          type: string
          description: |-
            Indicates additional information about the user.
        id:
          type: string
          description: |-
            Indicates the user ID.
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access.
            They do not have default access to any container or document.
            External users must be explicitly granted access to each container or document, including those marked as Public or View.
        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
        lockout_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.
        password_never_expire:
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        phone:
          type: string
          description: |-
            Indicates the phone number of the user.
        preferred_library:
          type: string
          description: |
            Indicates a user's preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |-
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |-
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |
        user_num:
          type: integer
          description: |-
            Indicates the internal user number.
      additionalProperties: true
    Users.userLibrarySearchResponseMultiple:
      required:
      - data
      type: object
      properties: *id1604
      additionalProperties: false
    Users.userResponseSingle-detailed:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Users.user-detailed'
      additionalProperties: false
    Users.userLibraryPatchRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: |
            Specifies the user ID.
        allow_logon:
          type: boolean
          description: |
            Specifies if the user has access to the specified library.

            If `true`, the user has access to the specified library.<br>
            If `false`, the user does not have access to the specified library.<br>
            If omitted, the value is `false`.
        role_alias:
          type: string
          description: |
            Specifies the role to be assigned to a user.

            If null is specified, the user is removed from the current role and the `DEFAULT` role is assigned.<br>
            If omitted, the user's role remains unchanged.
          nullable: true
      additionalProperties: false
    Users.userLibraryPatchRequestMultiple:
      type: array
      items: *id1605
    Users.userLibraryPatchResponse:
      required:
      - data
      type: object
      properties: *id1606
    Users.userEditRequest:
      type: object
      properties: *id1607
      additionalProperties: true
    Users.wsType:
      enum: ["document", "folder", "workspace", "email", "document_shortcut", "folder_shortcut",
        "workspace_shortcut", "user"]
      type: string
      description: |
        Indicates the iManage Work object type.

        |Value|Description|
        |:---|:---|
        |document|A document object.|
        |folder|A folder object.|
        |workspace|A workspace object.|
        |email|An email object.|
        |document_shortcut|A shortcut to the document object.|
        |folder_shortcut|A shortcut to the folder object.|
        |workspace_shortcut|A shortcut to the workspace object.|
        |user|A user object.|
    Users.warning:
      required:
      - error
      type: object
      properties:
        data:
          type: object
          description: |-
            The input data on which the warning applies.
        code:
          type: string
          description: |-
            The warning code. For example, NRC_INVALID_PARAM, or OTHER.
        error:
          type: string
          description: |-
            The warning message.
        field:
          type: string
          description: |-
            The field to which the warning applies.
      additionalProperties: true
    WorkspaceSearch.request:
      title: Workspace Search Request
      type: object
      properties: *id079
      example: *id080
    WorkspaceSearch.response:
      title: Post Document Search Response
      required:
      - data
      - overflow
      type: object
      properties: *id081
      example: *id082
    FolderSearch.request:
      title: Folder Search Request
      type: object
      properties: *id1608
      example: *id1609
    FolderSearch.multilibraryrequest:
      title: Folder Search Request
      type: object
      properties: *id1610
      example: *id1611
    FolderSearch.response:
      title: Post Folder Search Response
      required:
      - data
      - overflow
      type: object
      properties: *id564
      example: *id565
    Roles.user:
      type: object
      properties:
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.<br><br>
            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.

        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was created.
          type: string
          example: "2020-03-09T17:01:16Z"
        custom1:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom2:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        custom3:
          type: string
          description: |
            Indicates additional information about the user.<br><br>
            This is descriptive text that does not have to be formatted, and is not validated.
            This field is different than the metadata custom field associated with content items, such as documents, workspaces, or folders.
            <br>
        directory_id:
          type: string
          description: |-
            Indicates the ID from an external AD FS repository or external user repository, which is used for user profile synchronization.
        distinguished_name:
          maxLength: 254
          type: string
          description: |
            Indicates the name of the object that represents the fully qualified path of names that trace the entry back to the root of the LDAP tree.
          example: cn=username,dc=example,dc=ajubalaw,dc=com
        edit_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user profile was last edited.
          example: "2020-03-09T17:01:16Z"
        email:
          type: string
          maxLength: 254
        email2:
          type: string
          maxLength: 254
        email3:
          type: string
          maxLength: 254
        email4:
          type: string
          maxLength: 254
        email5:
          type: string
          maxLength: 254
        exch_autodiscover:
          type: string
          description: |-
            Indicates the exchange server details of the user.
        extension:
          type: string
          description: |-
            Indicates the phone extension number of the user.
        failed_logins:
          type: integer
          description: |-
            Indicates the current number of user's failed attempts to sign in.
        fax:
          type: string
          description: |-
            Indicates the fax number of the user.
        force_password_change:
          type: boolean
          description: |
            Indicates the user must change their password on next sign in.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
            If `true`, the user must change their password on next sign in.<br>
            If `false`, the user does not have to change their password on next sign in.<br>
            If omitted, the value is `false`.
        full_name:
          type: string
          description: |-
            Indicates the full name of the user.
          example: Andrew Case
        general:
          type: string
          description: |
            Indicates any additional comments or description applicable for the user.
        id:
          type: string
          description: |-
            Indicates the user ID.
          example: ACASE
        is_external:
          type: boolean
          description: |
            Indicates  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.
            <br><br>
            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.

        last_sync_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user's profile was last synchronized with LDAP or Microsoft Active Directory.
          example: "2020-03-09T17:01:16Z"
        location:
          type: string
          description: |-
            Indicates the geographical location of the user.
          example: Chicago
        lockout_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |-
            Indicates the date (in ISO 8601 format) when the user was locked and not allowed to access iManage Work Server.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).
          example: "2020-03-09T17:01:16Z"
        phone:
          type: string
          description: Indicates the phone number of the user.
        preferred_library:
          type: string
          description: |
            Indicates the preferred library (formerly called a database).<br><br>
            A preferred library is user's default library. Each user is required to have one preferred library.
            It stores user's preferred settings such as language preference
            and default search form for iManage Work advanced search.

            If a user's preferred library is switched to another, the preferences are reset.
          example: active_us
        pwd_changed_ts:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the date (in ISO 8601 format) when the user's password was last changed.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).<br><br>
          example: 2020-03-09T17:01:16Z
        pwd_never_expire:
          type: boolean
          description: |
            Specifies if the user's password never expires.<br><br>
            This is applicable to virtual users only (whose `user_nos=2`).

            If `true`, the user's password never expires.<br>
            If `false`, the user's password expires.
        ssid:
          type: string
          description: |-
            Indicates the numeric system ID of the user.
        user_domain:
          type: string
          description: |
            Indicates  the fully qualified domain name for the user's directory service.

            It is the metadata from LDAP server that determines the unit to which the user belongs to.
            This information is mainly used by iManage system administrators.
        user_id_ex:
          type: string
          description: |
            Indicates the original value of the user ID that is received from the source system such as Active Directory.

            It is formatted internally to all upper case letters, and then saved as `id`.
            The request fields `id` and `user_id_ex` should be same but the letter case can be different.<br>
            For example, if `user_id_ex` is ACase then the `id` will be ACASE.
            iManage recommends using `id` when referring to the user.
        user_nos:
          type: integer
          description: |
            Indicates users based on their user type.

            The allowed values are:

            | Value | Description |
            | :-: | - |
            | 2 | Virtual User |
            | 6 | Enterprise user |

            For more information on types of users, see <a href="#tag--Users">Users</a>
        user_num:
          type: integer
          description: |-
            Indicates the numeric system ID of the user.
      additionalProperties: true
    Roles.accessLevel:
      enum: ["admin", "no_access"]
      type: string
      description: |
        Indicates the access level of the role to operate on the object.<br><br>
        The following are allowed values:<br>

        |Value|Description|
        |:---|:--- |
        |admin|The priviledge is enabled for the role.|
        |no_access|The priviledge is not enabled for the role.|
    Roles.customerRole:
      required:
      - id
      - app_management
      - group_management
      - role_management
      - settings_management
      - user_management
      - encryption_management
      - feature_management
      type: object
      properties:
        id:
          type: string
          description: Indicates the name of the role.
        description:
          type: string
          description: |-
            Indicates additional information about the role.
        app_management:
          description: |
            Indicates a user's ability to manage applications.

            This privilege allows users to add internal or external applications.<br>
            For more information on apps, see <a href="#tag--Apps">Apps</a>.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
        encryption_management:
          description: |
            Indicates a user's ability to manage encryption keys.

            This privilege allows users to manage encryption keys, such as registering a new key, or activating a key on a library.<br>
            For more information, see the <a href="#tag--Encryption">Encryption</a> section.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
        feature_management:
          description: |
            Indicates a user's ability to manage upcoming features.

            This privilege allows users to enable and disable new upcoming features, before they become permanent in the system.<br>
            For more information, see <a href="#tag--Features">Features</a>

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
        group_management:
          description: |
            Indicates a user's ability to manage global groups.

            This privilege allows users to create groups, rename groups, and add users to groups.<br>
            For more information, see <a href="#tag--Groups">Groups</a>.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
        role_management:
          description: |
            Indicates a user's ability to manage global roles.

            This privilege allows users to create roles, delete roles, and edit roles.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
        settings_management:
          description: |
            Indicates a user's ability to manage iManage Work global settings.

            This privilege allows users to manage iManage Work global settings and settings for iManage Mobility for iOS (mobile), iManage Work Desktop for Windows, and iManage classic clients.
            These settings appear in iManage Cntrol Center as Global, iOS, Office, and Classic.<br>
            For more information about settings management, see <a href="#tag--Settings">Settings</a>.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|

          enum: ["admin", "no_access"]
          type: string
        user_management:
          description: |
            Indicates a user's ability to manage global settings of users.

            This privilege allows users to create virtual users, edit user profile and security, reset password, and enable or disable sign-in.<br>
            For more information, see <a href="#tag--Users">Users</a>.

            The following are allowed values:<br>

            |Value|Description|
            |:---|:--- |
            |admin|The privilege is granted to the role.|
            |no_access|The privilege is denied for the role.|
          enum: ["admin", "no_access"]
          type: string
      additionalProperties: true
    Roles.customerRoleResponseMultiple:
      required:
      - data
      type: object
      properties: *id025
      additionalProperties: true
    Roles.membersResponseMultiple:
      required:
      - data
      type: object
      properties: *id1612
      additionalProperties: true
    Roles.customerRoleResponseSingle:
      required:
      - data
      type: object
      properties: *id026
      additionalProperties: true
    Roles.customerRolePatchRequest:
      type: object
      properties: *id1613
      additionalProperties: true
    Roles.customerRoleCreateRequest:
      required:
      - id
      - app_management
      - group_management
      - role_management
      - settings_management
      - user_management
      - encryption_management
      - feature_management
      type: object
      properties: *id1614
      additionalProperties: true
    Roles.member:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Specifies the user ID.
        type:
          enum: ["user"]
          type: string
          default: user
          description: Specifies the type or classification of the user.
      additionalProperties: true
    Roles.rolePatchMemberRequest:
      type: object
      properties: *id1615
      additionalProperties: true
    Spm.claim:
      type: string
      description: |-
        Claim string.
    Spm.userClaims:
      required:
      - allow_claims
      - deny_claims
      - unclassified_claims
      type: object
      properties: &id1616
        allow_claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of allowed claims associated with a policy for this user.
        deny_claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of denied claims associated with a policy for this user.
        unclassified_claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of claims not associated with a policy for this user.
      additionalProperties: true
    Spm.userClaimsGetResponse:
      required:
      - data
      type: object
      properties:
        cursor:
          type: string
          description: |-
            The next position of the cursor returned by the server.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
        data:
          description: |-
            Arrays of allow, deny, and unclassified claims.
          required:
          - allow_claims
          - deny_claims
          - unclassified_claims
          type: object
          properties: *id1616
          additionalProperties: true
      additionalProperties: true
    Spm.userClaimsPatch:
      required:
      - user_id
      type: object
      properties:
        user_id:
          type: string
          description: |-
            User ID
        add:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of claims to be added to this user.
        remove:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of claims to be removed from this user.
      additionalProperties: true
    Spm.userClaimsPatchRequest:
      required:
      - claims
      type: object
      properties:
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.userClaimsPatch'
          description: |-
            Arrays of successfully updated user claims.
      additionalProperties: true
    Spm.userClaimsPut:
      required:
      - user_id
      - claims
      type: object
      properties:
        user_id:
          type: string
          description: |-
            User ID
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of claims for the user.
      additionalProperties: true
    Spm.userClaimsPutRequest:
      required:
      - claims
      type: object
      properties:
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Spm.userClaimsPut'
          description: |-
            Arrays of successfully updated user claims.
      additionalProperties: true
    Spm.userClaimsPutPatchResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            type: string
          description: |-
            Array of the userIds for all successfully inserted user claim.
      additionalProperties: true
    Spm.policyType:
      enum: ["client", "default", "matter"]
      type: string
    Spm.defaultAccess:
      enum: ["allow", "deny"]
      type: string
    Spm.policyRequest:
      properties:
        matter:
          type: string
          description: |
            This is the matter alias.
            When policy_type is `matter`, then `matter` is the matter alias and is required.
            When policy_type is `client`, then `matter` can be null, empty string, or removed.
            When policy_type is `default`, then `matter` must be "\_DEFAULT\_" and is required.
        checksum: &id1617
          type: string
          description: |-
            Checksum of policy and policy claims metadata. Cannot be empty or null.
        client: &id1618
          type: string
          description: |-
            This is the client alias.
        policy_type: &id1619
          description: |-
            The type of policy.
          enum: ["client", "default", "matter"]
          type: string
        default_access: &id1620
          description: |-
            Default access.
          enum: ["allow", "deny"]
          type: string
        show_denied_users: &id1621
          type: boolean
          description: |-
            Flag to show denied users.
        allow_claims: &id1622
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of allowed claims for this policy.
        deny_claims: &id1623
          type: array
          items:
            $ref: '#/components/schemas/Spm.claim'
          description: |-
            Array of denied claims for this policy.
      required:
      - client
      - policy_type
      - default_access
      - show_denied_users
      type: object
      additionalProperties: true
    Spm.policyResponse:
      properties:
        matter:
          type: string
          description: |-
            This is the matter alias.
        checksum: *id1617
        client: *id1618
        policy_type: *id1619
        default_access: *id1620
        show_denied_users: *id1621
        allow_claims: *id1622
        deny_claims: *id1623
      required:
      - client
      - policy_type
      - default_access
      - show_denied_users
      type: object
      additionalProperties: true
    Spm.policy:
      required:
      - client
      - policy_type
      - default_access
      - show_denied_users
      type: object
      properties:
        checksum: *id1617
        client: *id1618
        policy_type: *id1619
        default_access: *id1620
        show_denied_users: *id1621
        allow_claims: *id1622
        deny_claims: *id1623
      additionalProperties: true
    Spm.policiesRequest:
      required:
      - policies
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Spm.policyRequest'
          description: |-
            Arrays of policy request objects.
      additionalProperties: true
    Spm.policiesResponse:
      required:
      - data
      type: object
      properties:
        cursor:
          type: string
          description: |-
            The next position of cursor returned by the server.
            <br>
            For more information, see <a href="#overview--pagination">Pagination</a>.
        data:
          type: array
          items:
            $ref: '#/components/schemas/Spm.policyResponse'
          description: |-
            Arrays of policies.
      additionalProperties: true
    Spm.policiesPutResponseObject:
      required:
      - client
      type: object
      properties:
        client:
          type: string
          description: |-
            Client alias
        matter:
          type: string
          description: |-
            Matter alias. This is only returned when policyType is `matter`.
      additionalProperties: true
    Spm.policiesPutResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Spm.policiesPutResponseObject'
          description: |-
            Array of the client/matter pairs that correspond to successfully inserted policies.
      additionalProperties: true
    Spm.overTheWallUsersRequest:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          items:
            type: string
          description: |-
            Array of over-the-wall user.
      additionalProperties: true
    Streams.streamProfile:
      required:
      - checksum
      - stream_id
      type: object
      properties:
        checksum:
          type: string
          description: |-
            The SHA-256 checksum of the stream.
        stream_id:
          type: string
          description: |-
            Unique ID of the stream assigned by iManage Work Server.
    Streams.streamUploadProfile:
      required:
      - name
      - size
      - type
      type: object
      properties: *id1624
    WorkList.recentDocuments:
      required:
      - documents
      type: object
      properties: *id1625
      additionalProperties: true
    WorkList.recentWorkspaces:
      required:
      - workspaces
      type: object
      properties: *id1626
      additionalProperties: true
    addDocumentToFolderRequest:
      required:
      - document_id
      type: object
      properties: *id1627
      additionalProperties: false
      description: |-
        Adds an existing document as reference to the specified folder.
    addRecentWorkspaceRequest:
      required:
      - id
      - activity
      type: object
      properties: *id1628
      additionalProperties: false
    availableServers:
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
      additionalProperties: true
    categoryOperations:
      required:
      - add_categories
      - add_shortcuts
      - change_name
      - modify
      - remove
      - remove_categories
      - remove_shortcuts
      - set_default_security
      - set_security
      - update_content_shortcut
      type: object
      properties:
        add_categories:
          type: boolean
          description: |
            Indicates the user can create a new category.<br><br>
            If `true`, the user can create a new category.<br>
            If `false`, the user cannot create a new category.<br><br>
            If omitted, the value is `false`.
        add_shortcuts:
          type: boolean
          description: |
            Indicates the user can create shortcuts.<br><br>
            If `true`, the user can create shortcuts.<br>
            If `false`, the user cannot create shortcuts.<br><br>
            If omitted, the value is `false`.
        change_name:
          type: boolean
          description: |
            Indicates the user can change the name of a category.<br><br>
            If `true`, the user can change the name of a category.<br>
            If `false`, the user cannot change the name of a category.<br><br>
            If omitted, the value is `false`.
        modify:
          type: boolean
          description: |
            Indicates the user can modify the content of a category.<br><br>
            If `true`, the user can modify the content of a category.<br>
            If `false`, the user cannot modify the content of a category.<br><br>
            If omitted, the value is `false`.
        remove:
          type: boolean
          description: |
            Indicates the user can remove content from a category.<br><br>
            If `true`, the user can remove content from a category.<br>
            If `false`, the user cannot remove content from a category.<br><br>
            If omitted, the value is `false`.
        move:
          type: boolean
          description: |
            Indicates the user can move a category.<br><br>
            If `true`, the user can move a category.<br>
            If `false`, the user cannot move a category.<br><br>
            If omitted, the value is `false`.
        remove_categories:
          type: boolean
          description: |
            Indicates the user can delete an existing category.<br><br>
            If `true`, the user can delete an existing category.<br>
            If `false`, the user cannot delete an existing category.<br><br>
            If omitted, the value is `false`.
        remove_shortcuts:
          type: boolean
          description: |
            Indicates the user can remove shortcuts to other objects from a category.<br><br>
            If `true`, the user can remove shortcuts to other objects from a category.<br>
            If `false`, the user cannot remove shortcuts to other objects from a category.<br><br>
            If omitted, the value is `false`.
        set_default_security:
          type: boolean
          description: |
            Indicates the user can set the default security on a category.<br><br>
            If `true`, the user can set the default security on a category.<br>
            If `false`, the user cannot set the default security on a category.<br><br>
            If omitted, the value is `false`.
        set_security:
          type: boolean
          description: |
            Indicates the user can set the security on a category.<br><br>
            If `true`, the user can set the security on a category.<br>
            If `false`, the user cannot set the security on a category.<br><br>
            If omitted, the value is `false`.
        update_content_shortcut:
          type: boolean
          description: |
            Indicates the user can update the target of the shortcut.<br><br>
            If `true`, the user can update the target of the shortcut.<br>
            If `false`, the user cannot update the target of the shortcut.<br><br>
            If omitted, the value is `false`.
        default_security_values:
          type: array
          items:
            enum: ["private", "view", "public", "inherit"]
            type: string
          description: |
            Indicates the default security setting.<br>

            |Value|Description|
            |:---|:---|
            |inherit|The container or item inherits security settings from its parent container.|
            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
      additionalProperties: true
    categoryOperationsResponse:
      required:
      - data
      type: object
      properties: *id382
      additionalProperties: false
    clientAppExtensionClientAppIdPutRequestProfile:
      required:
      - profile
      type: object
      properties:
        profile:
          type: object
          properties:
            default_security:
              enum: ["private", "public", "inherit", "view"]
              type: string
            group_trustees:
              type: array
              items:
                type: string
            status:
              enum: [all, blocked, disabled, enabled]
              type: string
            user_trustees:
              type: array
              items:
                type: string
          additionalProperties: false
      additionalProperties: false
    clientAppExtensionProfile:
      type: object
      properties:
        add_on_id:
          type: string
        author:
          type: string
          description: |-
            ID of the user who created the document.
        author_description:
          type: string
        client_app_id:
          type: string
        create_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
        default_security:
          type: string
        description:
          type: string
        docTrustees:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  Unique ID of a user or group.
              name:
                type: string
                description: |-
                  Name of a user or group.
              access:
                type: integer
                description: |-
                  Access permission set on the workspace by the owner or a user with full access to the workspace.
              access_level:
                enum: ["no_access", "read", "read_write", "full_access", "change_security",
                  "unknown"]
                type: string
                description: |2
                   the access permissions to a document or container that is set by the owner or a user with full access.

                  The following are the possible values:

                  |Term|Value|Description|
                  |:---|:---|:---|
                  |no_access|0|The user has no permissions to access the container or document.|
                  |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                  |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                  |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                  |change_security|4|Reserved for system use. Do not use.|
                  |unknown|4|This is an error if received.|
              type:
                enum: ["user", "group"]
                type: string
                description: |
                  Type of the user.<br>

                  The following are the types:<br>
                  * **user**: An account, or the collection of settings, for an individual person or service defining access or limitations to the system.
                  * **group**: An account, or the collection of settings, for multiple individual persons or services that all share the same access or limitations to the system.
              sid:
                type: string
                description: |-
                  Security identifier to identify a user or a group.
              has_restricted_member:
                type: boolean
                description: |
                  Indicates the workspace has users or groups with restricted access.<br><br>
                  If `true`, the workspace has users or groups with restricted access.<br>
                  If `false`, the workspace does not have users or groups with restricted access.
            additionalProperties: false
        doc_name:
          type: string
        download_url:
          type: string
        last_file_updated_date:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
        name:
          type: string
        organization:
          type: string
        publisher:
          type: string
        redirect_url:
          type: string
        scope:
          enum: [full_access, read_only, write]
          type: string
        secret:
          type: string
        status:
          enum: [all, blocked, disabled, enabled]
          type: string
        type:
          enum: [desktop, web]
          type: string
        website:
          type: string
      additionalProperties: false
    clientAppExtensionProfileData:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties:
            add_on_id:
              type: string
            author:
              type: string
              description: |-
                ID of the user who created the document.
            author_description:
              type: string
            client_app_id:
              type: string
            create_date:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
            default_security:
              type: string
            description:
              type: string
            docTrustees:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: |-
                      Unique ID of a user or group.
                  name:
                    type: string
                    description: |-
                      Name of a user or group.
                  access:
                    type: integer
                    description: |-
                      Access permission set on the workspace by the owner or a user with full access to the workspace.
                  access_level:
                    enum: ["no_access", "read", "read_write", "full_access", "change_security",
                      "unknown"]
                    type: string
                    description: |2
                       the access permissions to a document or container that is set by the owner or a user with full access.

                      The following are the possible values:

                      |Term|Value|Description|
                      |:---|:---|:---|
                      |no_access|0|The user has no permissions to access the container or document.|
                      |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                      |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                      |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                      |change_security|4|Reserved for system use. Do not use.|
                      |unknown|4|This is an error if received.|
                  type:
                    enum: ["user", "group"]
                    type: string
                    description: |
                      Type of the user.<br>

                      The following are the types:<br>
                      * **user**: An account, or the collection of settings, for an individual person or service defining access or limitations to the system.
                      * **group**: An account, or the collection of settings, for multiple individual persons or services that all share the same access or limitations to the system.
                  sid:
                    type: string
                    description: |-
                      Security identifier to identify a user or a group.
                  has_restricted_member:
                    type: boolean
                    description: |
                      Indicates the workspace has users or groups with restricted access.<br><br>
                      If `true`, the workspace has users or groups with restricted access.<br>
                      If `false`, the workspace does not have users or groups with restricted access.
                additionalProperties: false
            doc_name:
              type: string
            download_url:
              type: string
            last_file_updated_date:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
            name:
              type: string
            organization:
              type: string
            publisher:
              type: string
            redirect_url:
              type: string
            scope:
              enum: [full_access, read_only, write]
              type: string
            secret:
              type: string
            status:
              enum: [all, blocked, disabled, enabled]
              type: string
            type:
              enum: [desktop, web]
              type: string
            website:
              type: string
          additionalProperties: false
      additionalProperties: false
    clientAppExtensionProfileDataList:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              add_on_id:
                type: string
              author:
                type: string
                description: |-
                  ID of the user who created the document.
              author_description:
                type: string
              client_app_id:
                type: string
              create_date:
                pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                type: string
              default_security:
                type: string
              description:
                type: string
              docTrustees:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: |-
                        Unique ID of a user or group.
                    name:
                      type: string
                      description: |-
                        Name of a user or group.
                    access:
                      type: integer
                      description: |-
                        Access permission set on the workspace by the owner or a user with full access to the workspace.
                    access_level:
                      enum: ["no_access", "read", "read_write", "full_access", "change_security",
                        "unknown"]
                      type: string
                      description: |2
                         the access permissions to a document or container that is set by the owner or a user with full access.

                        The following are the possible values:

                        |Term|Value|Description|
                        |:---|:---|:---|
                        |no_access|0|The user has no permissions to access the container or document.|
                        |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                        |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                        |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                        |change_security|4|Reserved for system use. Do not use.|
                        |unknown|4|This is an error if received.|
                    type:
                      enum: ["user", "group"]
                      type: string
                      description: |
                        Type of the user.<br>

                        The following are the types:<br>
                        * **user**: An account, or the collection of settings, for an individual person or service defining access or limitations to the system.
                        * **group**: An account, or the collection of settings, for multiple individual persons or services that all share the same access or limitations to the system.
                    sid:
                      type: string
                      description: |-
                        Security identifier to identify a user or a group.
                    has_restricted_member:
                      type: boolean
                      description: |
                        Indicates the workspace has users or groups with restricted access.<br><br>
                        If `true`, the workspace has users or groups with restricted access.<br>
                        If `false`, the workspace does not have users or groups with restricted access.
                  additionalProperties: false
              doc_name:
                type: string
              download_url:
                type: string
              last_file_updated_date:
                pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
                type: string
              name:
                type: string
              organization:
                type: string
              publisher:
                type: string
              redirect_url:
                type: string
              scope:
                enum: [full_access, read_only, write]
                type: string
              secret:
                type: string
              status:
                enum: [all, blocked, disabled, enabled]
                type: string
              type:
                enum: [desktop, web]
                type: string
              website:
                type: string
            additionalProperties: false
      additionalProperties: false
    clientAppExtensionProfileProfile:
      required:
      - profile
      type: object
      properties:
        profile:
          type: object
          properties:
            add_on_id:
              type: string
            author:
              type: string
              description: |-
                ID of the user who created the document.
            author_description:
              type: string
            client_app_id:
              type: string
            create_date:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
            default_security:
              type: string
            description:
              type: string
            docTrustees:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: |-
                      Unique ID of a user or group.
                  name:
                    type: string
                    description: |-
                      Name of a user or group.
                  access:
                    type: integer
                    description: |-
                      Access permission set on the workspace by the owner or a user with full access to the workspace.
                  access_level:
                    enum: ["no_access", "read", "read_write", "full_access", "change_security",
                      "unknown"]
                    type: string
                    description: |2
                       the access permissions to a document or container that is set by the owner or a user with full access.

                      The following are the possible values:

                      |Term|Value|Description|
                      |:---|:---|:---|
                      |no_access|0|The user has no permissions to access the container or document.|
                      |read|1|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
                      |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
                      |full_access|3|The user has complete access to the container or document, and can read, edit, or delete the item. The user can also grant permissions to other users and groups, and can edit the item's default security levels.|
                      |change_security|4|Reserved for system use. Do not use.|
                      |unknown|4|This is an error if received.|
                  type:
                    enum: ["user", "group"]
                    type: string
                    description: |
                      Type of the user.<br>

                      The following are the types:<br>
                      * **user**: An account, or the collection of settings, for an individual person or service defining access or limitations to the system.
                      * **group**: An account, or the collection of settings, for multiple individual persons or services that all share the same access or limitations to the system.
                  sid:
                    type: string
                    description: |-
                      Security identifier to identify a user or a group.
                  has_restricted_member:
                    type: boolean
                    description: |
                      Indicates the workspace has users or groups with restricted access.<br><br>
                      If `true`, the workspace has users or groups with restricted access.<br>
                      If `false`, the workspace does not have users or groups with restricted access.
                additionalProperties: false
            doc_name:
              type: string
            download_url:
              type: string
            last_file_updated_date:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
            name:
              type: string
            organization:
              type: string
            publisher:
              type: string
            redirect_url:
              type: string
            scope:
              enum: [full_access, read_only, write]
              type: string
            secret:
              type: string
            status:
              enum: [all, blocked, disabled, enabled]
              type: string
            type:
              enum: [desktop, web]
              type: string
            website:
              type: string
          additionalProperties: false
      additionalProperties: false
    containerShortcutOperations:
      required:
      - change_name
      - remove
      - move
      type: object
      properties:
        change_name:
          type: boolean
          description: |-
            Indicates that the user can change the name of a shortcut.
        remove:
          type: boolean
          description: |-
            Indicates that the user can remove a shortcut.
        move:
          type: boolean
          description: |-
            Indicates that the user can move a shortcut from its current parent.
      additionalProperties: true
    containerShortcutOperationsResponse:
      required:
      - data
      type: object
      properties: *id378
      additionalProperties: false
    containerShortcutMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1629
      additionalProperties: false
    customSearchResponse:
      required:
      - data
      type: object
      properties: *id1630
      additionalProperties: false
    customSearchResponseMultiRecent:
      required:
      - data
      type: object
      properties: *id1631
      additionalProperties: false
    customItem:
      required:
      - database
      - id
      - wstype
      type: object
      properties:
        database:
          type: string
        description:
          maxLength: 254
          type: string
        enabled:
          type: boolean
        hipaa:
          type: boolean
        id:
          maxLength: 32
          type: string
        wstype:
          type: string
      additionalProperties: false
    databaseReserveResponseData:
      required:
      - data
      type: object
      properties: *id1632
      additionalProperties: false
    databasesGetResponseData:
      required:
      - data
      type: object
      properties: *id1633
      additionalProperties: false
    docHistoryGetActivitiesResponseData:
      required:
      - data
      type: object
      properties: *id1634
      additionalProperties: false
    docHistoryGetMultipleResponse:
      required:
      - data
      type: object
      properties: *id1635
      additionalProperties: false
    adminDocHistoryGetMultipleResponse:
      required:
      - data
      type: object
      properties: *id1636
      additionalProperties: false
    docHistoryGetPlotPointsResponseData:
      required:
      - data
      type: object
      properties: *id1637
      additionalProperties: false
    documentCheckoutInfoData:
      required:
      - data
      type: object
      properties: *id1638
      additionalProperties: false
    documentCopyRequest:
      required:
      - folder_id
      type: object
      properties: *id1639
      additionalProperties: false
    documentDocIdCheckoutPostRequest:
      required:
      - appname
      type: object
      properties: *id1640
      additionalProperties: false
    documentDocIdCheckoutPatchRequest:
      type: object
      properties: *id1641
      additionalProperties: false
    documentDocIdOperationsGetResponseData:
      required:
      - data
      type: object
      properties: *id1642
      additionalProperties: false
    documentDocIdRenditionResponse:
      required:
      - estimatedPages
      - identifier
      - readyPages
      - status
      - totalPages
      type: object
      properties:
        estimatedPages:
          type: integer
        identifier:
          type: string
        readyPages:
          type: array
          items:
            type: integer
        status:
          enum: [queued, ready]
          type: string
        totalPages:
          type: integer
      additionalProperties: false
    documentRenditionOutputFormat:
      enum: [html, image, json]
      type: string
      description: |-
        Format of the document.
    documentLockRequest:
      type: object
      properties: *id1643
      additionalProperties: false
    documentMoveRequest:
      type: object
      properties: *id1644
      additionalProperties: false
    documentHistoryPostResponse:
      required:
      - auditId
      type: object
      properties: *id1645
      additionalProperties: false
    documentShortcutPostRequest:
      required:
      - name
      - target
      type: object
      properties: *id1646
      additionalProperties: true
    documentShortcutOperations:
      required:
      - update
      - remove
      - move
      type: object
      properties:
        update:
          type: boolean
          description: |-
            Indicates that the user can update the shortcut.
        remove:
          type: boolean
          description: |-
            Indicates that the user can remove a shortcut.
        move:
          type: boolean
          description: |-
            Indicates that the user can move a shortcut from its current parent.
      additionalProperties: true
    documentShortcutOperationsResponse:
      required:
      - data
      type: object
      properties: *id535
      additionalProperties: false
    documentShortcutMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1647
      additionalProperties: false
    effectiveSecurity:
      enum: ["no_access", "read", "read_write", "full_access"]
      type: string
      description: |
        Indicates the effective security access level available to the user.

        Effective security is the access level that is the net result of a combination of the following:
        * an objects's default security
        * a user's access permission for that object
        * possible conflicts among groups to which the user belongs to
        * the security model being used.

        The available access levels are:

        |Access level|Description|
        |:---|:---|
        |no_access|The user has no access, or any permissions to the container or document.|
        |read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
    emptyJsonResponse:
      type: object
      additionalProperties: false
      description: |-
        A JSON body without any properties.
    error:
      required:
      - code
      - code_message
      type: object
      properties:
        code:
          type: string
          description: |-
            Indicates an error code specific to iManage Work.
        code_message:
          type: string
          description: |-
            Indicates the description of the error.
        messages:
          type: array
          items:
            required:
            - code
            type: object
            properties:
              code:
                type: string
                description: |-
                  Indicates the error code.
              code_message:
                type: string
                description: |-
                  Indicates a description of the error.
              field:
                type: string
                description: |-
                  Indicates the field that contains the error associated with document profiles.
              data:
                anyOf:
                - type: object
                - type: array
                  items: {}
                - type: string
                - type: integer
                description: |-
                  Indicates detailed JSON structure related to the failed data.
            additionalProperties: false
          description: |-
            Indicates additional details about the error.
      description: |-
        Error details
    folderCopyDocumentPostResponseWithData:
      required:
      - data
      type: object
      properties: *id1648
      additionalProperties: true
    folderMoveRequest:
      type: object
      properties: *id1649
      additionalProperties: false
    folderOperations:
      required:
      - add_content
      - remove_content
      - add_folders
      - remove_folders
      - change_name
      - modify
      - remove
      - set_default_security
      - set_security
      - update_content_shortcut
      type: object
      description: |
        Folder operations
      properties:
        add_content:
          type: boolean
          description: |
            Indicates that documents can be added to the folder.<br><br>
            If `true`, documents can be added to the folder.<br>
            If `false`, documents cannot be added to the folder.
        add_custom_folders:
          type: boolean
          description: |
            Indicates a user can create a custom folder.<br><br>
            Custom folders are those that are not defined by a workspace template, or not enforced by flexible folders.
            This parameter applies only to a folder that has been created from a workspace template and the flexible folders option is currently enabled.
            For more information on workspace template, see the <a href="#tag--Workspace-Templates">Workspace Templates</a> collection.<br><br>
            If `true`, users can create custom folders.<br>
            If `false`, users cannot create custom folders.<br><br>
            If the folder was not created from a workspace template, users can create standard folders according their access permission.
        add_folders:
          type: boolean
          description: |
            Indicates subfolders can be added to the folder.<br><br>
            If `true`, subfolders can be added to the folder.<br>
            If `false`, subfolders cannot be added to the folder.
        change_name:
          type: boolean
          description: |
            Indicates the folder can be renamed.<br><br>
            If `true`, the folder can be renamed.<br>
            If `false`, the folder cannot be renamed.
        default_security_values:
          type: array
          items:
            enum: ["private", "view", "public", "inherit"]
            type: string
          description: |
            Indicates the default security setting.<br>

            |Value|Description|
            |:---|:---|
            |inherit|The container or item inherits security settings from its parent container.|
            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
        modify:
          type: boolean
          description: |
            Indicates the folder profile can be modified.<br><br>
            If `true`, the folder profile can be modified.<br>
            If `false`, the folder profile cannot be modified.
        move:
          type: boolean
          description: |
            Indicates the folder can be moved.<br><br>
            If `true`, the folder can be moved.<br>
            If `false`, the folder cannot be moved.
        remove_content:
          type: boolean
          description: |
            Indicates documents in the folder can be deleted.<br><br>
            If `true`, documents in the folder can be deleted.<br>
            If `false`, documents in the folder cannot be deleted.
        remove_folders:
          type: boolean
          description: |
            Indicates subfolders can be deleted.<br><br>
            If `true`, subfolders can be deleted.<br>
            If `false`, subfolders cannot be deleted.<br>
            A subfolder can be deleted only if it is empty.
        remove:
          type: boolean
          description: |
            Indicates the folder can be deleted.<br><br>
            If `true`, the folder can be deleted.<br>
            If `false`, the folder cannot be deleted.<br>
            A folder can be deleted only if it is empty.
        set_default_security:
          type: boolean
          description: |
            Indicates the default security of the folder can be updated.<br><br>
            If `true`, the default security of the folder can be updated.<br>
            If `false`, the default security of the folder cannot be updated.
        set_security:
          type: boolean
          description: |
            Indicates the security of the folder can be updated.<br><br>
            If `true`, the security of the folder can be updated.<br>
            If `false`, the security of the folder cannot be updated.
        update_content_shortcut:
          type: boolean
          description: |
            Indicates if the user can update the `name` property of document shortcuts in this folder.<br><br>
            If `true`, the user can update the `name` property of document shortcuts in this folder.<br>
            If `false`, the user cannot update the `name` property of document shortcuts in this folder.
      additionalProperties: true
    folderOperationsResponse:
      required:
      - data
      type: object
      properties: *id1650
      additionalProperties: false
    groupCreateResponse:
      required:
      - group_number
      type: object
      properties: *id1651
      additionalProperties: false
    groupPostMemberRequest:
      required:
      - data_type
      - data
      type: object
      properties: *id1652
      additionalProperties: false
    groupPutMemberRequest:
      required:
      - action
      - data_type
      - data
      type: object
      properties: *id555
      additionalProperties: false
    groupMembersCustomerAndLibraryResponse:
      required:
      - data
      type: object
      properties: *id1653
      additionalProperties: false
    idData:
      required:
      - data
      type: object
      properties: *id512
      additionalProperties: false
    KMTags.CreateRequest:
      required:
      - type
      - tag_value
      type: object
      properties: *id537
      additionalProperties: false
    KMTags.CreateResponse:
      required:
      - data
      type: object
      properties: *id538
      additionalProperties: false
    KMTags.GetSingleResponse:
      required:
      - data
      type: object
      properties: *id1654
      additionalProperties: false


    KMTags.PatchSingleRequest:
      type: object
      minProperties: 1
      properties: *id1655
      additionalProperties: false

    KMTags.PatchSingleResponse:
      required:
      - data
      type: object
      properties: *id1656
      additionalProperties: false
    KMTags.SearchRequest:
      required:
      - filters
      type: object
      properties: *id1657
      additionalProperties: false
    KMTags.SearchResponse:
      required:
      - data
      type: object
      properties: *id1658
      additionalProperties: false

    libraryEncryptionKeysCreateRequest:
      required:
      - master_key_id
      type: object
      properties: *id1659
      additionalProperties: false
    libraryEncryptionKeysResponseData:
      required:
      - data
      type: object
      properties: *id1660
      additionalProperties: false
    libraryEncryptionKeysPostResponseData:
      required:
      - data
      type: object
      properties: *id1661
      additionalProperties: false
    masterEncryptionKeysCreateRequest:
      required:
      - name
      - key_type
      type: object
      properties: *id1662
      additionalProperties: false
    masterEncryptionKeysResponseData:
      required:
      - data
      type: object
      properties: *id1663
      additionalProperties: false
    masterEncryptionKeyHealthResponseData:
      required:
      - data
      type: object
      properties: *id568
      additionalProperties: false
    masterEncryptionKeysEditRequest:
      type: object
      properties: *id1664
      additionalProperties: false
    masterEncryptionKeyResponse:
      required:
      - name
      - key_type
      - created_time
      - status
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the master key ID.
        name:
          type: string
          description: |
            Indicates the name of the master key.<br><br>
            This is a descriptive name.
        key_type:
          enum: [azure_dual_keys]
          type: string
          description: |
            Indicates the type of the master key.

            |Value|Description|
            |:---|:---|
            |azure_dual_keys|The key is stored in a dual-party configuration in two separate key stores. The key stores are managed by users outside of the iManage Work system.|
        created_time:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the creation date (in ISO 8601 format) of the master key.<br><br>
            This is the date when the master key was entered in the iManage Work system.
        status:
          enum: [available_for_library_activation, unavailable_for_library_activation,
            ready_to_archive, archived]
          type: string
          description: |
            Indicates the status of the master key within iManage Work.<br>

            |Value|Description|
            |:---|:---|
            |available_for_library_activation|Ready for new activation in libraries.|
            |unavailable_for_library_activation|Not available for new activation in libraries.|
            |ready_to_archive|No longer active in the library but could still be active in other libraries.|
            |archived|No longer in use anywhere within iManage Work.|
        key_store_params:
          description: |
            Indicates connection parameters used to identify the master key and to authenticate the key stores in a dual-party configuration.<br><br>
            This is used only if the type is `azure_dual_keys`.
          type: array
          items:
            required:
            - client_id
            - key_id
            type: object
            properties:
              client_id:
                type: string
                description: |-
                  Indicates the application (client) ID of the Azure application used to access the Azure key vault.
              key_id:
                type: string
                description: |
                  Indicates the Web address of the master key contained in the Azure key vault.<br><br>
                  The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
            additionalProperties: false
      additionalProperties: false
    masterEncryptionKeyHealthResponse:
      required:
      - name
      - key_type
      - created_time
      - healthy
      - status
      type: object
      properties:
        id:
          type: string
          description: Indicates the master key ID.
        name:
          maxLength: 254
          type: string
          description: |
            Indicates the name of the master key.<br><br>
            This is a descriptive name.
        key_type:
          enum: [azure_dual_keys]
          type: string
          description: |
            Indicates the type of the master key.<br>

            |Value|Description|
            |:---|:---|
            |azure_dual_keys|The key is stored in a dual-party configuration in two separate Azure Key Vaults and are managed by users outside of the iManage Work system.|
        created_time:
          pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
          type: string
          description: |
            Indicates the creation date (in ISO 8601 format) of the master key reference.<br><br>
            This is the date when the master key reference was entered in the iManage Work system.
        healthy:
          type: boolean
          description: |
            Indicates the master key is accessible (healthy).<br><br>
            If `true`, the master key is accessible (healthy).<br>
            If `false`, the master key is not accessible (unhealthy).<br><br>
            A master key may not be accessible for a number of reasons such as faulty network access, or that the key is corrupted.
            For detailed information, see the `error` field of the response body.
        status:
          enum: [available_for_library_activation, unavailable_for_library_activation,
            ready_to_archive, archived]
          type: string
          description: |
            Indicates the status of the master key within iManage Work.<br>

            |Value|Description|
            |:---|:---|
            |available_for_library_activation|Ready for new activation in libraries.|
            |unavailable_for_library_activation|Not available for new activation in libraries.|
            |ready_to_archive|No longer active in the library but could still be active in other libraries.|
            |archived|No longer in use anywhere within iManage Work.|
        key_store_params:
          description: |
            Indicates connection parameters used to identify the master key and to authenticate the Azure key vault in a dual-party configuration.<br><br>
            This is used only if the type is `azure_dual_keys`.
          type: array
          items:
            required:
            - client_id
            - key_id
            - health
            type: object
            properties:
              client_id:
                type: string
                description: Indicates the application (client) ID of the Azure application
                  used to access the Azure key vault.
              key_id:
                type: string
                description: |
                  Indicates the Web address of the master key contained in the Azure key vault.<br><br>
                  The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
              health:
                enum: [available, unavailable, revoked, mismatch]
                type: string
                description: |
                  Indicates the health of an Azure key vault in the dual-party configuration.

                  |Value|Description|
                  |:---|:---|
                  |available|The Azure key vault is accessible.|
                  |unavailable|The Azure key vault is inaccessible.|
                  |revoked|The Azure key vault has been revoked. If this is not intended, iManage recommends evaluating the cause of the revocation.|
                  |mismatch|The key referenced in the Azure key vault does not match the other key in the dual-party configuration. iManage recommends evaluating the cause of the mismatch.|
            additionalProperties: false
      additionalProperties: false
    customerlibraryEncryptionKeysResponseData:
      required:
      - data
      type: object
      properties: *id1665
      additionalProperties: false
    masterEncryptionKeyResponseData:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - name
          - key_type
          - created_time
          - status
          type: object
          properties:
            id:
              type: string
              description: |-
                Indicates the master key ID.
            name:
              type: string
              description: |
                Indicates the name of the master key.<br><br>
                This is a descriptive name.
            key_type:
              enum: [azure_dual_keys]
              type: string
              description: |
                Indicates the type of the master key.

                |Value|Description|
                |:---|:---|
                |azure_dual_keys|The key is stored in a dual-party configuration in two separate key stores. The key stores are managed by users outside of the iManage Work system.|
            created_time:
              pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})(:)(\d{2})(:)(\d{2})(\.\d+)?(Z|([+-])(\d{2})(:)?(\d{2}))$
              type: string
              description: |
                Indicates the creation date (in ISO 8601 format) of the master key.<br><br>
                This is the date when the master key was entered in the iManage Work system.
            status:
              enum: [available_for_library_activation, unavailable_for_library_activation,
                ready_to_archive, archived]
              type: string
              description: |
                Indicates the status of the master key within iManage Work.<br>

                |Value|Description|
                |:---|:---|
                |available_for_library_activation|Ready for new activation in libraries.|
                |unavailable_for_library_activation|Not available for new activation in libraries.|
                |ready_to_archive|No longer active in the library but could still be active in other libraries.|
                |archived|No longer in use anywhere within iManage Work.|
            key_store_params:
              description: |
                Indicates connection parameters used to identify the master key and to authenticate the key stores in a dual-party configuration.<br><br>
                This is used only if the type is `azure_dual_keys`.
              type: array
              items:
                required:
                - client_id
                - key_id
                type: object
                properties:
                  client_id:
                    type: string
                    description: |-
                      Indicates the application (client) ID of the Azure application used to access the Azure key vault.
                  key_id:
                    type: string
                    description: |
                      Indicates the Web address of the master key contained in the Azure key vault.<br><br>
                      The Web address format is: `https://{key-vault-dns-name}/keys/{key-name}/{key-version}`
                    example: https://myVault.vault.azure.net/keys/Twin-Key/5464bf0a443a4f71a521c925b8e3bc07
                additionalProperties: false
          additionalProperties: false
      additionalProperties: false
    nameValuePair:
      type: object
      additionalProperties: true
      description: |-
        Additional properties of an iManage Work object that are used to extend the base set of object properties.
    nameValuePairResponse:
      type: object
      properties: *id391
      additionalProperties: true
    patchAsyncTaskRequest:
      required:
      - status
      type: object
      properties: *id1666
      additionalProperties: false
    roleRequest:
      required:
      - id
      - m1
      - m2
      - m3
      - profiles
      type: object
      properties: *id259
      additionalProperties: false
    securityRequest:
      type: object
      properties: *id100
      additionalProperties: true
    securityTemplate:
      required:
      - id
      - name
      - description
      type: object
      properties:
        id:
          type: string
          description: |-
            Indicates the security template ID.
        name:
          type: string
          description: |-
            Indicates the security template name.
        description:
          type: string
          description: |-
            Indicates additional information about the security template.
        default_security:
          enum: ["inherit", "public", "view", "private"]
          type: string
          description: |
            Indicates the default security setting of the template.

            |Value|Description|
            |:---|:---|
            |inherit|The container or item inherits security settings from its parent container.|
            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
          default: "public"
        database:
          type: string
          description: |-
            Indicates the library that the security template applies to.
      description: |-
        Security template contains a list of predefined security settings that can be assigned to a particular user.
    securityTemplateDataList:
      required:
      - data
      type: object
      properties: *id1667
    shortcutPostRequest:
      required:
      - id
      - name
      type: object
      properties: *id122
      additionalProperties: true
    shortcutPatchRequest:
      required:
      - name
      - wstype
      type: object
      properties: *id376
      additionalProperties: false
    stringDataList:
      required:
      - data
      type: object
      properties: *id540
    sysConfigValues:
      type: object
      properties:
        databases:
          type: array
          items:
            type: object
            additionalProperties: true
      additionalProperties: true
    tabOperations:
      required:
      - add_folders
      - change_name
      - modify
      - remove
      - remove_folders
      - set_default_security
      - set_security
      type: object
      properties:
        add_custom_folders:
          type: boolean
          description: |
            Indicates a user can upload a custom folder.<br><br>
            If `true`, a user can upload a custom folder. This means that the tab was created from a template and flexible folders were enabled.<br>
            If `false`, a user cannot upload a custom folder. This means that the folder not configured by a template.
        add_folders:
          type: boolean
          description: |-
            Indicates that folders can be added to the tab.
        change_name:
          type: boolean
          description: |-
            Indicates that the tab can be renamed.
        modify:
          type: boolean
          description: |-
            Indicates if any of the parameters of a tab can be modified.
        remove:
          type: boolean
          description: |-
            Indicates that the tab can be deleted.
        remove_folders:
          type: boolean
          description: |-
            Indicates that the folders under it can be deleted.
        set_default_security:
          type: boolean
          description: |-
            Indicates that the default security can be set on the tab. The valid values are inherit, public, view, and private.
        set_security:
          type: boolean
          description: |-
            Indicates if the security of a tab can be updated.
        default_security_values:
          type: array
          items:
            type: string
          description: |
            Indicates the default security setting.<br>

            |Value|Description|
            |:---|:---|
            |inherit|The container or item inherits security settings from its parent container.|
            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
      additionalProperties: false
    tabOperationsResponse:
      required:
      - data
      type: object
      properties: *id1668
      additionalProperties: false
    trashBinDocumentsRestorePostRequest:
      required:
      - for_user
      type: object
      properties: *id1669
    userAccessibleLibraries:
      title: Accessible Libraries
      required:
      - data
      type: object
      properties: *id1670
      additionalProperties: false
    userCreateResponse:
      required:
      - user_num
      type: object
      properties: *id1671
      additionalProperties: false
    userMyMattersSubscriptionsPostRequest:
      required:
      - userid
      type: object
      properties: *id1672
      additionalProperties: false
    userMyMattersSubscriptionsPostResponse:
      required:
      - data
      type: object
      properties: *id1673
      additionalProperties: false
    userMyMattersSubscriptionsGetResponse:
      required:
      - data
      type: object
      properties: *id1674
      additionalProperties: false
    userMyMattersAvailableSubscriptionsGetResponse:
      required:
      - data
      type: object
      properties: *id1675
      additionalProperties: false
    userMyMattersOperationsResponse:
      required:
      - data
      type: object
      properties: *id1676
      additionalProperties: false
    searchWorkspaceShortcutsResponse:
      required:
      - data
      type: object
      properties: *id1677
      additionalProperties: false
    warningMessage:
      required:
      - field
      - error
      type: object
      properties:
        field:
          type: string
          description: |-
            Field with a validation warning.
        error:
          type: string
          description: |-
            Type of the error associated with the field.
      additionalProperties: false
    workspaceContactsResponse:
      required:
      - data
      type: object
      properties: *id1678
      additionalProperties: false
    workspaceOperations:
      required:
      - add_folders
      - change_name
      - modify
      - remove
      - remove_folders
      - set_default_security
      - set_security
      - update_content_shortcut
      - add_content
      type: object
      properties:
        add_content:
          type: boolean
          description: |
            Indicates that documents can be added to the workspace.<br><br>
            If `true`, documents can be added to the workspace.<br>
            If `false`, documents cannot be added to the workspace.
        add_custom_folders:
          type: boolean
          description: |
            Indicates a user can upload a folder directly in a container.<br><br>
            Custom folders are those created other than using the template.
            This parameter applies only to a workspace that had been created from a template and that the flexible folders option is currently enabled.<br><br>
            If `true`, users can upload a folder directly in a container.<br>
            If `false`, users cannot upload a folder directly in a container.<br><br>
            If the folder was not created from a workspace template, users can create standard folders according their access permission.
        add_folders:
          type: boolean
          description: |
            Indicates the user can add folders to a workspace.<br><br>
            If `true`, the user can add folders to a workspace.<br>
            If `false`, the user cannot add folders to a workspace.<br><br>
            To see if the user can remove folders, see the parameter `remove_folders`.
        change_name:
          type: boolean
          description: |
            Indicates the user can change the name of a workspace.<br><br>
            If `true`, the user can change the name of a workspace.<br>
            If `false`, the user cannot change the name of a workspace.
        modify:
          type: boolean
          description: |
            Indicates the user can modify properties of a workspace.<br><br>
            If `true`, the user can modify properties of a workspace.<br>
            If `false`, the user cannot modify properties of a workspace.
        remove:
          type: boolean
          description: |
            Indicates the user can delete a workspace.<br><br>
            If `true`, the user can delete a workspace.<br>
            If `false`, the user cannot delete a workspace.
        remove_folders:
          type: boolean
          description: |
            Indicates the user can remove folders from a workspace.<br><br>
            If `true`, the user can remove folders from a workspace.<br>
            If `false`, the user cannot remove folders from a workspace.<br><br>
            To see if the user can add folders, see the parameter `add_folders`.
        set_default_security:
          type: boolean
          description: |
            Indicates the user can change the default security for a workspace.<br><br>
            If `true`, the user can change the default security for a workspace.<br>
            If `false`, the user cannot change the default security for a workspace.
        set_security:
          type: boolean
          description: |
            Indicates the user can change the security for a workspace.<br><br>
            If `true`, the user can change the security for a workspace.<br>
            If `false`, the user cannot change the security for a workspace.
        update_content_shortcut:
          type: boolean
          description: |
            Indicates the user can update the target of the shortcut.<br><br>
            If `true`, the user can update the target of the shortcut.<br>
            If `false`, the user can update the target of the shortcut.
        default_security_values:
          type: array
          items:
            enum: ["private", "view", "public"]
            type: string
          description: |
            Indicates the default security setting.<br>

            |Value|Description|
            |:---|:---|
            |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
            |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
      additionalProperties: false
    workspaceOperationsResponse:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - add_folders
          - change_name
          - modify
          - remove
          - remove_folders
          - set_default_security
          - set_security
          - update_content_shortcut
          - add_content
          type: object
          properties:
            add_content:
              type: boolean
              description: |
                Indicates that documents can be added to the workspace.<br><br>
                If `true`, documents can be added to the workspace.<br>
                If `false`, documents cannot be added to the workspace.
            add_custom_folders:
              type: boolean
              description: |
                Indicates a user can upload a folder directly in a container.<br><br>
                Custom folders are those created other than using the template.
                This parameter applies only to a workspace that had been created from a template and that the flexible folders option is currently enabled.<br><br>
                If `true`, users can upload a folder directly in a container.<br>
                If `false`, users cannot upload a folder directly in a container.<br><br>
                If the folder was not created from a workspace template, users can create standard folders according their access permission.
            add_folders:
              type: boolean
              description: |
                Indicates the user can add folders to a workspace.<br><br>
                If `true`, the user can add folders to a workspace.<br>
                If `false`, the user cannot add folders to a workspace.<br><br>
                To see if the user can remove folders, see the parameter `remove_folders`.
            change_name:
              type: boolean
              description: |
                Indicates the user can change the name of a workspace.<br><br>
                If `true`, the user can change the name of a workspace.<br>
                If `false`, the user cannot change the name of a workspace.
            modify:
              type: boolean
              description: |
                Indicates the user can modify properties of a workspace.<br><br>
                If `true`, the user can modify properties of a workspace.<br>
                If `false`, the user cannot modify properties of a workspace.
            remove:
              type: boolean
              description: |
                Indicates the user can delete a workspace.<br><br>
                If `true`, the user can delete a workspace.<br>
                If `false`, the user cannot delete a workspace.
            remove_folders:
              type: boolean
              description: |
                Indicates the user can remove folders from a workspace.<br><br>
                If `true`, the user can remove folders from a workspace.<br>
                If `false`, the user cannot remove folders from a workspace.<br><br>
                To see if the user can add folders, see the parameter `add_folders`.
            set_default_security:
              type: boolean
              description: |
                Indicates the user can change the default security for a workspace.<br><br>
                If `true`, the user can change the default security for a workspace.<br>
                If `false`, the user cannot change the default security for a workspace.
            set_security:
              type: boolean
              description: |
                Indicates the user can change the security for a workspace.<br><br>
                If `true`, the user can change the security for a workspace.<br>
                If `false`, the user cannot change the security for a workspace.
            update_content_shortcut:
              type: boolean
              description: |
                Indicates the user can update the target of the shortcut.<br><br>
                If `true`, the user can update the target of the shortcut.<br>
                If `false`, the user can update the target of the shortcut.
            default_security_values:
              type: array
              items:
                enum: ["private", "view", "public"]
                type: string
              description: |
                Indicates the default security setting.<br>

                |Value|Description|
                |:---|:---|
                |private|Only the user who created the container or item, and users and groups who were explicitly granted access permission, can access the container or item.|
                |view|All users can access the container or document but cannot add or remove items from the container unless explicitly assigned access permission.|
                |public|All users can access the container or document unless explicitly excluded. Users need to have the proper access permission and role ability to create a public folder, or to change the security level to public.|
          additionalProperties: false
      additionalProperties: false
    groupSecurityItem:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: |
            Group ID
          example: ADMIN
        access_level:
          example: read
          enum: ["no_access", "read", "read_write", "full_access", "change_security"]
          type: string
          description: |
            Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Access Level|Numeric Value|Description|
            |:---|:---|:---|
            |no_access|0|The user has no access, or any permissions to the container or document.|
            |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
            |change_security|4|Reserved for system use. Do not use.|
      additionalProperties: true
    userSecurityItem:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: |
            User ID
          example: ACASE
        access_level:
          example: read
          enum: ["no_access", "read", "read_write", "full_access", "change_security"]
          type: string
          description: |
            Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Access Level|Numeric Value|Description|
            |:---|:---|:---|
            |no_access|0|The user has no access, or any permissions to the container or document.|
            |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
            |change_security|4|Reserved for system use. Do not use.|
      additionalProperties: true
    userSecurityResponseItem:
      properties:
        is_external:
          type: boolean
          description: |
            Indicates that  the user is an external user.

            If `true`, the user is an external user.<br>
            If `false`, the user is not an external user, also called a regular user.

            For more information, see <a href="#overview--external-users"> External users</a>.


            This is used for temporary team members, consultants, or those external to the organization.
            External users have limited access. They must be explicitly granted access to each container or document, including those marked as Public or View.
            They do not have default access to any container or document.
        allow_logon:
          type: boolean
          description: |
            Indicates if the user is allowed to sign in.

            If `true`, the user is allowed to sign in.<br>
            If `false`, the user is not allowed to sign in.
        type:
          enum: ["user"]
          type: string
          description: |-
            Type of the trustee.
        id:
          type: string
          description: |-
            The ID of the user or group.
        access:
          type: integer
          description: |
            Numeric value for access permission levels set on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Value|Access|Description|
            |:---|:---|:---|
            |0|no_access|The user has no access, or any permissions to the container or document.|
            |1|read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |2|read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |3|full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
            |4|change_security|Reserved for system use. Do not use.|
            |4|unknown|This is an error if received.|
        access_level:
          enum: ["no_access", "read", "read_write", "full_access", "change_security"]
          type: string
          description: |
            Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Access Level|Numeric Value|Description|
            |:---|:---|:---|
            |no_access|0|The user has no access, or any permissions to the container or document.|
            |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
            |change_security|4|Reserved for system use. Do not use.|
        name:
          type: string
          description: |-
            Name of a user or group.
        sid:
          type: string
          description: |-
            Security identifier of a user or group.
      title: User Access Details
      required:
      - id
      type: object
      additionalProperties: true
    groupSecurityResponseItem:
      properties:
        is_external:
          type: boolean
          description: |
            Indicates that only external users can be assigned to the group.

            If `true`, only external users can be assigned to the group.<br>
            If `false`, only regular users (non-external users) can be assigned to the group.
        enabled:
          type: boolean
          description: |-
            Indicates the group is enabled, and it is added to the Access Control Lists on documents or containers.
        has_restricted_member:
          type: boolean
          description: |
            Indicates the workspace has users or groups with restricted access.<br><br>
            If `true`, the workspace has users or groups with restricted access.<br>
            If `false`, the workspace does not have users or groups with restricted access.
        type:
          enum: ["group"]
          type: string
          description: |-
            Type of the trustee.
        id:
          type: string
          description: |-
            The ID of the user or group.
        access:
          type: integer
          description: |
            Numeric value for access permission levels set on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Value|Access|Description|
            |:---|:---|:---|
            |0|no_access|The user has no access, or any permissions to the container or document.|
            |1|read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
            |2|read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
            |3|full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
            |4|change_security|Reserved for system use. Do not use.|
            |4|unknown|This is an error if received.|
        access_level:
          enum: ["no_access", "read", "read_write", "full_access", "change_security"]
          type: string
          description: |
            Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
            See the <a href="#overview--privileges">Privileges</a> section of the overview.

            The following are the possible values:

            |Access Level|Numeric Value|Description|
            |:---|:---|:---|
            |no_access|0|The user has no access, or any permissions to the container or document.|
            |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
            |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
            |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
            |change_security|4|Reserved for system use. Do not use.|
        name:
          type: string
          description: |-
            Name of a user or group.
        sid:
          type: string
          description: |-
            Security identifier of a user or group.
      title: Group Access Details
      required:
      - id
      type: object
      additionalProperties: true
    access:
      type: integer
      description: |
        Numeric value for access permission levels set on the object.<br><br>
        See the <a href="#overview--privileges">Privileges</a> section of the overview.

        The following are the possible values:

        |Value|Access|Description|
        |:---|:---|:---|
        |0|no_access|The user has no access, or any permissions to the container or document.|
        |1|read|The user can access the container, or read the document but cannot add or remove items from the container unless explicitly assigned access permission.|
        |2|read_write|The user can access the container, or read and edit a document unless explicitly excluded.|
        |3|full_access|The user has complete access to the container or document, and may read, edit, or delete the item. The user may grant permissions to other users and groups, and can edit the item's default security levels.|
        |4|change_security|Reserved for system use. Do not use.|
        |4|unknown|This is an error if received.|
    accessType:
      enum: ["user", "group"]
      type: string
      description: |-
        Specifies the type of trustee.
    accessLevel:
      enum: ["no_access", "read", "read_write", "full_access", "change_security"]
      type: string
      description: |
        Level of access permission assigned to users and groups to perform various actions on the object.<br><br>
        See the <a href="#overview--privileges">Privileges</a> section of the overview.

        The following are the possible values:

        |Access Level|Numeric Value|Description|
        |:---|:---|:---|
        |no_access|0|The user has no access, or any permissions to the container or document.|
        |read|1|The user can access the container, or read the document but cannot add or remove content from the container unless explicitly assigned access permission.|
        |read_write|2|The user can access the container, or read and edit a document unless explicitly excluded.|
        |full_access|3|The user has complete access to the container or document, and can read, edit, or delete it. The user can grant permissions to other users and groups, and edit the it's default security levels.|
        |change_security|4|Reserved for system use. Do not use.|
    name:
      type: string
      description: |-
        Name of a user or group.
    hasRestrictedMember:
      type: boolean
      description: |
        Indicates the workspace has users or groups with restricted access.<br><br>
        If `true`, the workspace has users or groups with restricted access.<br>
        If `false`, the workspace does not have users or groups with restricted access.
    sid:
      type: string
      description: |-
        Security identifier of a user or group.
    userTrustees:
      type: array
      items:
        $ref: '#/components/schemas/userSecurityItem'
      description: |-
        List of users and their access permissions.
    groupTrustees:
      type: array
      items:
        $ref: '#/components/schemas/groupSecurityItem'
      description: |-
        List of groups and their access permissions.
    adminImportResponseData:
      required:
      - data
      type: object
      properties: *id375
      additionalProperties: false
    adminImportResponse:
      required:
      - status
      type: object
      properties:
        import_id:
          type: string
          description: |-
            Reserved for future use.
        task_id:
          type: string
          description: |-
            Reserved for future use.
        status:
          enum: [queued, completed, failed]
          type: string
          description: |-
            Indicates the status of import task.

            |Status|Description|
            |:---|:---|
            | queued   | The import is in progress and in the queue.|
            | completed| The import has completed.|
            | failed   | The import has failed and needs investigation.|
      additionalProperties: true
    myMattersWorkspaceShortcutMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1679
      additionalProperties: false
    myMattersCategoryMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1680
      additionalProperties: false
    myFavoriteCategoryMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1681
      additionalProperties: false
    myFavoriteDocumentShortcutMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1682
      additionalProperties: false
    myFavoriteContainerShortcutMoveRequest:
      required:
      - destination_id
      type: object
      properties: *id1683
      additionalProperties: false
    checkedOutDocsAdminImportRequest:
      required:
      - documents
      type: object
      properties: *id1684
      additionalProperties: false
    checkedOutDocsAdminImportResponseData:
      required:
      - data
      type: object
      properties: *id1685
      additionalProperties: false
    checkedOutDocsAdminImportResponse:
      type: object
      properties:
        import_id:
          type: string
          description: |-
            Reserved. Do not use.
        task_id:
          type: string
          description: |-
            Reserved. Do not use.
        status:
          enum: [queued, completed, failed]
          type: string
      additionalProperties: false
    BackgroundTask:
      required:
      - data
      type: object
      description: Task details
      properties: *id601
      additionalProperties: false
    BackgroundTask.status:
      type: string
      enum: ["queued", "success", "failed", "cancelled", "aborted"]
      description: |+
        Indicates the current status of the task.

        The following are available task statuses:

        | Value     | Description                                       |
        |-----------|---------------------------------------------------|
        | queued    | Task is submitted and is in queue for processing. |
        | success   | Task completed successfully.                      |
        | failed    | Task has failed.                                  |
        | cancelled | Task has been cancelled by a user.                |
        | aborted   | Task was aborted by the system.                   |




    BackgroundTask.type:
      type: string
      enum: ["bulk_update_container_security", "bulk_update_document_security", "shred_document"]
      description: |+
        Indicates the type of the task.

        The following are available task types:

        | Value                             | Description                                   |
        |-----------------------------------|-----------------------------------------------|
        | bulk_update_container_security    | Update the security of containers in bulk.    |
        | bulk_update_document_security     | Update the security of documents in bulk.     |
        | shred_document                    | Shred documents in bulk.                      |




    BackgroundTaskResultsResponse:
      required:
      - data
      type: object
      properties: *id1686
      additionalProperties: false
    BackgroundTaskUserTasksResponse:
      required:
      - data
      type: object
      properties: *id1687
      additionalProperties: false


    Documents.shredAsyncRequest:
      required:
      - document_ids
      type: object
      properties: *id1688
      additionalProperties: false
    Documents.shredAsyncResponse:
      required:
      - data
      type: object
      properties: *id1689
  parameters:
    appId:
      name: appId
      in: path
      description: |
        The application ID.<br><br>
        This must be either the app ID (also called a client ID), or the literal `global`.

        <font style="color:black;size:5">App ID</font><br>
        It manages the settings associated with an application.
        Specify the app ID for the endpoint parameter {appId}.
        An app ID is the unique ID for an application that has been registered by an iManage Work system administrator, or directly through iManage Control Center.
        Applications are not required to have settings. In those cases, a successful request returns an empty data set.

        <font style="color:black;size:5">Global</font><br>
        It manages global settings.
        Specify the literal `global` for the endpoint parameter {appId}.
        Global settings indicate behaviors that affects all applications, and are not specific to individual applications.
        For more information, see <a href="#overview--global-settings">Global Settings</a>.

      required: true
      schema:
        type: string
    customerId:
      name: customerId
      in: path
      description: |
        Specifies the customer ID assigned to the customer.<br><br>
        The customer ID can be found using the discovery request <a href="#get-/api"> GET https://{hostname}/api</a>.
        The returned JSON field **data > user > customer_id** contains the customer ID.
        This value is permanently and uniquely assigned to the iManage Work system, and needs to be checked only once when the application first runs each time.
      required: true
      schema:
        type: integer
        example: "100"
    libraryId:
      name: libraryId
      in: path
      description: |-
        Specifies the ID of the target library (formerly called a database).
      required: true
      schema:
        type: string
        example: ACTIVE_US
    userId:
      name: userId
      in: path
      description: |
        The user ID.
      required: true
      schema:
        example: ACASE
        type: string
    settingId:
      name: settingId
      in: path
      description: |
        The name of the setting key.<br><br>
        This is the `id` field returned from GET `/customers/{customerId}/apps`.
      required: true
      schema:
        type: string
        example: im.email.filingFolder.defaultName
    subscriptionId:
      name: subscriptionId
      in: path
      description: |
        The subscription ID.<br><br>
        Each subscription from a user to another users's My Matter is linked with a subscription ID.
        To retrieve subscription IDs, see GET `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`<br>
        For example: 98499875691325339
      required: true
      schema:
        description: needs defining
    featureName:
      name: featureName
      in: path
      description: |
        The name of the feature.<br><br>
        This is the `name` field returned from GET `/customers/{customerId}/feature-overrides`.
      required: true
      schema:
        type: string
        example: export_to_csv
    containerId:
      name: containerId
      in: path
      description: |
        Specifies the ID of the target container.
      required: true
      schema:
        type: string
        example: active_us!123
    authorizationId:
      name: authorizationId
      in: path
      description: |
        Specifies the ID of the target IP authorization.
      required: true
      schema:
        type: string
        example: z9vATSLj9KaAWk1N
    domainId:
      name: domainId
      in: path
      description: |
        Specifies the ID of the target domain.
      required: true
      schema:
        type: string
        example: z9vATSLj9KaAWk1N
    groupId:
      name: groupId
      in: path
      description: |-
        Specifies the ID of the target group.
      required: true
      schema:
        type: string
        example: EXTERNAL_GROUP
    docId:
      name: docId
      in: path
      description: |-
        Specifies the unique identifier of the document.
      required: true
      schema:
        example: ACTIVE_US!19453.1
        type: string
x-tagGroups:

- name: Preliminary requests
  tags:
  - Authentication

- name: Customer Level Requests
  tags:
  - Apps
  - Dialog Tokens
  - Directory Sync Groups and Users
  - Encryption
  - Features
  - Global Roles
  - Global Groups
  - Libraries
  - Ping
  - Settings
  - Users

- name: Multi-library Requests
  tags:
  - Multi-library Documents
  - Multi-library Folders
  - Multi-library Workspaces
  - Recent Containers and Documents
  - Recent Custom Properties

- name: Library Requests
  tags:
  - Asynchronous Task Framework
  - Captions
  - Change Events
  - Classes
  - Containers
  - Container Artifacts
  - Container Shortcuts
  - Custom Properties
  - Documents
  - Document Artifacts
  - Document Shortcuts
  - Emails
  - File Handlers
  - File Types
  - File Streams
  - Filing Folders
  - Folders
  - Forms
  - KM Tags
  - Library Directory Sync Groups and Users
  - Library Groups
  - Library Roles
  - Library Users
  - My Favorites
  - My Matters
  - Recent Items
  - Search Folders
  - Security Policy
  - Supervised Import
  - Tabs
  - Trash Bin
  - Workspace Templates
  - Workspaces
  - Work Sync

- name: Platform API Requests
  tags:
  - Custom Domains
  - IP Address Authorizations
  - External Authentication Settings
  - Platform Sync

- name: Authentication API Requests
  tags:
  - External Authentication Types
  - SAML Service Provider Endpoints

- name: Miscellaneous Requests
  tags:
  - Trustees
  - IDP Settings

tags:
  #############################
- name: Discover iManage platform
  description: |
    Requests under this collection are used for retrieving general and customer-specific information for working with an iManage platform.
  x-tag-expanded: false
  #################################
- name: --Authentication Requests--
  x-tag-expanded: false

- name: Access Tokens
  description: |
    An application or a user receives an access token after successfully authenticating to the iManage platform.<br>
    This access token `X-Auth-Token` is then passed in most of the subsequent requests to validate the application or the user for successful execution.
  x-tag-expanded: false

- name: External Authentication Settings
  description: |+
    The External Authentication Settings API provides the ability to:
     * read or set the active external authentication type.
     * read or update the settings for an external authentication type (for example, SAML).

  x-tag-expanded: false

- name: External Authentication Types
  description: |+
    An external authentication type is a **claims-based** authentication type (for example, SAML).
    Claims-based authentication validates the identity of the user against the desired identity provider. 
    This allows administrators to provide identification using multiple options, including Multi-Factor Authentication (MFA). 
    One of the biggest benefits of using claims-based authentication is that iManage Work clients and Work Server do not have to be on the same domain. 
    The External Authentication API provides the ability to configure the routing of user authentication to external identity providers.

  x-tag-expanded: false

- name: SAML Service Provider Endpoints
  description: |+
    A collection of SAML service provider (SP) endpoints.

  x-tag-expanded: false

#############################

- name: --Customer Level Requests--
  description: Customer requests
  x-tag-expanded: false

- name: Apps
  description: |-
    Applications (also called apps) are software packages that either integrate with iManage Work to access data from it, or extend the functionality of iManage Work client applications.
    For example, a firm may use an application for document comparison.
    The application can extend iManage Work functionality by adding a context menu to documents for document comparison.
    Each app is identified by the client ID associated with it.

    These applications are either developed by iManage, third-party vendors, or a company's internal development staff.

    Types of apps:
      * iManage apps - These applications are available for iManage Work client applications.
        For example, iManage Work Desktop for Windows, iManage Work Email Management for Gmail, iManage Work Desktop for Mac, and Mobility for iOS.

      * Third-party apps:
        * Standalone applications that interact with iManage Work through APIs only to access information and do not modify the iManage Work user interface.
          For example, an application that tracks and analyzes audit records of documents in iManage Work to understand user behavior.
        * Applications that extend iManage features and modify the user interface by providing context menus or new panels in the following applications:
          * iManage Work
          * iManage Work Desktop for Windows
          * iManage Control Center

    Not all apps are available to all users. The users are assigned to apps by the iManage system administrator.
  x-tag-expanded: false

- name: Dialog Tokens
  description: |-
    A dialog token is a temporary access token used by the partner application to communicate with iManage Work dialogs within iframes.

    An iManage Work system requires each API request to be authenticated. In an iManage desktop or web client, this is handled by retaining
    the access token (X-Auth-Token), and passing it with each call. The server validates the token and accepts or rejects it appropriately.

    However, in an independent partner web application, passing the access token is not as convenient and presents a security issue.
    In the partner web application, iManage dialogs are launched within an iframe. Once the partner application completes the OAuth2
    process and retrieves a valid X-Auth-Token, it needs to communicate this token to the dialog embedded within the iframe.
    This is challenging as it presents a security issue. To solve this issue, the workflow requires the partner application to retrieve
    a one-time dialog token using the retrieved X-Auth-Token and communicating this dialog token over to the dialog iframe.
    This dialog token is a temporary access token. It is created by iManage Work and is associated with the application when it is needed,
    and has a short lifespan of few seconds. The server then validates the dialog token with the x-auth-token,
    and accepts or rejects it appropriately.
  x-tag-expanded: false

- name: Directory Sync Groups and Users
  description: |-
    The directory sync APIs support bulk import of users and groups for the customers into iManage Work system.
    The directory sync runs regularly per the configured sync-schedule for the customer's directory-sync client application.
    During each such sync, only the affected records are added, updated, or disabled.

    The directory sync client application first fetches hashes for all the AD users, groups, and group memberships from iManage.
    The hashes are encrypted values for the original user and group profile data. Then it calculates hashes for users, groups,
    and group memberships based on the current information in the customer’s identity provider (IDP) and the client application’s configuration.
    The directory sync client then compares the calculated hashes to the ones it retrieved from iManage in order to determine which users,
    groups, and group memberships need to be added, updated, or disabled. After determining the changes, it sends updates only for
    the affected users, groups, and group memberships to iManage Work.
  x-tag-expanded: false

- name: Encryption
  description: |
    ### Introduction
    Data encryption is a security measure that prevents visibility of documents in the case of unauthorized access or theft.<br>

    It is also called data at rest encryption, as the data files are encrypted when they are not being used.
    In the event they are compromised, either by theft or unauthorized access (including internal unauthorized access), the files will be encrypted, and therefore unreadable.
    When an authorized user accesses documents (such as through being checked out or viewing within the client application), the documents are decrypted and will be able to be read or edited normally.
    When the user is done with them, such as being checked back in, they are encrypted again.

    The enforcement of encryption varies by iManage Work environment.
    For some environments, encryption is automatic and cannot be turned off.
    For other environments, encryption is optional, and not enabled by default.
    In that case, each library must be explicitly enabled for encryption.
    For details, contact your iManage Work system administrator.

    Encryption uses an electronic cipher, called an encryption key.
    Keys are implemented in one of two ways: customer-managed encryption key (CMEK), or a system-managed encryption key.

    ### Customer-managed encryption key
    A customer-managed encryption key allows customers to manage their own encryption keys.
    Customers control their entire process, from generating the customer-supplied encryption key (the source key), to loading the keys into iManage Work, deciding when to use each key, and when to revoke or to replace keys.

    #### Preparation
    Customers must prepare their key for use within iManage Work by performing the following steps:
    1. **Create the source encryption key**<br>
    The customer creates their encryption key.
    This is called the *customer-supplied encryption key* and is the source encryption cipher for rest of the process.
    It is normally an RSA-2048 bit public/private key generated by the tool and security protocols preferred by the customer.

    1. **Create the key stores**<br>
    A key store is a third-party application that securely stores information.
    A common example is Microsoft Azure.
    In a dual-party CMEK system, two separate key stores are required.
    Two customer team members, known as key holders, independently store a copy of the same customer-supplied encryption key in a key store, such as through Microsoft Azure.
    The security advantage is if the two key stores do not contain identical versions of the customer-supplied encryption key, a warning is generated, and these two key stores cannot be used to generate a master key.

    1. **Register the key stores with iManage**<br>
    Each key holder must contact their designated iManage customer service manager (CSM) or their implementation partner, and provide the key store information.
    This allows the customer to pre-authorize the key stores that are permitted for use.
    The security advantage is if the address of a key store being accessed is not the same address that was registered, a warning is generated that a security breach may have been attempted.

    Customers can add new key stores, rename existing keys, or activate their keys without iManage involvement.
    The iManage Work system does not access or modify the key stores for any reason other than to read them.

    #### Creating a master key
    A master key is an encryption key that can be activated on libraries.
    See **Master keys** section for more information.
    After preparing the customer-managed encryption key, a master key can now be created.
    To create the master key, use POST `/customers/{customerId}/encryption/master-keys`<br>
    The requester must have the global Key Management privilege.
    The master key is now registered with iManage and is available to be activated on libraries.

    ### System-managed encryption key
    A system-managed encryption key is a built-in master key provided by the iManage Work system.
    This is the default master key and no steps are needed to create it.
    It is a master key that is registered and available to be activated on libraries.

    ### Master keys
    A master key is an encryption key that can be activated on libraries.
    Each library requires a master key to be activated on it for encryption and decryption.
    The following requests are available to manage master keys:
    * To see a list of available master keys, those currently being used and those available to be used, use GET `/customers/{customerId}/encryption/master-keys`
    * To see details about a specific master key, such as its create date, health, and its current availability, use GET `/customers/{customerId}/encryption/master-keys/{keyId}`
    * To rename a master key, use PATCH `/customers/{customerId}/encryption/master-keys/{keyId}`
    * To see a list of of libraries that a specific master key is assigned to, use GET `/customers/{customerId}/encryption/library-keys`

    An available master key can be activated for libraries.
    The following conditions apply:
    * Only one master key can be active for each library.
    * More than one library can use the same master key.
    * More than one master key can be enabled in the system at the same time.
    That means, each library can use a different master key.

    To activate a master key for a library, use POST `/customers/{customerId}/libraries/{libraryId}/encryption/keys`<br>
    After a master key is activated for a library, the following occurs:
    * The new master key is immediately activated.
    Encryption with the new master key is immediate.
    * The replaced master key is immediately made inactive.
    The replaced key can be deleted, or archived (it could be reactivated and used again).
    However, iManage recommends as a best practice not to reuse master keys except for the system-managed encryption key.

    ### Library keys
    A library key is a master key that is active on a library.
    Once a library is encrypted, it must always be encrypted.
    A library key can be replaced by activating another master key on it.
    However, a library key cannot simply be deleted.

    To see a list of master keys ever applied for a library, see GET `/customers/{customerId}/libraries/{libraryId}/encryption/keys`

    ### More Information
    For more information on implementing iManage Control Center procedures, see <a href="https://docs.imanage.com/cc-help/10.3.1/en/Encryption_Keys.html" target="_blank">Encryption Keys</a>.
  x-tag-expanded: false

- name: Features
  description: |-
    Lists features supported by the iManage Work system.

    Features are behaviors that can only be known after a user signs in.
    Capabilities are behaviors that can be known before or after a user signs in.

    Features and capabilities are behaviors or special abilities that may only be available for some platforms.
    Some requests may be documented as having a dependence on a specific feature and capability.
    In those cases, check the status of feature and capability before making the request.

    To see a list of supported capabilities, use GET `{hostname}/api`<br>
    For example: `https://www.ajubalaw.com/api`<br>
    The returned JSON field **data > capabilities** contains the capabilities list.
  x-tag-expanded: false

- name: Global Groups
  description: |+
    A group defines a set of users. Global groups are intended for managing access to applications.
    A global group can be added to an application's access control list.
    This provides access to the application to all the members of the group
    For information on applications, see <a href="#tag--Apps">Apps</a>.

    Global groups are created and managed independently of any iManage Work library. These groups are independent of the library level groups.
    Unlike library-level groups, global groups cannot be used for managing container or document security.
    For information on library-level groups, see <a href="#tag--Library-Groups">Library Groups</a>.

    **Important information about global groups:**
    * Groups can be maintained by adding or removing users.
    * A user can be a member of multiple global groups.
    * A user can be added to any global group, regardless of the libraries they have been assigned to.
    * Once a group is created, it cannot be deleted. However, it can be disabled if required.


  x-tag-expanded: false

- name: Global Roles
  description: |
    iManage Work uses role-based access to achieve fine levels of granularity controlling features for users.
    Each user's ability to perform actions in iManage Work is based on their collection of allowed and denied abilities.
    This is accomplished through two mechanisms: Privileges and roles.

    <font style="color:black;font-size: 17px;font-weight: bold;">Privileges</font><br>
    A privilege is a permission to perform a set of tasks.
    * The iManage Work system defines several privileges. The privileges are defined by the system and cannot be created or deleted.
      They can be only granted or denied.
      For example, privileges may or may not be available for individual users the ability to manage users and groups, or to change system settings.
    * A privilege cannot be directly assigned to a user.
      A role must be created with the set of privileges and then the role can be assigned to a user.
    * Privileges apply to both iManage Work system administrators and other users.
      For example, a system administrator may be denied the privilege of making encryption changes, while a regular user could have that privilege.

    For more information, see <a href="#overview--privileges"> Privileges</a>.

    <font style="color:black;font-size: 17px;font-weight: bold;">Roles</font><br>
    A role is a named set of privileges. Roles may be created or deleted as required.<br>

    <font style="color:black;font-size: 15px;font-weight: bold;">Use of roles</font><br>
    The privileges available to a user are defined by their job in the company.
    For example, developers will need a different combination of privileges than an accountant, or a marketing team member.
    This allows the fine granularity of responsibilities, and can distribute access selectively across an organization.

    <font style="color:black;font-size: 15px;font-weight: bold;">Scope of roles</font><br>
    Roles are defined at two levels: **Global** and **Library**.

    * **Global roles**<br>
    Global roles affect iManage Work at a global level, or independently of any libraries.
    There is no default global role and it is not mandatory to assign a global role to a user.
    However, a user can have none, one, or more global roles.
    If there is a privilege conflict by a user having two or more global roles, the most permissive privilege takes precedence.
    For example, if a user is assigned to a global role that provides access to Settings Management privilege, and another global
    role that denies Settings Management, the net effect is that the user gets Settings Management privilege. <br><br>
    Each role contains all the privileges and each individual privilege can be marked as the following:

        | Access Levels | Description                                            |
        |---------------|--------------------------------------------------------|
        | admin         | Provides administrative level access to the privilege. |
        | no_access     | Provides no access to the privilege.                   |

      * **Global role privileges**<br>
        For global roles, the following is the set of privileges currently available in iManage system:
          * **App Management**: Specifies a user's ability to manage applications. For example, they can add internal or external applications.
          * **Group Management**: Specifies a user's ability to manage global groups. For example, they can create global groups, rename groups, and add users to groups.
          * **Feature Management**: Specifies a user's ability to manage upcoming features. This privilege allows users to enable and disable new upcoming features, before they become permanent in the system.
          * **Key Management**: Specifies a user's ability to manage encryption keys. This allows users to manage encryption keys, such as registering a new key, or activating a key on a library.
          * **Role Management**: Specifies a user's ability to  manage global roles. For example, they can create global roles, delete roles, and edit roles.
          * **Settings Management**: Specifies a user's ability to manage iManage Work global settings. For example, they can manage iManage Work global settings, and settings for iOS, iManage Work Desktop for Windows, and iManage Work classic clients.
          * **User Management**: Specifies a user's ability to manage global settings of users. For example, they can create virtual users, edit user profile and security, reset password, and enable or disable sign-in.

      * **Role Management privilege**<br>
        A user with Role Management privilege can create new roles, edit roles, change the role of other users, and delete roles.
        To administer global roles of other users, a user must be assigned to a role that has the Role Management privilege.
        Therefore, the Role Management privilege must be assigned to users diligently.

    * **Library roles**<br>
    Library roles are the users' role within an individual iManage Work library.
    They can provide iManage Work object level privileges such a being able to create new documents, edit documents, create public folders, and so on.<br>
    For more information, see the <a href="#tag--Library-Roles">Library Roles</a> collection.
  x-tag-expanded: false

- name: Global Security Templates
  description: |-
    A security template contains a list of predefined security settings that can be assigned to a particular user.
  x-tag-expanded: false

- name: IDP Settings
  description: |-
    The Identity Provider (IDP) settings control the behavior of iManage system with regards to the IDP of a customer.<br>
    For example, the seamless_idp_enabled setting controls whether the system will attempt to demonstrate a quasi-intelligent behavior and try to redirect the user automatically to the correct login page.
  x-tag-expanded: false

- name: Libraries
  description: |-
    The iManage Work libraries store all the documents under various containers.
    The content is organized so that it can be easily accessed, managed and updated.
    Each iManage Work instance can have multiple libraries depending upon the organizational needs.
  x-tag-expanded: false

- name: Ping
  description: Ping the server to test the connectivity.
  x-tag-expanded: false

- name: Settings
  description: |-
    Setting value is a key-value pair associated to an application or global setting.<br><br>
    For example, if settingId is `im.email.filingFolder.defaultName`, the setting value can be `"value": "Email"`.
    These values are stored in one of two ways: Settings collection (specified by its type being `value`), or as a file (specified by its type being `file`).
  x-tag-expanded: false

- name: Users
  description: |2-
      A user is the basic entity that utilizes iManage Work applications. <br>
      A user can be an individual person that accesses iManage Work applications or a service account that performs automated tasks.
      Users can be created manually in iManage Work or imported from a directory service such as Microsoft Windows’ active domain.<br>
      The iManage Work system administrator assigns roles to these users, adds users to groups, and optionally applies access rights to individual users when their default access rights need to be modified.

      Users in iManage Work can be categorized in two ways based on how they are managed and created.

      Based on how the users are managed in iManage Work:
      * **Global users** - Global users are created and managed independent of any iManage Work library. The changes to a user's profile or settings are updated at a global level.
      For example, disabling user's login or changing the preferred library.
      * **Library users** - Each iManage library has its own list of subscribed users. A user must be subscribed to each library individually by an iManage Work system administrator to provide access to a library.
      A user can be subscribed only to certain libraries and prevented from accessing content of other libraries.

      Based on how the users are created in iManage Work:
      * **Virtual users** - The users are created and managed in iManage Work. The virtual users are authenticated against passwords stored in iManage Work. They are not part of the organization's directory service.
        These are typically external users who are not part of the organization and are included for a specific purpose and for a defined period of time. For example, auditors, interns, and contractors.
        This user is created at the global level, and must be manually assigned to a library. A virtual user can be converted to an enterprise user by changing their user type (`nos`) value from 2 to 6.
      * **Enterprise users** - The users that are added to iManage Work from the organization's directory service. The enterprise users are authenticated against the IDP configured
        by an organization. Virtual users can be synced with the organization's directory service and converted to enterprise users by changing their user type (`nos`) value from 6 to 2.
  x-tag-expanded: false

#############################
- name: --Multi-library Requests--
  description: Multi-library Requests
  x-tag-expanded: false

- name: Multi-library Documents
  description: |
    Documents are the files used to record the internal and client information of an organization.
    These documents are stored on various libraries.<br>
    The requests in this collection are used to search for documents across multiple libraries.
  x-tag-expanded: false

- name: Multi-library Folders
  description: The requests in this collection are used to search for folders across
    multiple libraries.
  x-tag-expanded: false

- name: Multi-library Workspaces
  description: The requests in this collection are used to search for workspaces across
    multiple libraries.
  x-tag-expanded: false

- name: Recent Containers and Documents
  description: The documents, emails, folders, and workspaces that had any recent
    activity.
  x-tag-expanded: false

- name: Recent Custom Properties
  description: The custom property aliases that had any recent activity.
  x-tag-expanded: false

#################################
- name: --Library Requests--
  description: Library Requests
  x-tag-expanded: false

- name: Asynchronous Task Framework
  description: |+
    The Asynchronous Task Framework is designed to perform the asynchronous tasks that require an extended period of time to complete and can run in as a background process.
    This framework can be used by iManage applications to support updates on large data sets without blocking users. It also provides options to monitor
    the tasks to iManage system administrators.

    This framework is designed for tasks that:
    * are asynchronous.
    * perform bulk operations.
    * take longer time to complete.
    * are not transactional.

    A few examples of asynchronous tasks are:
    * Copying of files from one location to another.
    * Bulk security update of documents and containers.
    * Deleting documents and all data related to them.

  x-tag-expanded: false

- name: Captions
  description: |-
    A caption is a customized label.

    iManage Work provides more than a hundred labels to assist with localizing the environment and for cataloging documents.
    The system provides all label sets in seven languages.
    Only one set is used, specified by the preferred language.
    Each label can be renamed to allow it be customization for the organization.
    A caption is the customized label.

    Some labels are descriptive and are not often changed by the organization, such as Name, Author, or EditDate.
    Other labels are meant to be customized.
    Notably, these are the labels for the custom1 through custom30 fields.
    These labels form the basis of cataloging and identifying containers and documents.
    For example, custom1 is often captioned as Client, and custom2 as Matter.
    Each organization can use captions appropriate to their needs.

    Regardless of the actual captions, some labels and captions are used throughout some applications, notably for convenience.
    For REST APIs, request parameters will always use `custom1`, for example, regardless what it has been captioned to.
    On the other hand, the client has a container named My Matters, referring to custom2 items, even if custom2 captioned as *Project*.

    **Captions and aliases**<br>
    Captions and aliases are closely related, and the differences are often confusing.

    Captions:<br>
    A caption is an identifier of a property.<br>
    * An *id* is the default name of the property.
    For example, *custom1* and *author* are ids.
    The id cannot be changed,
    * A *label* is a name assigned to caption id.
    For example, the id *custom1* can be captioned to the label *Client*.
    That means, a *caption* is the `label`.
    Labels can be customized for the organizations requirements.

    Aliases:<br>
    * An *alias* is an individual entry in a custom field.
    Each custom property custom1 through custom30 is a category that contain lists of items.
    Each individual item is an alias.
    For example, an organization may intend that the custom field *Client* contains a list of their clients, perhaps Microsoft, Enron, and Peter's Bread Company.
    That means Client has three aliases.

    However, to refer to custom properties in a consistent way, the id is used even if it has a caption.
    For example, a client application, its documentation, or help may always refer *custom1* although it might be captioned as *Client*.
    Even among different organizations using different captions, custom1 will always refers to the same property.
  x-tag-expanded: false

- name: Change Events
  description: |-
    The details about various actions performed on iManage Work objects by the users are tracked as change events.<br>
    When a user performs an activity such as uploading a document, updating a document, creating a workspace, creating a folder,
    and so on, they are recorded as change events. You can use the requests in this collection to get a change event list and
    process them to perform further actions per organization's requirements.
    To track the processed records, a queue is created and updated with the ID of the last event processed in the list of change events.
  x-tag-expanded: false

- name: Classes
  description: |-
    Document classes are custom-defined categories for identifying and differentiating the documents in an organization.
    Classes can be categorized by genre, department, region, and so on. <br>
    A document class determines: <br>
      * Document’s default security status.
      * Whether a copy of the document can be echoed to a user’s local hard drive.
      * The custom fields of profile information that are required for the document (also called as required fields).
      * The number of days before a document should be marked for archiving.
  x-tag-expanded: false

- name: Containers
  description: |
    Requests to get the container profile and Update the security of multiple containers (objects such as folders,
    categories, workspaces, etc) within the specified library.
  x-tag-expanded: false

- name: Container Artifacts
  description: |-
    Container artifacts provide a method of locating archived folders or workspaces in their new location. <br>
    When a container (folder or workspace) is archived, that is, moved to an archive library, the existing links, such as folder shortcuts are broken,
    as the shortcuts still point to the old location of the containers. These shortcuts can be resolved using container artifacts.
    The iManage Work Server keeps a reference to the new location of all the containers whenever they are moved.
    The iManage Work application is provided with the new artifacts of the container to locate the archived content.
  x-tag-expanded: false

- name: Container Shortcuts
  description: |-
    Shortcuts are hyperlinks that point to objects in the iManage Work library. <br>
    When you click the hyperlink, you are directed to the target object to which the shortcut points to. <br>
    The container shortcuts can link to containers in any iManage Work library.
  x-tag-expanded: false

- name: Custom Properties
  description: |-
    Custom tables are used to store the customized properties for the content in an organization.<br> <br>
    These properties define the custom categories for identifying and differentiating the documents in a library.
    The properties can be classified and stored in 14 tables as custom1, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, custom10, custom11, custom12, custom29, and custom30.
    The custom1/custom2 and custom29/custom30 have parent-child relationships.<br>
    The captions for the custom properties can be changed.
    For example, custom1 and custom2 can be captioned as Client and Matter, respectively.
  x-tag-expanded: false

- name: Documents
  description: |-
    Documents are files used to record the internal and client information of an organization.

    In iManage Work, documents are configurable items and can be of various file types such as emails, text, graphics, video,
    or a proprietary format such as Microsoft Word (.doc, and .docx)
    and Adobe PDF. Documents have properties associated with them, and the set of its properties is referred to as the document profile.

    The most common actions that can be performed on iManage Work documents are as follows:
    * check-in or check-out
    * preview
    * download
    * upload new version
    * add to or remove from My Favorites
    * copy link and share (as link, as document, or both, as secure link)
    * copy to share folder
    * move and delete
    * declare or undeclare as record
    * relate to another document
    * lock or unlock
    * view document timeline

    Important information about documents:
    - Document owner, also called an author, is the user who created or imported the document.
    - Document operator is the user who last modified (edited, created, or renamed) a document.
    - Document number is assigned at the time the document is created or first loaded into an iManage system. This number is unique for
      a specific library.
    - Document version number indicates the current version, or the number of times the document has been edited or modified.
    - Document ID uniquely identifies the document. The document ID is a combination of the library name and the document number separated by an exclamation mark.
      For example, active_us!436025.2 where active_us is library name, 436025 is document number and 2 indicates the second version of document.
  x-tag-expanded: false

- name: Document Artifacts
  description: |-
    Document artifacts provide a method of locating archived documents in their new location. <br>
    When a document is archived, that is, moved to an archive library, the existing links, such as folder shortcuts are broken,
    as the shortcuts still point to the old document. These shortcuts can be resolved using document artifacts.<br>
    The iManage Work Server keeps a reference to the new location of all the documents whenever they are moved.
    The iManage Work application is provided with the new artifacts of the document to locate the archived content.
  x-tag-expanded: false

- name: Document Shortcuts
  description: |-
    Shortcuts are hyperlinks that point to objects in a iManage Work library. <br>
    When you click the hyperlink, you are directed to the target object to which the shortcut points to. <br>
    The document shortcuts can link to documents in any iManage Work library. The user must have read access to the document to add the shortcut
    to My Favorites folder. As the document shortcut can point to a document in a different library, it makes it possible to cache
    documents from remote libraries and reduce traffic across the WAN. <br>
    The user who creates a document shortcut becomes the owner of the shortcut with full rights to change the name or description of it.
    When the properties of a shortcut are edited, its name that appears in My Favorites folder changes. However, the target object does not change.
  x-tag-expanded: false

- name: Emails
  description: |-
    The users can save emails and their attachments to iManage Work by dragging them from Microsoft Outlook folders and dropping them
    into iManage Work folders. Once they are added to iManage Work, emails are stored in the same searchable libraries as other
    documents, and typical document functions can be performed with emails.

    The users can perform following actions on emails if they have read/write access: <br>
      * Viewing and editing email profile properties
      * Forwarding and replying to emails
      * Previewing emails and attachments
      * Filing emails to folders
  x-tag-expanded: false

- name: File Handlers
  description: |-
    The file handling applications are used to associate different file types so that iManage Work uses the correct application when the user opens a file.
    For example, applications required to work on certain type of documents, such as .pdf, .txt, xlsx, and so on.

    When a library is initialized, an application list that includes information about most of the Windows applications is provided.
    Each iManage library has a list of applications associated with it.
    It contains the information required to integrate document handling applications with iManage Work Server. <br>
    This information includes the: <br>
     * Procedure to associate file types and applications.
     * Program to launch applications from iManage Work Server.
     * Open and print documents in integrated applications.
  x-tag-expanded: false

- name: File Types
  description: |-
    The iManage Work system can open, read, and modify many types of documents. This includes popular file types,
    such as Microsoft Word documents .docx, Excel spreadsheets .xlsx, along with less common document types, and even custom document types,
    such as a format proprietary to the organization.

    To associate a document type to an application that can read it, two resources work together: File types, and file handlers.

    File types define lists of types of documents based on their application extension. That is the documents suffix such as Microsoft Word documents of .docx, or Adobe Acrobat documents of .pdf.

    File handlers define lists of applications that can open specified file types. This ties an application, such as Microsoft Word to a file type such as .docx.
    For example, after the file type and file handler is defined, selecting a .docx document within iManage Work displays that document in the preview window.
  x-tag-expanded: false

- name: File Streams
  x-tag-expanded: false

- name: Filing Folders
  description: |-
    Users can link the folders in the Outlook mailbox to a corresponding iManage Work folder, also known as filing folder.<br>
    When emails are added to the Outlook folder, they are copied or moved to the corresponding iManage Work folder automatically.<br>
    The Microsoft Outlook and iManage Work folders can be linked using iManage Work Desktop for Windows. For more information, see [Linking folders](https://docs.imanage.com/work-help/10.2.6/en/Linking_folders.html)
    The integration of the iManage Work features enables filing to occur in the background while users perform other tasks in Outlook.
  x-tag-expanded: false

- name: Folders
  description: |2-
      iManage Work organizes its content in a hierarchical container tree structure, similar to many computer operating systems, such as Microsoft Windows.
      In iManage Work, the tree structure is formed by two types of containers: Workspaces and Folders.
      * A workspace is a root-level container that can only be created at the library level. A workspace can contain only folders and tabs,
        but not documents or other workspaces.
      * A folder is created under a workspace or any other folder. It can contain subfolders and documents. A folder may contain any number of
        subfolders and be structured as needed. A folder created directly under a workspace is called a root-level folder. <br>
        Each folder is assigned with a container ID which is a combination of its library name and a number. For example: active_uk!4532.

      The Folders collection includes requests to list folders, create folders, delete folders, modify profile properties and security,
      search for folders, and create subfolders.
  x-tag-expanded: false

- name: Forms
  description: |-
    The Forms collection manages property forms and search forms.<br>

    A property form is a set of property fields assigned to an iManage Work object type, such as workspaces and documents.
    This is also known as the object profile.
    Each instance of that iManage Work object type will have the same set of property fields.<br>
    A search form is the set of property fields assigned to an iManage Work search object.
    Users can select only from that set for a search.<br>

    This ensures that all instances of that object type (such as all documents) have the same set of properties.
    An organization can customize object types by selecting a specific set of property fields.
    This allows them to better classify those object types and to more effectively search for them.<br>

    The following items have forms:
      * workspaces
      * folders and tabs
      * documents and emails
      * document and email search
      * workspace search

    Three forms are for object types: Workspaces, folders and tabs, and documents and emails.
    These forms are defined by assigning property fields from their object models.<br>

    A user can see the document profile by opening any document from an iManage Work client, and select the Properties tab.
    The document profile fields display as properties of that document in the Properties tab.<br>

    For example, a document's object model may have more than 20 property fields.
    It is from these property fields that the object profile gets defined from.
    Some property fields are required. A document profile must have a name, size, location, and author, among others.
    Some fields are optional.
    An organization, for example, may decide their documents only need custom1 and custom2 property fields but not custom3.<br>

    Two forms are searches: Document and email searches, and workspace searches.
    The property fields assigned to these are the set of properties that may be used as criteria for a search.
    These can be seen iManage Work clients during a search.
    For example:
     1. In an iManage Work client, select Recent documents, and select a search in the search bar.
     1. The criteria presented in the basic search are a few fields from the document profile.
     1. Select **Advanced Search**. The search criteria includes all the document profile fields.

    <font style="color:black;font-size: 15px;font-weight: bold;">Using forms request</font><br>
    To see the set of currently assigned fields to an object type's property set:
     * Use the request GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`
       If the item is a custom property, the uncaptioned custom property name is shown, such as  *custom1*, or *custom2*, and not the captioned version, such as *Client* or *Matter*.
     * In iManage Control Center, see **Settings&nbsp;>&nbsp;Forms**.

    There are default sets of property fields for each object type.
    These are sets of property fields defined at the time of iManage Work installation.
    To see the set of default fields, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/default`
    For example, a document and email object have the following default fields: Name, document_number, version, author, operator, class, subclass, type, size, comments, edit_date, create_date, last_user, status/checked_out, checkout location, where used, related documents, Default Security, custom1, custom2, custom13, custom14, custom15, custom16, custom21, and custom22.

    Object profiles may currently have a different set of properties if the profile had been changed after the initial installation.

    An object profile set may be customized.
    That is, property fields may be added, updated, or deleted.
    Each object type (such as workspace or document) has system-defined set of property fields that may be added, and only those available may be used.<br>
    The see the list of available fields, see GET `/customers/{customerId}/libraries/{libraryId}/forms/{formType}/available-fields`

    To add or delete a property from an object, see PUT `/customers/{customerId}/libraries/{libraryId}/forms/{formType}`
    To add a property field, include it in the request body. To remove a property, do not include it in the request body.
    Like any PUT call, the properties in the request body completely replace the existing set of property fields.
    Therefore, care must be taken to make sure this body list is complete and is what is intended that the object type should have.<br>

    To see the current set of active property fields, see GET `/customers/{customerId}/libraries/{libraryId}/forms/visible-fields`
  x-tag-expanded: false

- name: KM Tags
  description: |-
    Some of the organizations need to manage documents under knowledge libraries. These documents form the knowledge
    management system of an organization. The documents are tagged with the knowledge management tags (KM tags)
    to allow the users to classify the documents in a specific way that is meaningful to them, and to organize and filter the content.
    The KM tags are extended metadata values set on iManage Work objects.
    These are similar to name-value pair properties. However, they are single value tags without any names.
    The KM tags can be created for documents, and containers such as folders, workspaces, and categories.

    This feature may not be available for all environments.
    Prior to executing the KM tag requests, check GET `/customers/{customerId}/features`.<br>
    If `km_tags` is `true`, this feature is available.
  x-tag-expanded: false

- name: Library Directory Sync Groups and Users
  description: |-
    The directory sync APIs support bulk import of users and groups for the customers into iManage Work system.
    The directory sync runs regularly per the configured sync-schedule for the customer's directory-sync client application.
    During each such sync, only the affected records are added, updated, or disabled.

    The directory sync client application first fetches hashes for all the AD users, groups, and group memberships from iManage.
    The hashes are encrypted values for the original user and group profile data. Then it calculates hashes for users, groups,
    and group memberships based on the current information in the customer’s identity provider (IDP) and the client application’s configuration.
    The directory sync client then compares the calculated hashes to the ones it retrieved from iManage in order to determine which users,
    groups, and group memberships need to be added, updated, or disabled. After determining the changes, it sends updates only for
    the affected users, groups, and group memberships to iManage Work.
  x-tag-expanded: false

- name: Library Groups
  description: |
    Library groups are collections of multiple users within a library who are intended to have identical access permission to containers and documents.
    Groups can be assigned the access permissions to iManage Work objects. This provides all members of the group the same access level to the target iManage Work object.

    For example, a group can be created for contractors. This group can then be granted read-only access to certain workspaces.

    For more information on types of groups, see <a href="#overview--types-of-groups"> Types of groups</a>.

    **Important information about library groups:**
    * Groups are intended for controlling access to iManage Work objects for multiple users simultaneously.
      Modifying a group's access to an object affects all the members of the group at once.
      This is more convenient than managing access to objects for individual users.
    * Groups can be maintained by adding or removing users.
    * Once a group is created, it cannot be deleted. However, a group can be disabled if it is no longer needed.
    * A user can be a member of multiple groups.
    * If a user is a member of multiple library groups, and these groups are given different levels of access to the same object,
      then the highest access level takes precedence.
    * If a user is a member of a group that has been given some level of access to an object, and the user is individually given a different access level to the same object,
      then the highest of these two access levels takes precedence for the user.
    * The NRTADMIN group is available in iManage Work automatically, and it need not be created. Any user assigned to the NRTADMIN group
      becomes by definition an NRTADMIN, regardless of their current role. A user who is removed from the NRTADMIN group retains
      the role they previously had. Only another NRTADMIN is allowed to add or remove users from a group.
    * Members of the NRTADMIN group have complete administrative rights. This group is intended only for iManage Work system administrators.
    * Groups can be created and modified as required, with the exception of the NRTADMIN group.
    * When users are added to a group, they gain access to all the iManage Work objects that the group has access to, with the same levels.
      Similarly, users are removed from a group, they lose that access.
  x-tag-expanded: false

- name: Library Roles
  description: |
    iManage Work uses role-based access to achieve fine levels of granularity controlling features for users.
    Each user's ability to perform actions in iManage Work is based on their collection of allowed and denied abilities.
    This is accomplished through two mechanisms: Privileges and roles.

    For more information, see <a href="#overview--privileges"> Privileges</a> and <a href="#tag--Global-Roles"> Global roles</a>.

    **Library roles**<br>
    Library roles are user roles within an individual iManage Work library.
    They provide iManage Work object level privileges such a being able to create new documents, edit documents, create public folders, and so on.
    They also provide privilege to create custom lookup values, manage users and groups, manage roles of other users, and so on.
    * A user always has only one library role. If a library role is not explicitly assigned,
    the user is automatically assigned to either the DEFAULT or DEFAULT_EXTERNAL role,
    based on whether they have been defined as an internal or external user in their user profile.
    * The DEFAULT and DEFAULT_EXTERNAL roles cannot be deleted.
    These are permanent roles used as the default if a user is not assigned to any role.
    * A user can only be assigned to one library role at any time.

    **Categorization of roles based on bit masks**

    The library level role privileges are classified under the following bit masks:<br>

    | Bit mask | Description                                   |
    |----------|-----------------------------------------------|
    | m1_bits  | Role privileges for document and folder operations. These define a user's ability to check out documents, create public folders, delete documents and folders, and so on. |
    | m2_bits  | Role privileges for using administrative tools. These define a user's ability to use iManage Work tools such as Administration tool, Import tool, and so on.|
    | m3_bits  | Role privileges for web page operations. These define a user's ability to create workspaces, search for workspaces, create templates, and so on.|
    | m4_bits  | Role privileges for iManage Control Center administrative operations. These define a user's ability to manage other users and library groups, govern security management settings, and so on.|

    **Categorization of administrative roles**

    The administrative library roles are categorized under tiers (Tier 1 and Tier 2) that have predefined sets of privileges. <br>
    Other than these tiers, members of the library-level NRTADMIN group have additional privileges. For more information on the NRTADMIN group, see <a href="#tag--Library-Groups">Library Groups</a>.<br>

    For more information on the following role privileges, see the response section of the request <a href="#get-/work/api/v2/customers/-customerId-/libraries/-libraryId-/roles"> Get library roles</a>.

    | Tier 1             | Tier 2                     | NRTADMIN group             |
    |--------------------|----------------------------|----------------------------|
    | content_assistance | Tier 1 privileges          | Tier 2 privileges          |
    | trustee_assistance | system_metadata_management | govern_security_management |
    |                    | app_settings_management    | role_management            |
    |                    | report                     | system_management          |
    |                    | report_management          | trustee_management         |
    |                    | custom_metadata_management |                            |
    |                    | dms_job_operation          |                            |


    **Role Management privilege**<br>
    A user with the Role Management privilege can create new roles, edit roles, change the role of other users, and delete roles at library level.
    To administer library roles of other users, a user must be assigned to a role that has the Role Management privilege.
    Therefore, the Role Management privilege must be assigned to users diligently.
  x-tag-expanded: false

- name: Library Users
  description: |2
      A user is the basic entity that utilizes iManage Work applications. <br>
      A user can be an individual person that accesses iManage Work applications or a service account that performs automated tasks.
      Users can be created manually in iManage Work or imported from a directory service such as Microsoft Active Directory.<br>
      The iManage Work system administrator assigns roles to these users, adds users to groups, and optionally applies access
      rights to individual users when their default access rights need to be modified.

      Users in iManage Work can be created at two levels based on the environment:

      * **Global level** <br>
      If the <a href="#get-/work/api/v2/customers/-customerId-/features"> feature flag</a> `global_users` is `true` for your environment,
      then a user is created at the global level using the request
      <a href="#post-/work/api/v2/customers/-customerId-/users">POST `/customers/{customerId}/users`</a>.<br>
      A user can then be assigned to a library by an iManage Work system administrator to provide access to it.
      A user can be assigned to more than one library. For more information, see <a href="#tag--Users">Users</a>.

      * **Library level** <br>
      If the <a href="#get-/work/api/v2/customers/-customerId-/features"> feature flag</a> `global_users` is `false` for your environment,
      then a user is created at the library level using the request
      <a href="#post-/work/api/v2/customers/-customerId-/libraries/-libraryId-/users">POST `/customers/{customerId}/libraries/{libraryId}/users`</a>.<br>
      A user is created and directly assigned to the library.

      The following types of users can be created in iManage Work:
      * **Virtual users** - The users are created and managed in iManage Work. The virtual users are authenticated against passwords stored in iManage Work. They are not part of the organization's directory service.
          These are typically external users who are not part of the organization and are included for a specific purpose and for a defined period of time. For example, auditors, interns, and contractors.
          This user is created at the global level, and must be manually assigned to a library. A virtual user can be converted to an enterprise user by changing their user type (`nos`) value from 2 to 6.
      * **Enterprise users** - The users that are added to iManage Work from the organization's directory service. The enterprise users are authenticated against the IDP configured
          by an organization. Virtual users can be synced with the organization's directory service and converted to enterprise users by changing their user type (`nos`) value from 6 to 2.


      **User access to iManage Work** <br>
      The ability and behaviour of a user to log in to iManage Work is determined by the following:
       * `global_users` feature flag.
       * `allow_logon` values set in the global and library level user profile.

      | global_users flag | allow_logon at Global level | allow_logon for specific library | Description                                                                                                         |
      |-------------------|-----------------------------|----------------------------------|---------------------------------------------------------------------------------------------------------------------|
      | true              | true                        | true                             | User can sign-in to iManage Work and access the specified library.                                                  |
      | true              | true                        | false                            | User can sign-in to iManage Work at global level, but cannot access the specified library.                          |
      | true              | false                       | false                            | User cannot sign-in to iManage Work at global level.                                                                |
      | false             | N/A                         | true                             | User can sign-in to iManage Work and access the library.                                                            |
      | false             | N/A                         | false                            | User can sign-in only if allow_logon flag is true for at least one library but cannot access the specified library. |
  x-tag-expanded: false

- name: My Favorites
  description: |-
    My Favorites contains categories and shortcuts, such as to workspaces, containers, and documents that are selected by the user.
    It is used to navigate to frequently used workspaces, containers, and documents.<br>

    These items can be:<br>
      * Categories. A category is a container. It is the only container allowed in My Favorites, and they can be nested inside other categories.
      * Shortcuts. These include shortcuts to documents, containers, and workspaces.

    My Favorites shortcuts are explicitly bookmarked by the user.
    Unlike a "recently used" list, no items are automatically included in My Favorites.
  x-tag-expanded: false

- name: My Matters
  description: |+
    My Matters is a folder that displays a list of shortcuts to workspaces (also called a matter) that the user might frequently access.<br><br>
    It can be thought of as a favorites folder for workspaces.
    This folder provides a convenient location to a user for reference, search, and access commonly used workspaces.

    My Matters folder can be managed in the following ways:
    * The user can explicitly add a workspace shortcut to the My Matters folder from the workspaces the user created.<br>
    See `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/shortcuts`.<br>
    * The user can share their workspaces with others. Those users will be able to access the selected workspaces.<br>
    See `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/security`.<br>
    * The user can get access to others' workspaces by subscribing to a another user.
    This process is different than sharing a workspace, or having a workspace shared with the user.
    Subscribing is when the user explicitly selects another's workspace.<br>
    See `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/subscriptions`.<br>
    * The My Matters folder can also contain categories.
    A category is a container that holds workspaces and other categories.
    This allows for better organization of workspaces in My Matters.
    A category contained inside another category is called a subcategory.<br>
    See `/customers/{customerId}/libraries/{libraryId}/users/{userId}/my-matters/categories`.

  x-tag-expanded: false

- name: Recent Items
  description: Recent items are the documents, emails, folders, and workspaces that
    have had any recent activity (in the last 30 days).
  x-tag-expanded: false

- name: Search Folders
  description: |-
    A search folder is a container that automatically performs a search when it is opened.
    When the folder is first created, search criteria is specified, and this criteria can be updated as needed.
    Each time the search folder is opened, it performs the search and displays the results as links to those items documents.
    The folder does not hold actual documents but instead holds links to those items found from the search.
    A search folder can contain other folders and search folders.
  x-tag-expanded: false

- name: Security Policy
  description: |-
    iManage Security Policy Manager assigns security policies to libraries, clients and matters, and in turn to the associated folders and documents.
    Based on the security policy, users and groups are either provided permissions to access these clients and matters and their contents
    or restricted from accessing the same.
  x-tag-expanded: false

- name: Supervised Import
  description: |-
    Supervised import is a special mode that provides the option to set some of the document and workspace profile properties
    during the import that are not available in the regular import.

    For example, for a document supervised import, these properties include author, operator, owner, create_date, edit_date,
    edit_profile_date, file_create_date, file_edit_date, and document_number.
  x-tag-expanded: false

- name: Tabs
  description: |-
    To expand the scope of a workspace, you can distribute workspace content across multiple customized tabs.
    Tabs help you organize and label different types of information and make it easier to access.

    Tabs are displayed below the workspace title bar. When you click a tab, iManage Work displays the content you have stored on that tab.
    You can give tabs intuitive, user-defined labels, making them a useful tool for organizing and accessing information.
    As tabs are contained within workspaces, they can inherit profile properties and security settings from the parent workspace.
    Separate security settings can also define on the tab in order to expand or restrict user and group access.

    Important characteristics of tabs:
    * Tabs can only exist at the root level of a workspace.
    * Tabs can contain folders but not other tabs.
    * Documents cannot be placed directly under a tab, although folders inside a tab can contain documents. In contrast, folders can hold documents but not tabs.
  x-tag-expanded: false

- name: Trash
  description: |-
    The trash is a location that stores deleted documents and emails. It allows for recovery of documents that were accidentally deleted.<br>

    Users can delete documents only if they have the document delete privilege from their role.
    If a user deletes a document, it is moved to the trash bin. It becomes unavailable to users.
    However, it is not permanently deleted yet. Instead, it is stored in the trash bin indefinitely.
    iManage Work system administrators manage the trash. They can restore the documents for users or delete them permanently.

    * When a document is restored, its location, metadata, and security are restored along with the document.
    * When a document or email is permanently deleted, it is purged from the system and cannot be restored.

    The following actions must be performed manually:<br>

      |Action|Description|Minimum permissions level required|
      |:---|:---|:---|
      |Restore a document.|This recovers the document to its last version.|Tier 1|
      |Permanently purge a document.|This deletes the document from the trash bin and it cannot be recovered except through journaling. The iManage Work system does not automatically purge documents.|NRTADMIN|
  x-tag-expanded: false

- name: Workspace Templates
  description: |
    The workspace templates collection manages the creation and use of workspace templates.<br>

    A workspace template is a definition for a workspace.
    It defines the following:
    * Container structure under a workspace.
    * Types of containers.
    * Container names, and optional prefixes or suffixes.
    * Default access level of containers.
    * If they are required, optional at the time of the workspace creation, or optional at a later time.
    * Default custom property values.

    All workspaces must be created from a template.
    That means when user create a workspace, they specify a template to base it on.
    However, restrictions for workspace templates are enforced only if the flexible folders capability is enabled.
    Often, an organization allows users to create workspaces, but it also wants to specify the container structure and other contents according to its best practices.
    Enabling flexible folders and using a workspace template, it can reliably have that control.

    If flexible folders is not enabled, the template definitions are used as a default,
    but users are permitted to use other values or to create containers without those restrictions.

    **Using workspace template requests**<br>
    The workspace templates collection includes the following requests:
    * To return a list of available workspace templates in the library, see GET `/customers/{customerId}/libraries/{libraryId}/templates`<br>
    * To create a new workspace template in the library, see POST `/customers/{customerId}/libraries/{libraryId}/template`<br>
    * To update an existing workspace template, see PUT `/customers/{customerId}/libraries/{libraryId}/templates/{templateId}`<br>

    A new workspace template is created in two steps:

    1. Create the workspace template.<br>
    To create the basic workspace template, use POST `/customers/{customerId}/libraries/{libraryId}/template`<br>
    This creates the basic workspace template but does not include containers. Those are added in the next step.

    2. Add containers.<br>
    Each container (a folder, tab, or search folder) must be added with a separate request, using the template ID as the workspace ID.
    To add containers to the basic workspace template:
    * To create a folder in a workspace template, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`
    * To create a tab in a workspace template, see POST `/customers/{customerId}/libraries/{libraryId}/workspaces/{workspaceId}/tabs`
    * To create a search folder in a workspace template, see POST `/customers/customerId/libraries/{libraryId}/workspaces/{workspaceId}/folders`

    Folders can be nested in other folders or tabs using the parent's folder ID or tab ID:<br>
    * To create a folder within another folder, see POST `/customers/{customerId}/libraries/{libraryId}/folders/{folderId}/subfolders`<br>
    * To create a folder within a tab, see POST `/customers/{customerId}/libraries/{libraryId}/tabs/{tabId}/folders`<br>

    By default, all containers created through these requests will be as Required containers.
    This means they will be mandatory at the time the workspace is created.
    To add the following, iManage recommends using iManage Control Center:
    * Container creation requirements of Workspace Creation or Optional.
    See <a href="https://docs.imanage.com/cc-help/10.3.1/en/Creating_a_folder_structure.html" target="_blank">Creating a folder structure</a>.
    * Workspace and container names and optional prefixes or suffixes.
    See <a href="https://docs.imanage.com/cc-help/10.3.1/en/Name_Prefixes_and_Suffixes.html" target="_blank">Name prefixes and suffixes</a>.

    This process can also be performed in entirety from iManage Control Center **Settings > Templates**.
    For information on creating a workspace template through iManage Control Center, see <a href="https://docs.imanage.com/cc-help/10.3.1/en/Templates.html" target="_blank">Templates</a>.

    **Creating a workspace from a workspace template**<br>
    1. Create the workspace:<br>
    Use POST `https://www.ajubalaw.com/work/api/v2/customer/100/libraries/active_us/workspaces`
    Request body:
    ```
        {
            "author: "ACASE",
            "class: "WEBDOC",
            "default_security": "public",
            "description:" "For Microsoft land acquisition",
            "name": "001 - Microsoft",
            "owner": "ACASE"
        }
    ```

    2. Add the template ID:<br>
    The `workspaceId` (`active_us!179336`) in the endpoint parameter is the `workspaceId` from the workspace created from the previous step.
    The `templateId` for the request body (active_us!179206) is the `templateID` of the template that is used to create the workspace. Use:<br>
    PATCH `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!179336/name-value-pairs`<br>
    Request body:
    ```
        {
            "templateId": "active_us!179206"
        }
    ```

    3. Add containers:<br>
    Each container must be created separately. Use the workspaceID for the parent container.
    Use individual requests to create the child containers.
    The following request adds a folder at the root level of the workspace active_us!179206:<br>
    POST `https://www.ajubalaw.com/work/api/v2/customers/100/libraries/active_us/workspaces/active_us!179206/folders`<br>
    Request body:
    ```
        {
            "name": "Reports",
            "description" : "General reports for clients",
            "location" : "Austin, Texas",
            "default_security": "public"
        }
    ```
  x-tag-expanded: false

- name: Workspaces
  description: |-
    Workspaces are containers that are created to organize the content of an organization.
    A workspace is a root-level container that can only be created at the library level.
    A workspace can contain only folders and tabs, but not documents or other workspaces.
  x-tag-expanded: false

- name: Work Sync
  description: |-
    iManage Work sync requests allow you to perform bulk data transfers efficiently.

    Using these requests, you can synchronize the following between source and destination environments:
    * Users, groups, and roles (both global and library-level)
    * Workspace, folder tree, and documents
    * User specific worklists such as my-favorites, my-matters, my-matters-subscriptions, recent documents/workspaces
    * System settings such as applications, application settings

    The work sync endpoints are designed for application-to-application use. The application or service using these endpoints may perform
    a full synchronization or an incremental synchronization. For example, only data that has changed since a given point in time are returned.

    Although these requests appear to duplicate some functionality of other types of search requests, they are optimized for synchronization
    and are intended for synchronization-specific use cases. As a result, they require fewer parameters than other types of search requests,
    which in turn makes them unsuitable for general search purposes.

    **Important information about synchronization requests:**
    * These requests return data that was modified from an optional start date, specified as `edit_date_from` parameter, up until the current time.
    * If a cursor is also specified, the `edit_date_from` parameter is not accepted because the cursor has an embedded start time.
    * If no start time is specified, either using the parameter or in a cursor, then all results are returned.

    Note that the concept "current time" is a moving target because the caller may make multiple paged requests. The caller must execute the request
    until no records are included in the response. At that point all records that were modified from the original start time up to the time
    the last response was returned. These endpoints do not allow the caller to specify an alternate end time.
  x-tag-expanded: false

#################################
- name: --Platform Requests--
  x-tag-expanded: false

- name: Custom Domains
  description: |
    A custom domain is the public domain name owned by the customer that points to the customer portal URL for its end users to access it.

    This collection of requests enables to create and manage the custom subdomains for your iManage Cloud URL, such as *company*.cloudimanage.com.

    For example, if iManage's parent domain is `cloudimanage.com` and a customer is named Ajuba Law.
    The customer may configure a custom domain using the subdomain name as **ajuba**.
    Users can then access iManage applications using the domain as `https://ajuba.cloudimange.com/..` instead of `https://cloudimange.com/..`.

    Important characteristics of this feature:
    * Once a custom subdomain is configured, users signing in to `cloudimanage.com` will automatically be redirected to the custom subdomain URL.
      Users may also sign in directly via the custom subdomain URL (*company*.cloudimanage.com)
    * Customers can restrict the access to iManage Cloud for their account by configuring subdomains.
      As the custom domains are owned by customers, their administrators can create security profiles for the end users accessing it.
    * Customers are allowed to create 10 custom domains with unique names globally.
      Multiple custom domains accommodates corporate name changes, organization mergers, and so on,
      so that the email URLs and bookmarks generated using previous domains do not break immediately if the subdomain is changed.
    * Only one domain must be designated as the primary domain that is used to redirect interactive authentication
      requests from secondary domains as well as the iManage's parent domain.
  x-tag-expanded: false

- name: IP Address Authorizations
  description: |-
    A collection to create, read, update, and delete IP address authorizations.

    The IP address authorization feature enables customers to restrict access to CloudiManage APIs for their account to configured blocks of IP addresses.
    If there are no authorizations configured, it means that there are no restrictions on the access.
  x-tag-expanded: false

- name: Platform Sync
  description: |-
    Platform sync requests are similar to <a href="#tag--Work-Sync">Work sync</a> requests with the difference that they are implemented
    under the `platform` namespace instead of the default `work` namespace. They coexist alongside and function with the synchronization endpoints
    in the `work` namespace. Along with iManage Work, platform sync requests are also available across other iManage products.

    For more information that also applies to the platform sync requests, see <a href="#tag--Work-Sync">Work Sync</a>.
  x-tag-expanded: false

#################################
- name: --Miscellaneous Requests--
  x-tag-expanded: false

- name: Trustees
  x-tag-expanded: false
